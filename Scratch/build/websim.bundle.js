/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/build/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./websim.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/followBodyComponent.js":
/*!***********************************!*\
  !*** ./js/followBodyComponent.js ***!
  \***********************************/
/*! exports provided: followBodyObj */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"followBodyObj\", function() { return followBodyObj; });\nvar followBodyObj = {\n  'schema': {\n    entityId: {\n      type: 'string',\n      default: ''\n    },\n    offsetRotation: {\n      type: 'vec3',\n      default: \"0 0 0\"\n    }\n  },\n  init: function () {\n    this.pibot = document.querySelector(this.data.entityId);\n    this.initialRotation = this.data.offsetRotation.y;\n  },\n  tick: function () {\n    // 0.28 and 0.38 are values to adjust raycaster to the a-pibot body\n    // calculated with aframe inspector manually\n    let pibotPos = this.pibot.object3D.position;\n    let pibotRotation = this.pibot.object3D.rotation;\n    let raycasterRotation = pibotRotation.y + THREE.Math.degToRad(this.initialRotation);\n    let el = this.el;\n    let offsetY = 0.23;\n    let offsetX = 0.38 * Math.cos(THREE.Math.radToDeg(pibotRotation.y) * Math.PI / 180);\n    let offsetZ = 0.38 * Math.sin(THREE.Math.radToDeg(pibotRotation.y) * Math.PI / 180);\n    el.object3D.position.set(pibotPos.x + offsetX, pibotPos.y + offsetY, pibotPos.z - offsetZ);\n    el.object3D.rotation.set(pibotRotation.x, raycasterRotation, pibotRotation.z);\n  }\n};\n\n//# sourceURL=webpack:///./js/followBodyComponent.js?");

/***/ }),

/***/ "./js/interfacesRobot.js":
/*!*******************************!*\
  !*** ./js/interfacesRobot.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return RobotI; });\nclass RobotI {\n  constructor(robotId) {\n    const defaultDistanceDetection = 10;\n    const defaultNumOfRays = 31;\n    this.myRobotID = robotId;\n    this.robot = document.getElementById(robotId);\n    this.initialPosition = {\n      'x': 0,\n      'y': 0,\n      'z': 0\n    };\n    this.storeInitialPosition(this.robot.getAttribute('position'));\n    this.activeRays = false;\n    this.raycastersArray = [];\n    this.distanceArray = {\n      center: [],\n      left: [],\n      right: []\n    };\n    this.understandedColors = {\n      blue: {\n        low: [0, 0, 235, 0],\n        high: [0, 0, 255, 255]\n      },\n      green: {\n        low: [0, 235, 0, 0],\n        high: [0, 255, 0, 255]\n      },\n      red: {\n        low: [235, 0, 0, 0],\n        high: [255, 0, 0, 255]\n      },\n      white: {\n        low: [230, 230, 230, 0],\n        high: [255, 255, 255, 255]\n      }\n    };\n    this.velocity = {\n      x: 0,\n      y: 0,\n      z: 0,\n      ax: 0,\n      ay: 0,\n      az: 0\n    };\n    this.motorsStarter(this.robot);\n    this.startCamera();\n    this.startRaycasters(defaultDistanceDetection, defaultNumOfRays);\n  }\n\n  motorsStarter(robot) {\n    /*\r\n      This function starts motors passing the robot\r\n    */\n    console.log(\"LOG ---------------- Setting up motors.\");\n    this.setVelocity(robot);\n  }\n\n  getRotation() {\n    /*\r\n      Returns an object with rotation properties.\r\n    */\n    return this.robot.getAttribute('rotation');\n  }\n\n  resetRobot() {\n    this.setV(0);\n    this.setW(0);\n    this.setL(0);\n    this.robot.body.position.set(this.initialPosition.x, this.initialPosition.y, this.initialPosition.z);\n  }\n\n  storeInitialPosition(positionObject) {\n    this.initialPosition.x = positionObject.x;\n    this.initialPosition.y = positionObject.y;\n    this.initialPosition.z = positionObject.z;\n  }\n\n  setV(v) {\n    this.velocity.x = v;\n  }\n\n  setW(w) {\n    this.velocity.ay = w * 10;\n  }\n\n  setL(l) {\n    this.velocity.y = l;\n  }\n\n  move(v, w) {\n    this.setV(v);\n    this.setW(w);\n  }\n\n  getV() {\n    return this.velocity.x;\n  }\n\n  getW() {\n    return this.velocity.ay;\n  }\n\n  getL() {\n    return this.velocity.y;\n  }\n\n  setVelocity(body) {\n    /*\r\n      This code run continiously, setting the speed of the robot every 30ms\r\n      This function will not be callable, use setV, setW or setL\r\n    */\n    if (body != undefined) {\n      this.robot = body;\n    }\n\n    let rotation = this.getRotation();\n    let newpos = this.updatePosition(rotation, this.velocity, this.robot.body.position);\n    this.robot.body.position.set(newpos.x, newpos.y, newpos.z);\n    this.robot.body.angularVelocity.set(this.velocity.ax, this.velocity.ay, this.velocity.az);\n    this.timeoutMotors = setTimeout(this.setVelocity.bind(this), 30);\n  }\n\n  updatePosition(rotation, velocity, robotPos) {\n    /*\r\n      This function calculates the new position of the robot.\r\n    */\n    let x = velocity.x / 10 * Math.cos(rotation.y * Math.PI / 180);\n    let z = velocity.x / 10 * Math.sin(rotation.y * Math.PI / 180);\n    robotPos.x += x;\n    robotPos.z -= z;\n    return robotPos;\n  }\n\n  getCameraDescription()\n  /*\r\n    Returns width and height for the robot camera.\r\n  */\n  {\n    return {\n      width: this.canvas2d.width,\n      height: this.canvas2d.height\n    };\n  }\n\n  clearAll()\n  /*\r\n    Resets all states of the robot.\r\n  */\n  {\n    clearTimeout(this.timeoutCamera); // Clear camera timeouts (stops camera)\n\n    clearTimeout(this.timeoutMotors); // Clear motors timeouts (stops motors)\n\n    clearInterval(this.followLineInterval); // Clears followLine intervals\n\n    this.velocity = {\n      x: 0,\n      y: 0,\n      z: 0,\n      ax: 0,\n      ay: 0,\n      az: 0\n    };\n    this.setVelocity();\n    this.robot.body.position.set(0, 0, 0);\n  }\n\n  getImageDescription()\n  /*\r\n    Returns an object with width and height of the robot image.\r\n  */\n  {\n    return {\n      width: this.imagedata.cols,\n      height: this.imagedata.rows\n    };\n  }\n\n  getImageFormat() {\n    return 1;\n  }\n\n  startCamera() {\n    // Starts camera from robot\n    console.log(\"LOG ---------> Starting camera.\");\n\n    if ($('#spectatorDiv').length && document.querySelector(\"#spectatorDiv\").firstChild != undefined) {\n      this.canvas2d = document.querySelector(\"#camera2\");\n      this.getImageData_async();\n    } else {\n      setTimeout(this.startCamera.bind(this), 100);\n    }\n  }\n\n  getImage() {\n    // Returns a screenshot from the robot camera\n    if (this.imagedata != undefined) {\n      return this.imagedata;\n    } else {\n      setTimeout(this.getImage.bind(this), 200);\n    }\n  }\n\n  getImageData_async()\n  /*\r\n    This function stores image from the robot in the variable\r\n    \"imagedata\", this allows to obtain image from the robot\r\n    with getImage() function.\r\n  */\n  {\n    this.imagedata = cv.imread('camera2');\n    this.timeoutCamera = setTimeout(this.getImageData_async.bind(this), 33);\n  }\n\n  startRaycasters(distance, numOfRaycasters)\n  /*\r\n    This function enables/disbles raycasters (position sensors)\r\n    for the robot.\r\n      @distance (Number): Distance which the rays will detect objects.\r\n    @numOfRaycasters (Numbrer): Number of Raycaster.\r\n  */\n  {\n    if (!this.activeRays) {\n      console.log(\"LOG ---------> Starting sound sensors\");\n      let emptyEntity = document.querySelector(\"#positionSensor\"); // offsetAngle: angle between one raycaster and the next one.\n\n      if (numOfRaycasters % 2 == 0) {\n        numOfRaycasters += 1;\n      }\n\n      var offsetAngle = 180 / numOfRaycasters;\n      var angle = 0;\n      var group = \"center\";\n\n      for (var i = 0; i < numOfRaycasters; i++) {\n        if (i % 2 == 0) {\n          angle = angle * -1;\n\n          if (i != 0) {\n            group = \"right\";\n          }\n        } else {\n          angle = angle * -1;\n          angle += offsetAngle;\n\n          if (i != 0) {\n            group = \"left\";\n          }\n        }\n\n        this.createRaycaster(distance, angle, emptyEntity, group, i);\n      }\n\n      this.activeRays = true;\n      this.setListener();\n    } else {\n      this.stopRaycasters();\n      this.startRaycasters(distance, numOfRaycasters);\n    }\n  }\n\n  createRaycaster(distance, angle, emptyEntity, group, number)\n  /*\r\n    This function appends raycasters entities to the robot.\r\n  */\n  {\n    let newRaycaster = document.createElement('a-entity');\n    newRaycaster.setAttribute('raycaster', 'objects', '.collidable');\n    newRaycaster.setAttribute('raycaster', 'far', distance);\n    newRaycaster.setAttribute('raycaster', 'showLine', true);\n    newRaycaster.setAttribute('raycaster', 'direction', \"1 0 0\");\n    newRaycaster.setAttribute('raycaster', 'interval', 100);\n    newRaycaster.setAttribute('raycaster', 'enabled', true);\n    newRaycaster.setAttribute('line', 'color', \"#ffffff\");\n    newRaycaster.setAttribute('line', 'opacity', 0);\n    newRaycaster.setAttribute('line', 'end', \"1 0 0\");\n    newRaycaster.setAttribute('follow-body', 'entityId', '#' + this.myRobotID);\n    newRaycaster.setAttribute('follow-body', \"offsetRotation\", \"0 \" + angle + \" 0\");\n    newRaycaster.setAttribute('intersection-handler', 'fps', '10');\n    newRaycaster.classList.add(group);\n    newRaycaster.id = number.toString();\n    this.raycastersArray.push(newRaycaster);\n    emptyEntity.appendChild(newRaycaster);\n  }\n\n  stopRaycasters()\n  /*\r\n    This function erases all raycasters for the robot.\r\n  */\n  {\n    var emptyEntity = document.querySelector(\"#positionSensor\");\n\n    while (emptyEntity.firstChild) {\n      this.removeListeners(emptyEntity.firstChild);\n      emptyEntity.removeChild(emptyEntity.firstChild);\n    }\n\n    this.activeRays = false;\n  }\n\n  setListener()\n  /*\r\n    This function sets up intersection listeners for each raycaster.\r\n  */\n  {\n    for (var i = 0; i < this.raycastersArray.length; i++) {\n      this.raycastersArray[i].addEventListener('intersection-detected-' + this.raycastersArray[i].id, this.updateDistance.bind(this));\n      this.raycastersArray[i].addEventListener('intersection-cleared-' + this.raycastersArray[i].id, this.eraseDistance.bind(this));\n    }\n  }\n\n  removeListeners(raycaster)\n  /*\r\n    This function disables intersection listeners.\r\n  */\n  {\n    raycaster.removeEventListener('intersection-detected-' + raycaster.id, () => {\n      console.log(\"removed\");\n    });\n    raycaster.removeEventListener('intersection-cleared-' + raycaster.id, () => {\n      console.log(\"removed\");\n    });\n  }\n\n  updateDistance(evt)\n  /*\r\n    This function is called when an intersection is detected and updates the distance\r\n    to the point of intersection.\r\n  */\n  {\n    let id = evt.target.id;\n    let targetClass = evt.target.classList[0];\n\n    if (this.distanceArray[targetClass].length == 0) {\n      this.distanceArray[targetClass].push({\n        id: id,\n        d: evt.detail\n      });\n    } else {\n      let found = false;\n      let j = 0;\n\n      while (j < this.distanceArray[targetClass].length && !found) {\n        if (this.distanceArray[targetClass][j].id == id) {\n          this.distanceArray[targetClass][j].d = evt.detail;\n          found = true;\n        }\n\n        j += 1;\n      }\n\n      if (!found) {\n        this.distanceArray[targetClass].push({\n          id: id,\n          d: evt.detail\n        });\n      }\n    }\n  }\n\n  eraseDistance(evt)\n  /*\r\n    This function is called when the intersection is cleared and\r\n    removes the distance from the array.\r\n  */\n  {\n    let id = evt.target.id;\n    let targetClass = evt.target.classList[0];\n\n    for (var i = 0; i < this.distanceArray[targetClass].length; i++) {\n      if (this.distanceArray[targetClass][i].id == id) {\n        this.distanceArray[targetClass].splice(i, 1);\n      }\n    }\n  }\n\n  getDistance()\n  /*\r\n    This function returns the distance for the raycaster in the center of the arc of rays.\r\n  */\n  {\n    if (this.distanceArray[\"center\"][0] != null) {\n      return this.distanceArray[\"center\"][0].d;\n    } else {\n      return null;\n    }\n  }\n\n  getDistances()\n  /*\r\n    This function returns an array with all the distances detected by the rays.\r\n  */\n  {\n    var distances = [];\n    var groups = [\"center\", \"right\", \"left\"];\n\n    for (var i = 0; i < groups.length; i++) {\n      this.distanceArray[groups[i]].forEach(obj => {\n        distances.push(obj.d);\n      });\n    }\n\n    return distances;\n  }\n\n  getPosition()\n  /*\r\n    This function returns an object with X-Y-Z positions and rotation (theta)\r\n    for the Y axis.\r\n  */\n  {\n    let x = this.robot.object3D.position.x;\n    let y = this.robot.object3D.position.y;\n    let z = this.robot.object3D.position.z;\n    let rot = THREE.Math.radToDeg(this.robot.object3D.rotation.y);\n    return {\n      x: x,\n      y: y,\n      z: z,\n      theta: rot\n    };\n  }\n\n  getObjectColor(colorAsString)\n  /*\r\n    This function filters an object in the scene with a given color passed as string, uses OpenCVjs\r\n    to filter by color and calculates the center of the object and the area.\r\n      Returns center: CenterX (cx), CenterY (cy) and the area of the object detected in the image.\r\n  */\n  {\n    var image = this.getImage();\n    var colorCodes = this.getColorCode(colorAsString);\n    var binImg = new cv.Mat();\n    var lines = new cv.Mat();\n    var M = cv.Mat.ones(5, 5, cv.CV_8U);\n    var anchor = new cv.Point(-1, -1);\n    var lowThresh = new cv.Mat(image.rows, image.cols, image.type(), colorCodes[0]);\n    var highThresh = new cv.Mat(image.rows, image.cols, image.type(), colorCodes[1]);\n    var contours = new cv.MatVector();\n    var hierarchy = new cv.Mat();\n    cv.morphologyEx(image, image, cv.MORPH_OPEN, M, anchor, 2, cv.BORDER_CONSTANT, cv.morphologyDefaultBorderValue()); // Erosion followed by dilation\n\n    cv.inRange(image, lowThresh, highThresh, binImg);\n    cv.findContours(binImg, contours, hierarchy, cv.RETR_CCOMP, cv.CHAIN_APPROX_SIMPLE);\n\n    if (contours.size() > 0) {\n      let stored = contours.get(0);\n      var objArea = cv.contourArea(stored, false);\n      let moments = cv.moments(stored, false);\n      var cx = moments.m10 / moments.m00;\n      var cy = moments.m01 / moments.m00;\n    }\n\n    return {\n      center: [parseInt(cx), parseInt(cy)],\n      area: parseInt(objArea)\n    };\n  }\n\n  getObjectColorRGB(lowval, highval)\n  /*\r\n    This function filters an object in the scene with a given color, uses OpenCVjs to filter\r\n    by color and calculates the center of the object.\r\n      Returns center: CenterX (cx), CenterY (cy) and the area of the object detected in the image.\r\n  */\n  {\n    var image = this.getImage();\n    var binImg = new cv.Mat();\n    var lines = new cv.Mat();\n    var M = cv.Mat.ones(5, 5, cv.CV_8U);\n    var anchor = new cv.Point(-1, -1);\n    var lowThresh = new cv.Mat(image.rows, image.cols, image.type(), lowval);\n    var highThresh = new cv.Mat(image.rows, image.cols, image.type(), highval);\n    var contours = new cv.MatVector();\n    var hierarchy = new cv.Mat();\n    cv.morphologyEx(image, image, cv.MORPH_OPEN, M, anchor, 2, cv.BORDER_CONSTANT, cv.morphologyDefaultBorderValue()); // Erosion followed by dilation\n\n    cv.inRange(image, lowThresh, highThresh, binImg);\n    cv.findContours(binImg, contours, hierarchy, cv.RETR_CCOMP, cv.CHAIN_APPROX_SIMPLE);\n\n    if (contours.size() > 0) {\n      let stored = contours.get(0);\n      var objArea = cv.contourArea(stored, false);\n      let moments = cv.moments(stored, false);\n      var cx = moments.m10 / moments.m00;\n      var cy = moments.m01 / moments.m00;\n    }\n\n    return {\n      center: [parseInt(cx), parseInt(cy)],\n      area: parseInt(objArea)\n    };\n  }\n\n  getColorCode(color)\n  /*\r\n    This function returns binary values for the color if the color is on the\r\n    array of colors that robot can filter.\r\n  */\n  {\n    if (this.understandedColors[color]) {\n      var low = this.understandedColors[color].low;\n      var high = this.understandedColors[color].high;\n      return [low, high];\n    }\n  }\n\n  followLine(lowval, highval, speed)\n  /*\r\n    This function is a simple implementation of follow line algorithm, the robot filters an object with\r\n    a given color and follows it.\r\n  */\n  {\n    var data = this.getObjectColorRGB(lowval, highval); // Filters image\n\n    this.setV(speed);\n\n    if (data.center[0] >= 75 && data.center[0] < 95) {\n      this.setW(-0.2);\n    } else if (data.center[0] <= 75 && data.center[0] >= 55) {\n      this.setW(0.2);\n    } else if (data.center[0] >= 95) {\n      this.setW(-0.35);\n    } else if (data.center[0] <= 55) {\n      this.setW(0.35);\n    }\n  }\n\n  readIR(reqColor)\n  /*\r\n    This function filters an object on the robot image and returns 0-1-2-3 depending of the\r\n    position of the center on X axis for the detected object.\r\n  */\n  {\n    var outputVal = 3;\n    var image = this.getImage();\n    var binImg = new cv.Mat();\n    var lines = new cv.Mat();\n    var colorCodes = this.getColorCode(reqColor);\n    var contours = new cv.MatVector();\n    var hierarchy = new cv.Mat();\n    let dst = new cv.Mat();\n    let M = cv.matFromArray(2, 3, cv.CV_64FC1, [1, 0, 0, 0, 1, -95]);\n    let dsize = new cv.Size(image.cols, image.rows - 95); // You can try more different parameters\n\n    cv.warpAffine(image, dst, M, dsize, cv.INTER_LINEAR, cv.BORDER_CONSTANT, new cv.Scalar());\n    var lowTresh = new cv.Mat(dst.rows, dst.cols, dst.type(), colorCodes[0]);\n    var highTresh = new cv.Mat(dst.rows, dst.cols, dst.type(), colorCodes[1]);\n    cv.inRange(dst, lowTresh, highTresh, binImg);\n    cv.findContours(binImg, contours, hierarchy, cv.RETR_CCOMP, cv.CHAIN_APPROX_SIMPLE);\n\n    if (contours.size() > 0) {\n      let stored = contours.get(0);\n      let moments = cv.moments(stored, false);\n      var cx = moments.m10 / moments.m00;\n\n      if (isNaN(cx)) {\n        outputVal = 3;\n      } else if (cx <= 150 && cx >= 93) {\n        outputVal = 2;\n      } else if (cx >= 0 && cx <= 57) {\n        outputVal = 1;\n      } else {\n        outputVal = 0;\n      }\n    }\n\n    return outputVal;\n  }\n\n}\n\n//# sourceURL=webpack:///./js/interfacesRobot.js?");

/***/ }),

/***/ "./js/intersectionHandlerComponent.js":
/*!********************************************!*\
  !*** ./js/intersectionHandlerComponent.js ***!
  \********************************************/
/*! exports provided: intersectionHandlerObj */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"intersectionHandlerObj\", function() { return intersectionHandlerObj; });\nvar intersectionHandlerObj = {\n  schema: {\n    fps: {\n      type: 'number',\n      default: 15\n    }\n  },\n  init: function () {\n    this.bindMethods();\n  },\n  tick: function () {\n    if (new Date().getTime() - this.lastTick < 1000 / this.data.fps) return;\n\n    if (this.isIntersecting) {\n      let distanceObj = this.el.components.raycaster.getIntersection(this.hittedElem);\n      this.el.emit('intersection-detected-' + this.el.id, distanceObj.distance);\n    } else {\n      this.el.emit('intersection-cleared-' + this.el.id);\n    }\n\n    this.lastTick = new Date().getTime();\n  },\n\n  bindMethods() {\n    // You could do all of this directly in your init() method, but I like to separate it.\n    this.onIntersection = this.onIntersection.bind(this);\n    this.onIntersectionClear = this.onIntersectionClear.bind(this);\n  },\n\n  play: function () {\n    this.registerEventListeners(); // It's a good practice in general to enable your event listeners here.\n  },\n  pause: function () {\n    this.deregisterEventListeners(); // Similarly a good practice to remove them here so that they don't stay bound while the scene isn't actually 'running'\n  },\n\n  registerEventListeners() {\n    this.el.addEventListener('raycaster-intersection', this.onIntersection);\n    this.el.addEventListener('raycaster-intersection-cleared', this.onIntersectionClear);\n  },\n\n  deregisterEventListeners() {\n    this.el.removeEventListener('raycaster-intersection', this.onIntersection);\n    this.el.removeEventListener('raycaster-intersection-cleared', this.onIntersectionClear);\n  },\n\n  onIntersection: function (e) {\n    this.isIntersecting = true;\n\n    if (e.detail.els[0]) {\n      this.hittedElem = e.detail.els[0];\n    }\n  },\n  onIntersectionClear: function (e) {\n    this.isIntersecting = false;\n  }\n};\n\n//# sourceURL=webpack:///./js/intersectionHandlerComponent.js?");

/***/ }),

/***/ "./js/spectatorComponent.js":
/*!**********************************!*\
  !*** ./js/spectatorComponent.js ***!
  \**********************************/
/*! exports provided: spectObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"spectObject\", function() { return spectObject; });\nvar spectObject = {\n  'schema': {\n    canvas: {\n      type: 'string',\n      default: ''\n    },\n    // desired FPS of spectator dislay\n    fps: {\n      type: 'number',\n      default: 30.0\n    }\n  },\n  'init': function () {\n    $(document).ready(() => {\n      var targetEl = document.querySelector(this.data.canvas);\n      this.counter = 0;\n      this.renderer = new THREE.WebGLRenderer({\n        antialias: true,\n        preserveDrawingBuffer: true\n      });\n      this.renderer.id = \"robotCam\";\n      this.renderer.setPixelRatio(window.devicePixelRatio);\n      this.renderer.setSize(targetEl.offsetWidth, targetEl.offsetHeight); // creates spectator canvas\n\n      targetEl.appendChild(this.renderer.domElement);\n      targetEl.style.display = \"none\";\n      this.canvas2d = document.createElement('canvas');\n      this.canvas2d.id = \"camera2\";\n      this.canvas2d.width = this.renderer.domElement.width;\n      this.canvas2d.height = this.renderer.domElement.height;\n      this.canvas2d.style.display = \"none\"; //Mantain this not displayed, to display camera change targetEl\n\n      targetEl.appendChild(this.canvas2d);\n      this.getCameraInfo(); // references the function of the component getCameraInfo (last lines)\n    });\n  },\n  'tick': function (time, timeDelta) {\n    var loopFPS = 1000.0 / timeDelta;\n    var hmdIsXFasterThanDesiredFPS = loopFPS / this.data.fps;\n    var renderEveryNthFrame = Math.round(hmdIsXFasterThanDesiredFPS);\n\n    if (this.counter % renderEveryNthFrame === 0) {\n      this.render(timeDelta);\n    }\n\n    this.counter += 1;\n  },\n  'render': function () {\n    this.renderer.render(this.el.sceneEl.object3D, this.el.object3DMap.camera);\n    let strDataURI = this.renderer.domElement.toDataURL();\n    let ctx = this.canvas2d.getContext('2d');\n    let img = new Image();\n\n    img.onload = function () {\n      ctx.drawImage(img, 0, 0); // Or at whatever offset you like\n    };\n\n    img.src = strDataURI;\n  },\n  'getCameraInfo': function () {\n    console.log(this.el.object3DMap.camera);\n  }\n};\n\n//# sourceURL=webpack:///./js/spectatorComponent.js?");

/***/ }),

/***/ "./js/websim-world-controller.js":
/*!***************************************!*\
  !*** ./js/websim-world-controller.js ***!
  \***************************************/
/*! exports provided: startStopCode, cleanRedefinition */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"startStopCode\", function() { return startStopCode; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cleanRedefinition\", function() { return cleanRedefinition; });\nfunction startStopCode(play, myRobot, reservedVariables, mainInterval, codeContent) {\n  var image = document.getElementById(\"runbtn\").firstChild;\n\n  if (!play) {\n    image.src = \"/static/websim/assets/resources/stop-icon.png\";\n    codeContent = cleanRedefinition(codeContent, reservedVariables);\n    play = true;\n    eval(codeContent);\n    console.log(\"Executing code.\");\n  } else {\n    image.src = \"/static/websim/assets/resources/play-icon.png\";\n    clearInterval(mainInterval);\n    myRobot.move(0, 0);\n    play = false;\n    console.log(\"Execution stopped.\");\n  }\n\n  return {\n    \"play\": play,\n    \"mainInterval\": mainInterval\n  };\n}\nfunction cleanRedefinition(scriptContent, reservedVariables) {\n  /*\r\n    This function removes redefinition of variables \"myRobot\" and \"mainInterval\"\r\n  */\n  var contentSplitted = scriptContent.split(\"\\n\");\n  var definitionLine = contentSplitted[0].split(\" \");\n  reservedVariables.forEach((variable, position) => {\n    var index = definitionLine.indexOf(variable);\n\n    if (index != -1) {\n      if (position == 0 || position == 1) {\n        definitionLine[index] = \"\";\n      } else {\n        definitionLine[index] = \"dummyVariable;\";\n      }\n    }\n  });\n  contentSplitted[0] = definitionLine.join(\" \");\n  return contentSplitted.join(\"\\n\");\n}\n\n//# sourceURL=webpack:///./js/websim-world-controller.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/index.js":
/*!*********************************************!*\
  !*** ./node_modules/aframe-extras/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./src/controls */ \"./node_modules/aframe-extras/src/controls/index.js\");\n\n__webpack_require__(/*! ./src/loaders */ \"./node_modules/aframe-extras/src/loaders/index.js\");\n\n__webpack_require__(/*! ./src/misc */ \"./node_modules/aframe-extras/src/misc/index.js\");\n\n__webpack_require__(/*! ./src/pathfinding */ \"./node_modules/aframe-extras/src/pathfinding/index.js\");\n\n__webpack_require__(/*! ./src/primitives */ \"./node_modules/aframe-extras/src/primitives/index.js\");\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/index.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/lib/FBXLoader.js":
/*!*****************************************************!*\
  !*** ./node_modules/aframe-extras/lib/FBXLoader.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * @author Kyle-Larson https://github.com/Kyle-Larson\n * @author Takahiro https://github.com/takahirox\n * @author Lewy Blue https://github.com/looeee\n *\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or to be any version in Binary format.\n *\n * Supports:\n *  Mesh Generation (Positional Data)\n *  Normal Data (Per Vertex Drawing Instance)\n *  UV Data (Per Vertex Drawing Instance)\n *  Skinning\n *  Animation\n *  - Separated Animations based on stacks.\n *  - Skeletal & Non-Skeletal Animations\n *  NURBS (Open, Closed and Periodic forms)\n *\n * Needs Support:\n *  Euler rotation order\n *\n *\n * FBX format references:\n *  https://wiki.blender.org/index.php/User:Mont29/Foundation/FBX_File_Structure\n *\n *  Binary format specification:\n *    https://code.blender.org/2013/08/fbx-binary-file-format-specification/\n *    https://wiki.rogiken.org/specifications/file-format/fbx/ (more detail but Japanese)\n */\n// Monkeypatch for <r89\nTHREE.LoaderUtils = {\n  extractUrlBase: THREE.Loader.prototype.extractUrlBase,\n  decodeText: function (array) {\n    return new TextDecoder().decode(array);\n  }\n};\n\n(function () {\n  module.exports = THREE.FBXLoader = function (manager) {\n    this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  };\n\n  Object.assign(THREE.FBXLoader.prototype, {\n    load: function (url, onLoad, onProgress, onError) {\n      var self = this;\n      var resourceDirectory = THREE.LoaderUtils.extractUrlBase(url);\n      var loader = new THREE.FileLoader(this.manager);\n      loader.setResponseType('arraybuffer');\n      loader.load(url, function (buffer) {\n        try {\n          var scene = self.parse(buffer, resourceDirectory);\n          onLoad(scene);\n        } catch (error) {\n          window.setTimeout(function () {\n            if (onError) onError(error);\n            self.manager.itemError(url);\n          }, 0);\n        }\n      }, onProgress, onError);\n    },\n    parse: function (FBXBuffer, resourceDirectory) {\n      var FBXTree;\n\n      if (isFbxFormatBinary(FBXBuffer)) {\n        FBXTree = new BinaryParser().parse(FBXBuffer);\n      } else {\n        var FBXText = convertArrayBufferToString(FBXBuffer);\n\n        if (!isFbxFormatASCII(FBXText)) {\n          throw new Error('THREE.FBXLoader: Unknown format.');\n        }\n\n        if (getFbxVersion(FBXText) < 7000) {\n          throw new Error('THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion(FBXText));\n        }\n\n        FBXTree = new TextParser().parse(FBXText);\n      } // console.log( FBXTree );\n\n\n      var connections = parseConnections(FBXTree);\n      var images = parseImages(FBXTree);\n      var textures = parseTextures(FBXTree, new THREE.TextureLoader(this.manager).setPath(resourceDirectory), images, connections);\n      var materials = parseMaterials(FBXTree, textures, connections);\n      var skeletons = parseDeformers(FBXTree, connections);\n      var geometryMap = parseGeometries(FBXTree, connections, skeletons);\n      var sceneGraph = parseScene(FBXTree, connections, skeletons, geometryMap, materials);\n      return sceneGraph;\n    }\n  }); // Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n  // and details the connection type\n\n  function parseConnections(FBXTree) {\n    var connectionMap = new Map();\n\n    if ('Connections' in FBXTree) {\n      var rawConnections = FBXTree.Connections.connections;\n      rawConnections.forEach(function (rawConnection) {\n        var fromID = rawConnection[0];\n        var toID = rawConnection[1];\n        var relationship = rawConnection[2];\n\n        if (!connectionMap.has(fromID)) {\n          connectionMap.set(fromID, {\n            parents: [],\n            children: []\n          });\n        }\n\n        var parentRelationship = {\n          ID: toID,\n          relationship: relationship\n        };\n        connectionMap.get(fromID).parents.push(parentRelationship);\n\n        if (!connectionMap.has(toID)) {\n          connectionMap.set(toID, {\n            parents: [],\n            children: []\n          });\n        }\n\n        var childRelationship = {\n          ID: fromID,\n          relationship: relationship\n        };\n        connectionMap.get(toID).children.push(childRelationship);\n      });\n    }\n\n    return connectionMap;\n  } // Parse FBXTree.Objects.Video for embedded image data\n  // These images are connected to textures in FBXTree.Objects.Textures\n  // via FBXTree.Connections.\n\n\n  function parseImages(FBXTree) {\n    var images = {};\n    var blobs = {};\n\n    if ('Video' in FBXTree.Objects) {\n      var videoNodes = FBXTree.Objects.Video;\n\n      for (var nodeID in videoNodes) {\n        var videoNode = videoNodes[nodeID];\n        var id = parseInt(nodeID);\n        images[id] = videoNode.Filename; // raw image data is in videoNode.Content\n\n        if ('Content' in videoNode) {\n          var arrayBufferContent = videoNode.Content instanceof ArrayBuffer && videoNode.Content.byteLength > 0;\n          var base64Content = typeof videoNode.Content === 'string' && videoNode.Content !== '';\n\n          if (arrayBufferContent || base64Content) {\n            var image = parseImage(videoNodes[nodeID]);\n            blobs[videoNode.Filename] = image;\n          }\n        }\n      }\n    }\n\n    for (var id in images) {\n      var filename = images[id];\n      if (blobs[filename] !== undefined) images[id] = blobs[filename];else images[id] = images[id].split('\\\\').pop();\n    }\n\n    return images;\n  } // Parse embedded image data in FBXTree.Video.Content\n\n\n  function parseImage(videoNode) {\n    var content = videoNode.Content;\n    var fileName = videoNode.RelativeFilename || videoNode.Filename;\n    var extension = fileName.slice(fileName.lastIndexOf('.') + 1).toLowerCase();\n    var type;\n\n    switch (extension) {\n      case 'bmp':\n        type = 'image/bmp';\n        break;\n\n      case 'jpg':\n      case 'jpeg':\n        type = 'image/jpeg';\n        break;\n\n      case 'png':\n        type = 'image/png';\n        break;\n\n      case 'tif':\n        type = 'image/tiff';\n        break;\n\n      default:\n        console.warn('FBXLoader: Image type \"' + extension + '\" is not supported.');\n        return;\n    }\n\n    if (typeof content === 'string') {\n      // ASCII format\n      return 'data:' + type + ';base64,' + content;\n    } else {\n      // Binary Format\n      var array = new Uint8Array(content);\n      return window.URL.createObjectURL(new Blob([array], {\n        type: type\n      }));\n    }\n  } // Parse nodes in FBXTree.Objects.Texture\n  // These contain details such as UV scaling, cropping, rotation etc and are connected\n  // to images in FBXTree.Objects.Video\n\n\n  function parseTextures(FBXTree, loader, images, connections) {\n    var textureMap = new Map();\n\n    if ('Texture' in FBXTree.Objects) {\n      var textureNodes = FBXTree.Objects.Texture;\n\n      for (var nodeID in textureNodes) {\n        var texture = parseTexture(textureNodes[nodeID], loader, images, connections);\n        textureMap.set(parseInt(nodeID), texture);\n      }\n    }\n\n    return textureMap;\n  } // Parse individual node in FBXTree.Objects.Texture\n\n\n  function parseTexture(textureNode, loader, images, connections) {\n    var texture = loadTexture(textureNode, loader, images, connections);\n    texture.ID = textureNode.id;\n    texture.name = textureNode.attrName;\n    var wrapModeU = textureNode.WrapModeU;\n    var wrapModeV = textureNode.WrapModeV;\n    var valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n    var valueV = wrapModeV !== undefined ? wrapModeV.value : 0; // http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n    // 0: repeat(default), 1: clamp\n\n    texture.wrapS = valueU === 0 ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n    texture.wrapT = valueV === 0 ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n\n    if ('Scaling' in textureNode) {\n      var values = textureNode.Scaling.value;\n      texture.repeat.x = values[0];\n      texture.repeat.y = values[1];\n    }\n\n    return texture;\n  } // load a texture specified as a blob or data URI, or via an external URL using THREE.TextureLoader\n\n\n  function loadTexture(textureNode, loader, images, connections) {\n    var fileName;\n    var currentPath = loader.path;\n    var children = connections.get(textureNode.id).children;\n\n    if (children !== undefined && children.length > 0 && images[children[0].ID] !== undefined) {\n      fileName = images[children[0].ID];\n\n      if (fileName.indexOf('blob:') === 0 || fileName.indexOf('data:') === 0) {\n        loader.setPath(undefined);\n      }\n    }\n\n    var texture = loader.load(fileName);\n    loader.setPath(currentPath);\n    return texture;\n  } // Parse nodes in FBXTree.Objects.Material\n\n\n  function parseMaterials(FBXTree, textureMap, connections) {\n    var materialMap = new Map();\n\n    if ('Material' in FBXTree.Objects) {\n      var materialNodes = FBXTree.Objects.Material;\n\n      for (var nodeID in materialNodes) {\n        var material = parseMaterial(FBXTree, materialNodes[nodeID], textureMap, connections);\n        if (material !== null) materialMap.set(parseInt(nodeID), material);\n      }\n    }\n\n    return materialMap;\n  } // Parse single node in FBXTree.Objects.Material\n  // Materials are connected to texture maps in FBXTree.Objects.Textures\n  // FBX format currently only supports Lambert and Phong shading models\n\n\n  function parseMaterial(FBXTree, materialNode, textureMap, connections) {\n    var ID = materialNode.id;\n    var name = materialNode.attrName;\n    var type = materialNode.ShadingModel; //Case where FBX wraps shading model in property object.\n\n    if (typeof type === 'object') {\n      type = type.value;\n    } // Ignore unused materials which don't have any connections.\n\n\n    if (!connections.has(ID)) return null;\n    var parameters = parseParameters(FBXTree, materialNode, textureMap, ID, connections);\n    var material;\n\n    switch (type.toLowerCase()) {\n      case 'phong':\n        material = new THREE.MeshPhongMaterial();\n        break;\n\n      case 'lambert':\n        material = new THREE.MeshLambertMaterial();\n        break;\n\n      default:\n        console.warn('THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type);\n        material = new THREE.MeshPhongMaterial({\n          color: 0x3300ff\n        });\n        break;\n    }\n\n    material.setValues(parameters);\n    material.name = name;\n    return material;\n  } // Parse FBX material and return parameters suitable for a three.js material\n  // Also parse the texture map and return any textures associated with the material\n\n\n  function parseParameters(FBXTree, properties, textureMap, ID, connections) {\n    var parameters = {};\n\n    if (properties.BumpFactor) {\n      parameters.bumpScale = properties.BumpFactor.value;\n    }\n\n    if (properties.Diffuse) {\n      parameters.color = new THREE.Color().fromArray(properties.Diffuse.value);\n    }\n\n    if (properties.DisplacementFactor) {\n      parameters.displacementScale = properties.DisplacementFactor.value;\n    }\n\n    if (properties.ReflectionFactor) {\n      parameters.reflectivity = properties.ReflectionFactor.value;\n    }\n\n    if (properties.Specular) {\n      parameters.specular = new THREE.Color().fromArray(properties.Specular.value);\n    }\n\n    if (properties.Shininess) {\n      parameters.shininess = properties.Shininess.value;\n    }\n\n    if (properties.Emissive) {\n      parameters.emissive = new THREE.Color().fromArray(properties.Emissive.value);\n    }\n\n    if (properties.EmissiveFactor) {\n      parameters.emissiveIntensity = parseFloat(properties.EmissiveFactor.value);\n    }\n\n    if (properties.Opacity) {\n      parameters.opacity = parseFloat(properties.Opacity.value);\n    }\n\n    if (parameters.opacity < 1.0) {\n      parameters.transparent = true;\n    }\n\n    connections.get(ID).children.forEach(function (child) {\n      var type = child.relationship;\n\n      switch (type) {\n        case 'Bump':\n          parameters.bumpMap = textureMap.get(child.ID);\n          break;\n\n        case 'DiffuseColor':\n          parameters.map = getTexture(FBXTree, textureMap, child.ID, connections);\n          break;\n\n        case 'DisplacementColor':\n          parameters.displacementMap = getTexture(FBXTree, textureMap, child.ID, connections);\n          break;\n\n        case 'EmissiveColor':\n          parameters.emissiveMap = getTexture(FBXTree, textureMap, child.ID, connections);\n          break;\n\n        case 'NormalMap':\n          parameters.normalMap = getTexture(FBXTree, textureMap, child.ID, connections);\n          break;\n\n        case 'ReflectionColor':\n          parameters.envMap = getTexture(FBXTree, textureMap, child.ID, connections);\n          parameters.envMap.mapping = THREE.EquirectangularReflectionMapping;\n          break;\n\n        case 'SpecularColor':\n          parameters.specularMap = getTexture(FBXTree, textureMap, child.ID, connections);\n          break;\n\n        case 'TransparentColor':\n          parameters.alphaMap = getTexture(FBXTree, textureMap, child.ID, connections);\n          parameters.transparent = true;\n          break;\n\n        case 'AmbientColor':\n        case 'ShininessExponent': // AKA glossiness map\n\n        case 'SpecularFactor': // AKA specularLevel\n\n        case 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\n        default:\n          console.warn('THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type);\n          break;\n      }\n    });\n    return parameters;\n  } // get a texture from the textureMap for use by a material.\n\n\n  function getTexture(FBXTree, textureMap, id, connections) {\n    // if the texture is a layered texture, just use the first layer and issue a warning\n    if ('LayeredTexture' in FBXTree.Objects && id in FBXTree.Objects.LayeredTexture) {\n      console.warn('THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.');\n      id = connections.get(id).children[0].ID;\n    }\n\n    return textureMap.get(id);\n  } // Parse nodes in FBXTree.Objects.Deformer\n  // Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n  // Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\n\n  function parseDeformers(FBXTree, connections) {\n    var skeletons = {};\n\n    if ('Deformer' in FBXTree.Objects) {\n      var DeformerNodes = FBXTree.Objects.Deformer;\n\n      for (var nodeID in DeformerNodes) {\n        var deformerNode = DeformerNodes[nodeID];\n\n        if (deformerNode.attrType === 'Skin') {\n          var relationships = connections.get(parseInt(nodeID));\n          var skeleton = parseSkeleton(relationships, DeformerNodes);\n          skeleton.ID = nodeID;\n          if (relationships.parents.length > 1) console.warn('THREE.FBXLoader: skeleton attached to more than one geometry is not supported.');\n          skeleton.geometryID = relationships.parents[0].ID;\n          skeletons[nodeID] = skeleton;\n        }\n      }\n    }\n\n    return skeletons;\n  } // Parse single nodes in FBXTree.Objects.Deformer\n  // The top level deformer nodes have type 'Skin' and subDeformer nodes have type 'Cluster'\n  // Each skin node represents a skeleton and each cluster node represents a bone\n\n\n  function parseSkeleton(connections, deformerNodes) {\n    var rawBones = [];\n    connections.children.forEach(function (child) {\n      var subDeformerNode = deformerNodes[child.ID];\n      if (subDeformerNode.attrType !== 'Cluster') return;\n      var rawBone = {\n        ID: child.ID,\n        indices: [],\n        weights: [],\n        transform: new THREE.Matrix4().fromArray(subDeformerNode.Transform.a),\n        transformLink: new THREE.Matrix4().fromArray(subDeformerNode.TransformLink.a),\n        linkMode: subDeformerNode.Mode\n      };\n\n      if ('Indexes' in subDeformerNode) {\n        rawBone.indices = subDeformerNode.Indexes.a;\n        rawBone.weights = subDeformerNode.Weights.a;\n      }\n\n      rawBones.push(rawBone);\n    });\n    return {\n      rawBones: rawBones,\n      bones: []\n    };\n  } // Parse nodes in FBXTree.Objects.Geometry\n\n\n  function parseGeometries(FBXTree, connections, skeletons) {\n    var geometryMap = new Map();\n\n    if ('Geometry' in FBXTree.Objects) {\n      var geometryNodes = FBXTree.Objects.Geometry;\n\n      for (var nodeID in geometryNodes) {\n        var relationships = connections.get(parseInt(nodeID));\n        var geo = parseGeometry(FBXTree, relationships, geometryNodes[nodeID], skeletons);\n        geometryMap.set(parseInt(nodeID), geo);\n      }\n    }\n\n    return geometryMap;\n  } // Parse single node in FBXTree.Objects.Geometry\n\n\n  function parseGeometry(FBXTree, relationships, geometryNode, skeletons) {\n    switch (geometryNode.attrType) {\n      case 'Mesh':\n        return parseMeshGeometry(FBXTree, relationships, geometryNode, skeletons);\n        break;\n\n      case 'NurbsCurve':\n        return parseNurbsGeometry(geometryNode);\n        break;\n    }\n  } // Parse single node mesh geometry in FBXTree.Objects.Geometry\n\n\n  function parseMeshGeometry(FBXTree, relationships, geometryNode, skeletons) {\n    var modelNodes = relationships.parents.map(function (parent) {\n      return FBXTree.Objects.Model[parent.ID];\n    }); // don't create geometry if it is not associated with any models\n\n    if (modelNodes.length === 0) return;\n    var skeleton = relationships.children.reduce(function (skeleton, child) {\n      if (skeletons[child.ID] !== undefined) skeleton = skeletons[child.ID];\n      return skeleton;\n    }, null);\n    var preTransform = new THREE.Matrix4(); // TODO: if there is more than one model associated with the geometry, AND the models have\n    // different geometric transforms, then this will cause problems\n    // if ( modelNodes.length > 1 ) { }\n    // For now just assume one model and get the preRotations from that\n\n    var modelNode = modelNodes[0];\n\n    if ('GeometricRotation' in modelNode) {\n      var array = modelNode.GeometricRotation.value.map(THREE.Math.degToRad);\n      array[3] = 'ZYX';\n      preTransform.makeRotationFromEuler(new THREE.Euler().fromArray(array));\n    }\n\n    if ('GeometricTranslation' in modelNode) {\n      preTransform.setPosition(new THREE.Vector3().fromArray(modelNode.GeometricTranslation.value));\n    }\n\n    return genGeometry(FBXTree, relationships, geometryNode, skeleton, preTransform);\n  } // Generate a THREE.BufferGeometry from a node in FBXTree.Objects.Geometry\n\n\n  function genGeometry(FBXTree, relationships, geometryNode, skeleton, preTransform) {\n    var vertexPositions = geometryNode.Vertices.a;\n    var vertexIndices = geometryNode.PolygonVertexIndex.a; // create arrays to hold the final data used to build the buffergeometry\n\n    var vertexBuffer = [];\n    var normalBuffer = [];\n    var colorsBuffer = [];\n    var uvsBuffer = [];\n    var materialIndexBuffer = [];\n    var vertexWeightsBuffer = [];\n    var weightsIndicesBuffer = [];\n\n    if (geometryNode.LayerElementColor) {\n      var colorInfo = getColors(geometryNode.LayerElementColor[0]);\n    }\n\n    if (geometryNode.LayerElementMaterial) {\n      var materialInfo = getMaterials(geometryNode.LayerElementMaterial[0]);\n    }\n\n    if (geometryNode.LayerElementNormal) {\n      var normalInfo = getNormals(geometryNode.LayerElementNormal[0]);\n    }\n\n    if (geometryNode.LayerElementUV) {\n      var uvInfo = [];\n      var i = 0;\n\n      while (geometryNode.LayerElementUV[i]) {\n        uvInfo.push(getUVs(geometryNode.LayerElementUV[i]));\n        i++;\n      }\n    }\n\n    var weightTable = {};\n\n    if (skeleton !== null) {\n      skeleton.rawBones.forEach(function (rawBone, i) {\n        // loop over the bone's vertex indices and weights\n        rawBone.indices.forEach(function (index, j) {\n          if (weightTable[index] === undefined) weightTable[index] = [];\n          weightTable[index].push({\n            id: i,\n            weight: rawBone.weights[j]\n          });\n        });\n      });\n    }\n\n    var polygonIndex = 0;\n    var faceLength = 0;\n    var displayedWeightsWarning = false; // these will hold data for a single face\n\n    var vertexPositionIndexes = [];\n    var faceNormals = [];\n    var faceColors = [];\n    var faceUVs = [];\n    var faceWeights = [];\n    var faceWeightIndices = [];\n    vertexIndices.forEach(function (vertexIndex, polygonVertexIndex) {\n      var endOfFace = false; // Face index and vertex index arrays are combined in a single array\n      // A cube with quad faces looks like this:\n      // PolygonVertexIndex: *24 {\n      //  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n      //  }\n      // Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n      // to find index of last vertex multiply by -1 and subtract 1: -3 * - 1 - 1 = 2\n\n      if (vertexIndex < 0) {\n        vertexIndex = vertexIndex ^ -1; // equivalent to ( x * -1 ) - 1\n\n        vertexIndices[polygonVertexIndex] = vertexIndex;\n        endOfFace = true;\n      }\n\n      var weightIndices = [];\n      var weights = [];\n      vertexPositionIndexes.push(vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2);\n\n      if (colorInfo) {\n        var data = getData(polygonVertexIndex, polygonIndex, vertexIndex, colorInfo);\n        faceColors.push(data[0], data[1], data[2]);\n      }\n\n      if (skeleton) {\n        if (weightTable[vertexIndex] !== undefined) {\n          weightTable[vertexIndex].forEach(function (wt) {\n            weights.push(wt.weight);\n            weightIndices.push(wt.id);\n          });\n        }\n\n        if (weights.length > 4) {\n          if (!displayedWeightsWarning) {\n            console.warn('THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.');\n            displayedWeightsWarning = true;\n          }\n\n          var wIndex = [0, 0, 0, 0];\n          var Weight = [0, 0, 0, 0];\n          weights.forEach(function (weight, weightIndex) {\n            var currentWeight = weight;\n            var currentIndex = weightIndices[weightIndex];\n            Weight.forEach(function (comparedWeight, comparedWeightIndex, comparedWeightArray) {\n              if (currentWeight > comparedWeight) {\n                comparedWeightArray[comparedWeightIndex] = currentWeight;\n                currentWeight = comparedWeight;\n                var tmp = wIndex[comparedWeightIndex];\n                wIndex[comparedWeightIndex] = currentIndex;\n                currentIndex = tmp;\n              }\n            });\n          });\n          weightIndices = wIndex;\n          weights = Weight;\n        } // if the weight array is shorter than 4 pad with 0s\n\n\n        while (weights.length < 4) {\n          weights.push(0);\n          weightIndices.push(0);\n        }\n\n        for (var i = 0; i < 4; ++i) {\n          faceWeights.push(weights[i]);\n          faceWeightIndices.push(weightIndices[i]);\n        }\n      }\n\n      if (normalInfo) {\n        var data = getData(polygonVertexIndex, polygonIndex, vertexIndex, normalInfo);\n        faceNormals.push(data[0], data[1], data[2]);\n      }\n\n      if (materialInfo && materialInfo.mappingType !== 'AllSame') {\n        var materialIndex = getData(polygonVertexIndex, polygonIndex, vertexIndex, materialInfo)[0];\n      }\n\n      if (uvInfo) {\n        uvInfo.forEach(function (uv, i) {\n          var data = getData(polygonVertexIndex, polygonIndex, vertexIndex, uv);\n\n          if (faceUVs[i] === undefined) {\n            faceUVs[i] = [];\n          }\n\n          faceUVs[i].push(data[0]);\n          faceUVs[i].push(data[1]);\n        });\n      }\n\n      faceLength++; // we have reached the end of a face - it may have 4 sides though\n      // in which case the data is split to represent two 3 sided faces\n\n      if (endOfFace) {\n        for (var i = 2; i < faceLength; i++) {\n          vertexBuffer.push(vertexPositions[vertexPositionIndexes[0]]);\n          vertexBuffer.push(vertexPositions[vertexPositionIndexes[1]]);\n          vertexBuffer.push(vertexPositions[vertexPositionIndexes[2]]);\n          vertexBuffer.push(vertexPositions[vertexPositionIndexes[(i - 1) * 3]]);\n          vertexBuffer.push(vertexPositions[vertexPositionIndexes[(i - 1) * 3 + 1]]);\n          vertexBuffer.push(vertexPositions[vertexPositionIndexes[(i - 1) * 3 + 2]]);\n          vertexBuffer.push(vertexPositions[vertexPositionIndexes[i * 3]]);\n          vertexBuffer.push(vertexPositions[vertexPositionIndexes[i * 3 + 1]]);\n          vertexBuffer.push(vertexPositions[vertexPositionIndexes[i * 3 + 2]]);\n\n          if (skeleton) {\n            vertexWeightsBuffer.push(faceWeights[0]);\n            vertexWeightsBuffer.push(faceWeights[1]);\n            vertexWeightsBuffer.push(faceWeights[2]);\n            vertexWeightsBuffer.push(faceWeights[3]);\n            vertexWeightsBuffer.push(faceWeights[(i - 1) * 4]);\n            vertexWeightsBuffer.push(faceWeights[(i - 1) * 4 + 1]);\n            vertexWeightsBuffer.push(faceWeights[(i - 1) * 4 + 2]);\n            vertexWeightsBuffer.push(faceWeights[(i - 1) * 4 + 3]);\n            vertexWeightsBuffer.push(faceWeights[i * 4]);\n            vertexWeightsBuffer.push(faceWeights[i * 4 + 1]);\n            vertexWeightsBuffer.push(faceWeights[i * 4 + 2]);\n            vertexWeightsBuffer.push(faceWeights[i * 4 + 3]);\n            weightsIndicesBuffer.push(faceWeightIndices[0]);\n            weightsIndicesBuffer.push(faceWeightIndices[1]);\n            weightsIndicesBuffer.push(faceWeightIndices[2]);\n            weightsIndicesBuffer.push(faceWeightIndices[3]);\n            weightsIndicesBuffer.push(faceWeightIndices[(i - 1) * 4]);\n            weightsIndicesBuffer.push(faceWeightIndices[(i - 1) * 4 + 1]);\n            weightsIndicesBuffer.push(faceWeightIndices[(i - 1) * 4 + 2]);\n            weightsIndicesBuffer.push(faceWeightIndices[(i - 1) * 4 + 3]);\n            weightsIndicesBuffer.push(faceWeightIndices[i * 4]);\n            weightsIndicesBuffer.push(faceWeightIndices[i * 4 + 1]);\n            weightsIndicesBuffer.push(faceWeightIndices[i * 4 + 2]);\n            weightsIndicesBuffer.push(faceWeightIndices[i * 4 + 3]);\n          }\n\n          if (colorInfo) {\n            colorsBuffer.push(faceColors[0]);\n            colorsBuffer.push(faceColors[1]);\n            colorsBuffer.push(faceColors[2]);\n            colorsBuffer.push(faceColors[(i - 1) * 3]);\n            colorsBuffer.push(faceColors[(i - 1) * 3 + 1]);\n            colorsBuffer.push(faceColors[(i - 1) * 3 + 2]);\n            colorsBuffer.push(faceColors[i * 3]);\n            colorsBuffer.push(faceColors[i * 3 + 1]);\n            colorsBuffer.push(faceColors[i * 3 + 2]);\n          }\n\n          if (materialInfo && materialInfo.mappingType !== 'AllSame') {\n            materialIndexBuffer.push(materialIndex);\n            materialIndexBuffer.push(materialIndex);\n            materialIndexBuffer.push(materialIndex);\n          }\n\n          if (normalInfo) {\n            normalBuffer.push(faceNormals[0]);\n            normalBuffer.push(faceNormals[1]);\n            normalBuffer.push(faceNormals[2]);\n            normalBuffer.push(faceNormals[(i - 1) * 3]);\n            normalBuffer.push(faceNormals[(i - 1) * 3 + 1]);\n            normalBuffer.push(faceNormals[(i - 1) * 3 + 2]);\n            normalBuffer.push(faceNormals[i * 3]);\n            normalBuffer.push(faceNormals[i * 3 + 1]);\n            normalBuffer.push(faceNormals[i * 3 + 2]);\n          }\n\n          if (uvInfo) {\n            uvInfo.forEach(function (uv, j) {\n              if (uvsBuffer[j] === undefined) uvsBuffer[j] = [];\n              uvsBuffer[j].push(faceUVs[j][0]);\n              uvsBuffer[j].push(faceUVs[j][1]);\n              uvsBuffer[j].push(faceUVs[j][(i - 1) * 2]);\n              uvsBuffer[j].push(faceUVs[j][(i - 1) * 2 + 1]);\n              uvsBuffer[j].push(faceUVs[j][i * 2]);\n              uvsBuffer[j].push(faceUVs[j][i * 2 + 1]);\n            });\n          }\n        }\n\n        polygonIndex++;\n        faceLength = 0; // reset arrays for the next face\n\n        vertexPositionIndexes = [];\n        faceNormals = [];\n        faceColors = [];\n        faceUVs = [];\n        faceWeights = [];\n        faceWeightIndices = [];\n      }\n    });\n    var geo = new THREE.BufferGeometry();\n    geo.name = geometryNode.name;\n    var positionAttribute = new THREE.Float32BufferAttribute(vertexBuffer, 3);\n    preTransform.applyToBufferAttribute(positionAttribute);\n    geo.addAttribute('position', positionAttribute);\n\n    if (colorsBuffer.length > 0) {\n      geo.addAttribute('color', new THREE.Float32BufferAttribute(colorsBuffer, 3));\n    }\n\n    if (skeleton) {\n      geo.addAttribute('skinIndex', new THREE.Float32BufferAttribute(weightsIndicesBuffer, 4));\n      geo.addAttribute('skinWeight', new THREE.Float32BufferAttribute(vertexWeightsBuffer, 4)); // used later to bind the skeleton to the model\n\n      geo.FBX_Deformer = skeleton;\n    }\n\n    if (normalBuffer.length > 0) {\n      var normalAttribute = new THREE.Float32BufferAttribute(normalBuffer, 3);\n      var normalMatrix = new THREE.Matrix3().getNormalMatrix(preTransform);\n      normalMatrix.applyToBufferAttribute(normalAttribute);\n      geo.addAttribute('normal', normalAttribute);\n    }\n\n    uvsBuffer.forEach(function (uvBuffer, i) {\n      // subsequent uv buffers are called 'uv1', 'uv2', ...\n      var name = 'uv' + (i + 1).toString(); // the first uv buffer is just called 'uv'\n\n      if (i === 0) {\n        name = 'uv';\n      }\n\n      geo.addAttribute(name, new THREE.Float32BufferAttribute(uvsBuffer[i], 2));\n    });\n\n    if (materialInfo && materialInfo.mappingType !== 'AllSame') {\n      // Convert the material indices of each vertex into rendering groups on the geometry.\n      var prevMaterialIndex = materialIndexBuffer[0];\n      var startIndex = 0;\n      materialIndexBuffer.forEach(function (currentIndex, i) {\n        if (currentIndex !== prevMaterialIndex) {\n          geo.addGroup(startIndex, i - startIndex, prevMaterialIndex);\n          prevMaterialIndex = currentIndex;\n          startIndex = i;\n        }\n      }); // the loop above doesn't add the last group, do that here.\n\n      if (geo.groups.length > 0) {\n        var lastGroup = geo.groups[geo.groups.length - 1];\n        var lastIndex = lastGroup.start + lastGroup.count;\n\n        if (lastIndex !== materialIndexBuffer.length) {\n          geo.addGroup(lastIndex, materialIndexBuffer.length - lastIndex, prevMaterialIndex);\n        }\n      } // case where there are multiple materials but the whole geometry is only\n      // using one of them\n\n\n      if (geo.groups.length === 0) {\n        geo.addGroup(0, materialIndexBuffer.length, materialIndexBuffer[0]);\n      }\n    }\n\n    return geo;\n  } // Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\n\n  function getNormals(NormalNode) {\n    var mappingType = NormalNode.MappingInformationType;\n    var referenceType = NormalNode.ReferenceInformationType;\n    var buffer = NormalNode.Normals.a;\n    var indexBuffer = [];\n\n    if (referenceType === 'IndexToDirect') {\n      if ('NormalIndex' in NormalNode) {\n        indexBuffer = NormalNode.NormalIndex.a;\n      } else if ('NormalsIndex' in NormalNode) {\n        indexBuffer = NormalNode.NormalsIndex.a;\n      }\n    }\n\n    return {\n      dataSize: 3,\n      buffer: buffer,\n      indices: indexBuffer,\n      mappingType: mappingType,\n      referenceType: referenceType\n    };\n  } // Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\n\n  function getUVs(UVNode) {\n    var mappingType = UVNode.MappingInformationType;\n    var referenceType = UVNode.ReferenceInformationType;\n    var buffer = UVNode.UV.a;\n    var indexBuffer = [];\n\n    if (referenceType === 'IndexToDirect') {\n      indexBuffer = UVNode.UVIndex.a;\n    }\n\n    return {\n      dataSize: 2,\n      buffer: buffer,\n      indices: indexBuffer,\n      mappingType: mappingType,\n      referenceType: referenceType\n    };\n  } // Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\n\n  function getColors(ColorNode) {\n    var mappingType = ColorNode.MappingInformationType;\n    var referenceType = ColorNode.ReferenceInformationType;\n    var buffer = ColorNode.Colors.a;\n    var indexBuffer = [];\n\n    if (referenceType === 'IndexToDirect') {\n      indexBuffer = ColorNode.ColorIndex.a;\n    }\n\n    return {\n      dataSize: 4,\n      buffer: buffer,\n      indices: indexBuffer,\n      mappingType: mappingType,\n      referenceType: referenceType\n    };\n  } // Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\n\n  function getMaterials(MaterialNode) {\n    var mappingType = MaterialNode.MappingInformationType;\n    var referenceType = MaterialNode.ReferenceInformationType;\n\n    if (mappingType === 'NoMappingInformation') {\n      return {\n        dataSize: 1,\n        buffer: [0],\n        indices: [0],\n        mappingType: 'AllSame',\n        referenceType: referenceType\n      };\n    }\n\n    var materialIndexBuffer = MaterialNode.Materials.a; // Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n    // we expect.So we create an intermediate buffer that points to the index in the buffer,\n    // for conforming with the other functions we've written for other data.\n\n    var materialIndices = [];\n\n    for (var i = 0; i < materialIndexBuffer.length; ++i) {\n      materialIndices.push(i);\n    }\n\n    return {\n      dataSize: 1,\n      buffer: materialIndexBuffer,\n      indices: materialIndices,\n      mappingType: mappingType,\n      referenceType: referenceType\n    };\n  } // Functions use the infoObject and given indices to return value array of geometry.\n  // Parameters:\n  // \t- polygonVertexIndex - Index of vertex in draw order (which index of the index buffer refers to this vertex).\n  // \t- polygonIndex - Index of polygon in geometry.\n  // \t- vertexIndex - Index of vertex inside vertex buffer (used because some data refers to old index buffer that we don't use anymore).\n  // \t- infoObject: can be materialInfo, normalInfo, UVInfo or colorInfo\n  // Index type:\n  //\t- Direct: index is same as polygonVertexIndex\n  //\t- IndexToDirect: infoObject has it's own set of indices\n\n\n  var dataArray = [];\n  var GetData = {\n    ByPolygonVertex: {\n      Direct: function (polygonVertexIndex, polygonIndex, vertexIndex, infoObject) {\n        var from = polygonVertexIndex * infoObject.dataSize;\n        var to = polygonVertexIndex * infoObject.dataSize + infoObject.dataSize;\n        return slice(dataArray, infoObject.buffer, from, to);\n      },\n      IndexToDirect: function (polygonVertexIndex, polygonIndex, vertexIndex, infoObject) {\n        var index = infoObject.indices[polygonVertexIndex];\n        var from = index * infoObject.dataSize;\n        var to = index * infoObject.dataSize + infoObject.dataSize;\n        return slice(dataArray, infoObject.buffer, from, to);\n      }\n    },\n    ByPolygon: {\n      Direct: function (polygonVertexIndex, polygonIndex, vertexIndex, infoObject) {\n        var from = polygonIndex * infoObject.dataSize;\n        var to = polygonIndex * infoObject.dataSize + infoObject.dataSize;\n        return slice(dataArray, infoObject.buffer, from, to);\n      },\n      IndexToDirect: function (polygonVertexIndex, polygonIndex, vertexIndex, infoObject) {\n        var index = infoObject.indices[polygonIndex];\n        var from = index * infoObject.dataSize;\n        var to = index * infoObject.dataSize + infoObject.dataSize;\n        return slice(dataArray, infoObject.buffer, from, to);\n      }\n    },\n    ByVertice: {\n      Direct: function (polygonVertexIndex, polygonIndex, vertexIndex, infoObject) {\n        var from = vertexIndex * infoObject.dataSize;\n        var to = vertexIndex * infoObject.dataSize + infoObject.dataSize;\n        return slice(dataArray, infoObject.buffer, from, to);\n      }\n    },\n    AllSame: {\n      IndexToDirect: function (polygonVertexIndex, polygonIndex, vertexIndex, infoObject) {\n        var from = infoObject.indices[0] * infoObject.dataSize;\n        var to = infoObject.indices[0] * infoObject.dataSize + infoObject.dataSize;\n        return slice(dataArray, infoObject.buffer, from, to);\n      }\n    }\n  };\n\n  function getData(polygonVertexIndex, polygonIndex, vertexIndex, infoObject) {\n    return GetData[infoObject.mappingType][infoObject.referenceType](polygonVertexIndex, polygonIndex, vertexIndex, infoObject);\n  } // Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\n\n  function parseNurbsGeometry(geometryNode) {\n    if (THREE.NURBSCurve === undefined) {\n      console.error('THREE.FBXLoader: The loader relies on THREE.NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry.');\n      return new THREE.BufferGeometry();\n    }\n\n    var order = parseInt(geometryNode.Order);\n\n    if (isNaN(order)) {\n      console.error('THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geometryNode.Order, geometryNode.id);\n      return new THREE.BufferGeometry();\n    }\n\n    var degree = order - 1;\n    var knots = geometryNode.KnotVector.a;\n    var controlPoints = [];\n    var pointsValues = geometryNode.Points.a;\n\n    for (var i = 0, l = pointsValues.length; i < l; i += 4) {\n      controlPoints.push(new THREE.Vector4().fromArray(pointsValues, i));\n    }\n\n    var startKnot, endKnot;\n\n    if (geometryNode.Form === 'Closed') {\n      controlPoints.push(controlPoints[0]);\n    } else if (geometryNode.Form === 'Periodic') {\n      startKnot = degree;\n      endKnot = knots.length - 1 - startKnot;\n\n      for (var i = 0; i < degree; ++i) {\n        controlPoints.push(controlPoints[i]);\n      }\n    }\n\n    var curve = new THREE.NURBSCurve(degree, knots, controlPoints, startKnot, endKnot);\n    var vertices = curve.getPoints(controlPoints.length * 7);\n    var positions = new Float32Array(vertices.length * 3);\n    vertices.forEach(function (vertex, i) {\n      vertex.toArray(positions, i * 3);\n    });\n    var geometry = new THREE.BufferGeometry();\n    geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n    return geometry;\n  } // create the main THREE.Group() to be returned by the loader\n\n\n  function parseScene(FBXTree, connections, skeletons, geometryMap, materialMap) {\n    var sceneGraph = new THREE.Group();\n    var modelMap = parseModels(FBXTree, skeletons, geometryMap, materialMap, connections);\n    var modelNodes = FBXTree.Objects.Model;\n    modelMap.forEach(function (model) {\n      var modelNode = modelNodes[model.ID];\n      setLookAtProperties(FBXTree, model, modelNode, connections, sceneGraph);\n      var parentConnections = connections.get(model.ID).parents;\n      parentConnections.forEach(function (connection) {\n        var parent = modelMap.get(connection.ID);\n        if (parent !== undefined) parent.add(model);\n      });\n\n      if (model.parent === null) {\n        sceneGraph.add(model);\n      }\n    });\n    bindSkeleton(FBXTree, skeletons, geometryMap, modelMap, connections);\n    addAnimations(FBXTree, connections, sceneGraph);\n    createAmbientLight(FBXTree, sceneGraph);\n    return sceneGraph;\n  } // parse nodes in FBXTree.Objects.Model\n\n\n  function parseModels(FBXTree, skeletons, geometryMap, materialMap, connections) {\n    var modelMap = new Map();\n    var modelNodes = FBXTree.Objects.Model;\n\n    for (var nodeID in modelNodes) {\n      var id = parseInt(nodeID);\n      var node = modelNodes[nodeID];\n      var relationships = connections.get(id);\n      var model = buildSkeleton(relationships, skeletons, id, node.attrName);\n\n      if (!model) {\n        switch (node.attrType) {\n          case 'Camera':\n            model = createCamera(FBXTree, relationships);\n            break;\n\n          case 'Light':\n            model = createLight(FBXTree, relationships);\n            break;\n\n          case 'Mesh':\n            model = createMesh(FBXTree, relationships, geometryMap, materialMap);\n            break;\n\n          case 'NurbsCurve':\n            model = createCurve(relationships, geometryMap);\n            break;\n\n          case 'LimbNode': // usually associated with a Bone, however if a Bone was not created we'll make a Group instead\n\n          case 'Null':\n          default:\n            model = new THREE.Group();\n            break;\n        }\n\n        model.name = THREE.PropertyBinding.sanitizeNodeName(node.attrName);\n        model.ID = id;\n      }\n\n      setModelTransforms(FBXTree, model, node);\n      modelMap.set(id, model);\n    }\n\n    return modelMap;\n  }\n\n  function buildSkeleton(relationships, skeletons, id, name) {\n    var bone = null;\n    relationships.parents.forEach(function (parent) {\n      for (var ID in skeletons) {\n        var skeleton = skeletons[ID];\n        skeleton.rawBones.forEach(function (rawBone, i) {\n          if (rawBone.ID === parent.ID) {\n            var subBone = bone;\n            bone = new THREE.Bone();\n            bone.matrixWorld.copy(rawBone.transformLink); // set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n            bone.name = THREE.PropertyBinding.sanitizeNodeName(name);\n            bone.ID = id;\n            skeleton.bones[i] = bone; // In cases where a bone is shared between multiple meshes\n            // duplicate the bone here and and it as a child of the first bone\n\n            if (subBone !== null) {\n              bone.add(subBone);\n            }\n          }\n        });\n      }\n    });\n    return bone;\n  } // create a THREE.PerspectiveCamera or THREE.OrthographicCamera\n\n\n  function createCamera(FBXTree, relationships) {\n    var model;\n    var cameraAttribute;\n    relationships.children.forEach(function (child) {\n      var attr = FBXTree.Objects.NodeAttribute[child.ID];\n\n      if (attr !== undefined) {\n        cameraAttribute = attr;\n      }\n    });\n\n    if (cameraAttribute === undefined) {\n      model = new THREE.Object3D();\n    } else {\n      var type = 0;\n\n      if (cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1) {\n        type = 1;\n      }\n\n      var nearClippingPlane = 1;\n\n      if (cameraAttribute.NearPlane !== undefined) {\n        nearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n      }\n\n      var farClippingPlane = 1000;\n\n      if (cameraAttribute.FarPlane !== undefined) {\n        farClippingPlane = cameraAttribute.FarPlane.value / 1000;\n      }\n\n      var width = window.innerWidth;\n      var height = window.innerHeight;\n\n      if (cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined) {\n        width = cameraAttribute.AspectWidth.value;\n        height = cameraAttribute.AspectHeight.value;\n      }\n\n      var aspect = width / height;\n      var fov = 45;\n\n      if (cameraAttribute.FieldOfView !== undefined) {\n        fov = cameraAttribute.FieldOfView.value;\n      }\n\n      var focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n      switch (type) {\n        case 0:\n          // Perspective\n          model = new THREE.PerspectiveCamera(fov, aspect, nearClippingPlane, farClippingPlane);\n          if (focalLength !== null) model.setFocalLength(focalLength);\n          break;\n\n        case 1:\n          // Orthographic\n          model = new THREE.OrthographicCamera(-width / 2, width / 2, height / 2, -height / 2, nearClippingPlane, farClippingPlane);\n          break;\n\n        default:\n          console.warn('THREE.FBXLoader: Unknown camera type ' + type + '.');\n          model = new THREE.Object3D();\n          break;\n      }\n    }\n\n    return model;\n  } // Create a THREE.DirectionalLight, THREE.PointLight or THREE.SpotLight\n\n\n  function createLight(FBXTree, relationships) {\n    var model;\n    var lightAttribute;\n    relationships.children.forEach(function (child) {\n      var attr = FBXTree.Objects.NodeAttribute[child.ID];\n\n      if (attr !== undefined) {\n        lightAttribute = attr;\n      }\n    });\n\n    if (lightAttribute === undefined) {\n      model = new THREE.Object3D();\n    } else {\n      var type; // LightType can be undefined for Point lights\n\n      if (lightAttribute.LightType === undefined) {\n        type = 0;\n      } else {\n        type = lightAttribute.LightType.value;\n      }\n\n      var color = 0xffffff;\n\n      if (lightAttribute.Color !== undefined) {\n        color = new THREE.Color().fromArray(lightAttribute.Color.value);\n      }\n\n      var intensity = lightAttribute.Intensity === undefined ? 1 : lightAttribute.Intensity.value / 100; // light disabled\n\n      if (lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0) {\n        intensity = 0;\n      }\n\n      var distance = 0;\n\n      if (lightAttribute.FarAttenuationEnd !== undefined) {\n        if (lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0) {\n          distance = 0;\n        } else {\n          distance = lightAttribute.FarAttenuationEnd.value / 1000;\n        }\n      } // TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\n\n      var decay = 1;\n\n      switch (type) {\n        case 0:\n          // Point\n          model = new THREE.PointLight(color, intensity, distance, decay);\n          break;\n\n        case 1:\n          // Directional\n          model = new THREE.DirectionalLight(color, intensity);\n          break;\n\n        case 2:\n          // Spot\n          var angle = Math.PI / 3;\n\n          if (lightAttribute.InnerAngle !== undefined) {\n            angle = THREE.Math.degToRad(lightAttribute.InnerAngle.value);\n          }\n\n          var penumbra = 0;\n\n          if (lightAttribute.OuterAngle !== undefined) {\n            // TODO: this is not correct - FBX calculates outer and inner angle in degrees\n            // with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n            // while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n            penumbra = THREE.Math.degToRad(lightAttribute.OuterAngle.value);\n            penumbra = Math.max(penumbra, 1);\n          }\n\n          model = new THREE.SpotLight(color, intensity, distance, angle, penumbra, decay);\n          break;\n\n        default:\n          console.warn('THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a THREE.PointLight.');\n          model = new THREE.PointLight(color, intensity);\n          break;\n      }\n\n      if (lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1) {\n        model.castShadow = true;\n      }\n    }\n\n    return model;\n  }\n\n  function createMesh(FBXTree, relationships, geometryMap, materialMap) {\n    var model;\n    var geometry = null;\n    var material = null;\n    var materials = []; // get geometry and materials(s) from connections\n\n    relationships.children.forEach(function (child) {\n      if (geometryMap.has(child.ID)) {\n        geometry = geometryMap.get(child.ID);\n      }\n\n      if (materialMap.has(child.ID)) {\n        materials.push(materialMap.get(child.ID));\n      }\n    });\n\n    if (materials.length > 1) {\n      material = materials;\n    } else if (materials.length > 0) {\n      material = materials[0];\n    } else {\n      material = new THREE.MeshPhongMaterial({\n        color: 0xcccccc\n      });\n      materials.push(material);\n    }\n\n    if ('color' in geometry.attributes) {\n      materials.forEach(function (material) {\n        material.vertexColors = THREE.VertexColors;\n      });\n    }\n\n    if (geometry.FBX_Deformer) {\n      materials.forEach(function (material) {\n        material.skinning = true;\n      });\n      model = new THREE.SkinnedMesh(geometry, material);\n    } else {\n      model = new THREE.Mesh(geometry, material);\n    }\n\n    return model;\n  }\n\n  function createCurve(relationships, geometryMap) {\n    var geometry = relationships.children.reduce(function (geo, child) {\n      if (geometryMap.has(child.ID)) geo = geometryMap.get(child.ID);\n      return geo;\n    }, null); // FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\n    var material = new THREE.LineBasicMaterial({\n      color: 0x3300ff,\n      linewidth: 1\n    });\n    return new THREE.Line(geometry, material);\n  } // Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\n\n\n  function createAmbientLight(FBXTree, sceneGraph) {\n    if ('GlobalSettings' in FBXTree && 'AmbientColor' in FBXTree.GlobalSettings) {\n      var ambientColor = FBXTree.GlobalSettings.AmbientColor.value;\n      var r = ambientColor[0];\n      var g = ambientColor[1];\n      var b = ambientColor[2];\n\n      if (r !== 0 || g !== 0 || b !== 0) {\n        var color = new THREE.Color(r, g, b);\n        sceneGraph.add(new THREE.AmbientLight(color, 1));\n      }\n    }\n  }\n\n  function setLookAtProperties(FBXTree, model, modelNode, connections, sceneGraph) {\n    if ('LookAtProperty' in modelNode) {\n      var children = connections.get(model.ID).children;\n      children.forEach(function (child) {\n        if (child.relationship === 'LookAtProperty') {\n          var lookAtTarget = FBXTree.Objects.Model[child.ID];\n\n          if ('Lcl_Translation' in lookAtTarget) {\n            var pos = lookAtTarget.Lcl_Translation.value; // DirectionalLight, SpotLight\n\n            if (model.target !== undefined) {\n              model.target.position.fromArray(pos);\n              sceneGraph.add(model.target);\n            } else {\n              // Cameras and other Object3Ds\n              model.lookAt(new THREE.Vector3().fromArray(pos));\n            }\n          }\n        }\n      });\n    }\n  } // parse the model node for transform details and apply them to the model\n\n\n  function setModelTransforms(FBXTree, model, modelNode) {\n    // http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\n    if ('RotationOrder' in modelNode) {\n      var enums = ['XYZ', // default\n      'XZY', 'YZX', 'ZXY', 'YXZ', 'ZYX', 'SphericXYZ'];\n      var value = parseInt(modelNode.RotationOrder.value, 10);\n\n      if (value > 0 && value < 6) {\n        // model.rotation.order = enums[ value ];\n        // Note: Euler order other than XYZ is currently not supported, so just display a warning for now\n        console.warn('THREE.FBXLoader: unsupported Euler Order: %s. Currently only XYZ order is supported. Animations and rotations may be incorrect.', enums[value]);\n      } else if (value === 6) {\n        console.warn('THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.');\n      }\n    }\n\n    if ('Lcl_Translation' in modelNode) {\n      model.position.fromArray(modelNode.Lcl_Translation.value);\n    }\n\n    if ('Lcl_Rotation' in modelNode) {\n      var rotation = modelNode.Lcl_Rotation.value.map(THREE.Math.degToRad);\n      rotation.push('ZYX');\n      model.rotation.fromArray(rotation);\n    }\n\n    if ('Lcl_Scaling' in modelNode) {\n      model.scale.fromArray(modelNode.Lcl_Scaling.value);\n    }\n\n    if ('PreRotation' in modelNode) {\n      var array = modelNode.PreRotation.value.map(THREE.Math.degToRad);\n      array[3] = 'ZYX';\n      var preRotations = new THREE.Euler().fromArray(array);\n      preRotations = new THREE.Quaternion().setFromEuler(preRotations);\n      var currentRotation = new THREE.Quaternion().setFromEuler(model.rotation);\n      preRotations.multiply(currentRotation);\n      model.rotation.setFromQuaternion(preRotations, 'ZYX');\n    }\n  }\n\n  function bindSkeleton(FBXTree, skeletons, geometryMap, modelMap, connections) {\n    var bindMatrices = parsePoseNodes(FBXTree);\n\n    for (var ID in skeletons) {\n      var skeleton = skeletons[ID];\n      var parents = connections.get(parseInt(skeleton.ID)).parents;\n      parents.forEach(function (parent) {\n        if (geometryMap.has(parent.ID)) {\n          var geoID = parent.ID;\n          var geoRelationships = connections.get(geoID);\n          geoRelationships.parents.forEach(function (geoConnParent) {\n            if (modelMap.has(geoConnParent.ID)) {\n              var model = modelMap.get(geoConnParent.ID);\n              model.bind(new THREE.Skeleton(skeleton.bones), bindMatrices[geoConnParent.ID]);\n            }\n          });\n        }\n      });\n    }\n  }\n\n  function parsePoseNodes(FBXTree) {\n    var bindMatrices = {};\n\n    if ('Pose' in FBXTree.Objects) {\n      var BindPoseNode = FBXTree.Objects.Pose;\n\n      for (var nodeID in BindPoseNode) {\n        if (BindPoseNode[nodeID].attrType === 'BindPose') {\n          var poseNodes = BindPoseNode[nodeID].PoseNode;\n\n          if (Array.isArray(poseNodes)) {\n            poseNodes.forEach(function (poseNode) {\n              bindMatrices[poseNode.Node] = new THREE.Matrix4().fromArray(poseNode.Matrix.a);\n            });\n          } else {\n            bindMatrices[poseNodes.Node] = new THREE.Matrix4().fromArray(poseNodes.Matrix.a);\n          }\n        }\n      }\n    }\n\n    return bindMatrices;\n  }\n\n  function parseAnimations(FBXTree, connections) {\n    // since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n    // if this is undefined we can safely assume there are no animations\n    if (FBXTree.Objects.AnimationCurve === undefined) return undefined;\n    var curveNodesMap = parseAnimationCurveNodes(FBXTree);\n    parseAnimationCurves(FBXTree, connections, curveNodesMap);\n    var layersMap = parseAnimationLayers(FBXTree, connections, curveNodesMap);\n    var rawClips = parseAnimStacks(FBXTree, connections, layersMap);\n    return rawClips;\n  } // parse nodes in FBXTree.Objects.AnimationCurveNode\n  // each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n  // and is referenced by an AnimationLayer\n\n\n  function parseAnimationCurveNodes(FBXTree) {\n    var rawCurveNodes = FBXTree.Objects.AnimationCurveNode;\n    var curveNodesMap = new Map();\n\n    for (var nodeID in rawCurveNodes) {\n      var rawCurveNode = rawCurveNodes[nodeID];\n\n      if (rawCurveNode.attrName.match(/S|R|T/) !== null) {\n        var curveNode = {\n          id: rawCurveNode.id,\n          attr: rawCurveNode.attrName,\n          curves: {}\n        };\n        curveNodesMap.set(curveNode.id, curveNode);\n      }\n    }\n\n    return curveNodesMap;\n  } // parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n  // previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n  // axis ( e.g. times and values of x rotation)\n\n\n  function parseAnimationCurves(FBXTree, connections, curveNodesMap) {\n    var rawCurves = FBXTree.Objects.AnimationCurve;\n\n    for (var nodeID in rawCurves) {\n      var animationCurve = {\n        id: rawCurves[nodeID].id,\n        times: rawCurves[nodeID].KeyTime.a.map(convertFBXTimeToSeconds),\n        values: rawCurves[nodeID].KeyValueFloat.a\n      };\n      var relationships = connections.get(animationCurve.id);\n\n      if (relationships !== undefined) {\n        var animationCurveID = relationships.parents[0].ID;\n        var animationCurveRelationship = relationships.parents[0].relationship;\n        var axis = '';\n\n        if (animationCurveRelationship.match(/X/)) {\n          axis = 'x';\n        } else if (animationCurveRelationship.match(/Y/)) {\n          axis = 'y';\n        } else if (animationCurveRelationship.match(/Z/)) {\n          axis = 'z';\n        } else {\n          continue;\n        }\n\n        curveNodesMap.get(animationCurveID).curves[axis] = animationCurve;\n      }\n    }\n  } // parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n  // to various AnimationCurveNodes and is referenced by an AnimationStack node\n  // note: theoretically a stack can multiple layers, however in practice there always seems to be one per stack\n\n\n  function parseAnimationLayers(FBXTree, connections, curveNodesMap) {\n    var rawLayers = FBXTree.Objects.AnimationLayer;\n    var layersMap = new Map();\n\n    for (var nodeID in rawLayers) {\n      var layerCurveNodes = [];\n      var connection = connections.get(parseInt(nodeID));\n\n      if (connection !== undefined) {\n        // all the animationCurveNodes used in the layer\n        var children = connection.children;\n        children.forEach(function (child, i) {\n          if (curveNodesMap.has(child.ID)) {\n            var curveNode = curveNodesMap.get(child.ID); // check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\n            if (curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined) {\n              if (layerCurveNodes[i] === undefined) {\n                var modelID;\n                connections.get(child.ID).parents.forEach(function (parent) {\n                  if (parent.relationship !== undefined) modelID = parent.ID;\n                });\n                var rawModel = FBXTree.Objects.Model[modelID.toString()];\n                var node = {\n                  modelName: THREE.PropertyBinding.sanitizeNodeName(rawModel.attrName),\n                  initialPosition: [0, 0, 0],\n                  initialRotation: [0, 0, 0],\n                  initialScale: [1, 1, 1]\n                };\n                if ('Lcl_Translation' in rawModel) node.initialPosition = rawModel.Lcl_Translation.value;\n                if ('Lcl_Rotation' in rawModel) node.initialRotation = rawModel.Lcl_Rotation.value;\n                if ('Lcl_Scaling' in rawModel) node.initialScale = rawModel.Lcl_Scaling.value; // if the animated model is pre rotated, we'll have to apply the pre rotations to every\n                // animation value as well\n\n                if ('PreRotation' in rawModel) node.preRotations = rawModel.PreRotation.value;\n                layerCurveNodes[i] = node;\n              }\n\n              layerCurveNodes[i][curveNode.attr] = curveNode;\n            }\n          }\n        });\n        layersMap.set(parseInt(nodeID), layerCurveNodes);\n      }\n    }\n\n    return layersMap;\n  } // parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n  // hierarchy. Each Stack node will be used to create a THREE.AnimationClip\n\n\n  function parseAnimStacks(FBXTree, connections, layersMap) {\n    var rawStacks = FBXTree.Objects.AnimationStack; // connect the stacks (clips) up to the layers\n\n    var rawClips = {};\n\n    for (var nodeID in rawStacks) {\n      var children = connections.get(parseInt(nodeID)).children;\n\n      if (children.length > 1) {\n        // it seems like stacks will always be associated with a single layer. But just in case there are files\n        // where there are multiple layers per stack, we'll display a warning\n        console.warn('THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.');\n      }\n\n      var layer = layersMap.get(children[0].ID);\n      rawClips[nodeID] = {\n        name: rawStacks[nodeID].attrName,\n        layer: layer\n      };\n    }\n\n    return rawClips;\n  } // take raw animation data from parseAnimations and connect it up to the loaded models\n\n\n  function addAnimations(FBXTree, connections, sceneGraph) {\n    sceneGraph.animations = [];\n    var rawClips = parseAnimations(FBXTree, connections);\n    if (rawClips === undefined) return;\n\n    for (var key in rawClips) {\n      var rawClip = rawClips[key];\n      var clip = addClip(rawClip);\n      sceneGraph.animations.push(clip);\n    }\n  }\n\n  function addClip(rawClip) {\n    var tracks = [];\n    rawClip.layer.forEach(function (rawTracks) {\n      tracks = tracks.concat(generateTracks(rawTracks));\n    });\n    return new THREE.AnimationClip(rawClip.name, -1, tracks);\n  }\n\n  function generateTracks(rawTracks) {\n    var tracks = [];\n\n    if (rawTracks.T !== undefined && Object.keys(rawTracks.T.curves).length > 0) {\n      var positionTrack = generateVectorTrack(rawTracks.modelName, rawTracks.T.curves, rawTracks.initialPosition, 'position');\n      if (positionTrack !== undefined) tracks.push(positionTrack);\n    }\n\n    if (rawTracks.R !== undefined && Object.keys(rawTracks.R.curves).length > 0) {\n      var rotationTrack = generateRotationTrack(rawTracks.modelName, rawTracks.R.curves, rawTracks.initialRotation, rawTracks.preRotations);\n      if (rotationTrack !== undefined) tracks.push(rotationTrack);\n    }\n\n    if (rawTracks.S !== undefined && Object.keys(rawTracks.S.curves).length > 0) {\n      var scaleTrack = generateVectorTrack(rawTracks.modelName, rawTracks.S.curves, rawTracks.initialScale, 'scale');\n      if (scaleTrack !== undefined) tracks.push(scaleTrack);\n    }\n\n    return tracks;\n  }\n\n  function generateVectorTrack(modelName, curves, initialValue, type) {\n    var times = getTimesForAllAxes(curves);\n    var values = getKeyframeTrackValues(times, curves, initialValue);\n    return new THREE.VectorKeyframeTrack(modelName + '.' + type, times, values);\n  }\n\n  function generateRotationTrack(modelName, curves, initialValue, preRotations) {\n    if (curves.x !== undefined) curves.x.values = curves.x.values.map(THREE.Math.degToRad);\n    if (curves.y !== undefined) curves.y.values = curves.y.values.map(THREE.Math.degToRad);\n    if (curves.z !== undefined) curves.z.values = curves.z.values.map(THREE.Math.degToRad);\n    var times = getTimesForAllAxes(curves);\n    var values = getKeyframeTrackValues(times, curves, initialValue);\n\n    if (preRotations !== undefined) {\n      preRotations = preRotations.map(THREE.Math.degToRad);\n      preRotations.push('ZYX');\n      preRotations = new THREE.Euler().fromArray(preRotations);\n      preRotations = new THREE.Quaternion().setFromEuler(preRotations);\n    }\n\n    var quaternion = new THREE.Quaternion();\n    var euler = new THREE.Euler();\n    var quaternionValues = [];\n\n    for (var i = 0; i < values.length; i += 3) {\n      euler.set(values[i], values[i + 1], values[i + 2], 'ZYX');\n      quaternion.setFromEuler(euler);\n      if (preRotations !== undefined) quaternion.premultiply(preRotations);\n      quaternion.toArray(quaternionValues, i / 3 * 4);\n    }\n\n    return new THREE.QuaternionKeyframeTrack(modelName + '.quaternion', times, quaternionValues);\n  }\n\n  function getKeyframeTrackValues(times, curves, initialValue) {\n    var prevValue = initialValue;\n    var values = [];\n    var xIndex = -1;\n    var yIndex = -1;\n    var zIndex = -1;\n    times.forEach(function (time) {\n      if (curves.x) xIndex = curves.x.times.indexOf(time);\n      if (curves.y) yIndex = curves.y.times.indexOf(time);\n      if (curves.z) zIndex = curves.z.times.indexOf(time); // if there is an x value defined for this frame, use that\n\n      if (xIndex !== -1) {\n        var xValue = curves.x.values[xIndex];\n        values.push(xValue);\n        prevValue[0] = xValue;\n      } else {\n        // otherwise use the x value from the previous frame\n        values.push(prevValue[0]);\n      }\n\n      if (yIndex !== -1) {\n        var yValue = curves.y.values[yIndex];\n        values.push(yValue);\n        prevValue[1] = yValue;\n      } else {\n        values.push(prevValue[1]);\n      }\n\n      if (zIndex !== -1) {\n        var zValue = curves.z.values[zIndex];\n        values.push(zValue);\n        prevValue[2] = zValue;\n      } else {\n        values.push(prevValue[2]);\n      }\n    });\n    return values;\n  } // For all animated objects, times are defined separately for each axis\n  // Here we'll combine the times into one sorted array without duplicates\n\n\n  function getTimesForAllAxes(curves) {\n    var times = []; // first join together the times for each axis, if defined\n\n    if (curves.x !== undefined) times = times.concat(curves.x.times);\n    if (curves.y !== undefined) times = times.concat(curves.y.times);\n    if (curves.z !== undefined) times = times.concat(curves.z.times); // then sort them and remove duplicates\n\n    times = times.sort(function (a, b) {\n      return a - b;\n    }).filter(function (elem, index, array) {\n      return array.indexOf(elem) == index;\n    });\n    return times;\n  } // parse an FBX file in ASCII format\n\n\n  function TextParser() {}\n\n  Object.assign(TextParser.prototype, {\n    getPrevNode: function () {\n      return this.nodeStack[this.currentIndent - 2];\n    },\n    getCurrentNode: function () {\n      return this.nodeStack[this.currentIndent - 1];\n    },\n    getCurrentProp: function () {\n      return this.currentProp;\n    },\n    pushStack: function (node) {\n      this.nodeStack.push(node);\n      this.currentIndent += 1;\n    },\n    popStack: function () {\n      this.nodeStack.pop();\n      this.currentIndent -= 1;\n    },\n    setCurrentProp: function (val, name) {\n      this.currentProp = val;\n      this.currentPropName = name;\n    },\n    parse: function (text) {\n      this.currentIndent = 0;\n      this.allNodes = new FBXTree();\n      this.nodeStack = [];\n      this.currentProp = [];\n      this.currentPropName = '';\n      var self = this;\n      var split = text.split('\\n');\n      split.forEach(function (line, i) {\n        var matchComment = line.match(/^[\\s\\t]*;/);\n        var matchEmpty = line.match(/^[\\s\\t]*$/);\n        if (matchComment || matchEmpty) return;\n        var matchBeginning = line.match('^\\\\t{' + self.currentIndent + '}(\\\\w+):(.*){', '');\n        var matchProperty = line.match('^\\\\t{' + self.currentIndent + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)');\n        var matchEnd = line.match('^\\\\t{' + (self.currentIndent - 1) + '}}');\n\n        if (matchBeginning) {\n          self.parseNodeBegin(line, matchBeginning);\n        } else if (matchProperty) {\n          self.parseNodeProperty(line, matchProperty, split[++i]);\n        } else if (matchEnd) {\n          self.popStack();\n        } else if (line.match(/^[^\\s\\t}]/)) {\n          // large arrays are split over multiple lines terminated with a ',' character\n          // if this is encountered the line needs to be joined to the previous line\n          self.parseNodePropertyContinued(line);\n        }\n      });\n      return this.allNodes;\n    },\n    parseNodeBegin: function (line, property) {\n      var nodeName = property[1].trim().replace(/^\"/, '').replace(/\"$/, '');\n      var nodeAttrs = property[2].split(',').map(function (attr) {\n        return attr.trim().replace(/^\"/, '').replace(/\"$/, '');\n      });\n      var node = {\n        name: nodeName\n      };\n      var attrs = this.parseNodeAttr(nodeAttrs);\n      var currentNode = this.getCurrentNode(); // a top node\n\n      if (this.currentIndent === 0) {\n        this.allNodes.add(nodeName, node);\n      } else {\n        // a subnode\n        // if the subnode already exists, append it\n        if (nodeName in currentNode) {\n          // special case Pose needs PoseNodes as an array\n          if (nodeName === 'PoseNode') {\n            currentNode.PoseNode.push(node);\n          } else if (currentNode[nodeName].id !== undefined) {\n            currentNode[nodeName] = {};\n            currentNode[nodeName][currentNode[nodeName].id] = currentNode[nodeName];\n          }\n\n          if (attrs.id !== '') currentNode[nodeName][attrs.id] = node;\n        } else if (typeof attrs.id === 'number') {\n          currentNode[nodeName] = {};\n          currentNode[nodeName][attrs.id] = node;\n        } else if (nodeName !== 'Properties70') {\n          if (nodeName === 'PoseNode') currentNode[nodeName] = [node];else currentNode[nodeName] = node;\n        }\n      }\n\n      if (typeof attrs.id === 'number') node.id = attrs.id;\n      if (attrs.name !== '') node.attrName = attrs.name;\n      if (attrs.type !== '') node.attrType = attrs.type;\n      this.pushStack(node);\n    },\n    parseNodeAttr: function (attrs) {\n      var id = attrs[0];\n\n      if (attrs[0] !== '') {\n        id = parseInt(attrs[0]);\n\n        if (isNaN(id)) {\n          id = attrs[0];\n        }\n      }\n\n      var name = '',\n          type = '';\n\n      if (attrs.length > 1) {\n        name = attrs[1].replace(/^(\\w+)::/, '');\n        type = attrs[2];\n      }\n\n      return {\n        id: id,\n        name: name,\n        type: type\n      };\n    },\n    parseNodeProperty: function (line, property, contentLine) {\n      var propName = property[1].replace(/^\"/, '').replace(/\"$/, '').trim();\n      var propValue = property[2].replace(/^\"/, '').replace(/\"$/, '').trim(); // for special case: base64 image data follows \"Content: ,\" line\n      //\tContent: ,\n      //\t \"/9j/4RDaRXhpZgAATU0A...\"\n\n      if (propName === 'Content' && propValue === ',') {\n        propValue = contentLine.replace(/\"/g, '').replace(/,$/, '').trim();\n      }\n\n      var currentNode = this.getCurrentNode();\n      var parentName = currentNode.name;\n\n      if (parentName === 'Properties70') {\n        this.parseNodeSpecialProperty(line, propName, propValue);\n        return;\n      } // Connections\n\n\n      if (propName === 'C') {\n        var connProps = propValue.split(',').slice(1);\n        var from = parseInt(connProps[0]);\n        var to = parseInt(connProps[1]);\n        var rest = propValue.split(',').slice(3);\n        rest = rest.map(function (elem) {\n          return elem.trim().replace(/^\"/, '');\n        });\n        propName = 'connections';\n        propValue = [from, to];\n        append(propValue, rest);\n\n        if (currentNode[propName] === undefined) {\n          currentNode[propName] = [];\n        }\n      } // Node\n\n\n      if (propName === 'Node') currentNode.id = propValue; // connections\n\n      if (propName in currentNode && Array.isArray(currentNode[propName])) {\n        currentNode[propName].push(propValue);\n      } else {\n        if (propName !== 'a') currentNode[propName] = propValue;else currentNode.a = propValue;\n      }\n\n      this.setCurrentProp(currentNode, propName); // convert string to array, unless it ends in ',' in which case more will be added to it\n\n      if (propName === 'a' && propValue.slice(-1) !== ',') {\n        currentNode.a = parseNumberArray(propValue);\n      }\n    },\n    parseNodePropertyContinued: function (line) {\n      var currentNode = this.getCurrentNode();\n      currentNode.a += line; // if the line doesn't end in ',' we have reached the end of the property value\n      // so convert the string to an array\n\n      if (line.slice(-1) !== ',') {\n        currentNode.a = parseNumberArray(currentNode.a);\n      }\n    },\n    // parse \"Property70\"\n    parseNodeSpecialProperty: function (line, propName, propValue) {\n      // split this\n      // P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n      // into array like below\n      // [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n      var props = propValue.split('\",').map(function (prop) {\n        return prop.trim().replace(/^\\\"/, '').replace(/\\s/, '_');\n      });\n      var innerPropName = props[0];\n      var innerPropType1 = props[1];\n      var innerPropType2 = props[2];\n      var innerPropFlag = props[3];\n      var innerPropValue = props[4]; // cast values where needed, otherwise leave as strings\n\n      switch (innerPropType1) {\n        case 'int':\n        case 'enum':\n        case 'bool':\n        case 'ULongLong':\n        case 'double':\n        case 'Number':\n        case 'FieldOfView':\n          innerPropValue = parseFloat(innerPropValue);\n          break;\n\n        case 'Color':\n        case 'ColorRGB':\n        case 'Vector3D':\n        case 'Lcl_Translation':\n        case 'Lcl_Rotation':\n        case 'Lcl_Scaling':\n          innerPropValue = parseNumberArray(innerPropValue);\n          break;\n      } // CAUTION: these props must append to parent's parent\n\n\n      this.getPrevNode()[innerPropName] = {\n        'type': innerPropType1,\n        'type2': innerPropType2,\n        'flag': innerPropFlag,\n        'value': innerPropValue\n      };\n      this.setCurrentProp(this.getPrevNode(), innerPropName);\n    }\n  }); // Parse an FBX file in Binary format\n\n  function BinaryParser() {}\n\n  Object.assign(BinaryParser.prototype, {\n    parse: function (buffer) {\n      var reader = new BinaryReader(buffer);\n      reader.skip(23); // skip magic 23 bytes\n\n      var version = reader.getUint32();\n      console.log('THREE.FBXLoader: FBX binary version: ' + version);\n      var allNodes = new FBXTree();\n\n      while (!this.endOfContent(reader)) {\n        var node = this.parseNode(reader, version);\n        if (node !== null) allNodes.add(node.name, node);\n      }\n\n      return allNodes;\n    },\n    // Check if reader has reached the end of content.\n    endOfContent: function (reader) {\n      // footer size: 160bytes + 16-byte alignment padding\n      // - 16bytes: magic\n      // - padding til 16-byte alignment (at least 1byte?)\n      //\t(seems like some exporters embed fixed 15 or 16bytes?)\n      // - 4bytes: magic\n      // - 4bytes: version\n      // - 120bytes: zero\n      // - 16bytes: magic\n      if (reader.size() % 16 === 0) {\n        return (reader.getOffset() + 160 + 16 & ~0xf) >= reader.size();\n      } else {\n        return reader.getOffset() + 160 + 16 >= reader.size();\n      }\n    },\n    // recursively parse nodes until the end of the file is reached\n    parseNode: function (reader, version) {\n      var node = {}; // The first three data sizes depends on version.\n\n      var endOffset = version >= 7500 ? reader.getUint64() : reader.getUint32();\n      var numProperties = version >= 7500 ? reader.getUint64() : reader.getUint32(); // note: do not remove this even if you get a linter warning as it moves the buffer forward\n\n      var propertyListLen = version >= 7500 ? reader.getUint64() : reader.getUint32();\n      var nameLen = reader.getUint8();\n      var name = reader.getString(nameLen); // Regards this node as NULL-record if endOffset is zero\n\n      if (endOffset === 0) return null;\n      var propertyList = [];\n\n      for (var i = 0; i < numProperties; i++) {\n        propertyList.push(this.parseProperty(reader));\n      } // Regards the first three elements in propertyList as id, attrName, and attrType\n\n\n      var id = propertyList.length > 0 ? propertyList[0] : '';\n      var attrName = propertyList.length > 1 ? propertyList[1] : '';\n      var attrType = propertyList.length > 2 ? propertyList[2] : ''; // check if this node represents just a single property\n      // like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\n      node.singleProperty = numProperties === 1 && reader.getOffset() === endOffset ? true : false;\n\n      while (endOffset > reader.getOffset()) {\n        var subNode = this.parseNode(reader, version);\n        if (subNode !== null) this.parseSubNode(name, node, subNode);\n      }\n\n      node.propertyList = propertyList; // raw property list used by parent\n\n      if (typeof id === 'number') node.id = id;\n      if (attrName !== '') node.attrName = attrName;\n      if (attrType !== '') node.attrType = attrType;\n      if (name !== '') node.name = name;\n      return node;\n    },\n    parseSubNode: function (name, node, subNode) {\n      // special case: child node is single property\n      if (subNode.singleProperty === true) {\n        var value = subNode.propertyList[0];\n\n        if (Array.isArray(value)) {\n          node[subNode.name] = subNode;\n          subNode.a = value;\n        } else {\n          node[subNode.name] = value;\n        }\n      } else if (name === 'Connections' && subNode.name === 'C') {\n        var array = [];\n        subNode.propertyList.forEach(function (property, i) {\n          // first Connection is FBX type (OO, OP, etc.). We'll discard these\n          if (i !== 0) array.push(property);\n        });\n\n        if (node.connections === undefined) {\n          node.connections = [];\n        }\n\n        node.connections.push(array);\n      } else if (subNode.name === 'Properties70') {\n        var keys = Object.keys(subNode);\n        keys.forEach(function (key) {\n          node[key] = subNode[key];\n        });\n      } else if (name === 'Properties70' && subNode.name === 'P') {\n        var innerPropName = subNode.propertyList[0];\n        var innerPropType1 = subNode.propertyList[1];\n        var innerPropType2 = subNode.propertyList[2];\n        var innerPropFlag = subNode.propertyList[3];\n        var innerPropValue;\n        if (innerPropName.indexOf('Lcl ') === 0) innerPropName = innerPropName.replace('Lcl ', 'Lcl_');\n        if (innerPropType1.indexOf('Lcl ') === 0) innerPropType1 = innerPropType1.replace('Lcl ', 'Lcl_');\n\n        if (innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf('Lcl_') === 0) {\n          innerPropValue = [subNode.propertyList[4], subNode.propertyList[5], subNode.propertyList[6]];\n        } else {\n          innerPropValue = subNode.propertyList[4];\n        } // this will be copied to parent, see above\n\n\n        node[innerPropName] = {\n          'type': innerPropType1,\n          'type2': innerPropType2,\n          'flag': innerPropFlag,\n          'value': innerPropValue\n        };\n      } else if (node[subNode.name] === undefined) {\n        if (typeof subNode.id === 'number') {\n          node[subNode.name] = {};\n          node[subNode.name][subNode.id] = subNode;\n        } else {\n          node[subNode.name] = subNode;\n        }\n      } else {\n        if (subNode.name === 'PoseNode') {\n          if (!Array.isArray(node[subNode.name])) {\n            node[subNode.name] = [node[subNode.name]];\n          }\n\n          node[subNode.name].push(subNode);\n        } else if (node[subNode.name][subNode.id] === undefined) {\n          node[subNode.name][subNode.id] = subNode;\n        }\n      }\n    },\n    parseProperty: function (reader) {\n      var type = reader.getString(1);\n\n      switch (type) {\n        case 'C':\n          return reader.getBoolean();\n\n        case 'D':\n          return reader.getFloat64();\n\n        case 'F':\n          return reader.getFloat32();\n\n        case 'I':\n          return reader.getInt32();\n\n        case 'L':\n          return reader.getInt64();\n\n        case 'R':\n          var length = reader.getUint32();\n          return reader.getArrayBuffer(length);\n\n        case 'S':\n          var length = reader.getUint32();\n          return reader.getString(length);\n\n        case 'Y':\n          return reader.getInt16();\n\n        case 'b':\n        case 'c':\n        case 'd':\n        case 'f':\n        case 'i':\n        case 'l':\n          var arrayLength = reader.getUint32();\n          var encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\n          var compressedLength = reader.getUint32();\n\n          if (encoding === 0) {\n            switch (type) {\n              case 'b':\n              case 'c':\n                return reader.getBooleanArray(arrayLength);\n\n              case 'd':\n                return reader.getFloat64Array(arrayLength);\n\n              case 'f':\n                return reader.getFloat32Array(arrayLength);\n\n              case 'i':\n                return reader.getInt32Array(arrayLength);\n\n              case 'l':\n                return reader.getInt64Array(arrayLength);\n            }\n          }\n\n          if (window.Zlib === undefined) {\n            console.error('THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js');\n          }\n\n          var inflate = new Zlib.Inflate(new Uint8Array(reader.getArrayBuffer(compressedLength))); // eslint-disable-line no-undef\n\n          var reader2 = new BinaryReader(inflate.decompress().buffer);\n\n          switch (type) {\n            case 'b':\n            case 'c':\n              return reader2.getBooleanArray(arrayLength);\n\n            case 'd':\n              return reader2.getFloat64Array(arrayLength);\n\n            case 'f':\n              return reader2.getFloat32Array(arrayLength);\n\n            case 'i':\n              return reader2.getInt32Array(arrayLength);\n\n            case 'l':\n              return reader2.getInt64Array(arrayLength);\n          }\n\n        default:\n          throw new Error('THREE.FBXLoader: Unknown property type ' + type);\n      }\n    }\n  });\n\n  function BinaryReader(buffer, littleEndian) {\n    this.dv = new DataView(buffer);\n    this.offset = 0;\n    this.littleEndian = littleEndian !== undefined ? littleEndian : true;\n  }\n\n  Object.assign(BinaryReader.prototype, {\n    getOffset: function () {\n      return this.offset;\n    },\n    size: function () {\n      return this.dv.buffer.byteLength;\n    },\n    skip: function (length) {\n      this.offset += length;\n    },\n    // seems like true/false representation depends on exporter.\n    // true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n    // then sees LSB.\n    getBoolean: function () {\n      return (this.getUint8() & 1) === 1;\n    },\n    getBooleanArray: function (size) {\n      var a = [];\n\n      for (var i = 0; i < size; i++) {\n        a.push(this.getBoolean());\n      }\n\n      return a;\n    },\n    getUint8: function () {\n      var value = this.dv.getUint8(this.offset);\n      this.offset += 1;\n      return value;\n    },\n    getInt16: function () {\n      var value = this.dv.getInt16(this.offset, this.littleEndian);\n      this.offset += 2;\n      return value;\n    },\n    getInt32: function () {\n      var value = this.dv.getInt32(this.offset, this.littleEndian);\n      this.offset += 4;\n      return value;\n    },\n    getInt32Array: function (size) {\n      var a = [];\n\n      for (var i = 0; i < size; i++) {\n        a.push(this.getInt32());\n      }\n\n      return a;\n    },\n    getUint32: function () {\n      var value = this.dv.getUint32(this.offset, this.littleEndian);\n      this.offset += 4;\n      return value;\n    },\n    // JavaScript doesn't support 64-bit integer so calculate this here\n    // 1 << 32 will return 1 so using multiply operation instead here.\n    // There's a possibility that this method returns wrong value if the value\n    // is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n    // TODO: safely handle 64-bit integer\n    getInt64: function () {\n      var low, high;\n\n      if (this.littleEndian) {\n        low = this.getUint32();\n        high = this.getUint32();\n      } else {\n        high = this.getUint32();\n        low = this.getUint32();\n      } // calculate negative value\n\n\n      if (high & 0x80000000) {\n        high = ~high & 0xFFFFFFFF;\n        low = ~low & 0xFFFFFFFF;\n        if (low === 0xFFFFFFFF) high = high + 1 & 0xFFFFFFFF;\n        low = low + 1 & 0xFFFFFFFF;\n        return -(high * 0x100000000 + low);\n      }\n\n      return high * 0x100000000 + low;\n    },\n    getInt64Array: function (size) {\n      var a = [];\n\n      for (var i = 0; i < size; i++) {\n        a.push(this.getInt64());\n      }\n\n      return a;\n    },\n    // Note: see getInt64() comment\n    getUint64: function () {\n      var low, high;\n\n      if (this.littleEndian) {\n        low = this.getUint32();\n        high = this.getUint32();\n      } else {\n        high = this.getUint32();\n        low = this.getUint32();\n      }\n\n      return high * 0x100000000 + low;\n    },\n    getFloat32: function () {\n      var value = this.dv.getFloat32(this.offset, this.littleEndian);\n      this.offset += 4;\n      return value;\n    },\n    getFloat32Array: function (size) {\n      var a = [];\n\n      for (var i = 0; i < size; i++) {\n        a.push(this.getFloat32());\n      }\n\n      return a;\n    },\n    getFloat64: function () {\n      var value = this.dv.getFloat64(this.offset, this.littleEndian);\n      this.offset += 8;\n      return value;\n    },\n    getFloat64Array: function (size) {\n      var a = [];\n\n      for (var i = 0; i < size; i++) {\n        a.push(this.getFloat64());\n      }\n\n      return a;\n    },\n    getArrayBuffer: function (size) {\n      var value = this.dv.buffer.slice(this.offset, this.offset + size);\n      this.offset += size;\n      return value;\n    },\n    getString: function (size) {\n      var a = new Uint8Array(size);\n\n      for (var i = 0; i < size; i++) {\n        a[i] = this.getUint8();\n      }\n\n      var nullByte = a.indexOf(0);\n      if (nullByte >= 0) a = a.slice(0, nullByte);\n      return THREE.LoaderUtils.decodeText(a);\n    }\n  }); // FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n  // and BinaryParser( FBX Binary format)\n\n  function FBXTree() {}\n\n  Object.assign(FBXTree.prototype, {\n    add: function (key, val) {\n      this[key] = val;\n    }\n  });\n\n  function isFbxFormatBinary(buffer) {\n    var CORRECT = 'Kaydara FBX Binary  \\0';\n    return buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString(buffer, 0, CORRECT.length);\n  }\n\n  function isFbxFormatASCII(text) {\n    var CORRECT = ['K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\'];\n    var cursor = 0;\n\n    function read(offset) {\n      var result = text[offset - 1];\n      text = text.slice(cursor + offset);\n      cursor++;\n      return result;\n    }\n\n    for (var i = 0; i < CORRECT.length; ++i) {\n      var num = read(1);\n\n      if (num === CORRECT[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function getFbxVersion(text) {\n    var versionRegExp = /FBXVersion: (\\d+)/;\n    var match = text.match(versionRegExp);\n\n    if (match) {\n      var version = parseInt(match[1]);\n      return version;\n    }\n\n    throw new Error('THREE.FBXLoader: Cannot find the version number for the file given.');\n  } // Converts FBX ticks into real time seconds.\n\n\n  function convertFBXTimeToSeconds(time) {\n    return time / 46186158000;\n  } // Parses comma separated list of numbers and returns them an array.\n  // Used internally by the TextParser\n\n\n  function parseNumberArray(value) {\n    var array = value.split(',').map(function (val) {\n      return parseFloat(val);\n    });\n    return array;\n  }\n\n  function convertArrayBufferToString(buffer, from, to) {\n    if (from === undefined) from = 0;\n    if (to === undefined) to = buffer.byteLength;\n    return THREE.LoaderUtils.decodeText(new Uint8Array(buffer, from, to));\n  }\n\n  function append(a, b) {\n    for (var i = 0, j = a.length, l = b.length; i < l; i++, j++) {\n      a[j] = b[i];\n    }\n  }\n\n  function slice(a, b, from, to) {\n    for (var i = from, j = 0; i < to; i++, j++) {\n      a[j] = b[i];\n    }\n\n    return a;\n  }\n})();\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/lib/FBXLoader.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/lib/GamepadButton.js":
/*!*********************************************************!*\
  !*** ./node_modules/aframe-extras/lib/GamepadButton.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = Object.assign(function GamepadButton() {}, {\n  FACE_1: 0,\n  FACE_2: 1,\n  FACE_3: 2,\n  FACE_4: 3,\n  L_SHOULDER_1: 4,\n  R_SHOULDER_1: 5,\n  L_SHOULDER_2: 6,\n  R_SHOULDER_2: 7,\n  SELECT: 8,\n  START: 9,\n  DPAD_UP: 12,\n  DPAD_DOWN: 13,\n  DPAD_LEFT: 14,\n  DPAD_RIGHT: 15,\n  VENDOR: 16\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/lib/GamepadButton.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/lib/GamepadButtonEvent.js":
/*!**************************************************************!*\
  !*** ./node_modules/aframe-extras/lib/GamepadButtonEvent.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function GamepadButtonEvent(type, index, details) {\n  this.type = type;\n  this.index = index;\n  this.pressed = details.pressed;\n  this.value = details.value;\n}\n\nmodule.exports = GamepadButtonEvent;\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/lib/GamepadButtonEvent.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/lib/PLYLoader.js":
/*!*****************************************************!*\
  !*** ./node_modules/aframe-extras/lib/PLYLoader.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * @author Wei Meng / http://about.me/menway\n *\n * Description: A THREE loader for PLY ASCII files (known as the Polygon File Format or the Stanford Triangle Format).\n *\n *\n * Limitations: ASCII decoding assumes file is UTF-8.\n *\n * Usage:\n *  var loader = new THREE.PLYLoader();\n *  loader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\n *\n *    scene.add( new THREE.Mesh( geometry ) );\n *\n *  } );\n *\n * If the PLY file uses non standard property names, they can be mapped while\n * loading. For example, the following maps the properties\n * “diffuse_(red|green|blue)” in the file to standard color names.\n *\n * loader.setPropertyNameMapping( {\n *  diffuse_red: 'red',\n *  diffuse_green: 'green',\n *  diffuse_blue: 'blue'\n * } );\n *\n */\nmodule.exports = THREE.PLYLoader = function (manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n  this.propertyNameMapping = {};\n};\n\nTHREE.PLYLoader.prototype = {\n  constructor: THREE.PLYLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new THREE.XHRLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, function (text) {\n      onLoad(scope.parse(text));\n    }, onProgress, onError);\n  },\n  setPropertyNameMapping: function (mapping) {\n    this.propertyNameMapping = mapping;\n  },\n  bin2str: function (buf) {\n    var array_buffer = new Uint8Array(buf);\n    var str = '';\n\n    for (var i = 0; i < buf.byteLength; i++) {\n      str += String.fromCharCode(array_buffer[i]); // implicitly assumes little-endian\n    }\n\n    return str;\n  },\n  isASCII: function (data) {\n    var header = this.parseHeader(this.bin2str(data));\n    return header.format === \"ascii\";\n  },\n  parse: function (data) {\n    if (data instanceof ArrayBuffer) {\n      return this.isASCII(data) ? this.parseASCII(this.bin2str(data)) : this.parseBinary(data);\n    } else {\n      return this.parseASCII(data);\n    }\n  },\n  parseHeader: function (data) {\n    var patternHeader = /ply([\\s\\S]*)end_header\\s/;\n    var headerText = \"\";\n    var headerLength = 0;\n    var result = patternHeader.exec(data);\n\n    if (result !== null) {\n      headerText = result[1];\n      headerLength = result[0].length;\n    }\n\n    var header = {\n      comments: [],\n      elements: [],\n      headerLength: headerLength\n    };\n    var lines = headerText.split('\\n');\n    var currentElement = undefined;\n    var lineType, lineValues;\n\n    function make_ply_element_property(propertValues, propertyNameMapping) {\n      var property = {\n        type: propertValues[0]\n      };\n\n      if (property.type === 'list') {\n        property.name = propertValues[3];\n        property.countType = propertValues[1];\n        property.itemType = propertValues[2];\n      } else {\n        property.name = propertValues[1];\n      }\n\n      if (property.name in propertyNameMapping) {\n        property.name = propertyNameMapping[property.name];\n      }\n\n      return property;\n    }\n\n    for (var i = 0; i < lines.length; i++) {\n      var line = lines[i];\n      line = line.trim();\n\n      if (line === \"\") {\n        continue;\n      }\n\n      lineValues = line.split(/\\s+/);\n      lineType = lineValues.shift();\n      line = lineValues.join(\" \");\n\n      switch (lineType) {\n        case \"format\":\n          header.format = lineValues[0];\n          header.version = lineValues[1];\n          break;\n\n        case \"comment\":\n          header.comments.push(line);\n          break;\n\n        case \"element\":\n          if (!(currentElement === undefined)) {\n            header.elements.push(currentElement);\n          }\n\n          currentElement = Object();\n          currentElement.name = lineValues[0];\n          currentElement.count = parseInt(lineValues[1]);\n          currentElement.properties = [];\n          break;\n\n        case \"property\":\n          currentElement.properties.push(make_ply_element_property(lineValues, this.propertyNameMapping));\n          break;\n\n        default:\n          console.log(\"unhandled\", lineType, lineValues);\n      }\n    }\n\n    if (!(currentElement === undefined)) {\n      header.elements.push(currentElement);\n    }\n\n    return header;\n  },\n  parseASCIINumber: function (n, type) {\n    switch (type) {\n      case 'char':\n      case 'uchar':\n      case 'short':\n      case 'ushort':\n      case 'int':\n      case 'uint':\n      case 'int8':\n      case 'uint8':\n      case 'int16':\n      case 'uint16':\n      case 'int32':\n      case 'uint32':\n        return parseInt(n);\n\n      case 'float':\n      case 'double':\n      case 'float32':\n      case 'float64':\n        return parseFloat(n);\n    }\n  },\n  parseASCIIElement: function (properties, line) {\n    var values = line.split(/\\s+/);\n    var element = Object();\n\n    for (var i = 0; i < properties.length; i++) {\n      if (properties[i].type === \"list\") {\n        var list = [];\n        var n = this.parseASCIINumber(values.shift(), properties[i].countType);\n\n        for (var j = 0; j < n; j++) {\n          list.push(this.parseASCIINumber(values.shift(), properties[i].itemType));\n        }\n\n        element[properties[i].name] = list;\n      } else {\n        element[properties[i].name] = this.parseASCIINumber(values.shift(), properties[i].type);\n      }\n    }\n\n    return element;\n  },\n  parseASCII: function (data) {\n    // PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\n    var geometry = new THREE.Geometry();\n    var result;\n    var header = this.parseHeader(data);\n    var patternBody = /end_header\\s([\\s\\S]*)$/;\n    var body = \"\";\n\n    if ((result = patternBody.exec(data)) !== null) {\n      body = result[1];\n    }\n\n    var lines = body.split('\\n');\n    var currentElement = 0;\n    var currentElementCount = 0;\n    geometry.useColor = false;\n\n    for (var i = 0; i < lines.length; i++) {\n      var line = lines[i];\n      line = line.trim();\n\n      if (line === \"\") {\n        continue;\n      }\n\n      if (currentElementCount >= header.elements[currentElement].count) {\n        currentElement++;\n        currentElementCount = 0;\n      }\n\n      var element = this.parseASCIIElement(header.elements[currentElement].properties, line);\n      this.handleElement(geometry, header.elements[currentElement].name, element);\n      currentElementCount++;\n    }\n\n    return this.postProcess(geometry);\n  },\n  postProcess: function (geometry) {\n    if (geometry.useColor) {\n      for (var i = 0; i < geometry.faces.length; i++) {\n        geometry.faces[i].vertexColors = [geometry.colors[geometry.faces[i].a], geometry.colors[geometry.faces[i].b], geometry.colors[geometry.faces[i].c]];\n      }\n\n      geometry.elementsNeedUpdate = true;\n    }\n\n    geometry.computeBoundingSphere();\n    return geometry;\n  },\n  handleElement: function (geometry, elementName, element) {\n    if (elementName === \"vertex\") {\n      geometry.vertices.push(new THREE.Vector3(element.x, element.y, element.z));\n\n      if ('red' in element && 'green' in element && 'blue' in element) {\n        geometry.useColor = true;\n        var color = new THREE.Color();\n        color.setRGB(element.red / 255.0, element.green / 255.0, element.blue / 255.0);\n        geometry.colors.push(color);\n      }\n    } else if (elementName === \"face\") {\n      // BEGIN: Edits by donmccurdy.\n      var vertex_indices = element.vertex_indices || element.vertex_index; // END: Edits by donmccurdy.\n\n      if (vertex_indices.length === 3) {\n        geometry.faces.push(new THREE.Face3(vertex_indices[0], vertex_indices[1], vertex_indices[2]));\n      } else if (vertex_indices.length === 4) {\n        geometry.faces.push(new THREE.Face3(vertex_indices[0], vertex_indices[1], vertex_indices[3]), new THREE.Face3(vertex_indices[1], vertex_indices[2], vertex_indices[3]));\n      }\n    }\n  },\n  binaryRead: function (dataview, at, type, little_endian) {\n    switch (type) {\n      // corespondences for non-specific length types here match rply:\n      case 'int8':\n      case 'char':\n        return [dataview.getInt8(at), 1];\n\n      case 'uint8':\n      case 'uchar':\n        return [dataview.getUint8(at), 1];\n\n      case 'int16':\n      case 'short':\n        return [dataview.getInt16(at, little_endian), 2];\n\n      case 'uint16':\n      case 'ushort':\n        return [dataview.getUint16(at, little_endian), 2];\n\n      case 'int32':\n      case 'int':\n        return [dataview.getInt32(at, little_endian), 4];\n\n      case 'uint32':\n      case 'uint':\n        return [dataview.getUint32(at, little_endian), 4];\n\n      case 'float32':\n      case 'float':\n        return [dataview.getFloat32(at, little_endian), 4];\n\n      case 'float64':\n      case 'double':\n        return [dataview.getFloat64(at, little_endian), 8];\n    }\n  },\n  binaryReadElement: function (dataview, at, properties, little_endian) {\n    var element = Object();\n    var result,\n        read = 0;\n\n    for (var i = 0; i < properties.length; i++) {\n      if (properties[i].type === \"list\") {\n        var list = [];\n        result = this.binaryRead(dataview, at + read, properties[i].countType, little_endian);\n        var n = result[0];\n        read += result[1];\n\n        for (var j = 0; j < n; j++) {\n          result = this.binaryRead(dataview, at + read, properties[i].itemType, little_endian);\n          list.push(result[0]);\n          read += result[1];\n        }\n\n        element[properties[i].name] = list;\n      } else {\n        result = this.binaryRead(dataview, at + read, properties[i].type, little_endian);\n        element[properties[i].name] = result[0];\n        read += result[1];\n      }\n    }\n\n    return [element, read];\n  },\n  parseBinary: function (data) {\n    var geometry = new THREE.Geometry();\n    var header = this.parseHeader(this.bin2str(data));\n    var little_endian = header.format === \"binary_little_endian\";\n    var body = new DataView(data, header.headerLength);\n    var result,\n        loc = 0;\n\n    for (var currentElement = 0; currentElement < header.elements.length; currentElement++) {\n      for (var currentElementCount = 0; currentElementCount < header.elements[currentElement].count; currentElementCount++) {\n        result = this.binaryReadElement(body, loc, header.elements[currentElement].properties, little_endian);\n        loc += result[1];\n        var element = result[0];\n        this.handleElement(geometry, header.elements[currentElement].name, element);\n      }\n    }\n\n    return this.postProcess(geometry);\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/lib/PLYLoader.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/lib/default-hex-grid.js":
/*!************************************************************!*\
  !*** ./node_modules/aframe-extras/lib/default-hex-grid.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  \"size\": 5,\n  \"cellSize\": 10,\n  \"extrudeSettings\": {\n    \"amount\": 1,\n    \"bevelEnabled\": true,\n    \"bevelSegments\": 1,\n    \"steps\": 1,\n    \"bevelSize\": 0.5,\n    \"bevelThickness\": 0.5\n  },\n  \"autogenerated\": true,\n  \"cells\": [{\n    \"q\": -1,\n    \"r\": 0,\n    \"s\": 1,\n    \"h\": 1,\n    \"walkable\": true,\n    \"userData\": {}\n  }, {\n    \"q\": 0,\n    \"r\": -1,\n    \"s\": 1,\n    \"h\": 1,\n    \"walkable\": true,\n    \"userData\": {}\n  }, {\n    \"q\": 0,\n    \"r\": 0,\n    \"s\": 0,\n    \"h\": 1,\n    \"walkable\": true,\n    \"userData\": {}\n  }, {\n    \"q\": 1,\n    \"r\": -1,\n    \"s\": 0,\n    \"h\": 1,\n    \"walkable\": true,\n    \"userData\": {}\n  }, {\n    \"q\": -1,\n    \"r\": 1,\n    \"s\": 0,\n    \"h\": 0,\n    \"walkable\": true,\n    \"userData\": {}\n  }, {\n    \"q\": 0,\n    \"r\": 1,\n    \"s\": -1,\n    \"h\": 0,\n    \"walkable\": true,\n    \"userData\": {}\n  }, {\n    \"q\": 1,\n    \"r\": 0,\n    \"s\": -1,\n    \"h\": 0,\n    \"walkable\": true,\n    \"userData\": {}\n  }]\n};\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/lib/default-hex-grid.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/lib/fetch-script.js":
/*!********************************************************!*\
  !*** ./node_modules/aframe-extras/lib/fetch-script.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Source: https://github.com/Adobe-Marketing-Cloud/fetch-script\n */\nfunction getScriptId() {\n  return 'script_' + Date.now() + '_' + Math.ceil(Math.random() * 100000);\n}\n\nfunction createScript(url, id) {\n  var script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.async = true;\n  script.id = id;\n  script.src = url;\n  return script;\n}\n\nfunction removeScript(id) {\n  const script = document.getElementById(id);\n  const parent = script.parentNode;\n\n  try {\n    parent && parent.removeChild(script);\n  } catch (e) {// ignore\n  }\n}\n\nfunction appendScript(script) {\n  const firstScript = document.getElementsByTagName('script')[0];\n  firstScript.parentNode.insertBefore(script, firstScript);\n}\n\nfunction fetchScriptInternal(url, options, Promise) {\n  return new Promise(function (resolve, reject) {\n    const timeout = options.timeout || 5000;\n    const scriptId = getScriptId();\n    const script = createScript(url, scriptId);\n    const timeoutId = setTimeout(function () {\n      reject(new Error('Script request to ' + url + ' timed out'));\n      removeScript(scriptId);\n    }, timeout);\n\n    const disableTimeout = function (timeoutId) {\n      clearTimeout(timeoutId);\n    };\n\n    script.addEventListener('load', function (e) {\n      resolve({\n        ok: true\n      });\n      disableTimeout(timeoutId);\n      removeScript(scriptId);\n    });\n    script.addEventListener('error', function (e) {\n      reject(new Error('Script request to ' + url + ' failed ' + e));\n      disableTimeout(timeoutId);\n      removeScript(scriptId);\n    });\n    appendScript(script);\n  });\n}\n\nfunction fetchScript(settings) {\n  settings = settings || {};\n  return function (url, options) {\n    options = options || {};\n    return fetchScriptInternal(url, options, settings.Promise || Promise);\n  };\n}\n\nmodule.exports = fetchScript;\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/lib/fetch-script.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/lib/hex-grid.min.js":
/*!********************************************************!*\
  !*** ./node_modules/aframe-extras/lib/hex-grid.min.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var vg = module.exports = {\n  VERSION: \"0.1.1\",\n  PI: Math.PI,\n  TAU: 2 * Math.PI,\n  DEG_TO_RAD: .0174532925,\n  RAD_TO_DEG: 57.2957795,\n  SQRT3: Math.sqrt(3),\n  TILE: \"tile\",\n  ENT: \"entity\",\n  STR: \"structure\",\n  HEX: \"hex\",\n  SQR: \"square\",\n  ABS: \"abstract\"\n};\nvg.Board = function (e, t) {\n  if (!e) throw new Error(\"You must pass in a grid system for the board to use.\");\n  this.tiles = [], this.tileGroup = null, this.group = new THREE.Object3D(), this.grid = null, this.overlay = null, this.finder = new vg.AStarFinder(t), vg.Loader.init(), this.setGrid(e);\n}, vg.Board.prototype = {\n  setEntityOnTile: function (e, t) {\n    var i = this.grid.cellToPixel(t.cell);\n    e.position.copy(i), e.position.y += e.heightOffset || 0, e.tile && (e.tile.entity = null), e.tile = t, t.entity = e;\n  },\n  addTile: function (e) {\n    var t = this.tiles.indexOf(e);\n    -1 === t && (this.tiles.push(e), this.snapTileToGrid(e), e.position.y = 0, this.tileGroup.add(e.mesh), this.grid.add(e.cell), e.cell.tile = e);\n  },\n  removeTile: function (e) {\n    if (e) {\n      var t = this.tiles.indexOf(e);\n      this.grid.remove(e.cell), -1 !== t && this.tiles.splice(t, 1), e.dispose();\n    }\n  },\n  removeAllTiles: function () {\n    if (this.tileGroup) for (var e = this.tileGroup.children, t = 0; t < e.length; t++) this.tileGroup.remove(e[t]);\n  },\n  getTileAtCell: function (e) {\n    var t = this.grid.cellToHash(e);\n    return e.tile || (\"undefined\" != typeof this.grid.cells[t] ? this.grid.cells[t].tile : null);\n  },\n  snapToGrid: function (e) {\n    var t = this.grid.pixelToCell(e);\n    e.copy(this.grid.cellToPixel(t));\n  },\n  snapTileToGrid: function (e) {\n    if (e.cell) e.position.copy(this.grid.cellToPixel(e.cell));else {\n      var t = this.grid.pixelToCell(e.position);\n      e.position.copy(this.grid.cellToPixel(t));\n    }\n    return e;\n  },\n  getRandomTile: function () {\n    var e = vg.Tools.randomInt(0, this.tiles.length - 1);\n    return this.tiles[e];\n  },\n  findPath: function (e, t, i) {\n    return this.finder.findPath(e.cell, t.cell, i, this.grid);\n  },\n  setGrid: function (e) {\n    this.group.remove(this.tileGroup), this.grid && e !== this.grid && (this.removeAllTiles(), this.tiles.forEach(function (e) {\n      this.grid.remove(e.cell), e.dispose();\n    }), this.grid.dispose()), this.grid = e, this.tiles = [], this.tileGroup = new THREE.Object3D(), this.group.add(this.tileGroup);\n  },\n  generateOverlay: function (e) {\n    var t = new THREE.LineBasicMaterial({\n      color: 0,\n      opacity: .3\n    });\n    this.overlay && this.group.remove(this.overlay), this.overlay = new THREE.Object3D(), this.grid.generateOverlay(e, this.overlay, t), this.group.add(this.overlay);\n  },\n  generateTilemap: function (e) {\n    this.reset();\n    var t = this.grid.generateTiles(e);\n    this.tiles = t, this.tileGroup = new THREE.Object3D();\n\n    for (var i = 0; i < t.length; i++) this.tileGroup.add(t[i].mesh);\n\n    this.group.add(this.tileGroup);\n  },\n  reset: function () {\n    this.removeAllTiles(), this.tileGroup && this.group.remove(this.tileGroup);\n  }\n}, vg.Board.prototype.constructor = vg.Board, vg.Cell = function (e, t, i, s) {\n  this.q = e || 0, this.r = t || 0, this.s = i || 0, this.h = s || 1, this.tile = null, this.userData = {}, this.walkable = !0, this._calcCost = 0, this._priority = 0, this._visited = !1, this._parent = null, this.uniqueID = vg.LinkedList.generateID();\n}, vg.Cell.prototype = {\n  set: function (e, t, i) {\n    return this.q = e, this.r = t, this.s = i, this;\n  },\n  copy: function (e) {\n    return this.q = e.q, this.r = e.r, this.s = e.s, this.h = e.h, this.tile = e.tile || null, this.userData = e.userData || {}, this.walkable = e.walkable, this;\n  },\n  add: function (e) {\n    return this.q += e.q, this.r += e.r, this.s += e.s, this;\n  },\n  equals: function (e) {\n    return this.q === e.q && this.r === e.r && this.s === e.s;\n  }\n}, vg.Cell.prototype.constructor = vg.Cell, vg.HexGrid = function (e) {\n  e = e || {}, this.type = vg.HEX, this.size = 5, this.cellSize = \"undefined\" == typeof e.cellSize ? 10 : e.cellSize, this.cells = {}, this.numCells = 0, this.extrudeSettings = null, this.autogenerated = !1;\n  var t,\n      i = [];\n\n  for (t = 0; 6 > t; t++) i.push(this._createVertex(t));\n\n  for (this.cellShape = new THREE.Shape(), this.cellShape.moveTo(i[0].x, i[0].y), t = 1; 6 > t; t++) this.cellShape.lineTo(i[t].x, i[t].y);\n\n  this.cellShape.lineTo(i[0].x, i[0].y), this.cellShape.autoClose = !0, this.cellGeo = new THREE.Geometry(), this.cellGeo.vertices = i, this.cellGeo.verticesNeedUpdate = !0, this.cellShapeGeo = new THREE.ShapeGeometry(this.cellShape), this._cellWidth = 2 * this.cellSize, this._cellLength = .5 * vg.SQRT3 * this._cellWidth, this._hashDelimeter = \".\", this._directions = [new vg.Cell(1, -1, 0), new vg.Cell(1, 0, -1), new vg.Cell(0, 1, -1), new vg.Cell(-1, 1, 0), new vg.Cell(-1, 0, 1), new vg.Cell(0, -1, 1)], this._diagonals = [new vg.Cell(2, -1, -1), new vg.Cell(1, 1, -2), new vg.Cell(-1, 2, -1), new vg.Cell(-2, 1, 1), new vg.Cell(-1, -1, 2), new vg.Cell(1, -2, 1)], this._list = [], this._vec3 = new THREE.Vector3(), this._cel = new vg.Cell(), this._conversionVec = new THREE.Vector3(), this._geoCache = [], this._matCache = [];\n}, vg.HexGrid.TWO_THIRDS = 2 / 3, vg.HexGrid.prototype = {\n  cellToPixel: function (e) {\n    return this._vec3.x = e.q * this._cellWidth * .75, this._vec3.y = e.h, this._vec3.z = -((e.s - e.r) * this._cellLength * .5), this._vec3;\n  },\n  pixelToCell: function (e) {\n    var t = e.x * (vg.HexGrid.TWO_THIRDS / this.cellSize),\n        i = (-e.x / 3 + vg.SQRT3 / 3 * e.z) / this.cellSize;\n    return this._cel.set(t, i, -t - i), this._cubeRound(this._cel);\n  },\n  getCellAt: function (e) {\n    var t = e.x * (vg.HexGrid.TWO_THIRDS / this.cellSize),\n        i = (-e.x / 3 + vg.SQRT3 / 3 * e.z) / this.cellSize;\n    return this._cel.set(t, i, -t - i), this._cubeRound(this._cel), this.cells[this.cellToHash(this._cel)];\n  },\n  getNeighbors: function (e, t, i) {\n    var s,\n        n,\n        l = this._directions.length;\n\n    for (this._list.length = 0, s = 0; l > s; s++) this._cel.copy(e), this._cel.add(this._directions[s]), n = this.cells[this.cellToHash(this._cel)], !n || i && !i(e, n) || this._list.push(n);\n\n    if (t) for (s = 0; l > s; s++) this._cel.copy(e), this._cel.add(this._diagonals[s]), n = this.cells[this.cellToHash(this._cel)], !n || i && !i(e, n) || this._list.push(n);\n    return this._list;\n  },\n  getRandomCell: function () {\n    var e,\n        t = 0,\n        i = vg.Tools.randomInt(0, this.numCells);\n\n    for (e in this.cells) {\n      if (t === i) return this.cells[e];\n      t++;\n    }\n\n    return this.cells[e];\n  },\n  cellToHash: function (e) {\n    return e.q + this._hashDelimeter + e.r + this._hashDelimeter + e.s;\n  },\n  distance: function (e, t) {\n    var i = Math.max(Math.abs(e.q - t.q), Math.abs(e.r - t.r), Math.abs(e.s - t.s));\n    return i += t.h - e.h;\n  },\n  clearPath: function () {\n    var e, t;\n\n    for (e in this.cells) t = this.cells[e], t._calcCost = 0, t._priority = 0, t._parent = null, t._visited = !1;\n  },\n  traverse: function (e) {\n    var t;\n\n    for (t in this.cells) e(this.cells[t]);\n  },\n  generateTile: function (e, t, i) {\n    var s = Math.abs(e.h);\n    1 > s && (s = 1);\n    var n = this._geoCache[s];\n    n || (this.extrudeSettings.amount = s, n = new THREE.ExtrudeGeometry(this.cellShape, this.extrudeSettings), this._geoCache[s] = n);\n    var l = new vg.Tile({\n      size: this.cellSize,\n      scale: t,\n      cell: e,\n      geometry: n,\n      material: i\n    });\n    return e.tile = l, l;\n  },\n  generateTiles: function (e) {\n    e = e || {};\n    var t = [],\n        i = {\n      tileScale: .95,\n      cellSize: this.cellSize,\n      material: null,\n      extrudeSettings: {\n        amount: 1,\n        bevelEnabled: !0,\n        bevelSegments: 1,\n        steps: 1,\n        bevelSize: .5,\n        bevelThickness: .5\n      }\n    };\n    i = vg.Tools.merge(i, e), this.cellSize = i.cellSize, this._cellWidth = 2 * this.cellSize, this._cellLength = .5 * vg.SQRT3 * this._cellWidth, this.autogenerated = !0, this.extrudeSettings = i.extrudeSettings;\n    var s, n, l;\n\n    for (s in this.cells) l = this.cells[s], n = this.generateTile(l, i.tileScale, i.material), n.position.copy(this.cellToPixel(l)), n.position.y = 0, t.push(n);\n\n    return t;\n  },\n  generateTilePoly: function (e) {\n    e || (e = new THREE.MeshBasicMaterial({\n      color: 2405631\n    }));\n    var t = new THREE.Mesh(this.cellShapeGeo, e);\n    return this._vec3.set(1, 0, 0), t.rotateOnAxis(this._vec3, vg.PI / 2), t;\n  },\n  generate: function (e) {\n    e = e || {}, this.size = \"undefined\" == typeof e.size ? this.size : e.size;\n    var t, i, s, n;\n\n    for (t = -this.size; t < this.size + 1; t++) for (i = -this.size; i < this.size + 1; i++) s = -t - i, Math.abs(t) <= this.size && Math.abs(i) <= this.size && Math.abs(s) <= this.size && (n = new vg.Cell(t, i, s), this.add(n));\n  },\n  generateOverlay: function (e, t, i) {\n    var s,\n        n,\n        l,\n        r = this.cellShape.createPointsGeometry();\n\n    for (s = -e; e + 1 > s; s++) for (n = -e; e + 1 > n; n++) if (l = -s - n, Math.abs(s) <= e && Math.abs(n) <= e && Math.abs(l) <= e) {\n      this._cel.set(s, n, l);\n\n      var h = new THREE.Line(r, i);\n      h.position.copy(this.cellToPixel(this._cel)), h.rotation.x = 90 * vg.DEG_TO_RAD, t.add(h);\n    }\n  },\n  add: function (e) {\n    var t = this.cellToHash(e);\n    if (!this.cells[t]) return this.cells[t] = e, this.numCells++, e;\n  },\n  remove: function (e) {\n    var t = this.cellToHash(e);\n    this.cells[t] && (delete this.cells[t], this.numCells--);\n  },\n  dispose: function () {\n    this.cells = null, this.numCells = 0, this.cellShape = null, this.cellGeo.dispose(), this.cellGeo = null, this.cellShapeGeo.dispose(), this.cellShapeGeo = null, this._list = null, this._vec3 = null, this._conversionVec = null, this._geoCache = null, this._matCache = null;\n  },\n  load: function (e, t, i) {\n    var s = this;\n    vg.Tools.getJSON({\n      url: e,\n      callback: function (e) {\n        s.fromJSON(e), t.call(i || null, e);\n      },\n      cache: !1,\n      scope: s\n    });\n  },\n  fromJSON: function (e) {\n    var t,\n        i,\n        s = e.cells;\n\n    for (this.cells = {}, this.numCells = 0, this.size = e.size, this.cellSize = e.cellSize, this._cellWidth = 2 * this.cellSize, this._cellLength = .5 * vg.SQRT3 * this._cellWidth, this.extrudeSettings = e.extrudeSettings, this.autogenerated = e.autogenerated, t = 0; t < s.length; t++) i = new vg.Cell(), i.copy(s[t]), this.add(i);\n  },\n  toJSON: function () {\n    var e,\n        t,\n        i = {\n      size: this.size,\n      cellSize: this.cellSize,\n      extrudeSettings: this.extrudeSettings,\n      autogenerated: this.autogenerated\n    },\n        s = [];\n\n    for (t in this.cells) e = this.cells[t], s.push({\n      q: e.q,\n      r: e.r,\n      s: e.s,\n      h: e.h,\n      walkable: e.walkable,\n      userData: e.userData\n    });\n\n    return i.cells = s, i;\n  },\n  _createVertex: function (e) {\n    var t = vg.TAU / 6 * e;\n    return new THREE.Vector3(this.cellSize * Math.cos(t), this.cellSize * Math.sin(t), 0);\n  },\n  _cubeRound: function (e) {\n    var t = Math.round(e.q),\n        i = Math.round(e.r),\n        s = Math.round(e.s),\n        n = Math.abs(t - e.q),\n        l = Math.abs(i - e.r),\n        r = Math.abs(s - e.s);\n    return n > l && n > r ? t = -i - s : l > r ? i = -t - s : s = -t - i, this._cel.set(t, i, s);\n  }\n}, vg.HexGrid.prototype.constructor = vg.HexGrid, vg.SqrGrid = function (e) {\n  e = e || {}, this.type = vg.SQR, this.size = 5, this.cellSize = \"undefined\" == typeof e.cellSize ? 10 : e.cellSize, this.cells = {}, this.numCells = 0, this.extrudeSettings = null, this.autogenerated = !1;\n  var t = [];\n  t.push(new THREE.Vector3()), t.push(new THREE.Vector3(-this.cellSize, this.cellSize)), t.push(new THREE.Vector3(this.cellSize, this.cellSize)), t.push(new THREE.Vector3(this.cellSize, -this.cellSize)), this.cellShape = new THREE.Shape(), this.cellShape.moveTo(-this.cellSize, -this.cellSize), this.cellShape.lineTo(-this.cellSize, this.cellSize), this.cellShape.lineTo(this.cellSize, this.cellSize), this.cellShape.lineTo(this.cellSize, -this.cellSize), this.cellShape.lineTo(-this.cellSize, -this.cellSize), this.cellGeo = new THREE.Geometry(), this.cellGeo.vertices = t, this.cellGeo.verticesNeedUpdate = !0, this.cellShapeGeo = new THREE.ShapeGeometry(this.cellShape), this._fullCellSize = 2 * this.cellSize, this._hashDelimeter = \".\", this._directions = [new vg.Cell(1, 0, 0), new vg.Cell(0, -1, 0), new vg.Cell(-1, 0, 0), new vg.Cell(0, 1, 0)], this._diagonals = [new vg.Cell(-1, -1, 0), new vg.Cell(-1, 1, 0), new vg.Cell(1, 1, 0), new vg.Cell(1, -1, 0)], this._list = [], this._vec3 = new THREE.Vector3(), this._cel = new vg.Cell(), this._conversionVec = new THREE.Vector3(), this._geoCache = [], this._matCache = [];\n}, vg.SqrGrid.prototype = {\n  cellToPixel: function (e) {\n    return this._vec3.x = e.q * this._fullCellSize, this._vec3.y = e.h, this._vec3.z = e.r * this._fullCellSize, this._vec3;\n  },\n  pixelToCell: function (e) {\n    var t = Math.round(e.x / this._fullCellSize),\n        i = Math.round(e.z / this._fullCellSize);\n    return this._cel.set(t, i, 0);\n  },\n  getCellAt: function (e) {\n    var t = Math.round(e.x / this._fullCellSize),\n        i = Math.round(e.z / this._fullCellSize);\n    return this._cel.set(t, i), this.cells[this.cellToHash(this._cel)];\n  },\n  getNeighbors: function (e, t, i) {\n    var s,\n        n,\n        l = this._directions.length;\n\n    for (this._list.length = 0, s = 0; l > s; s++) this._cel.copy(e), this._cel.add(this._directions[s]), n = this.cells[this.cellToHash(this._cel)], !n || i && !i(e, n) || this._list.push(n);\n\n    if (t) for (s = 0; l > s; s++) this._cel.copy(e), this._cel.add(this._diagonals[s]), n = this.cells[this.cellToHash(this._cel)], !n || i && !i(e, n) || this._list.push(n);\n    return this._list;\n  },\n  getRandomCell: function () {\n    var e,\n        t = 0,\n        i = vg.Tools.randomInt(0, this.numCells);\n\n    for (e in this.cells) {\n      if (t === i) return this.cells[e];\n      t++;\n    }\n\n    return this.cells[e];\n  },\n  cellToHash: function (e) {\n    return e.q + this._hashDelimeter + e.r;\n  },\n  distance: function (e, t) {\n    var i = Math.max(Math.abs(e.q - t.q), Math.abs(e.r - t.r));\n    return i += t.h - e.h;\n  },\n  clearPath: function () {\n    var e, t;\n\n    for (e in this.cells) t = this.cells[e], t._calcCost = 0, t._priority = 0, t._parent = null, t._visited = !1;\n  },\n  traverse: function (e) {\n    var t;\n\n    for (t in this.cells) e(this.cells[t]);\n  },\n  generateTile: function (e, t, i) {\n    var s = Math.abs(e.h);\n    1 > s && (s = 1);\n    var n = this._geoCache[s];\n    n || (this.extrudeSettings.amount = s, n = new THREE.ExtrudeGeometry(this.cellShape, this.extrudeSettings), this._geoCache[s] = n);\n    var l = new vg.Tile({\n      size: this.cellSize,\n      scale: t,\n      cell: e,\n      geometry: n,\n      material: i\n    });\n    return e.tile = l, l;\n  },\n  generateTiles: function (e) {\n    e = e || {};\n    var t = [],\n        i = {\n      tileScale: .95,\n      cellSize: this.cellSize,\n      material: null,\n      extrudeSettings: {\n        amount: 1,\n        bevelEnabled: !0,\n        bevelSegments: 1,\n        steps: 1,\n        bevelSize: .5,\n        bevelThickness: .5\n      }\n    };\n    i = vg.Tools.merge(i, e), this.cellSize = i.cellSize, this._fullCellSize = 2 * this.cellSize, this.autogenerated = !0, this.extrudeSettings = i.extrudeSettings;\n    var s, n, l;\n\n    for (s in this.cells) l = this.cells[s], n = this.generateTile(l, i.tileScale, i.material), n.position.copy(this.cellToPixel(l)), n.position.y = 0, t.push(n);\n\n    return t;\n  },\n  generateTilePoly: function (e) {\n    e || (e = new THREE.MeshBasicMaterial({\n      color: 2405631\n    }));\n    var t = new THREE.Mesh(this.cellShapeGeo, e);\n    return this._vec3.set(1, 0, 0), t.rotateOnAxis(this._vec3, vg.PI / 2), t;\n  },\n  generate: function (e) {\n    e = e || {}, this.size = \"undefined\" == typeof e.size ? this.size : e.size;\n    var t,\n        i,\n        s,\n        n = Math.ceil(this.size / 2);\n\n    for (t = -n; n > t; t++) for (i = -n; n > i; i++) s = new vg.Cell(t, i + 1), this.add(s);\n  },\n  generateOverlay: function (e, t, i) {\n    var s,\n        n,\n        l = Math.ceil(e / 2);\n\n    for (s = -l; l > s; s++) for (n = -l; l > n; n++) {\n      this._cel.set(s, n);\n\n      var r = new THREE.Line(this.cellGeo, i);\n      r.position.copy(this.cellToPixel(this._cel)), r.rotation.x = 90 * vg.DEG_TO_RAD, t.add(r);\n    }\n  },\n  add: function (e) {\n    var t = this.cellToHash(e);\n    if (!this.cells[t]) return this.cells[t] = e, this.numCells++, e;\n  },\n  remove: function (e) {\n    var t = this.cellToHash(e);\n    this.cells[t] && (delete this.cells[t], this.numCells--);\n  },\n  dispose: function () {\n    this.cells = null, this.numCells = 0, this.cellShape = null, this.cellGeo.dispose(), this.cellGeo = null, this.cellShapeGeo.dispose(), this.cellShapeGeo = null, this._list = null, this._vec3 = null, this._conversionVec = null, this._geoCache = null, this._matCache = null;\n  },\n  load: function (e, t, i) {\n    vg.Tools.getJSON({\n      url: e,\n      callback: function (e) {\n        this.fromJSON(e), t.call(i || null, e);\n      },\n      cache: !1,\n      scope: this\n    });\n  },\n  fromJSON: function (e) {\n    var t,\n        i,\n        s = e.cells;\n\n    for (this.cells = {}, this.numCells = 0, this.size = e.size, this.cellSize = e.cellSize, this._fullCellSize = 2 * this.cellSize, this.extrudeSettings = e.extrudeSettings, this.autogenerated = e.autogenerated, t = 0; t < s.length; t++) i = new vg.Cell(), i.copy(s[t]), this.add(i);\n  },\n  toJSON: function () {\n    var e,\n        t,\n        i = {\n      size: this.size,\n      cellSize: this.cellSize,\n      extrudeSettings: this.extrudeSettings,\n      autogenerated: this.autogenerated\n    },\n        s = [];\n\n    for (t in this.cells) e = this.cells[t], s.push({\n      q: e.q,\n      r: e.r,\n      s: e.s,\n      h: e.h,\n      walkable: e.walkable,\n      userData: e.userData\n    });\n\n    return i.cells = s, i;\n  }\n}, vg.SqrGrid.prototype.constructor = vg.SqrGrid, vg.Tile = function (e) {\n  e = e || {};\n  var t = {\n    cell: null,\n    geometry: null,\n    material: null\n  };\n  if (t = vg.Tools.merge(t, e), !t.cell || !t.geometry) throw new Error(\"Missing vg.Tile configuration\");\n  this.cell = t.cell, this.cell.tile && this.cell.tile !== this && this.cell.tile.dispose(), this.cell.tile = this, this.uniqueID = vg.Tools.generateID(), this.geometry = t.geometry, this.material = t.material, this.material || (this.material = new THREE.MeshPhongMaterial({\n    color: vg.Tools.randomizeRGB(\"30, 30, 30\", 13)\n  })), this.objectType = vg.TILE, this.entity = null, this.userData = {}, this.selected = !1, this.highlight = \"0x0084cc\", this.mesh = new THREE.Mesh(this.geometry, this.material), this.mesh.userData.structure = this, this.position = this.mesh.position, this.rotation = this.mesh.rotation, this.rotation.x = -90 * vg.DEG_TO_RAD, this.mesh.scale.set(t.scale, t.scale, 1), this.material.emissive ? this._emissive = this.material.emissive.getHex() : this._emissive = null;\n}, vg.Tile.prototype = {\n  select: function () {\n    return this.material.emissive && this.material.emissive.setHex(this.highlight), this.selected = !0, this;\n  },\n  deselect: function () {\n    return null !== this._emissive && this.material.emissive && this.material.emissive.setHex(this._emissive), this.selected = !1, this;\n  },\n  toggle: function () {\n    return this.selected ? this.deselect() : this.select(), this;\n  },\n  dispose: function () {\n    this.cell && this.cell.tile && (this.cell.tile = null), this.cell = null, this.position = null, this.rotation = null, this.mesh.parent && this.mesh.parent.remove(this.mesh), this.mesh.userData.structure = null, this.mesh = null, this.material = null, this.userData = null, this.entity = null, this.geometry = null, this._emissive = null;\n  }\n}, vg.Tile.prototype.constructor = vg.Tile, function () {\n  var e = function () {\n    this.obj = null, this.next = null, this.prev = null, this.free = !0;\n  },\n      t = function () {\n    this.first = null, this.last = null, this.length = 0, this.objToNodeMap = {}, this.uniqueID = Date.now() + \"\" + Math.floor(1e3 * Math.random()), this.sortArray = [];\n  };\n\n  t.generateID = function () {\n    return Math.random().toString(36).slice(2) + Date.now();\n  }, t.prototype = {\n    getNode: function (e) {\n      return this.objToNodeMap[e.uniqueID];\n    },\n    addNode: function (i) {\n      var s = new e();\n      if (!i.uniqueID) try {\n        i.uniqueID = t.generateID();\n      } catch (n) {\n        return console.error(\"[LinkedList.addNode] obj passed is immutable: cannot attach necessary identifier\"), null;\n      }\n      return s.obj = i, s.free = !1, this.objToNodeMap[i.uniqueID] = s, s;\n    },\n    swapObjects: function (e, t) {\n      this.objToNodeMap[e.obj.uniqueID] = null, this.objToNodeMap[t.uniqueID] = e, e.obj = t;\n    },\n    add: function (e) {\n      var t = this.objToNodeMap[e.uniqueID];\n\n      if (t) {\n        if (t.free === !1) return;\n        t.obj = e, t.free = !1, t.next = null, t.prev = null;\n      } else t = this.addNode(e);\n\n      if (this.first) {\n        if (!this.last) throw new Error(\"[LinkedList.add] No last in the list -- that shouldn't happen here\");\n        this.last.next = t, t.prev = this.last, this.last = t, t.next = null;\n      } else this.first = t, this.last = t, t.next = null, t.prev = null;\n\n      this.length++, this.showDebug && this.dump(\"after add\");\n    },\n    has: function (e) {\n      return !!this.objToNodeMap[e.uniqueID];\n    },\n    moveUp: function (e) {\n      this.dump(\"before move up\");\n      var t = this.getNode(e);\n      if (!t) throw \"Oops, trying to move an object that isn't in the list\";\n\n      if (t.prev) {\n        var i = t.prev,\n            s = i.prev;\n        t == this.last && (this.last = i);\n        var n = t.next;\n        s && (s.next = t), t.next = i, t.prev = i.prev, i.next = n, i.prev = t, this.first == i && (this.first = t);\n      }\n    },\n    moveDown: function (e) {\n      var t = this.getNode(e);\n      if (!t) throw \"Oops, trying to move an object that isn't in the list\";\n\n      if (t.next) {\n        var i = t.next;\n        this.moveUp(i.obj), this.last == i && (this.last = t);\n      }\n    },\n    sort: function (e) {\n      var t,\n          i,\n          s = this.sortArray,\n          n = this.first;\n\n      for (s.length = 0; n;) s.push(n.obj), n = n.next;\n\n      for (this.clear(), s.sort(e), i = s.length, t = 0; i > t; t++) this.add(s[t]);\n    },\n    remove: function (e) {\n      var t = this.getNode(e);\n      return !t || t.free ? !1 : (t.prev && (t.prev.next = t.next), t.next && (t.next.prev = t.prev), t.prev || (this.first = t.next), t.next || (this.last = t.prev), t.free = !0, t.prev = null, t.next = null, this.length--, !0);\n    },\n    shift: function () {\n      var e = this.first;\n      return 0 === this.length ? null : (e.prev && (e.prev.next = e.next), e.next && (e.next.prev = e.prev), this.first = e.next, e.next || (this.last = null), e.free = !0, e.prev = null, e.next = null, this.length--, e.obj);\n    },\n    pop: function () {\n      var e = this.last;\n      return 0 === this.length ? null : (e.prev && (e.prev.next = e.next), e.next && (e.next.prev = e.prev), this.last = e.prev, e.prev || (this.first = null), e.free = !0, e.prev = null, e.next = null, this.length--, e.obj);\n    },\n    concat: function (e) {\n      for (var t = e.first; t;) this.add(t.obj), t = t.next;\n    },\n    clear: function () {\n      for (var e = this.first; e;) e.free = !0, e = e.next;\n\n      this.first = null, this.length = 0;\n    },\n    dispose: function () {\n      for (var e = this.first; e;) e.obj = null, e = e.next;\n\n      this.first = null, this.objToNodeMap = null;\n    },\n    dump: function (e) {\n      console.log(\"====================\" + e + \"=====================\");\n\n      for (var t = this.first; t;) console.log(\"{\" + t.obj.toString() + \"} previous=\" + (t.prev ? t.prev.obj : \"NULL\")), t = t.next();\n\n      console.log(\"===================================\"), console.log(\"Last: {\" + (this.last ? this.last.obj : \"NULL\") + \"} First: {\" + (this.first ? this.first.obj : \"NULL\") + \"}\");\n    }\n  }, t.prototype.constructor = t, vg.LinkedList = t;\n}(), function () {\n  var e = function (e, t, i, s, n) {\n    this._listener = t, this.isOnce = i, this.context = s, this.signal = e, this._priority = n || 0;\n  };\n\n  e.prototype = {\n    active: !0,\n    params: null,\n    execute: function (e) {\n      var t, i;\n      return this.active && this._listener && (i = this.params ? this.params.concat(e) : e, t = this._listener.apply(this.context, i), this.isOnce && this.detach()), t;\n    },\n    detach: function () {\n      return this.isBound() ? this.signal.remove(this._listener, this.context) : null;\n    },\n    isBound: function () {\n      return !!this.signal && !!this._listener;\n    },\n    _destroy: function () {\n      delete this.signal, delete this._listener, delete this.context;\n    },\n    toString: function () {\n      return \"[SignalBinding isOnce:\" + this.isOnce + \", isBound:\" + this.isBound() + \", active:\" + this.active + \"]\";\n    }\n  }, e.prototype.constructor = e;\n\n  var t = function () {\n    this._bindings = [], this._prevParams = null;\n    var e = this;\n\n    this.dispatch = function () {\n      t.prototype.dispatch.apply(e, arguments);\n    };\n  };\n\n  t.prototype = {\n    memorize: !1,\n    _shouldPropagate: !0,\n    active: !0,\n    validateListener: function (e, t) {\n      if (\"function\" != typeof e) throw new Error(\"Signal: listener is a required param of {fn}() and should be a Function.\".replace(\"{fn}\", t));\n    },\n    _registerListener: function (t, i, s, n) {\n      var l,\n          r = this._indexOfListener(t, s);\n\n      if (-1 !== r) {\n        if (l = this._bindings[r], l.isOnce !== i) throw new Error(\"You cannot add\" + (i ? \"\" : \"Once\") + \"() then add\" + (i ? \"Once\" : \"\") + \"() the same listener without removing the relationship first.\");\n      } else l = new e(this, t, i, s, n), this._addBinding(l);\n\n      return this.memorize && this._prevParams && l.execute(this._prevParams), l;\n    },\n    _addBinding: function (e) {\n      var t = this._bindings.length;\n\n      do t--; while (this._bindings[t] && e._priority <= this._bindings[t]._priority);\n\n      this._bindings.splice(t + 1, 0, e);\n    },\n    _indexOfListener: function (e, t) {\n      for (var i, s = this._bindings.length; s--;) if (i = this._bindings[s], i._listener === e && i.context === t) return s;\n\n      return -1;\n    },\n    has: function (e, t) {\n      return -1 !== this._indexOfListener(e, t);\n    },\n    add: function (e, t, i) {\n      return this.validateListener(e, \"add\"), this._registerListener(e, !1, t, i);\n    },\n    addOnce: function (e, t, i) {\n      return this.validateListener(e, \"addOnce\"), this._registerListener(e, !0, t, i);\n    },\n    remove: function (e, t) {\n      this.validateListener(e, \"remove\");\n\n      var i = this._indexOfListener(e, t);\n\n      return -1 !== i && (this._bindings[i]._destroy(), this._bindings.splice(i, 1)), e;\n    },\n    removeAll: function (e) {\n      \"undefined\" == typeof e && (e = null);\n\n      for (var t = this._bindings.length; t--;) e ? this._bindings[t].context === e && (this._bindings[t]._destroy(), this._bindings.splice(t, 1)) : this._bindings[t]._destroy();\n\n      e || (this._bindings.length = 0);\n    },\n    getNumListeners: function () {\n      return this._bindings.length;\n    },\n    halt: function () {\n      this._shouldPropagate = !1;\n    },\n    dispatch: function () {\n      if (this.active) {\n        var e,\n            t = Array.prototype.slice.call(arguments),\n            i = this._bindings.length;\n\n        if (this.memorize && (this._prevParams = t), i) {\n          e = this._bindings.slice(), this._shouldPropagate = !0;\n\n          do i--; while (e[i] && this._shouldPropagate && e[i].execute(t) !== !1);\n        }\n      }\n    },\n    forget: function () {\n      this._prevParams = null;\n    },\n    dispose: function () {\n      this.removeAll(), delete this._bindings, delete this._prevParams;\n    },\n    toString: function () {\n      return \"[Signal active:\" + this.active + \" numListeners:\" + this.getNumListeners() + \"]\";\n    }\n  }, t.prototype.constructor = t, vg.Signal = t;\n}(), vg.AStarFinder = function (e) {\n  e = e || {};\n  var t = {\n    allowDiagonal: !1,\n    heuristicFilter: null\n  };\n  t = vg.Tools.merge(t, e), this.allowDiagonal = t.allowDiagonal, this.heuristicFilter = t.heuristicFilter, this.list = new vg.LinkedList();\n}, vg.AStarFinder.prototype = {\n  findPath: function (e, t, i, s) {\n    var n, l, r, h, o, a;\n\n    for (i = i || this.heuristicFilter, s.clearPath(), this.list.clear(), this.list.add(e); this.list.length > 0;) {\n      if (this.list.sort(this.compare), n = this.list.shift(), n._visited = !0, n === t) return vg.PathUtil.backtrace(t);\n\n      for (r = s.getNeighbors(n, this.allowDiagonal, i), o = 0, a = r.length; a > o; o++) if (h = r[o], h.walkable && (l = n._calcCost + s.distance(n, h), !h._visited || l < h._calcCost)) {\n        if (h._visited = !0, h._parent = n, h._calcCost = l, h._priority = l + s.distance(t, h), h === t) return vg.PathUtil.backtrace(t);\n        this.list.add(h);\n      }\n    }\n\n    return null;\n  },\n  compare: function (e, t) {\n    return e._priority - t._priority;\n  }\n}, vg.AStarFinder.prototype.constructor = vg.AStarFinder, vg.PathUtil = {\n  backtrace: function (e) {\n    for (var t = [e]; e._parent;) e = e._parent, t.push(e);\n\n    return t.reverse();\n  },\n  biBacktrace: function (e, t) {\n    var i = this.backtrace(e),\n        s = this.backtrace(t);\n    return i.concat(s.reverse());\n  },\n  pathLength: function (e) {\n    var t,\n        i,\n        s,\n        n,\n        l,\n        r = 0;\n\n    for (t = 1; t < e.length; ++t) i = e[t - 1], s = e[t], n = i[0] - s[0], l = i[1] - s[1], r += Math.sqrt(n * n + l * l);\n\n    return r;\n  },\n  interpolate: function (e, t, i, s) {\n    var n,\n        l,\n        r,\n        h,\n        o,\n        a,\n        c = Math.abs,\n        u = [];\n\n    for (r = c(i - e), h = c(s - t), n = i > e ? 1 : -1, l = s > t ? 1 : -1, o = r - h; e !== i || t !== s;) u.push([e, t]), a = 2 * o, a > -h && (o -= h, e += n), r > a && (o += r, t += l);\n\n    return u;\n  },\n  expandPath: function (e) {\n    var t,\n        i,\n        s,\n        n,\n        l,\n        r,\n        h = [],\n        o = e.length;\n    if (2 > o) return h;\n\n    for (l = 0; o - 1 > l; ++l) for (t = e[l], i = e[l + 1], s = this.interpolate(t[0], t[1], i[0], i[1]), n = s.length, r = 0; n - 1 > r; ++r) h.push(s[r]);\n\n    return h.push(e[o - 1]), h;\n  },\n  smoothenPath: function (e, t) {\n    var i,\n        s,\n        n,\n        l,\n        r,\n        h,\n        o,\n        a,\n        c,\n        u,\n        d,\n        g,\n        p = t.length,\n        v = t[0][0],\n        f = t[0][1],\n        m = t[p - 1][0],\n        _ = t[p - 1][1];\n\n    for (i = v, s = f, r = [[i, s]], o = 2; p > o; ++o) {\n      for (c = t[o], n = c[0], l = c[1], u = this.interpolate(i, s, n, l), g = !1, a = 1; a < u.length; ++a) if (d = u[a], !e.isWalkableAt(d[0], d[1])) {\n        g = !0;\n        break;\n      }\n\n      g && (h = t[o - 1], r.push(h), i = h[0], s = h[1]);\n    }\n\n    return r.push([m, _]), r;\n  },\n  compressPath: function (e) {\n    if (e.length < 3) return e;\n    var t,\n        i,\n        s,\n        n,\n        l,\n        r,\n        h = [],\n        o = e[0][0],\n        a = e[0][1],\n        c = e[1][0],\n        u = e[1][1],\n        d = c - o,\n        g = u - a;\n\n    for (l = Math.sqrt(d * d + g * g), d /= l, g /= l, h.push([o, a]), r = 2; r < e.length; r++) t = c, i = u, s = d, n = g, c = e[r][0], u = e[r][1], d = c - t, g = u - i, l = Math.sqrt(d * d + g * g), d /= l, g /= l, (d !== s || g !== n) && h.push([t, i]);\n\n    return h.push([c, u]), h;\n  }\n}, vg.Loader = {\n  manager: null,\n  imageLoader: null,\n  crossOrigin: !1,\n  init: function (e) {\n    this.crossOrigin = e || !1, this.manager = new THREE.LoadingManager(function () {}, function () {}, function () {\n      console.warn(\"Error loading images\");\n    }), this.imageLoader = new THREE.ImageLoader(this.manager), this.imageLoader.crossOrigin = e;\n  },\n  loadTexture: function (e, t, i, s) {\n    var n = new THREE.Texture(null, t);\n    return this.imageLoader.load(e, function (e) {\n      n.image = e, n.needsUpdate = !0, i && i(n);\n    }, null, function (e) {\n      s && s(e);\n    }), n.sourceFile = e, n;\n  }\n}, vg.MouseCaster = function (e, t, i) {\n  this.down = !1, this.rightDown = !1, this.pickedObject = null, this.selectedObject = null, this.allHits = null, this.active = !0, this.shift = !1, this.ctrl = !1, this.wheel = 0, this.position = new THREE.Vector3(), this.screenPosition = new THREE.Vector2(), this.signal = new vg.Signal(), this.group = e, this._camera = t, this._raycaster = new THREE.Raycaster(), this._preventDefault = !1, i = i || document, i.addEventListener(\"mousemove\", this._onDocumentMouseMove.bind(this), !1), i.addEventListener(\"mousedown\", this._onDocumentMouseDown.bind(this), !1), i.addEventListener(\"mouseup\", this._onDocumentMouseUp.bind(this), !1), i.addEventListener(\"mousewheel\", this._onMouseWheel.bind(this), !1), i.addEventListener(\"DOMMouseScroll\", this._onMouseWheel.bind(this), !1);\n}, vg.MouseCaster.OVER = \"over\", vg.MouseCaster.OUT = \"out\", vg.MouseCaster.DOWN = \"down\", vg.MouseCaster.UP = \"up\", vg.MouseCaster.CLICK = \"click\", vg.MouseCaster.WHEEL = \"wheel\", vg.MouseCaster.prototype = {\n  update: function () {\n    if (this.active) {\n      this._raycaster.setFromCamera(this.screenPosition, this._camera);\n\n      var e,\n          t,\n          i = this._raycaster.intersectObject(this.group, !0);\n\n      i.length > 0 ? (e = i[0], t = e.object.userData.structure, this.pickedObject != t && (this.pickedObject && this.signal.dispatch(vg.MouseCaster.OUT, this.pickedObject), this.pickedObject = t, this.selectedObject = null, this.signal.dispatch(vg.MouseCaster.OVER, this.pickedObject)), this.position.copy(e.point), this.screenPosition.z = e.distance) : (this.pickedObject && this.signal.dispatch(vg.MouseCaster.OUT, this.pickedObject), this.pickedObject = null, this.selectedObject = null), this.allHits = i;\n    }\n  },\n  preventDefault: function () {\n    this._preventDefault = !0;\n  },\n  _onDocumentMouseDown: function (e) {\n    return e = e || window.event, e.preventDefault(), this._preventDefault ? (this._preventDefault = !1, !1) : (this.pickedObject && (this.selectedObject = this.pickedObject), this.shift = e.shiftKey, this.ctrl = e.ctrlKey, this.down = 1 === e.which, this.rightDown = 3 === e.which, void this.signal.dispatch(vg.MouseCaster.DOWN, this.pickedObject));\n  },\n  _onDocumentMouseUp: function (e) {\n    return e.preventDefault(), this._preventDefault ? (this._preventDefault = !1, !1) : (this.shift = e.shiftKey, this.ctrl = e.ctrlKey, this.signal.dispatch(vg.MouseCaster.UP, this.pickedObject), this.selectedObject && this.pickedObject && this.selectedObject.uniqueID === this.pickedObject.uniqueID && this.signal.dispatch(vg.MouseCaster.CLICK, this.pickedObject), this.down = 1 === e.which ? !1 : this.down, void (this.rightDown = 3 === e.which ? !1 : this.rightDown));\n  },\n  _onDocumentMouseMove: function (e) {\n    e.preventDefault(), this.screenPosition.x = e.clientX / window.innerWidth * 2 - 1, this.screenPosition.y = 2 * -(e.clientY / window.innerHeight) + 1;\n  },\n  _onMouseWheel: function (e) {\n    if (this.active) {\n      e.preventDefault(), e.stopPropagation();\n      var t = 0;\n      void 0 !== e.wheelDelta ? t = e.wheelDelta : void 0 !== e.detail && (t = -e.detail), t > 0 ? this.wheel++ : this.wheel--, this.signal.dispatch(vg.MouseCaster.WHEEL, this.wheel);\n    }\n  }\n}, vg.MouseCaster.prototype.constructor = vg.MouseCaster, vg.Scene = function (e, t) {\n  var i = {\n    element: document.body,\n    alpha: !0,\n    antialias: !0,\n    clearColor: \"#fff\",\n    sortObjects: !1,\n    fog: null,\n    light: new THREE.DirectionalLight(16777215),\n    lightPosition: null,\n    cameraType: \"PerspectiveCamera\",\n    cameraPosition: null,\n    orthoZoom: 4\n  },\n      s = {\n    minDistance: 100,\n    maxDistance: 1e3,\n    zoomSpeed: 2,\n    noZoom: !1\n  };\n\n  if (i = vg.Tools.merge(i, e), \"boolean\" != typeof t && (s = vg.Tools.merge(s, t)), this.renderer = new THREE.WebGLRenderer({\n    alpha: i.alpha,\n    antialias: i.antialias\n  }), this.renderer.setClearColor(i.clearColor, 0), this.renderer.sortObjects = i.sortObjects, this.width = window.innerWidth, this.height = window.innerHeight, this.orthoZoom = i.orthoZoom, this.container = new THREE.Scene(), this.container.fog = i.fog, this.container.add(new THREE.AmbientLight(14540253)), i.lightPosition || i.light.position.set(-1, 1, -1).normalize(), this.container.add(i.light), \"OrthographicCamera\" === i.cameraType) {\n    var n = window.innerWidth / this.orthoZoom,\n        l = window.innerHeight / this.orthoZoom;\n    this.camera = new THREE.OrthographicCamera(n / -2, n / 2, l / 2, l / -2, 1, 5e3);\n  } else this.camera = new THREE.PerspectiveCamera(50, this.width / this.height, 1, 5e3);\n\n  this.contolled = !!t, this.contolled && (this.controls = new THREE.OrbitControls(this.camera, this.renderer.domElement), this.controls.minDistance = s.minDistance, this.controls.maxDistance = s.maxDistance, this.controls.zoomSpeed = s.zoomSpeed, this.controls.noZoom = s.noZoom), i.cameraPosition && this.camera.position.copy(i.cameraPosition), window.addEventListener(\"resize\", function () {\n    if (this.width = window.innerWidth, this.height = window.innerHeight, \"OrthographicCamera\" === this.camera.type) {\n      var e = this.width / this.orthoZoom,\n          t = this.height / this.orthoZoom;\n      this.camera.left = e / -2, this.camera.right = e / 2, this.camera.top = t / 2, this.camera.bottom = t / -2;\n    } else this.camera.aspect = this.width / this.height;\n\n    this.camera.updateProjectionMatrix(), this.renderer.setSize(this.width, this.height);\n  }.bind(this), !1), this.attachTo(i.element);\n}, vg.Scene.prototype = {\n  attachTo: function (e) {\n    e.style.width = this.width + \"px\", e.style.height = this.height + \"px\", this.renderer.setPixelRatio(window.devicePixelRatio), this.renderer.setSize(this.width, this.height), e.appendChild(this.renderer.domElement);\n  },\n  add: function (e) {\n    this.container.add(e);\n  },\n  remove: function (e) {\n    this.container.remove(e);\n  },\n  render: function () {\n    this.contolled && this.controls.update(), this.renderer.render(this.container, this.camera);\n  },\n  updateOrthoZoom: function () {\n    if (this.orthoZoom <= 0) return void (this.orthoZoom = 0);\n    var e = this.width / this.orthoZoom,\n        t = this.height / this.orthoZoom;\n    this.camera.left = e / -2, this.camera.right = e / 2, this.camera.top = t / 2, this.camera.bottom = t / -2, this.camera.updateProjectionMatrix();\n  },\n  focusOn: function (e) {\n    this.camera.lookAt(e.position);\n  }\n}, vg.Scene.prototype.constructor = vg.Scene, vg.SelectionManager = function (e) {\n  this.mouse = e, this.onSelect = new vg.Signal(), this.onDeselect = new vg.Signal(), this.selected = null, this.toggleSelection = !1, this.mouse.signal.add(this.onMouse, this);\n}, vg.SelectionManager.prototype = {\n  select: function (e, t) {\n    e && (t = t || !0, this.selected !== e && this.clearSelection(t), e.selected ? this.toggleSelection && (t && this.onDeselect.dispatch(e), e.deselect()) : e.select(), this.selected = e, t && this.onSelect.dispatch(e));\n  },\n  clearSelection: function (e) {\n    e = e || !0, this.selected && (e && this.onDeselect.dispatch(this.selected), this.selected.deselect()), this.selected = null;\n  },\n  onMouse: function (e, t) {\n    switch (e) {\n      case vg.MouseCaster.DOWN:\n        t || this.clearSelection();\n        break;\n\n      case vg.MouseCaster.CLICK:\n        this.select(t);\n    }\n  }\n}, vg.SelectionManager.prototype.constructor = vg.SelectionManager, vg.Tools = {\n  clamp: function (e, t, i) {\n    return Math.max(t, Math.min(i, e));\n  },\n  sign: function (e) {\n    return e && e / Math.abs(e);\n  },\n  random: function (e, t) {\n    return 1 === arguments.length ? Math.random() * e - .5 * e : Math.random() * (t - e) + e;\n  },\n  randomInt: function (e, t) {\n    return 1 === arguments.length ? Math.random() * e - .5 * e | 0 : Math.random() * (t - e + 1) + e | 0;\n  },\n  normalize: function (e, t, i) {\n    return (e - t) / (i - t);\n  },\n  getShortRotation: function (e) {\n    return e %= this.TAU, e > this.PI ? e -= this.TAU : e < -this.PI && (e += this.TAU), e;\n  },\n  generateID: function () {\n    return Math.random().toString(36).slice(2) + Date.now();\n  },\n  isPlainObject: function (e) {\n    if (\"object\" != typeof e || e.nodeType || e === e.window) return !1;\n\n    try {\n      if (e.constructor && !Object.prototype.hasOwnProperty.call(e.constructor.prototype, \"isPrototypeOf\")) return !1;\n    } catch (t) {\n      return !1;\n    }\n\n    return !0;\n  },\n  merge: function (e, t) {\n    var i = this,\n        s = Array.isArray(t),\n        n = s && [] || {};\n    return s ? (e = e || [], n = n.concat(e), t.forEach(function (t, s) {\n      \"undefined\" == typeof n[s] ? n[s] = t : i.isPlainObject(t) ? n[s] = i.merge(e[s], t) : -1 === e.indexOf(t) && n.push(t);\n    }), n) : (e && i.isPlainObject(e) && Object.keys(e).forEach(function (t) {\n      n[t] = e[t];\n    }), Object.keys(t).forEach(function (s) {\n      t[s] && i.isPlainObject(t[s]) && e[s] ? n[s] = i.merge(e[s], t[s]) : n[s] = t[s];\n    }), n);\n  },\n  now: function () {\n    return window.nwf ? window.nwf.system.Performance.elapsedTime : window.performance.now();\n  },\n  empty: function (e) {\n    for (; e.lastChild;) e.removeChild(e.lastChild);\n  },\n  radixSort: function (e, t, i, s) {\n    if (t = t || 0, i = i || e.length, s = s || 31, !(t >= i - 1 || 0 > s)) {\n      for (var n = t, l = i, r = 1 << s; l > n;) if (e[n] & r) {\n        --l;\n        var h = e[n];\n        e[n] = e[l], e[l] = h;\n      } else ++n;\n\n      this.radixSort(e, t, l, s - 1), this.radixSort(e, l, i, s - 1);\n    }\n  },\n  randomizeRGB: function (e, t) {\n    var i,\n        s,\n        n = e.split(\",\"),\n        l = \"rgb(\";\n\n    for (t = this.randomInt(t), i = 0; 3 > i; i++) s = parseInt(n[i]) + t, 0 > s ? s = 0 : s > 255 && (s = 255), l += s + \",\";\n\n    return l = l.substring(0, l.length - 1), l += \")\";\n  },\n  getJSON: function (e) {\n    var t = new XMLHttpRequest(),\n        i = \"undefined\" == typeof e.cache ? !1 : e.cache,\n        s = i ? e.url : e.url + \"?t=\" + Math.floor(1e4 * Math.random()) + Date.now();\n    t.onreadystatechange = function () {\n      if (200 === this.status) {\n        var t = null;\n\n        try {\n          t = JSON.parse(this.responseText);\n        } catch (i) {\n          return;\n        }\n\n        return void e.callback.call(e.scope || null, t);\n      }\n\n      0 !== this.status && console.warn(\"[Tools.getJSON] Error: \" + this.status + \" (\" + this.statusText + \") :: \" + e.url);\n    }, t.open(\"GET\", s, !0), t.setRequestHeader(\"Accept\", \"application/json\"), t.setRequestHeader(\"Content-Type\", \"application/json\"), t.send(\"\");\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/lib/hex-grid.min.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/lib/keyboard.polyfill.js":
/*!*************************************************************!*\
  !*** ./node_modules/aframe-extras/lib/keyboard.polyfill.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Polyfill for the additional KeyboardEvent properties defined in the D3E and\n * D4E draft specifications, by @inexorabletash.\n *\n * See: https://github.com/inexorabletash/polyfill\n */\n(function (global) {\n  var nativeKeyboardEvent = 'KeyboardEvent' in global;\n  if (!nativeKeyboardEvent) global.KeyboardEvent = function KeyboardEvent() {\n    throw TypeError('Illegal constructor');\n  };\n  if (!('DOM_KEY_LOCATION_STANDARD' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_STANDARD = 0x00; // Default or unknown location\n\n  if (!('DOM_KEY_LOCATION_LEFT' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_LEFT = 0x01; // e.g. Left Alt key\n\n  if (!('DOM_KEY_LOCATION_RIGHT' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_RIGHT = 0x02; // e.g. Right Alt key\n\n  if (!('DOM_KEY_LOCATION_NUMPAD' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD = 0x03; // e.g. Numpad 0 or +\n\n  var STANDARD = window.KeyboardEvent.DOM_KEY_LOCATION_STANDARD,\n      LEFT = window.KeyboardEvent.DOM_KEY_LOCATION_LEFT,\n      RIGHT = window.KeyboardEvent.DOM_KEY_LOCATION_RIGHT,\n      NUMPAD = window.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD; //--------------------------------------------------------------------\n  //\n  // Utilities\n  //\n  //--------------------------------------------------------------------\n\n  function contains(s, ss) {\n    return String(s).indexOf(ss) !== -1;\n  }\n\n  var os = function () {\n    if (contains(navigator.platform, 'Win')) {\n      return 'win';\n    }\n\n    if (contains(navigator.platform, 'Mac')) {\n      return 'mac';\n    }\n\n    if (contains(navigator.platform, 'CrOS')) {\n      return 'cros';\n    }\n\n    if (contains(navigator.platform, 'Linux')) {\n      return 'linux';\n    }\n\n    if (contains(navigator.userAgent, 'iPad') || contains(navigator.platform, 'iPod') || contains(navigator.platform, 'iPhone')) {\n      return 'ios';\n    }\n\n    return '';\n  }();\n\n  var browser = function () {\n    if (contains(navigator.userAgent, 'Chrome/')) {\n      return 'chrome';\n    }\n\n    if (contains(navigator.vendor, 'Apple')) {\n      return 'safari';\n    }\n\n    if (contains(navigator.userAgent, 'MSIE')) {\n      return 'ie';\n    }\n\n    if (contains(navigator.userAgent, 'Gecko/')) {\n      return 'moz';\n    }\n\n    if (contains(navigator.userAgent, 'Opera/')) {\n      return 'opera';\n    }\n\n    return '';\n  }();\n\n  var browser_os = browser + '-' + os;\n\n  function mergeIf(baseTable, select, table) {\n    if (browser_os === select || browser === select || os === select) {\n      Object.keys(table).forEach(function (keyCode) {\n        baseTable[keyCode] = table[keyCode];\n      });\n    }\n  }\n\n  function remap(o, key) {\n    var r = {};\n    Object.keys(o).forEach(function (k) {\n      var item = o[k];\n\n      if (key in item) {\n        r[item[key]] = item;\n      }\n    });\n    return r;\n  }\n\n  function invert(o) {\n    var r = {};\n    Object.keys(o).forEach(function (k) {\n      r[o[k]] = k;\n    });\n    return r;\n  } //--------------------------------------------------------------------\n  //\n  // Generic Mappings\n  //\n  //--------------------------------------------------------------------\n  // \"keyInfo\" is a dictionary:\n  //   code: string - name from DOM Level 3 KeyboardEvent code Values\n  //     https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3Events-code.html\n  //   location (optional): number - one of the DOM_KEY_LOCATION values\n  //   keyCap (optional): string - keyboard label in en-US locale\n  // USB code Usage ID from page 0x07 unless otherwise noted (Informative)\n  // Map of keyCode to keyInfo\n\n\n  var keyCodeToInfoTable = {\n    // 0x01 - VK_LBUTTON\n    // 0x02 - VK_RBUTTON\n    0x03: {\n      code: 'Cancel'\n    },\n    // [USB: 0x9b] char \\x0018 ??? (Not in D3E)\n    // 0x04 - VK_MBUTTON\n    // 0x05 - VK_XBUTTON1\n    // 0x06 - VK_XBUTTON2\n    0x06: {\n      code: 'Help'\n    },\n    // [USB: 0x75] ???\n    // 0x07 - undefined\n    0x08: {\n      code: 'Backspace'\n    },\n    // [USB: 0x2a] Labelled Delete on Macintosh keyboards.\n    0x09: {\n      code: 'Tab'\n    },\n    // [USB: 0x2b]\n    // 0x0A-0x0B - reserved\n    0X0C: {\n      code: 'Clear'\n    },\n    // [USB: 0x9c] NumPad Center (Not in D3E)\n    0X0D: {\n      code: 'Enter'\n    },\n    // [USB: 0x28]\n    // 0x0E-0x0F - undefined\n    0x10: {\n      code: 'Shift'\n    },\n    0x11: {\n      code: 'Control'\n    },\n    0x12: {\n      code: 'Alt'\n    },\n    0x13: {\n      code: 'Pause'\n    },\n    // [USB: 0x48]\n    0x14: {\n      code: 'CapsLock'\n    },\n    // [USB: 0x39]\n    0x15: {\n      code: 'KanaMode'\n    },\n    // [USB: 0x88] - \"HangulMode\" for Korean layout\n    0x16: {\n      code: 'HangulMode'\n    },\n    // [USB: 0x90] 0x15 as well in MSDN VK table ???\n    0x17: {\n      code: 'JunjaMode'\n    },\n    // (Not in D3E)\n    0x18: {\n      code: 'FinalMode'\n    },\n    // (Not in D3E)\n    0x19: {\n      code: 'KanjiMode'\n    },\n    // [USB: 0x91] - \"HanjaMode\" for Korean layout\n    // 0x1A - undefined\n    0x1B: {\n      code: 'Escape'\n    },\n    // [USB: 0x29]\n    0x1C: {\n      code: 'Convert'\n    },\n    // [USB: 0x8a]\n    0x1D: {\n      code: 'NonConvert'\n    },\n    // [USB: 0x8b]\n    0x1E: {\n      code: 'Accept'\n    },\n    // (Not in D3E)\n    0x1F: {\n      code: 'ModeChange'\n    },\n    // (Not in D3E)\n    0x20: {\n      code: 'Space'\n    },\n    // [USB: 0x2c]\n    0x21: {\n      code: 'PageUp'\n    },\n    // [USB: 0x4b]\n    0x22: {\n      code: 'PageDown'\n    },\n    // [USB: 0x4e]\n    0x23: {\n      code: 'End'\n    },\n    // [USB: 0x4d]\n    0x24: {\n      code: 'Home'\n    },\n    // [USB: 0x4a]\n    0x25: {\n      code: 'ArrowLeft'\n    },\n    // [USB: 0x50]\n    0x26: {\n      code: 'ArrowUp'\n    },\n    // [USB: 0x52]\n    0x27: {\n      code: 'ArrowRight'\n    },\n    // [USB: 0x4f]\n    0x28: {\n      code: 'ArrowDown'\n    },\n    // [USB: 0x51]\n    0x29: {\n      code: 'Select'\n    },\n    // (Not in D3E)\n    0x2A: {\n      code: 'Print'\n    },\n    // (Not in D3E)\n    0x2B: {\n      code: 'Execute'\n    },\n    // [USB: 0x74] (Not in D3E)\n    0x2C: {\n      code: 'PrintScreen'\n    },\n    // [USB: 0x46]\n    0x2D: {\n      code: 'Insert'\n    },\n    // [USB: 0x49]\n    0x2E: {\n      code: 'Delete'\n    },\n    // [USB: 0x4c]\n    0x2F: {\n      code: 'Help'\n    },\n    // [USB: 0x75] ???\n    0x30: {\n      code: 'Digit0',\n      keyCap: '0'\n    },\n    // [USB: 0x27] 0)\n    0x31: {\n      code: 'Digit1',\n      keyCap: '1'\n    },\n    // [USB: 0x1e] 1!\n    0x32: {\n      code: 'Digit2',\n      keyCap: '2'\n    },\n    // [USB: 0x1f] 2@\n    0x33: {\n      code: 'Digit3',\n      keyCap: '3'\n    },\n    // [USB: 0x20] 3#\n    0x34: {\n      code: 'Digit4',\n      keyCap: '4'\n    },\n    // [USB: 0x21] 4$\n    0x35: {\n      code: 'Digit5',\n      keyCap: '5'\n    },\n    // [USB: 0x22] 5%\n    0x36: {\n      code: 'Digit6',\n      keyCap: '6'\n    },\n    // [USB: 0x23] 6^\n    0x37: {\n      code: 'Digit7',\n      keyCap: '7'\n    },\n    // [USB: 0x24] 7&\n    0x38: {\n      code: 'Digit8',\n      keyCap: '8'\n    },\n    // [USB: 0x25] 8*\n    0x39: {\n      code: 'Digit9',\n      keyCap: '9'\n    },\n    // [USB: 0x26] 9(\n    // 0x3A-0x40 - undefined\n    0x41: {\n      code: 'KeyA',\n      keyCap: 'a'\n    },\n    // [USB: 0x04]\n    0x42: {\n      code: 'KeyB',\n      keyCap: 'b'\n    },\n    // [USB: 0x05]\n    0x43: {\n      code: 'KeyC',\n      keyCap: 'c'\n    },\n    // [USB: 0x06]\n    0x44: {\n      code: 'KeyD',\n      keyCap: 'd'\n    },\n    // [USB: 0x07]\n    0x45: {\n      code: 'KeyE',\n      keyCap: 'e'\n    },\n    // [USB: 0x08]\n    0x46: {\n      code: 'KeyF',\n      keyCap: 'f'\n    },\n    // [USB: 0x09]\n    0x47: {\n      code: 'KeyG',\n      keyCap: 'g'\n    },\n    // [USB: 0x0a]\n    0x48: {\n      code: 'KeyH',\n      keyCap: 'h'\n    },\n    // [USB: 0x0b]\n    0x49: {\n      code: 'KeyI',\n      keyCap: 'i'\n    },\n    // [USB: 0x0c]\n    0x4A: {\n      code: 'KeyJ',\n      keyCap: 'j'\n    },\n    // [USB: 0x0d]\n    0x4B: {\n      code: 'KeyK',\n      keyCap: 'k'\n    },\n    // [USB: 0x0e]\n    0x4C: {\n      code: 'KeyL',\n      keyCap: 'l'\n    },\n    // [USB: 0x0f]\n    0x4D: {\n      code: 'KeyM',\n      keyCap: 'm'\n    },\n    // [USB: 0x10]\n    0x4E: {\n      code: 'KeyN',\n      keyCap: 'n'\n    },\n    // [USB: 0x11]\n    0x4F: {\n      code: 'KeyO',\n      keyCap: 'o'\n    },\n    // [USB: 0x12]\n    0x50: {\n      code: 'KeyP',\n      keyCap: 'p'\n    },\n    // [USB: 0x13]\n    0x51: {\n      code: 'KeyQ',\n      keyCap: 'q'\n    },\n    // [USB: 0x14]\n    0x52: {\n      code: 'KeyR',\n      keyCap: 'r'\n    },\n    // [USB: 0x15]\n    0x53: {\n      code: 'KeyS',\n      keyCap: 's'\n    },\n    // [USB: 0x16]\n    0x54: {\n      code: 'KeyT',\n      keyCap: 't'\n    },\n    // [USB: 0x17]\n    0x55: {\n      code: 'KeyU',\n      keyCap: 'u'\n    },\n    // [USB: 0x18]\n    0x56: {\n      code: 'KeyV',\n      keyCap: 'v'\n    },\n    // [USB: 0x19]\n    0x57: {\n      code: 'KeyW',\n      keyCap: 'w'\n    },\n    // [USB: 0x1a]\n    0x58: {\n      code: 'KeyX',\n      keyCap: 'x'\n    },\n    // [USB: 0x1b]\n    0x59: {\n      code: 'KeyY',\n      keyCap: 'y'\n    },\n    // [USB: 0x1c]\n    0x5A: {\n      code: 'KeyZ',\n      keyCap: 'z'\n    },\n    // [USB: 0x1d]\n    0x5B: {\n      code: 'OSLeft',\n      location: LEFT\n    },\n    // [USB: 0xe3]\n    0x5C: {\n      code: 'OSRight',\n      location: RIGHT\n    },\n    // [USB: 0xe7]\n    0x5D: {\n      code: 'ContextMenu'\n    },\n    // [USB: 0x65] Context Menu\n    // 0x5E - reserved\n    0x5F: {\n      code: 'Standby'\n    },\n    // [USB: 0x82] Sleep\n    0x60: {\n      code: 'Numpad0',\n      keyCap: '0',\n      location: NUMPAD\n    },\n    // [USB: 0x62]\n    0x61: {\n      code: 'Numpad1',\n      keyCap: '1',\n      location: NUMPAD\n    },\n    // [USB: 0x59]\n    0x62: {\n      code: 'Numpad2',\n      keyCap: '2',\n      location: NUMPAD\n    },\n    // [USB: 0x5a]\n    0x63: {\n      code: 'Numpad3',\n      keyCap: '3',\n      location: NUMPAD\n    },\n    // [USB: 0x5b]\n    0x64: {\n      code: 'Numpad4',\n      keyCap: '4',\n      location: NUMPAD\n    },\n    // [USB: 0x5c]\n    0x65: {\n      code: 'Numpad5',\n      keyCap: '5',\n      location: NUMPAD\n    },\n    // [USB: 0x5d]\n    0x66: {\n      code: 'Numpad6',\n      keyCap: '6',\n      location: NUMPAD\n    },\n    // [USB: 0x5e]\n    0x67: {\n      code: 'Numpad7',\n      keyCap: '7',\n      location: NUMPAD\n    },\n    // [USB: 0x5f]\n    0x68: {\n      code: 'Numpad8',\n      keyCap: '8',\n      location: NUMPAD\n    },\n    // [USB: 0x60]\n    0x69: {\n      code: 'Numpad9',\n      keyCap: '9',\n      location: NUMPAD\n    },\n    // [USB: 0x61]\n    0x6A: {\n      code: 'NumpadMultiply',\n      keyCap: '*',\n      location: NUMPAD\n    },\n    // [USB: 0x55]\n    0x6B: {\n      code: 'NumpadAdd',\n      keyCap: '+',\n      location: NUMPAD\n    },\n    // [USB: 0x57]\n    0x6C: {\n      code: 'NumpadComma',\n      keyCap: ',',\n      location: NUMPAD\n    },\n    // [USB: 0x85]\n    0x6D: {\n      code: 'NumpadSubtract',\n      keyCap: '-',\n      location: NUMPAD\n    },\n    // [USB: 0x56]\n    0x6E: {\n      code: 'NumpadDecimal',\n      keyCap: '.',\n      location: NUMPAD\n    },\n    // [USB: 0x63]\n    0x6F: {\n      code: 'NumpadDivide',\n      keyCap: '/',\n      location: NUMPAD\n    },\n    // [USB: 0x54]\n    0x70: {\n      code: 'F1'\n    },\n    // [USB: 0x3a]\n    0x71: {\n      code: 'F2'\n    },\n    // [USB: 0x3b]\n    0x72: {\n      code: 'F3'\n    },\n    // [USB: 0x3c]\n    0x73: {\n      code: 'F4'\n    },\n    // [USB: 0x3d]\n    0x74: {\n      code: 'F5'\n    },\n    // [USB: 0x3e]\n    0x75: {\n      code: 'F6'\n    },\n    // [USB: 0x3f]\n    0x76: {\n      code: 'F7'\n    },\n    // [USB: 0x40]\n    0x77: {\n      code: 'F8'\n    },\n    // [USB: 0x41]\n    0x78: {\n      code: 'F9'\n    },\n    // [USB: 0x42]\n    0x79: {\n      code: 'F10'\n    },\n    // [USB: 0x43]\n    0x7A: {\n      code: 'F11'\n    },\n    // [USB: 0x44]\n    0x7B: {\n      code: 'F12'\n    },\n    // [USB: 0x45]\n    0x7C: {\n      code: 'F13'\n    },\n    // [USB: 0x68]\n    0x7D: {\n      code: 'F14'\n    },\n    // [USB: 0x69]\n    0x7E: {\n      code: 'F15'\n    },\n    // [USB: 0x6a]\n    0x7F: {\n      code: 'F16'\n    },\n    // [USB: 0x6b]\n    0x80: {\n      code: 'F17'\n    },\n    // [USB: 0x6c]\n    0x81: {\n      code: 'F18'\n    },\n    // [USB: 0x6d]\n    0x82: {\n      code: 'F19'\n    },\n    // [USB: 0x6e]\n    0x83: {\n      code: 'F20'\n    },\n    // [USB: 0x6f]\n    0x84: {\n      code: 'F21'\n    },\n    // [USB: 0x70]\n    0x85: {\n      code: 'F22'\n    },\n    // [USB: 0x71]\n    0x86: {\n      code: 'F23'\n    },\n    // [USB: 0x72]\n    0x87: {\n      code: 'F24'\n    },\n    // [USB: 0x73]\n    // 0x88-0x8F - unassigned\n    0x90: {\n      code: 'NumLock',\n      location: NUMPAD\n    },\n    // [USB: 0x53]\n    0x91: {\n      code: 'ScrollLock'\n    },\n    // [USB: 0x47]\n    // 0x92-0x96 - OEM specific\n    // 0x97-0x9F - unassigned\n    // NOTE: 0xA0-0xA5 usually mapped to 0x10-0x12 in browsers\n    0xA0: {\n      code: 'ShiftLeft',\n      location: LEFT\n    },\n    // [USB: 0xe1]\n    0xA1: {\n      code: 'ShiftRight',\n      location: RIGHT\n    },\n    // [USB: 0xe5]\n    0xA2: {\n      code: 'ControlLeft',\n      location: LEFT\n    },\n    // [USB: 0xe0]\n    0xA3: {\n      code: 'ControlRight',\n      location: RIGHT\n    },\n    // [USB: 0xe4]\n    0xA4: {\n      code: 'AltLeft',\n      location: LEFT\n    },\n    // [USB: 0xe2]\n    0xA5: {\n      code: 'AltRight',\n      location: RIGHT\n    },\n    // [USB: 0xe6]\n    0xA6: {\n      code: 'BrowserBack'\n    },\n    // [USB: 0x0c/0x0224]\n    0xA7: {\n      code: 'BrowserForward'\n    },\n    // [USB: 0x0c/0x0225]\n    0xA8: {\n      code: 'BrowserRefresh'\n    },\n    // [USB: 0x0c/0x0227]\n    0xA9: {\n      code: 'BrowserStop'\n    },\n    // [USB: 0x0c/0x0226]\n    0xAA: {\n      code: 'BrowserSearch'\n    },\n    // [USB: 0x0c/0x0221]\n    0xAB: {\n      code: 'BrowserFavorites'\n    },\n    // [USB: 0x0c/0x0228]\n    0xAC: {\n      code: 'BrowserHome'\n    },\n    // [USB: 0x0c/0x0222]\n    0xAD: {\n      code: 'VolumeMute'\n    },\n    // [USB: 0x7f]\n    0xAE: {\n      code: 'VolumeDown'\n    },\n    // [USB: 0x81]\n    0xAF: {\n      code: 'VolumeUp'\n    },\n    // [USB: 0x80]\n    0xB0: {\n      code: 'MediaTrackNext'\n    },\n    // [USB: 0x0c/0x00b5]\n    0xB1: {\n      code: 'MediaTrackPrevious'\n    },\n    // [USB: 0x0c/0x00b6]\n    0xB2: {\n      code: 'MediaStop'\n    },\n    // [USB: 0x0c/0x00b7]\n    0xB3: {\n      code: 'MediaPlayPause'\n    },\n    // [USB: 0x0c/0x00cd]\n    0xB4: {\n      code: 'LaunchMail'\n    },\n    // [USB: 0x0c/0x018a]\n    0xB5: {\n      code: 'MediaSelect'\n    },\n    0xB6: {\n      code: 'LaunchApp1'\n    },\n    0xB7: {\n      code: 'LaunchApp2'\n    },\n    // 0xB8-0xB9 - reserved\n    0xBA: {\n      code: 'Semicolon',\n      keyCap: ';'\n    },\n    // [USB: 0x33] ;: (US Standard 101)\n    0xBB: {\n      code: 'Equal',\n      keyCap: '='\n    },\n    // [USB: 0x2e] =+\n    0xBC: {\n      code: 'Comma',\n      keyCap: ','\n    },\n    // [USB: 0x36] ,<\n    0xBD: {\n      code: 'Minus',\n      keyCap: '-'\n    },\n    // [USB: 0x2d] -_\n    0xBE: {\n      code: 'Period',\n      keyCap: '.'\n    },\n    // [USB: 0x37] .>\n    0xBF: {\n      code: 'Slash',\n      keyCap: '/'\n    },\n    // [USB: 0x38] /? (US Standard 101)\n    0xC0: {\n      code: 'Backquote',\n      keyCap: '`'\n    },\n    // [USB: 0x35] `~ (US Standard 101)\n    // 0xC1-0xCF - reserved\n    // 0xD0-0xD7 - reserved\n    // 0xD8-0xDA - unassigned\n    0xDB: {\n      code: 'BracketLeft',\n      keyCap: '['\n    },\n    // [USB: 0x2f] [{ (US Standard 101)\n    0xDC: {\n      code: 'Backslash',\n      keyCap: '\\\\'\n    },\n    // [USB: 0x31] \\| (US Standard 101)\n    0xDD: {\n      code: 'BracketRight',\n      keyCap: ']'\n    },\n    // [USB: 0x30] ]} (US Standard 101)\n    0xDE: {\n      code: 'Quote',\n      keyCap: '\\''\n    },\n    // [USB: 0x34] '\" (US Standard 101)\n    // 0xDF - miscellaneous/varies\n    // 0xE0 - reserved\n    // 0xE1 - OEM specific\n    0xE2: {\n      code: 'IntlBackslash',\n      keyCap: '\\\\'\n    },\n    // [USB: 0x64] \\| (UK Standard 102)\n    // 0xE3-0xE4 - OEM specific\n    0xE5: {\n      code: 'Process'\n    },\n    // (Not in D3E)\n    // 0xE6 - OEM specific\n    // 0xE7 - VK_PACKET\n    // 0xE8 - unassigned\n    // 0xE9-0xEF - OEM specific\n    // 0xF0-0xF5 - OEM specific\n    0xF6: {\n      code: 'Attn'\n    },\n    // [USB: 0x9a] (Not in D3E)\n    0xF7: {\n      code: 'CrSel'\n    },\n    // [USB: 0xa3] (Not in D3E)\n    0xF8: {\n      code: 'ExSel'\n    },\n    // [USB: 0xa4] (Not in D3E)\n    0xF9: {\n      code: 'EraseEof'\n    },\n    // (Not in D3E)\n    0xFA: {\n      code: 'Play'\n    },\n    // (Not in D3E)\n    0xFB: {\n      code: 'ZoomToggle'\n    },\n    // (Not in D3E)\n    // 0xFC - VK_NONAME - reserved\n    // 0xFD - VK_PA1\n    0xFE: {\n      code: 'Clear' // [USB: 0x9c] (Not in D3E)\n\n    }\n  }; // No legacy keyCode, but listed in D3E:\n  // code: usb\n  // 'IntlHash': 0x070032,\n  // 'IntlRo': 0x070087,\n  // 'IntlYen': 0x070089,\n  // 'NumpadBackspace': 0x0700bb,\n  // 'NumpadClear': 0x0700d8,\n  // 'NumpadClearEntry': 0x0700d9,\n  // 'NumpadMemoryAdd': 0x0700d3,\n  // 'NumpadMemoryClear': 0x0700d2,\n  // 'NumpadMemoryRecall': 0x0700d1,\n  // 'NumpadMemoryStore': 0x0700d0,\n  // 'NumpadMemorySubtract': 0x0700d4,\n  // 'NumpadParenLeft': 0x0700b6,\n  // 'NumpadParenRight': 0x0700b7,\n  //--------------------------------------------------------------------\n  //\n  // Browser/OS Specific Mappings\n  //\n  //--------------------------------------------------------------------\n\n  mergeIf(keyCodeToInfoTable, 'moz', {\n    0x3B: {\n      code: 'Semicolon',\n      keyCap: ';'\n    },\n    // [USB: 0x33] ;: (US Standard 101)\n    0x3D: {\n      code: 'Equal',\n      keyCap: '='\n    },\n    // [USB: 0x2e] =+\n    0x6B: {\n      code: 'Equal',\n      keyCap: '='\n    },\n    // [USB: 0x2e] =+\n    0x6D: {\n      code: 'Minus',\n      keyCap: '-'\n    },\n    // [USB: 0x2d] -_\n    0xBB: {\n      code: 'NumpadAdd',\n      keyCap: '+',\n      location: NUMPAD\n    },\n    // [USB: 0x57]\n    0xBD: {\n      code: 'NumpadSubtract',\n      keyCap: '-',\n      location: NUMPAD // [USB: 0x56]\n\n    }\n  });\n  mergeIf(keyCodeToInfoTable, 'moz-mac', {\n    0x0C: {\n      code: 'NumLock',\n      location: NUMPAD\n    },\n    // [USB: 0x53]\n    0xAD: {\n      code: 'Minus',\n      keyCap: '-' // [USB: 0x2d] -_\n\n    }\n  });\n  mergeIf(keyCodeToInfoTable, 'moz-win', {\n    0xAD: {\n      code: 'Minus',\n      keyCap: '-' // [USB: 0x2d] -_\n\n    }\n  });\n  mergeIf(keyCodeToInfoTable, 'chrome-mac', {\n    0x5D: {\n      code: 'OSRight',\n      location: RIGHT // [USB: 0xe7]\n\n    }\n  }); // Windows via Bootcamp (!)\n\n  if (0) {}\n\n  mergeIf(keyCodeToInfoTable, 'safari', {\n    0x03: {\n      code: 'Enter'\n    },\n    // [USB: 0x28] old Safari\n    0x19: {\n      code: 'Tab' // [USB: 0x2b] old Safari for Shift+Tab\n\n    }\n  });\n  mergeIf(keyCodeToInfoTable, 'ios', {\n    0x0A: {\n      code: 'Enter',\n      location: STANDARD // [USB: 0x28]\n\n    }\n  });\n  mergeIf(keyCodeToInfoTable, 'safari-mac', {\n    0x5B: {\n      code: 'OSLeft',\n      location: LEFT\n    },\n    // [USB: 0xe3]\n    0x5D: {\n      code: 'OSRight',\n      location: RIGHT\n    },\n    // [USB: 0xe7]\n    0xE5: {\n      code: 'KeyQ',\n      keyCap: 'Q' // [USB: 0x14] On alternate presses, Ctrl+Q sends this\n\n    }\n  }); //--------------------------------------------------------------------\n  //\n  // Identifier Mappings\n  //\n  //--------------------------------------------------------------------\n  // Cases where newer-ish browsers send keyIdentifier which can be\n  // used to disambiguate keys.\n  // keyIdentifierTable[keyIdentifier] -> keyInfo\n\n  var keyIdentifierTable = {};\n\n  if ('cros' === os) {\n    keyIdentifierTable['U+00A0'] = {\n      code: 'ShiftLeft',\n      location: LEFT\n    };\n    keyIdentifierTable['U+00A1'] = {\n      code: 'ShiftRight',\n      location: RIGHT\n    };\n    keyIdentifierTable['U+00A2'] = {\n      code: 'ControlLeft',\n      location: LEFT\n    };\n    keyIdentifierTable['U+00A3'] = {\n      code: 'ControlRight',\n      location: RIGHT\n    };\n    keyIdentifierTable['U+00A4'] = {\n      code: 'AltLeft',\n      location: LEFT\n    };\n    keyIdentifierTable['U+00A5'] = {\n      code: 'AltRight',\n      location: RIGHT\n    };\n  }\n\n  if ('chrome-mac' === browser_os) {\n    keyIdentifierTable['U+0010'] = {\n      code: 'ContextMenu'\n    };\n  }\n\n  if ('safari-mac' === browser_os) {\n    keyIdentifierTable['U+0010'] = {\n      code: 'ContextMenu'\n    };\n  }\n\n  if ('ios' === os) {\n    // These only generate keyup events\n    keyIdentifierTable['U+0010'] = {\n      code: 'Function'\n    };\n    keyIdentifierTable['U+001C'] = {\n      code: 'ArrowLeft'\n    };\n    keyIdentifierTable['U+001D'] = {\n      code: 'ArrowRight'\n    };\n    keyIdentifierTable['U+001E'] = {\n      code: 'ArrowUp'\n    };\n    keyIdentifierTable['U+001F'] = {\n      code: 'ArrowDown'\n    };\n    keyIdentifierTable['U+0001'] = {\n      code: 'Home'\n    }; // [USB: 0x4a] Fn + ArrowLeft\n\n    keyIdentifierTable['U+0004'] = {\n      code: 'End'\n    }; // [USB: 0x4d] Fn + ArrowRight\n\n    keyIdentifierTable['U+000B'] = {\n      code: 'PageUp'\n    }; // [USB: 0x4b] Fn + ArrowUp\n\n    keyIdentifierTable['U+000C'] = {\n      code: 'PageDown'\n    }; // [USB: 0x4e] Fn + ArrowDown\n  } //--------------------------------------------------------------------\n  //\n  // Location Mappings\n  //\n  //--------------------------------------------------------------------\n  // Cases where newer-ish browsers send location/keyLocation which\n  // can be used to disambiguate keys.\n  // locationTable[location][keyCode] -> keyInfo\n\n\n  var locationTable = [];\n  locationTable[LEFT] = {\n    0x10: {\n      code: 'ShiftLeft',\n      location: LEFT\n    },\n    // [USB: 0xe1]\n    0x11: {\n      code: 'ControlLeft',\n      location: LEFT\n    },\n    // [USB: 0xe0]\n    0x12: {\n      code: 'AltLeft',\n      location: LEFT // [USB: 0xe2]\n\n    }\n  };\n  locationTable[RIGHT] = {\n    0x10: {\n      code: 'ShiftRight',\n      location: RIGHT\n    },\n    // [USB: 0xe5]\n    0x11: {\n      code: 'ControlRight',\n      location: RIGHT\n    },\n    // [USB: 0xe4]\n    0x12: {\n      code: 'AltRight',\n      location: RIGHT // [USB: 0xe6]\n\n    }\n  };\n  locationTable[NUMPAD] = {\n    0x0D: {\n      code: 'NumpadEnter',\n      location: NUMPAD // [USB: 0x58]\n\n    }\n  };\n  mergeIf(locationTable[NUMPAD], 'moz', {\n    0x6D: {\n      code: 'NumpadSubtract',\n      location: NUMPAD\n    },\n    // [USB: 0x56]\n    0x6B: {\n      code: 'NumpadAdd',\n      location: NUMPAD // [USB: 0x57]\n\n    }\n  });\n  mergeIf(locationTable[LEFT], 'moz-mac', {\n    0xE0: {\n      code: 'OSLeft',\n      location: LEFT // [USB: 0xe3]\n\n    }\n  });\n  mergeIf(locationTable[RIGHT], 'moz-mac', {\n    0xE0: {\n      code: 'OSRight',\n      location: RIGHT // [USB: 0xe7]\n\n    }\n  });\n  mergeIf(locationTable[RIGHT], 'moz-win', {\n    0x5B: {\n      code: 'OSRight',\n      location: RIGHT // [USB: 0xe7]\n\n    }\n  });\n  mergeIf(locationTable[RIGHT], 'mac', {\n    0x5D: {\n      code: 'OSRight',\n      location: RIGHT // [USB: 0xe7]\n\n    }\n  });\n  mergeIf(locationTable[NUMPAD], 'chrome-mac', {\n    0x0C: {\n      code: 'NumLock',\n      location: NUMPAD // [USB: 0x53]\n\n    }\n  });\n  mergeIf(locationTable[NUMPAD], 'safari-mac', {\n    0x0C: {\n      code: 'NumLock',\n      location: NUMPAD\n    },\n    // [USB: 0x53]\n    0xBB: {\n      code: 'NumpadAdd',\n      location: NUMPAD\n    },\n    // [USB: 0x57]\n    0xBD: {\n      code: 'NumpadSubtract',\n      location: NUMPAD\n    },\n    // [USB: 0x56]\n    0xBE: {\n      code: 'NumpadDecimal',\n      location: NUMPAD\n    },\n    // [USB: 0x63]\n    0xBF: {\n      code: 'NumpadDivide',\n      location: NUMPAD // [USB: 0x54]\n\n    }\n  }); //--------------------------------------------------------------------\n  //\n  // Key Values\n  //\n  //--------------------------------------------------------------------\n  // Mapping from `code` values to `key` values. Values defined at:\n  // https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3Events-key.html\n  // Entries are only provided when `key` differs from `code`. If\n  // printable, `shiftKey` has the shifted printable character. This\n  // assumes US Standard 101 layout\n\n  var codeToKeyTable = {\n    // Modifier Keys\n    ShiftLeft: {\n      key: 'Shift'\n    },\n    ShiftRight: {\n      key: 'Shift'\n    },\n    ControlLeft: {\n      key: 'Control'\n    },\n    ControlRight: {\n      key: 'Control'\n    },\n    AltLeft: {\n      key: 'Alt'\n    },\n    AltRight: {\n      key: 'Alt'\n    },\n    OSLeft: {\n      key: 'OS'\n    },\n    OSRight: {\n      key: 'OS'\n    },\n    // Whitespace Keys\n    NumpadEnter: {\n      key: 'Enter'\n    },\n    Space: {\n      key: ' '\n    },\n    // Printable Keys\n    Digit0: {\n      key: '0',\n      shiftKey: ')'\n    },\n    Digit1: {\n      key: '1',\n      shiftKey: '!'\n    },\n    Digit2: {\n      key: '2',\n      shiftKey: '@'\n    },\n    Digit3: {\n      key: '3',\n      shiftKey: '#'\n    },\n    Digit4: {\n      key: '4',\n      shiftKey: '$'\n    },\n    Digit5: {\n      key: '5',\n      shiftKey: '%'\n    },\n    Digit6: {\n      key: '6',\n      shiftKey: '^'\n    },\n    Digit7: {\n      key: '7',\n      shiftKey: '&'\n    },\n    Digit8: {\n      key: '8',\n      shiftKey: '*'\n    },\n    Digit9: {\n      key: '9',\n      shiftKey: '('\n    },\n    KeyA: {\n      key: 'a',\n      shiftKey: 'A'\n    },\n    KeyB: {\n      key: 'b',\n      shiftKey: 'B'\n    },\n    KeyC: {\n      key: 'c',\n      shiftKey: 'C'\n    },\n    KeyD: {\n      key: 'd',\n      shiftKey: 'D'\n    },\n    KeyE: {\n      key: 'e',\n      shiftKey: 'E'\n    },\n    KeyF: {\n      key: 'f',\n      shiftKey: 'F'\n    },\n    KeyG: {\n      key: 'g',\n      shiftKey: 'G'\n    },\n    KeyH: {\n      key: 'h',\n      shiftKey: 'H'\n    },\n    KeyI: {\n      key: 'i',\n      shiftKey: 'I'\n    },\n    KeyJ: {\n      key: 'j',\n      shiftKey: 'J'\n    },\n    KeyK: {\n      key: 'k',\n      shiftKey: 'K'\n    },\n    KeyL: {\n      key: 'l',\n      shiftKey: 'L'\n    },\n    KeyM: {\n      key: 'm',\n      shiftKey: 'M'\n    },\n    KeyN: {\n      key: 'n',\n      shiftKey: 'N'\n    },\n    KeyO: {\n      key: 'o',\n      shiftKey: 'O'\n    },\n    KeyP: {\n      key: 'p',\n      shiftKey: 'P'\n    },\n    KeyQ: {\n      key: 'q',\n      shiftKey: 'Q'\n    },\n    KeyR: {\n      key: 'r',\n      shiftKey: 'R'\n    },\n    KeyS: {\n      key: 's',\n      shiftKey: 'S'\n    },\n    KeyT: {\n      key: 't',\n      shiftKey: 'T'\n    },\n    KeyU: {\n      key: 'u',\n      shiftKey: 'U'\n    },\n    KeyV: {\n      key: 'v',\n      shiftKey: 'V'\n    },\n    KeyW: {\n      key: 'w',\n      shiftKey: 'W'\n    },\n    KeyX: {\n      key: 'x',\n      shiftKey: 'X'\n    },\n    KeyY: {\n      key: 'y',\n      shiftKey: 'Y'\n    },\n    KeyZ: {\n      key: 'z',\n      shiftKey: 'Z'\n    },\n    Numpad0: {\n      key: '0'\n    },\n    Numpad1: {\n      key: '1'\n    },\n    Numpad2: {\n      key: '2'\n    },\n    Numpad3: {\n      key: '3'\n    },\n    Numpad4: {\n      key: '4'\n    },\n    Numpad5: {\n      key: '5'\n    },\n    Numpad6: {\n      key: '6'\n    },\n    Numpad7: {\n      key: '7'\n    },\n    Numpad8: {\n      key: '8'\n    },\n    Numpad9: {\n      key: '9'\n    },\n    NumpadMultiply: {\n      key: '*'\n    },\n    NumpadAdd: {\n      key: '+'\n    },\n    NumpadComma: {\n      key: ','\n    },\n    NumpadSubtract: {\n      key: '-'\n    },\n    NumpadDecimal: {\n      key: '.'\n    },\n    NumpadDivide: {\n      key: '/'\n    },\n    Semicolon: {\n      key: ';',\n      shiftKey: ':'\n    },\n    Equal: {\n      key: '=',\n      shiftKey: '+'\n    },\n    Comma: {\n      key: ',',\n      shiftKey: '<'\n    },\n    Minus: {\n      key: '-',\n      shiftKey: '_'\n    },\n    Period: {\n      key: '.',\n      shiftKey: '>'\n    },\n    Slash: {\n      key: '/',\n      shiftKey: '?'\n    },\n    Backquote: {\n      key: '`',\n      shiftKey: '~'\n    },\n    BracketLeft: {\n      key: '[',\n      shiftKey: '{'\n    },\n    Backslash: {\n      key: '\\\\',\n      shiftKey: '|'\n    },\n    BracketRight: {\n      key: ']',\n      shiftKey: '}'\n    },\n    Quote: {\n      key: '\\'',\n      shiftKey: '\"'\n    },\n    IntlBackslash: {\n      key: '\\\\',\n      shiftKey: '|'\n    }\n  };\n  mergeIf(codeToKeyTable, 'mac', {\n    OSLeft: {\n      key: 'Meta'\n    },\n    OSRight: {\n      key: 'Meta'\n    }\n  }); // Corrections for 'key' names in older browsers (e.g. FF36-)\n  // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent.key#Key_values\n\n  var keyFixTable = {\n    Esc: 'Escape',\n    Nonconvert: 'NonConvert',\n    Left: 'ArrowLeft',\n    Up: 'ArrowUp',\n    Right: 'ArrowRight',\n    Down: 'ArrowDown',\n    Del: 'Delete',\n    Menu: 'ContextMenu',\n    MediaNextTrack: 'MediaTrackNext',\n    MediaPreviousTrack: 'MediaTrackPrevious',\n    SelectMedia: 'MediaSelect',\n    HalfWidth: 'Hankaku',\n    FullWidth: 'Zenkaku',\n    RomanCharacters: 'Romaji',\n    Crsel: 'CrSel',\n    Exsel: 'ExSel',\n    Zoom: 'ZoomToggle'\n  }; //--------------------------------------------------------------------\n  //\n  // Exported Functions\n  //\n  //--------------------------------------------------------------------\n\n  var codeTable = remap(keyCodeToInfoTable, 'code');\n\n  try {\n    var nativeLocation = nativeKeyboardEvent && 'location' in new KeyboardEvent('');\n  } catch (_) {}\n\n  function keyInfoForEvent(event) {\n    var keyCode = 'keyCode' in event ? event.keyCode : 'which' in event ? event.which : 0;\n\n    var keyInfo = function () {\n      if (nativeLocation || 'keyLocation' in event) {\n        var location = nativeLocation ? event.location : event.keyLocation;\n\n        if (location && keyCode in locationTable[location]) {\n          return locationTable[location][keyCode];\n        }\n      }\n\n      if ('keyIdentifier' in event && event.keyIdentifier in keyIdentifierTable) {\n        return keyIdentifierTable[event.keyIdentifier];\n      }\n\n      if (keyCode in keyCodeToInfoTable) {\n        return keyCodeToInfoTable[keyCode];\n      }\n\n      return null;\n    }(); // TODO: Track these down and move to general tables\n\n\n    if (0) {}\n\n    if (!keyInfo) return null;\n\n    var key = function () {\n      var entry = codeToKeyTable[keyInfo.code];\n      if (!entry) return keyInfo.code;\n      return event.shiftKey && 'shiftKey' in entry ? entry.shiftKey : entry.key;\n    }();\n\n    return {\n      code: keyInfo.code,\n      key: key,\n      location: keyInfo.location,\n      keyCap: keyInfo.keyCap\n    };\n  }\n\n  function queryKeyCap(code, locale) {\n    code = String(code);\n    if (!codeTable.hasOwnProperty(code)) return 'Undefined';\n    if (locale && String(locale).toLowerCase() !== 'en-us') throw Error('Unsupported locale');\n    var keyInfo = codeTable[code];\n    return keyInfo.keyCap || keyInfo.code || 'Undefined';\n  }\n\n  if ('KeyboardEvent' in global && 'defineProperty' in Object) {\n    (function () {\n      function define(o, p, v) {\n        if (p in o) return;\n        Object.defineProperty(o, p, v);\n      }\n\n      define(KeyboardEvent.prototype, 'code', {\n        get: function () {\n          var keyInfo = keyInfoForEvent(this);\n          return keyInfo ? keyInfo.code : '';\n        }\n      }); // Fix for nonstandard `key` values (FF36-)\n\n      if ('key' in KeyboardEvent.prototype) {\n        var desc = Object.getOwnPropertyDescriptor(KeyboardEvent.prototype, 'key');\n        Object.defineProperty(KeyboardEvent.prototype, 'key', {\n          get: function () {\n            var key = desc.get.call(this);\n            return keyFixTable.hasOwnProperty(key) ? keyFixTable[key] : key;\n          }\n        });\n      }\n\n      define(KeyboardEvent.prototype, 'key', {\n        get: function () {\n          var keyInfo = keyInfoForEvent(this);\n          return keyInfo && 'key' in keyInfo ? keyInfo.key : 'Unidentified';\n        }\n      });\n      define(KeyboardEvent.prototype, 'location', {\n        get: function () {\n          var keyInfo = keyInfoForEvent(this);\n          return keyInfo && 'location' in keyInfo ? keyInfo.location : STANDARD;\n        }\n      });\n      define(KeyboardEvent.prototype, 'locale', {\n        get: function () {\n          return '';\n        }\n      });\n    })();\n  }\n\n  if (!('queryKeyCap' in global.KeyboardEvent)) global.KeyboardEvent.queryKeyCap = queryKeyCap; // Helper for IE8-\n\n  global.identifyKey = function (event) {\n    if ('code' in event) return;\n    var keyInfo = keyInfoForEvent(event);\n    event.code = keyInfo ? keyInfo.code : '';\n    event.key = keyInfo && 'key' in keyInfo ? keyInfo.key : 'Unidentified';\n    event.location = 'location' in event ? event.location : 'keyLocation' in event ? event.keyLocation : keyInfo && 'location' in keyInfo ? keyInfo.location : STANDARD;\n    event.locale = '';\n  };\n})(window);\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/lib/keyboard.polyfill.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/controls/checkpoint-controls.js":
/*!************************************************************************!*\
  !*** ./node_modules/aframe-extras/src/controls/checkpoint-controls.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const EPS = 0.1;\nmodule.exports = AFRAME.registerComponent('checkpoint-controls', {\n  schema: {\n    enabled: {\n      default: true\n    },\n    mode: {\n      default: 'teleport',\n      oneOf: ['teleport', 'animate']\n    },\n    animateSpeed: {\n      default: 3.0\n    }\n  },\n  init: function () {\n    this.active = true;\n    this.checkpoint = null;\n    this.isNavMeshConstrained = false;\n    this.offset = new THREE.Vector3();\n    this.position = new THREE.Vector3();\n    this.targetPosition = new THREE.Vector3();\n  },\n  play: function () {\n    this.active = true;\n  },\n  pause: function () {\n    this.active = false;\n  },\n  setCheckpoint: function (checkpoint) {\n    const el = this.el;\n    if (!this.active) return;\n    if (this.checkpoint === checkpoint) return;\n\n    if (this.checkpoint) {\n      el.emit('navigation-end', {\n        checkpoint: this.checkpoint\n      });\n    }\n\n    this.checkpoint = checkpoint;\n    this.sync(); // Ignore new checkpoint if we're already there.\n\n    if (this.position.distanceTo(this.targetPosition) < EPS) {\n      this.checkpoint = null;\n      return;\n    }\n\n    el.emit('navigation-start', {\n      checkpoint: checkpoint\n    });\n\n    if (this.data.mode === 'teleport') {\n      this.el.setAttribute('position', this.targetPosition);\n      this.checkpoint = null;\n      el.emit('navigation-end', {\n        checkpoint: checkpoint\n      });\n      el.components['movement-controls'].updateNavLocation();\n    }\n  },\n  isVelocityActive: function () {\n    return !!(this.active && this.checkpoint);\n  },\n  getVelocity: function () {\n    if (!this.active) return;\n    const data = this.data;\n    const offset = this.offset;\n    const position = this.position;\n    const targetPosition = this.targetPosition;\n    const checkpoint = this.checkpoint;\n    this.sync();\n\n    if (position.distanceTo(targetPosition) < EPS) {\n      this.checkpoint = null;\n      this.el.emit('navigation-end', {\n        checkpoint: checkpoint\n      });\n      return offset.set(0, 0, 0);\n    }\n\n    offset.setLength(data.animateSpeed);\n    return offset;\n  },\n  sync: function () {\n    const offset = this.offset;\n    const position = this.position;\n    const targetPosition = this.targetPosition;\n    position.copy(this.el.getAttribute('position'));\n    targetPosition.copy(this.checkpoint.object3D.getWorldPosition());\n    targetPosition.add(this.checkpoint.components.checkpoint.getOffset());\n    offset.copy(targetPosition).sub(position);\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/controls/checkpoint-controls.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/controls/gamepad-controls.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aframe-extras/src/controls/gamepad-controls.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * Gamepad controls for A-Frame.\n *\n * Stripped-down version of: https://github.com/donmccurdy/aframe-gamepad-controls\n *\n * For more information about the Gamepad API, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API/Using_the_Gamepad_API\n */\nconst GamepadButton = __webpack_require__(/*! ../../lib/GamepadButton */ \"./node_modules/aframe-extras/lib/GamepadButton.js\"),\n      GamepadButtonEvent = __webpack_require__(/*! ../../lib/GamepadButtonEvent */ \"./node_modules/aframe-extras/lib/GamepadButtonEvent.js\");\n\nconst JOYSTICK_EPS = 0.2;\nmodule.exports = AFRAME.registerComponent('gamepad-controls', {\n  /*******************************************************************\n   * Statics\n   */\n  GamepadButton: GamepadButton,\n\n  /*******************************************************************\n   * Schema\n   */\n  schema: {\n    // Controller 0-3\n    controller: {\n      default: 0,\n      oneOf: [0, 1, 2, 3]\n    },\n    // Enable/disable features\n    enabled: {\n      default: true\n    },\n    // Debugging\n    debug: {\n      default: false\n    },\n    // Heading element for rotation\n    camera: {\n      default: '[camera]',\n      type: 'selector'\n    },\n    // Rotation sensitivity\n    rotationSensitivity: {\n      default: 2.0\n    }\n  },\n\n  /*******************************************************************\n   * Core\n   */\n\n  /**\n   * Called once when component is attached. Generally for initial setup.\n   */\n  init: function () {\n    const scene = this.el.sceneEl;\n    this.prevTime = window.performance.now(); // Button state\n\n    this.buttons = {}; // Rotation\n\n    const rotation = this.el.object3D.rotation;\n    this.pitch = new THREE.Object3D();\n    this.pitch.rotation.x = THREE.Math.degToRad(rotation.x);\n    this.yaw = new THREE.Object3D();\n    this.yaw.position.y = 10;\n    this.yaw.rotation.y = THREE.Math.degToRad(rotation.y);\n    this.yaw.add(this.pitch);\n    scene.addBehavior(this);\n  },\n\n  /**\n   * Called when component is attached and when component data changes.\n   * Generally modifies the entity based on the data.\n   */\n  update: function () {\n    this.tick();\n  },\n\n  /**\n   * Called on each iteration of main render loop.\n   */\n  tick: function (t, dt) {\n    this.updateButtonState();\n    this.updateRotation(dt);\n  },\n\n  /**\n   * Called when a component is removed (e.g., via removeAttribute).\n   * Generally undoes all modifications to the entity.\n   */\n  remove: function () {},\n\n  /*******************************************************************\n   * Movement\n   */\n  isVelocityActive: function () {\n    if (!this.data.enabled || !this.isConnected()) return false;\n    const dpad = this.getDpad(),\n          joystick0 = this.getJoystick(0),\n          inputX = dpad.x || joystick0.x,\n          inputY = dpad.y || joystick0.y;\n    return Math.abs(inputX) > JOYSTICK_EPS || Math.abs(inputY) > JOYSTICK_EPS;\n  },\n  getVelocityDelta: function () {\n    const dpad = this.getDpad(),\n          joystick0 = this.getJoystick(0),\n          inputX = dpad.x || joystick0.x,\n          inputY = dpad.y || joystick0.y,\n          dVelocity = new THREE.Vector3();\n\n    if (Math.abs(inputX) > JOYSTICK_EPS) {\n      dVelocity.x += inputX;\n    }\n\n    if (Math.abs(inputY) > JOYSTICK_EPS) {\n      dVelocity.z += inputY;\n    }\n\n    return dVelocity;\n  },\n\n  /*******************************************************************\n   * Rotation\n   */\n  isRotationActive: function () {\n    if (!this.data.enabled || !this.isConnected()) return false;\n    const joystick1 = this.getJoystick(1);\n    return Math.abs(joystick1.x) > JOYSTICK_EPS || Math.abs(joystick1.y) > JOYSTICK_EPS;\n  },\n  updateRotation: function (dt) {\n    if (!this.isRotationActive()) return;\n    const data = this.data;\n    const yaw = this.yaw;\n    const pitch = this.pitch;\n    const lookControls = data.camera.components['look-controls'];\n    const hasLookControls = lookControls && lookControls.pitchObject && lookControls.yawObject; // Sync with look-controls pitch/yaw if available.\n\n    if (hasLookControls) {\n      pitch.rotation.copy(lookControls.pitchObject.rotation);\n      yaw.rotation.copy(lookControls.yawObject.rotation);\n    }\n\n    const lookVector = this.getJoystick(1);\n    if (Math.abs(lookVector.x) <= JOYSTICK_EPS) lookVector.x = 0;\n    if (Math.abs(lookVector.y) <= JOYSTICK_EPS) lookVector.y = 0;\n    lookVector.multiplyScalar(data.rotationSensitivity * dt / 1000);\n    yaw.rotation.y -= lookVector.x;\n    pitch.rotation.x -= lookVector.y;\n    pitch.rotation.x = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, pitch.rotation.x));\n    data.camera.object3D.rotation.set(pitch.rotation.x, yaw.rotation.y, 0); // Sync with look-controls pitch/yaw if available.\n\n    if (hasLookControls) {\n      lookControls.pitchObject.rotation.copy(pitch.rotation);\n      lookControls.yawObject.rotation.copy(yaw.rotation);\n    }\n  },\n\n  /*******************************************************************\n   * Button events\n   */\n  updateButtonState: function () {\n    const gamepad = this.getGamepad();\n\n    if (this.data.enabled && gamepad) {\n      // Fire DOM events for button state changes.\n      for (var i = 0; i < gamepad.buttons.length; i++) {\n        if (gamepad.buttons[i].pressed && !this.buttons[i]) {\n          this.emit(new GamepadButtonEvent('gamepadbuttondown', i, gamepad.buttons[i]));\n        } else if (!gamepad.buttons[i].pressed && this.buttons[i]) {\n          this.emit(new GamepadButtonEvent('gamepadbuttonup', i, gamepad.buttons[i]));\n        }\n\n        this.buttons[i] = gamepad.buttons[i].pressed;\n      }\n    } else if (Object.keys(this.buttons)) {\n      // Reset state if controls are disabled or controller is lost.\n      this.buttons = {};\n    }\n  },\n  emit: function (event) {\n    // Emit original event.\n    this.el.emit(event.type, event); // Emit convenience event, identifying button index.\n\n    this.el.emit(event.type + ':' + event.index, new GamepadButtonEvent(event.type, event.index, event));\n  },\n\n  /*******************************************************************\n   * Gamepad state\n   */\n\n  /**\n   * Returns the Gamepad instance attached to the component. If connected,\n   * a proxy-controls component may provide access to Gamepad input from a\n   * remote device.\n   *\n   * @return {Gamepad}\n   */\n  getGamepad: function () {\n    const localGamepad = navigator.getGamepads && navigator.getGamepads()[this.data.controller],\n          proxyControls = this.el.sceneEl.components['proxy-controls'],\n          proxyGamepad = proxyControls && proxyControls.isConnected() && proxyControls.getGamepad(this.data.controller);\n    return proxyGamepad || localGamepad;\n  },\n\n  /**\n   * Returns the state of the given button.\n   * @param  {number} index The button (0-N) for which to find state.\n   * @return {GamepadButton}\n   */\n  getButton: function (index) {\n    return this.getGamepad().buttons[index];\n  },\n\n  /**\n   * Returns state of the given axis. Axes are labelled 0-N, where 0-1 will\n   * represent X/Y on the first joystick, and 2-3 X/Y on the second.\n   * @param  {number} index The axis (0-N) for which to find state.\n   * @return {number} On the interval [-1,1].\n   */\n  getAxis: function (index) {\n    return this.getGamepad().axes[index];\n  },\n\n  /**\n   * Returns the state of the given joystick (0 or 1) as a THREE.Vector2.\n   * @param  {number} id The joystick (0, 1) for which to find state.\n   * @return {THREE.Vector2}\n   */\n  getJoystick: function (index) {\n    const gamepad = this.getGamepad();\n\n    switch (index) {\n      case 0:\n        return new THREE.Vector2(gamepad.axes[0], gamepad.axes[1]);\n\n      case 1:\n        return new THREE.Vector2(gamepad.axes[2], gamepad.axes[3]);\n\n      default:\n        throw new Error('Unexpected joystick index \"%d\".', index);\n    }\n  },\n\n  /**\n   * Returns the state of the dpad as a THREE.Vector2.\n   * @return {THREE.Vector2}\n   */\n  getDpad: function () {\n    const gamepad = this.getGamepad();\n\n    if (!gamepad.buttons[GamepadButton.DPAD_RIGHT]) {\n      return new THREE.Vector2();\n    }\n\n    return new THREE.Vector2((gamepad.buttons[GamepadButton.DPAD_RIGHT].pressed ? 1 : 0) + (gamepad.buttons[GamepadButton.DPAD_LEFT].pressed ? -1 : 0), (gamepad.buttons[GamepadButton.DPAD_UP].pressed ? -1 : 0) + (gamepad.buttons[GamepadButton.DPAD_DOWN].pressed ? 1 : 0));\n  },\n\n  /**\n   * Returns true if the gamepad is currently connected to the system.\n   * @return {boolean}\n   */\n  isConnected: function () {\n    const gamepad = this.getGamepad();\n    return !!(gamepad && gamepad.connected);\n  },\n\n  /**\n   * Returns a string containing some information about the controller. Result\n   * may vary across browsers, for a given controller.\n   * @return {string}\n   */\n  getID: function () {\n    return this.getGamepad().id;\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/controls/gamepad-controls.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/controls/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/aframe-extras/src/controls/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./checkpoint-controls */ \"./node_modules/aframe-extras/src/controls/checkpoint-controls.js\");\n\n__webpack_require__(/*! ./gamepad-controls */ \"./node_modules/aframe-extras/src/controls/gamepad-controls.js\");\n\n__webpack_require__(/*! ./keyboard-controls */ \"./node_modules/aframe-extras/src/controls/keyboard-controls.js\");\n\n__webpack_require__(/*! ./touch-controls */ \"./node_modules/aframe-extras/src/controls/touch-controls.js\");\n\n__webpack_require__(/*! ./movement-controls */ \"./node_modules/aframe-extras/src/controls/movement-controls.js\");\n\n__webpack_require__(/*! ./trackpad-controls */ \"./node_modules/aframe-extras/src/controls/trackpad-controls.js\");\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/controls/index.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/controls/keyboard-controls.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aframe-extras/src/controls/keyboard-controls.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ../../lib/keyboard.polyfill */ \"./node_modules/aframe-extras/lib/keyboard.polyfill.js\");\n\nconst MAX_DELTA = 0.2,\n      PROXY_FLAG = '__keyboard-controls-proxy';\nconst KeyboardEvent = window.KeyboardEvent;\n/**\n * Keyboard Controls component.\n *\n * Stripped-down version of: https://github.com/donmccurdy/aframe-keyboard-controls\n *\n * Bind keyboard events to components, or control your entities with the WASD keys.\n *\n * Why use KeyboardEvent.code? \"This is set to a string representing the key that was pressed to\n * generate the KeyboardEvent, without taking the current keyboard layout (e.g., QWERTY vs.\n * Dvorak), locale (e.g., English vs. French), or any modifier keys into account. This is useful\n * when you care about which physical key was pressed, rather thanwhich character it corresponds\n * to. For example, if you’re a writing a game, you might want a certain set of keys to move the\n * player in different directions, and that mapping should ideally be independent of keyboard\n * layout. See: https://developers.google.com/web/updates/2016/04/keyboardevent-keys-codes\n *\n * @namespace wasd-controls\n * keys the entity moves and if you release it will stop. Easing simulates friction.\n * to the entity when pressing the keys.\n * @param {bool} [enabled=true] - To completely enable or disable the controls\n */\n\nmodule.exports = AFRAME.registerComponent('keyboard-controls', {\n  schema: {\n    enabled: {\n      default: true\n    },\n    debug: {\n      default: false\n    }\n  },\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.localKeys = {};\n    this.listeners = {\n      keydown: this.onKeyDown.bind(this),\n      keyup: this.onKeyUp.bind(this),\n      blur: this.onBlur.bind(this)\n    };\n    this.attachEventListeners();\n  },\n\n  /*******************************************************************\n  * Movement\n  */\n  isVelocityActive: function () {\n    return this.data.enabled && !!Object.keys(this.getKeys()).length;\n  },\n  getVelocityDelta: function () {\n    const data = this.data,\n          keys = this.getKeys();\n    this.dVelocity.set(0, 0, 0);\n\n    if (data.enabled) {\n      if (keys.KeyW || keys.ArrowUp) {\n        this.dVelocity.z -= 1;\n      }\n\n      if (keys.KeyA || keys.ArrowLeft) {\n        this.dVelocity.x -= 1;\n      }\n\n      if (keys.KeyS || keys.ArrowDown) {\n        this.dVelocity.z += 1;\n      }\n\n      if (keys.KeyD || keys.ArrowRight) {\n        this.dVelocity.x += 1;\n      }\n    }\n\n    return this.dVelocity.clone();\n  },\n\n  /*******************************************************************\n  * Events\n  */\n  play: function () {\n    this.attachEventListeners();\n  },\n  pause: function () {\n    this.removeEventListeners();\n  },\n  remove: function () {\n    this.pause();\n  },\n  attachEventListeners: function () {\n    window.addEventListener('keydown', this.listeners.keydown, false);\n    window.addEventListener('keyup', this.listeners.keyup, false);\n    window.addEventListener('blur', this.listeners.blur, false);\n  },\n  removeEventListeners: function () {\n    window.removeEventListener('keydown', this.listeners.keydown);\n    window.removeEventListener('keyup', this.listeners.keyup);\n    window.removeEventListener('blur', this.listeners.blur);\n  },\n  onKeyDown: function (event) {\n    if (AFRAME.utils.shouldCaptureKeyEvent(event)) {\n      this.localKeys[event.code] = true;\n      this.emit(event);\n    }\n  },\n  onKeyUp: function (event) {\n    if (AFRAME.utils.shouldCaptureKeyEvent(event)) {\n      delete this.localKeys[event.code];\n      this.emit(event);\n    }\n  },\n  onBlur: function () {\n    for (let code in this.localKeys) {\n      if (this.localKeys.hasOwnProperty(code)) {\n        delete this.localKeys[code];\n      }\n    }\n  },\n  emit: function (event) {\n    // TODO - keydown only initially?\n    // TODO - where the f is the spacebar\n    // Emit original event.\n    if (PROXY_FLAG in event) {\n      // TODO - Method never triggered.\n      this.el.emit(event.type, event);\n    } // Emit convenience event, identifying key.\n\n\n    this.el.emit(event.type + ':' + event.code, new KeyboardEvent(event.type, event));\n    if (this.data.debug) console.log(event.type + ':' + event.code);\n  },\n\n  /*******************************************************************\n  * Accessors\n  */\n  isPressed: function (code) {\n    return code in this.getKeys();\n  },\n  getKeys: function () {\n    if (this.isProxied()) {\n      return this.el.sceneEl.components['proxy-controls'].getKeyboard();\n    }\n\n    return this.localKeys;\n  },\n  isProxied: function () {\n    const proxyControls = this.el.sceneEl.components['proxy-controls'];\n    return proxyControls && proxyControls.isConnected();\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/controls/keyboard-controls.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/controls/movement-controls.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aframe-extras/src/controls/movement-controls.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Movement Controls\n *\n * @author Don McCurdy <dm@donmccurdy.com>\n */\nconst COMPONENT_SUFFIX = '-controls',\n      MAX_DELTA = 0.2,\n      // ms\nEPS = 10e-6;\nmodule.exports = AFRAME.registerComponent('movement-controls', {\n  /*******************************************************************\n   * Schema\n   */\n  dependencies: ['rotation'],\n  schema: {\n    enabled: {\n      default: true\n    },\n    controls: {\n      default: ['gamepad', 'trackpad', 'keyboard', 'touch']\n    },\n    speed: {\n      default: 0.3,\n      min: 0\n    },\n    fly: {\n      default: false\n    },\n    constrainToNavMesh: {\n      default: false\n    },\n    camera: {\n      default: '[camera]',\n      type: 'selector'\n    }\n  },\n\n  /*******************************************************************\n   * Lifecycle\n   */\n  init: function () {\n    const el = this.el;\n    this.velocityCtrl = null;\n    this.velocity = new THREE.Vector3();\n    this.heading = new THREE.Quaternion(); // Navigation\n\n    this.navGroup = null;\n    this.navNode = null;\n\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    } else {\n      el.sceneEl.addEventListener('loaded', this.injectControls.bind(this));\n    }\n  },\n  update: function (prevData) {\n    const el = this.el;\n    const data = this.data;\n\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    }\n\n    if (data.constrainToNavMesh !== prevData.constrainToNavMesh) {\n      const nav = el.sceneEl.systems.nav;\n      data.constrainToNavMesh ? nav.addAgent(this) : nav.removeAgent(this);\n    }\n  },\n  injectControls: function () {\n    const data = this.data;\n    var name;\n\n    for (let i = 0; i < data.controls.length; i++) {\n      name = data.controls[i] + COMPONENT_SUFFIX;\n\n      if (!this.el.components[name]) {\n        this.el.setAttribute(name, '');\n      }\n    }\n  },\n  updateNavLocation: function () {\n    this.navGroup = null;\n    this.navNode = null;\n  },\n\n  /*******************************************************************\n   * Tick\n   */\n  tick: function () {\n    const start = new THREE.Vector3();\n    const end = new THREE.Vector3();\n    const clampedEnd = new THREE.Vector3();\n    return function (t, dt) {\n      if (!dt) return;\n      const el = this.el;\n      const data = this.data;\n      if (!data.enabled) return;\n      this.updateVelocityCtrl();\n      const velocityCtrl = this.velocityCtrl;\n      const velocity = this.velocity;\n      if (!velocityCtrl) return; // Update velocity. If FPS is too low, reset.\n\n      if (dt / 1000 > MAX_DELTA) {\n        velocity.set(0, 0, 0);\n      } else {\n        this.updateVelocity(dt);\n      }\n\n      if (data.constrainToNavMesh && velocityCtrl.isNavMeshConstrained !== false) {\n        if (velocity.lengthSq() < EPS) return;\n        start.copy(el.object3D.position);\n        end.copy(velocity).multiplyScalar(dt / 1000).add(start);\n        const nav = el.sceneEl.systems.nav;\n        this.navGroup = this.navGroup === null ? nav.getGroup(start) : this.navGroup;\n        this.navNode = this.navNode || nav.getNode(start, this.navGroup);\n        this.navNode = nav.clampStep(start, end, this.navGroup, this.navNode, clampedEnd);\n        el.object3D.position.copy(clampedEnd);\n      } else if (el.hasAttribute('velocity')) {\n        el.setAttribute('velocity', velocity);\n      } else {\n        el.object3D.position.x += velocity.x * dt / 1000;\n        el.object3D.position.y += velocity.y * dt / 1000;\n        el.object3D.position.z += velocity.z * dt / 1000;\n      }\n    };\n  }(),\n\n  /*******************************************************************\n   * Movement\n   */\n  updateVelocityCtrl: function () {\n    const data = this.data;\n\n    if (data.enabled) {\n      for (let i = 0, l = data.controls.length; i < l; i++) {\n        const control = this.el.components[data.controls[i] + COMPONENT_SUFFIX];\n\n        if (control && control.isVelocityActive()) {\n          this.velocityCtrl = control;\n          return;\n        }\n      }\n\n      this.velocityCtrl = null;\n    }\n  },\n  updateVelocity: function () {\n    const vector2 = new THREE.Vector2(); // var matrix = new THREE.Matrix4();\n    // var matrix2 = new THREE.Matrix4();\n    // var position = new THREE.Vector3();\n    // var quaternion = new THREE.Quaternion();\n    // var scale = new THREE.Vector3();\n\n    return function (dt) {\n      let dVelocity;\n      const el = this.el;\n      const control = this.velocityCtrl;\n      const velocity = this.velocity;\n      const data = this.data;\n\n      if (control) {\n        if (control.getVelocityDelta) {\n          dVelocity = control.getVelocityDelta(dt);\n        } else if (control.getVelocity) {\n          velocity.copy(control.getVelocity());\n          return;\n        } else if (control.getPositionDelta) {\n          velocity.copy(control.getPositionDelta(dt).multiplyScalar(1000 / dt));\n          return;\n        } else {\n          throw new Error('Incompatible movement controls: ', control);\n        }\n      }\n\n      if (el.hasAttribute('velocity') && !data.constrainToNavMesh) {\n        velocity.copy(this.el.getAttribute('velocity'));\n      }\n\n      if (dVelocity && data.enabled) {\n        // TODO: Handle rotated rig.\n        const cameraEl = data.camera; // matrix.copy(cameraEl.object3D.matrixWorld);\n        // matrix2.getInverse(el.object3D.matrixWorld);\n        // matrix.multiply(matrix2);\n        // matrix.decompose(position, quaternion, scale);\n        // dVelocity.applyQuaternion(quaternion);\n        // Rotate to heading\n\n        dVelocity.applyQuaternion(cameraEl.object3D.quaternion);\n        const factor = dVelocity.length();\n\n        if (data.fly) {\n          velocity.copy(dVelocity);\n          velocity.multiplyScalar(this.data.speed * dt);\n        } else {\n          vector2.set(dVelocity.x, dVelocity.z);\n          vector2.setLength(factor * this.data.speed * dt);\n          velocity.x = vector2.x;\n          velocity.z = vector2.y;\n        }\n      }\n    };\n  }()\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/controls/movement-controls.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/controls/touch-controls.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aframe-extras/src/controls/touch-controls.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Touch-to-move-forward controls for mobile.\n */\nmodule.exports = AFRAME.registerComponent('touch-controls', {\n  schema: {\n    enabled: {\n      default: true\n    }\n  },\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.bindMethods();\n  },\n  play: function () {\n    this.addEventListeners();\n  },\n  pause: function () {\n    this.removeEventListeners();\n    this.dVelocity.set(0, 0, 0);\n  },\n  remove: function () {\n    this.pause();\n  },\n  addEventListeners: function () {\n    const sceneEl = this.el.sceneEl;\n    const canvasEl = sceneEl.canvas;\n\n    if (!canvasEl) {\n      sceneEl.addEventListener('render-target-loaded', this.addEventListeners.bind(this));\n      return;\n    }\n\n    canvasEl.addEventListener('touchstart', this.onTouchStart);\n    canvasEl.addEventListener('touchend', this.onTouchEnd);\n  },\n  removeEventListeners: function () {\n    const canvasEl = this.el.sceneEl && this.el.sceneEl.canvas;\n\n    if (!canvasEl) {\n      return;\n    }\n\n    canvasEl.removeEventListener('touchstart', this.onTouchStart);\n    canvasEl.removeEventListener('touchend', this.onTouchEnd);\n  },\n  isVelocityActive: function () {\n    return this.data.enabled && this.isMoving;\n  },\n  getVelocityDelta: function () {\n    this.dVelocity.z = this.isMoving ? -1 : 0;\n    return this.dVelocity.clone();\n  },\n  bindMethods: function () {\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n  },\n  onTouchStart: function (e) {\n    this.isMoving = true;\n    e.preventDefault();\n  },\n  onTouchEnd: function (e) {\n    this.isMoving = false;\n    e.preventDefault();\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/controls/touch-controls.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/controls/trackpad-controls.js":
/*!**********************************************************************!*\
  !*** ./node_modules/aframe-extras/src/controls/trackpad-controls.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * 3dof (Gear VR, Daydream) controls for mobile.\n */\nmodule.exports = AFRAME.registerComponent('trackpad-controls', {\n  schema: {\n    enabled: {\n      default: true\n    }\n  },\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.zVel = 0;\n    this.bindMethods();\n  },\n  play: function () {\n    this.addEventListeners();\n  },\n  pause: function () {\n    this.removeEventListeners();\n    this.dVelocity.set(0, 0, 0);\n  },\n  remove: function () {\n    this.pause();\n  },\n  addEventListeners: function () {\n    const sceneEl = this.el.sceneEl;\n    sceneEl.addEventListener('axismove', this.onAxisMove);\n    sceneEl.addEventListener('trackpadtouchstart', this.onTouchStart);\n    sceneEl.addEventListener('trackpadtouchend', this.onTouchEnd);\n  },\n  removeEventListeners: function () {\n    const sceneEl = this.el.sceneEl;\n    sceneEl.removeEventListener('axismove', this.onAxisMove);\n    sceneEl.removeEventListener('trackpadtouchstart', this.onTouchStart);\n    sceneEl.removeEventListener('trackpadtouchend', this.onTouchEnd);\n  },\n  isVelocityActive: function () {\n    return this.data.enabled && this.isMoving;\n  },\n  getVelocityDelta: function () {\n    this.dVelocity.z = this.isMoving ? -this.zVel : 1;\n    return this.dVelocity.clone();\n  },\n  bindMethods: function () {\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onAxisMove = this.onAxisMove.bind(this);\n  },\n  onTouchStart: function (e) {\n    this.isMoving = true;\n    e.preventDefault();\n  },\n  onTouchEnd: function (e) {\n    this.isMoving = false;\n    e.preventDefault();\n  },\n  onAxisMove: function (e) {\n    var axis_data = e.detail.axis;\n\n    if (axis_data[1] < 0) {\n      this.zVel = 1;\n    }\n\n    if (axis_data[1] > 0) {\n      this.zVel = -1;\n    }\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/controls/trackpad-controls.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/loaders/animation-mixer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/aframe-extras/src/loaders/animation-mixer.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const LoopMode = {\n  once: THREE.LoopOnce,\n  repeat: THREE.LoopRepeat,\n  pingpong: THREE.LoopPingPong\n};\n/**\n * animation-mixer\n *\n * Player for animation clips. Intended to be compatible with any model format that supports\n * skeletal or morph animations through THREE.AnimationMixer.\n * See: https://threejs.org/docs/?q=animation#Reference/Animation/AnimationMixer\n */\n\nmodule.exports = AFRAME.registerComponent('animation-mixer', {\n  schema: {\n    clip: {\n      default: '*'\n    },\n    duration: {\n      default: 0\n    },\n    crossFadeDuration: {\n      default: 0\n    },\n    loop: {\n      default: 'repeat',\n      oneOf: Object.keys(LoopMode)\n    },\n    repetitions: {\n      default: Infinity,\n      min: 0\n    }\n  },\n  init: function () {\n    /** @type {THREE.Mesh} */\n    this.model = null;\n    /** @type {THREE.AnimationMixer} */\n\n    this.mixer = null;\n    /** @type {Array<THREE.AnimationAction>} */\n\n    this.activeActions = [];\n    const model = this.el.getObject3D('mesh');\n\n    if (model) {\n      this.load(model);\n    } else {\n      this.el.addEventListener('model-loaded', e => {\n        this.load(e.detail.model);\n      });\n    }\n  },\n  load: function (model) {\n    const el = this.el;\n    this.model = model;\n    this.mixer = new THREE.AnimationMixer(model);\n    this.mixer.addEventListener('loop', e => {\n      el.emit('animation-loop', {\n        action: e.action,\n        loopDelta: e.loopDelta\n      });\n    });\n    this.mixer.addEventListener('finished', e => {\n      el.emit('animation-finished', {\n        action: e.action,\n        direction: e.direction\n      });\n    });\n    if (this.data.clip) this.update({});\n  },\n  remove: function () {\n    if (this.mixer) this.mixer.stopAllAction();\n  },\n  update: function (previousData) {\n    if (!previousData) return;\n    this.stopAction();\n\n    if (this.data.clip) {\n      this.playAction();\n    }\n  },\n  stopAction: function () {\n    const data = this.data;\n\n    for (let i = 0; i < this.activeActions.length; i++) {\n      data.crossFadeDuration ? this.activeActions[i].fadeOut(data.crossFadeDuration) : this.activeActions[i].stop();\n    }\n\n    this.activeActions.length = 0;\n  },\n  playAction: function () {\n    if (!this.mixer) return;\n    const model = this.model,\n          data = this.data,\n          clips = model.animations || (model.geometry || {}).animations || [];\n    if (!clips.length) return;\n    const re = wildcardToRegExp(data.clip);\n\n    for (let clip, i = 0; clip = clips[i]; i++) {\n      if (clip.name.match(re)) {\n        const action = this.mixer.clipAction(clip, model);\n        action.enabled = true;\n        if (data.duration) action.setDuration(data.duration);\n        action.setLoop(LoopMode[data.loop], data.repetitions).fadeIn(data.crossFadeDuration).play();\n        this.activeActions.push(action);\n      }\n    }\n  },\n  tick: function (t, dt) {\n    if (this.mixer && !isNaN(dt)) this.mixer.update(dt / 1000);\n  }\n});\n/**\n * Creates a RegExp from the given string, converting asterisks to .* expressions,\n * and escaping all other characters.\n */\n\nfunction wildcardToRegExp(s) {\n  return new RegExp('^' + s.split(/\\*+/).map(regExpEscape).join('.*') + '$');\n}\n/**\n * RegExp-escapes all characters in the given string.\n */\n\n\nfunction regExpEscape(s) {\n  return s.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n}\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/loaders/animation-mixer.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/loaders/fbx-model.js":
/*!*************************************************************!*\
  !*** ./node_modules/aframe-extras/src/loaders/fbx-model.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("THREE.FBXLoader = __webpack_require__(/*! ../../lib/FBXLoader */ \"./node_modules/aframe-extras/lib/FBXLoader.js\");\n/**\n * fbx-model\n *\n * Loader for FBX format. Supports ASCII, but *not* binary, models.\n */\n\nmodule.exports = AFRAME.registerComponent('fbx-model', {\n  schema: {\n    src: {\n      type: 'asset'\n    },\n    crossorigin: {\n      default: ''\n    }\n  },\n  init: function () {\n    this.model = null;\n  },\n  update: function () {\n    const data = this.data;\n    if (!data.src) return;\n    this.remove();\n    const loader = new THREE.FBXLoader();\n    if (data.crossorigin) loader.setCrossOrigin(data.crossorigin);\n    loader.load(data.src, this.load.bind(this));\n  },\n  load: function (model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {\n      format: 'fbx',\n      model: model\n    });\n  },\n  remove: function () {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/loaders/fbx-model.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/loaders/gltf-model-legacy.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aframe-extras/src/loaders/gltf-model-legacy.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const fetchScript = __webpack_require__(/*! ../../lib/fetch-script */ \"./node_modules/aframe-extras/lib/fetch-script.js\")();\n\nconst LOADER_SRC = 'https://rawgit.com/mrdoob/three.js/r86/examples/js/loaders/GLTFLoader.js';\n\nconst loadLoader = function () {\n  let promise;\n  return function () {\n    promise = promise || fetchScript(LOADER_SRC);\n    return promise;\n  };\n}();\n/**\n * Legacy loader for glTF 1.0 models.\n * Asynchronously loads THREE.GLTFLoader from rawgit.\n */\n\n\nmodule.exports = AFRAME.registerComponent('gltf-model-legacy', {\n  schema: {\n    type: 'model'\n  },\n  init: function () {\n    this.model = null;\n    this.loader = null;\n    this.loaderPromise = loadLoader().then(() => {\n      this.loader = new THREE.GLTFLoader();\n      this.loader.setCrossOrigin('Anonymous');\n    });\n  },\n  update: function () {\n    const self = this;\n    const el = this.el;\n    const src = this.data;\n\n    if (!src) {\n      return;\n    }\n\n    this.remove();\n    this.loaderPromise.then(() => {\n      this.loader.load(src, function gltfLoaded(gltfModel) {\n        self.model = gltfModel.scene;\n        self.model.animations = gltfModel.animations;\n        el.setObject3D('mesh', self.model);\n        el.emit('model-loaded', {\n          format: 'gltf',\n          model: self.model\n        });\n      });\n    });\n  },\n  remove: function () {\n    if (!this.model) {\n      return;\n    }\n\n    this.el.removeObject3D('mesh');\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/loaders/gltf-model-legacy.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/loaders/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/aframe-extras/src/loaders/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./animation-mixer */ \"./node_modules/aframe-extras/src/loaders/animation-mixer.js\");\n\n__webpack_require__(/*! ./fbx-model */ \"./node_modules/aframe-extras/src/loaders/fbx-model.js\");\n\n__webpack_require__(/*! ./gltf-model-legacy */ \"./node_modules/aframe-extras/src/loaders/gltf-model-legacy.js\");\n\n__webpack_require__(/*! ./json-model */ \"./node_modules/aframe-extras/src/loaders/json-model.js\");\n\n__webpack_require__(/*! ./object-model */ \"./node_modules/aframe-extras/src/loaders/object-model.js\");\n\n__webpack_require__(/*! ./ply-model */ \"./node_modules/aframe-extras/src/loaders/ply-model.js\");\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/loaders/index.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/loaders/json-model.js":
/*!**************************************************************!*\
  !*** ./node_modules/aframe-extras/src/loaders/json-model.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * json-model\n *\n * Loader for THREE.js JSON format. Somewhat confusingly, there are two different THREE.js formats,\n * both having the .json extension. This loader supports only THREE.JsonLoader, which typically\n * includes only a single mesh.\n *\n * Check the console for errors, if in doubt. You may need to use `object-model` or\n * `blend-character-model` for some .js and .json files.\n *\n * See: https://clara.io/learn/user-guide/data_exchange/threejs_export\n */\nmodule.exports = AFRAME.registerComponent('json-model', {\n  schema: {\n    src: {\n      type: 'asset'\n    },\n    crossorigin: {\n      default: ''\n    }\n  },\n  init: function () {\n    this.model = null;\n  },\n  update: function () {\n    let loader;\n    const data = this.data;\n    if (!data.src) return;\n    this.remove();\n    loader = new THREE.JSONLoader();\n    if (data.crossorigin) loader.crossOrigin = data.crossorigin;\n    loader.load(data.src, (geometry, materials) => {\n      // Attempt to automatically detect common material options.\n      materials.forEach(mat => {\n        mat.vertexColors = (geometry.faces[0] || {}).color ? THREE.FaceColors : THREE.NoColors;\n        mat.skinning = !!(geometry.bones || []).length;\n        mat.morphTargets = !!(geometry.morphTargets || []).length;\n        mat.morphNormals = !!(geometry.morphNormals || []).length;\n      });\n      const model = (geometry.bones || []).length ? new THREE.SkinnedMesh(geometry, new THREE.MultiMaterial(materials)) : new THREE.Mesh(geometry, new THREE.MultiMaterial(materials));\n      this.load(model);\n    });\n  },\n  load: function (model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {\n      format: 'json',\n      model: model\n    });\n  },\n  remove: function () {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/loaders/json-model.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/loaders/object-model.js":
/*!****************************************************************!*\
  !*** ./node_modules/aframe-extras/src/loaders/object-model.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * object-model\n *\n * Loader for THREE.js JSON format. Somewhat confusingly, there are two different THREE.js formats,\n * both having the .json extension. This loader supports only THREE.ObjectLoader, which typically\n * includes multiple meshes or an entire scene.\n *\n * Check the console for errors, if in doubt. You may need to use `json-model` or\n * `blend-character-model` for some .js and .json files.\n *\n * See: https://clara.io/learn/user-guide/data_exchange/threejs_export\n */\nmodule.exports = AFRAME.registerComponent('object-model', {\n  schema: {\n    src: {\n      type: 'asset'\n    },\n    crossorigin: {\n      default: ''\n    }\n  },\n  init: function () {\n    this.model = null;\n  },\n  update: function () {\n    let loader;\n    const data = this.data;\n    if (!data.src) return;\n    this.remove();\n    loader = new THREE.ObjectLoader();\n    if (data.crossorigin) loader.setCrossOrigin(data.crossorigin);\n    loader.load(data.src, object => {\n      // Enable skinning, if applicable.\n      object.traverse(o => {\n        if (o instanceof THREE.SkinnedMesh && o.material) {\n          o.material.skinning = !!(o.geometry && o.geometry.bones || []).length;\n        }\n      });\n      this.load(object);\n    });\n  },\n  load: function (model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {\n      format: 'json',\n      model: model\n    });\n  },\n  remove: function () {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/loaders/object-model.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/loaders/ply-model.js":
/*!*************************************************************!*\
  !*** ./node_modules/aframe-extras/src/loaders/ply-model.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * ply-model\n *\n * Wraps THREE.PLYLoader.\n */\nTHREE.PLYLoader = __webpack_require__(/*! ../../lib/PLYLoader */ \"./node_modules/aframe-extras/lib/PLYLoader.js\");\n/**\n * Loads, caches, resolves geometries.\n *\n * @member cache - Promises that resolve geometries keyed by `src`.\n */\n\nmodule.exports.System = AFRAME.registerSystem('ply-model', {\n  init: function () {\n    this.cache = {};\n  },\n\n  /**\n   * @returns {Promise}\n   */\n  getOrLoadGeometry: function (src, skipCache) {\n    const cache = this.cache;\n    const cacheItem = cache[src];\n\n    if (!skipCache && cacheItem) {\n      return cacheItem;\n    }\n\n    cache[src] = new Promise(function (resolve) {\n      const loader = new THREE.PLYLoader();\n      loader.load(src, function (geometry) {\n        resolve(geometry);\n      });\n    });\n    return cache[src];\n  }\n});\nmodule.exports.Component = AFRAME.registerComponent('ply-model', {\n  schema: {\n    skipCache: {\n      type: 'boolean',\n      default: false\n    },\n    src: {\n      type: 'asset'\n    }\n  },\n  init: function () {\n    this.model = null;\n  },\n  update: function () {\n    const data = this.data;\n    const el = this.el;\n\n    if (!data.src) {\n      console.warn('[%s] `src` property is required.', this.name);\n      return;\n    } // Get geometry from system, create and set mesh.\n\n\n    this.system.getOrLoadGeometry(data.src, data.skipCache).then(geometry => {\n      const model = createModel(geometry);\n      el.setObject3D('mesh', model);\n      el.emit('model-loaded', {\n        format: 'ply',\n        model: model\n      });\n    });\n  },\n  remove: function () {\n    if (this.model) {\n      this.el.removeObject3D('mesh');\n    }\n  }\n});\n\nfunction createModel(geometry) {\n  return new THREE.Mesh(geometry, new THREE.MeshPhongMaterial({\n    color: 0xFFFFFF,\n    shading: THREE.FlatShading,\n    vertexColors: THREE.VertexColors,\n    shininess: 0\n  }));\n}\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/loaders/ply-model.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/misc/checkpoint.js":
/*!***********************************************************!*\
  !*** ./node_modules/aframe-extras/src/misc/checkpoint.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = AFRAME.registerComponent('checkpoint', {\n  schema: {\n    offset: {\n      default: {\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      type: 'vec3'\n    }\n  },\n  init: function () {\n    this.active = false;\n    this.targetEl = null;\n    this.fire = this.fire.bind(this);\n    this.offset = new THREE.Vector3();\n  },\n  update: function () {\n    this.offset.copy(this.data.offset);\n  },\n  play: function () {\n    this.el.addEventListener('click', this.fire);\n  },\n  pause: function () {\n    this.el.removeEventListener('click', this.fire);\n  },\n  remove: function () {\n    this.pause();\n  },\n  fire: function () {\n    const targetEl = this.el.sceneEl.querySelector('[checkpoint-controls]');\n\n    if (!targetEl) {\n      throw new Error('No `checkpoint-controls` component found.');\n    }\n\n    targetEl.components['checkpoint-controls'].setCheckpoint(this.el);\n  },\n  getOffset: function () {\n    return this.offset.copy(this.data.offset);\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/misc/checkpoint.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/misc/cube-env-map.js":
/*!*************************************************************!*\
  !*** ./node_modules/aframe-extras/src/misc/cube-env-map.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * @param  {Array<THREE.Material>|THREE.Material} material\n * @return {Array<THREE.Material>}\n */\nfunction ensureMaterialArray(material) {\n  if (!material) {\n    return [];\n  } else if (Array.isArray(material)) {\n    return material;\n  } else if (material.materials) {\n    return material.materials;\n  } else {\n    return [material];\n  }\n}\n/**\n * @param  {THREE.Object3D} mesh\n * @param  {Array<string>} materialNames\n * @param  {THREE.Texture} envMap\n * @param  {number} reflectivity  [description]\n */\n\n\nfunction applyEnvMap(mesh, materialNames, envMap, reflectivity) {\n  if (!mesh) return;\n  materialNames = materialNames || [];\n  mesh.traverse(node => {\n    if (!node.isMesh) return;\n    const meshMaterials = ensureMaterialArray(node.material);\n    meshMaterials.forEach(material => {\n      if (material && !('envMap' in material)) return;\n      if (materialNames.length && materialNames.indexOf(material.name) === -1) return;\n      material.envMap = envMap;\n      material.reflectivity = reflectivity;\n      material.needsUpdate = true;\n    });\n  });\n}\n/**\n * Specifies an envMap on an entity, without replacing any existing material\n * properties.\n */\n\n\nmodule.exports = AFRAME.registerComponent('cube-env-map', {\n  multiple: true,\n  schema: {\n    path: {\n      default: ''\n    },\n    extension: {\n      default: 'jpg',\n      oneOf: ['jpg', 'png']\n    },\n    format: {\n      default: 'RGBFormat',\n      oneOf: ['RGBFormat', 'RGBAFormat']\n    },\n    enableBackground: {\n      default: false\n    },\n    reflectivity: {\n      default: 1,\n      min: 0,\n      max: 1\n    },\n    materials: {\n      default: []\n    }\n  },\n  init: function () {\n    const data = this.data;\n    this.texture = new THREE.CubeTextureLoader().load([data.path + 'posx.' + data.extension, data.path + 'negx.' + data.extension, data.path + 'posy.' + data.extension, data.path + 'negy.' + data.extension, data.path + 'posz.' + data.extension, data.path + 'negz.' + data.extension]);\n    this.texture.format = THREE[data.format];\n\n    this.object3dsetHandler = () => {\n      const mesh = this.el.getObject3D('mesh');\n      const data = this.data;\n      applyEnvMap(mesh, data.materials, this.texture, data.reflectivity);\n    };\n\n    this.el.addEventListener('object3dset', this.object3dsetHandler);\n  },\n  update: function (oldData) {\n    const data = this.data;\n    const mesh = this.el.getObject3D('mesh');\n    let addedMaterialNames = [];\n    let removedMaterialNames = [];\n\n    if (data.materials.length) {\n      if (oldData.materials) {\n        addedMaterialNames = data.materials.filter(name => !oldData.materials.includes(name));\n        removedMaterialNames = oldData.materials.filter(name => !data.materials.includes(name));\n      } else {\n        addedMaterialNames = data.materials;\n      }\n    }\n\n    if (addedMaterialNames.length) {\n      applyEnvMap(mesh, addedMaterialNames, this.texture, data.reflectivity);\n    }\n\n    if (removedMaterialNames.length) {\n      applyEnvMap(mesh, removedMaterialNames, null, 1);\n    }\n\n    if (oldData.materials && data.reflectivity !== oldData.reflectivity) {\n      const maintainedMaterialNames = data.materials.filter(name => oldData.materials.includes(name));\n\n      if (maintainedMaterialNames.length) {\n        applyEnvMap(mesh, maintainedMaterialNames, this.texture, data.reflectivity);\n      }\n    }\n\n    if (this.data.enableBackground && !oldData.enableBackground) {\n      this.setBackground(this.texture);\n    } else if (!this.data.enableBackground && oldData.enableBackground) {\n      this.setBackground(null);\n    }\n  },\n  remove: function () {\n    this.el.removeEventListener('object3dset', this.object3dsetHandler);\n    const mesh = this.el.getObject3D('mesh');\n    const data = this.data;\n    applyEnvMap(mesh, data.materials, null, 1);\n    if (data.enableBackground) this.setBackground(null);\n  },\n  setBackground: function (texture) {\n    this.el.sceneEl.object3D.background = texture;\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/misc/cube-env-map.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/misc/grab.js":
/*!*****************************************************!*\
  !*** ./node_modules/aframe-extras/src/misc/grab.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* global CANNON */\n\n/**\n * Based on aframe/examples/showcase/tracked-controls.\n *\n * Handles events coming from the hand-controls.\n * Determines if the entity is grabbed or released.\n * Updates its position to move along the controller.\n */\nmodule.exports = AFRAME.registerComponent('grab', {\n  init: function () {\n    this.system = this.el.sceneEl.systems.physics;\n    this.GRABBED_STATE = 'grabbed';\n    this.grabbing = false;\n    this.hitEl =\n    /** @type {AFRAME.Element}    */\n    null;\n    this.physics =\n    /** @type {AFRAME.System}     */\n    this.el.sceneEl.systems.physics;\n    this.constraint =\n    /** @type {CANNON.Constraint} */\n    null; // Bind event handlers\n\n    this.onHit = this.onHit.bind(this);\n    this.onGripOpen = this.onGripOpen.bind(this);\n    this.onGripClose = this.onGripClose.bind(this);\n  },\n  play: function () {\n    const el = this.el;\n    el.addEventListener('hit', this.onHit);\n    el.addEventListener('gripdown', this.onGripClose);\n    el.addEventListener('gripup', this.onGripOpen);\n    el.addEventListener('trackpaddown', this.onGripClose);\n    el.addEventListener('trackpadup', this.onGripOpen);\n    el.addEventListener('triggerdown', this.onGripClose);\n    el.addEventListener('triggerup', this.onGripOpen);\n  },\n  pause: function () {\n    const el = this.el;\n    el.removeEventListener('hit', this.onHit);\n    el.removeEventListener('gripdown', this.onGripClose);\n    el.removeEventListener('gripup', this.onGripOpen);\n    el.removeEventListener('trackpaddown', this.onGripClose);\n    el.removeEventListener('trackpadup', this.onGripOpen);\n    el.removeEventListener('triggerdown', this.onGripClose);\n    el.removeEventListener('triggerup', this.onGripOpen);\n  },\n  onGripClose: function () {\n    this.grabbing = true;\n  },\n  onGripOpen: function () {\n    const hitEl = this.hitEl;\n    this.grabbing = false;\n\n    if (!hitEl) {\n      return;\n    }\n\n    hitEl.removeState(this.GRABBED_STATE);\n    this.hitEl = undefined;\n    this.system.removeConstraint(this.constraint);\n    this.constraint = null;\n  },\n  onHit: function (evt) {\n    const hitEl = evt.detail.el; // If the element is already grabbed (it could be grabbed by another controller).\n    // If the hand is not grabbing the element does not stick.\n    // If we're already grabbing something you can't grab again.\n\n    if (!hitEl || hitEl.is(this.GRABBED_STATE) || !this.grabbing || this.hitEl) {\n      return;\n    }\n\n    hitEl.addState(this.GRABBED_STATE);\n    this.hitEl = hitEl;\n    this.constraint = new CANNON.LockConstraint(this.el.body, hitEl.body);\n    this.system.addConstraint(this.constraint);\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/misc/grab.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/misc/index.js":
/*!******************************************************!*\
  !*** ./node_modules/aframe-extras/src/misc/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./checkpoint */ \"./node_modules/aframe-extras/src/misc/checkpoint.js\");\n\n__webpack_require__(/*! ./cube-env-map */ \"./node_modules/aframe-extras/src/misc/cube-env-map.js\");\n\n__webpack_require__(/*! ./grab */ \"./node_modules/aframe-extras/src/misc/grab.js\");\n\n__webpack_require__(/*! ./jump-ability */ \"./node_modules/aframe-extras/src/misc/jump-ability.js\");\n\n__webpack_require__(/*! ./kinematic-body */ \"./node_modules/aframe-extras/src/misc/kinematic-body.js\");\n\n__webpack_require__(/*! ./mesh-smooth */ \"./node_modules/aframe-extras/src/misc/mesh-smooth.js\");\n\n__webpack_require__(/*! ./normal-material */ \"./node_modules/aframe-extras/src/misc/normal-material.js\");\n\n__webpack_require__(/*! ./sphere-collider */ \"./node_modules/aframe-extras/src/misc/sphere-collider.js\");\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/misc/index.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/misc/jump-ability.js":
/*!*************************************************************!*\
  !*** ./node_modules/aframe-extras/src/misc/jump-ability.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const ACCEL_G = -9.8,\n      // m/s^2\nEASING = -15; // m/s^2\n\n/**\n * Jump ability.\n */\n\nmodule.exports = AFRAME.registerComponent('jump-ability', {\n  dependencies: ['velocity'],\n\n  /* Schema\n  ——————————————————————————————————————————————*/\n  schema: {\n    on: {\n      default: 'keydown:Space gamepadbuttondown:0'\n    },\n    playerHeight: {\n      default: 1.764\n    },\n    maxJumps: {\n      default: 1\n    },\n    distance: {\n      default: 5\n    },\n    debug: {\n      default: false\n    }\n  },\n  init: function () {\n    this.velocity = 0;\n    this.numJumps = 0;\n    const beginJump = this.beginJump.bind(this),\n          events = this.data.on.split(' ');\n    this.bindings = {};\n\n    for (let i = 0; i < events.length; i++) {\n      this.bindings[events[i]] = beginJump;\n      this.el.addEventListener(events[i], beginJump);\n    }\n\n    this.bindings.collide = this.onCollide.bind(this);\n    this.el.addEventListener('collide', this.bindings.collide);\n  },\n  remove: function () {\n    for (var event in this.bindings) {\n      if (this.bindings.hasOwnProperty(event)) {\n        this.el.removeEventListener(event, this.bindings[event]);\n        delete this.bindings[event];\n      }\n    }\n\n    this.el.removeEventListener('collide', this.bindings.collide);\n    delete this.bindings.collide;\n  },\n  beginJump: function () {\n    if (this.numJumps < this.data.maxJumps) {\n      const data = this.data,\n            initialVelocity = Math.sqrt(-2 * data.distance * (ACCEL_G + EASING)),\n            v = this.el.getAttribute('velocity');\n      this.el.setAttribute('velocity', {\n        x: v.x,\n        y: initialVelocity,\n        z: v.z\n      });\n      this.numJumps++;\n      this.el.emit('jumpstart');\n    }\n  },\n  onCollide: function () {\n    if (this.numJumps > 0) this.el.emit('jumpend');\n    this.numJumps = 0;\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/misc/jump-ability.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/misc/kinematic-body.js":
/*!***************************************************************!*\
  !*** ./node_modules/aframe-extras/src/misc/kinematic-body.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* global CANNON */\n\n/**\n * Kinematic body.\n *\n * Managed dynamic body, which moves but is not affected (directly) by the\n * physics engine. This is not a true kinematic body, in the sense that we are\n * letting the physics engine _compute_ collisions against it and selectively\n * applying those collisions to the object. The physics engine does not decide\n * the position/velocity/rotation of the element.\n *\n * Used for the camera object, because full physics simulation would create\n * movement that feels unnatural to the player. Bipedal movement does not\n * translate nicely to rigid body physics.\n *\n * See: http://www.learn-cocos2d.com/2013/08/physics-engine-platformer-terrible-idea/\n * And: http://oxleygamedev.blogspot.com/2011/04/player-physics-part-2.html\n */\nconst EPS = 0.000001;\nmodule.exports = AFRAME.registerComponent('kinematic-body', {\n  dependencies: ['velocity'],\n\n  /*******************************************************************\n   * Schema\n   */\n  schema: {\n    mass: {\n      default: 5\n    },\n    radius: {\n      default: 1.3\n    },\n    userHeight: {\n      default: 1.6\n    },\n    linearDamping: {\n      default: 0.05\n    },\n    enableSlopes: {\n      default: true\n    }\n  },\n\n  /*******************************************************************\n   * Lifecycle\n   */\n  init: function () {\n    this.system = this.el.sceneEl.systems.physics;\n    this.system.addComponent(this);\n    const el = this.el,\n          data = this.data,\n          position = new CANNON.Vec3().copy(el.getAttribute('position'));\n    this.body = new CANNON.Body({\n      material: this.system.getMaterial('staticMaterial'),\n      position: position,\n      mass: data.mass,\n      linearDamping: data.linearDamping,\n      fixedRotation: true\n    });\n    this.body.addShape(new CANNON.Sphere(data.radius), new CANNON.Vec3(0, data.radius - data.height, 0));\n    this.body.el = this.el;\n    this.el.body = this.body;\n    this.system.addBody(this.body);\n\n    if (el.hasAttribute('wasd-controls')) {\n      console.warn('[kinematic-body] Not compatible with wasd-controls, use movement-controls.');\n    }\n  },\n  remove: function () {\n    this.system.removeBody(this.body);\n    this.system.removeComponent(this);\n    delete this.el.body;\n  },\n\n  /*******************************************************************\n   * Update\n   */\n\n  /**\n   * Checks CANNON.World for collisions and attempts to apply them to the\n   * element automatically, in a player-friendly way.\n   *\n   * There's extra logic for horizontal surfaces here. The basic requirements:\n   * (1) Only apply gravity when not in contact with _any_ horizontal surface.\n   * (2) When moving, project the velocity against exactly one ground surface.\n   *     If in contact with two ground surfaces (e.g. ground + ramp), choose\n   *     the one that collides with current velocity, if any.\n   */\n  beforeStep: function (t, dt) {\n    if (!dt) return;\n    const el = this.el;\n    const body = this.body;\n    body.velocity.copy(el.getAttribute('velocity'));\n    body.position.copy(el.getAttribute('position'));\n    body.position.y += this.data.userHeight;\n  },\n  step: function () {\n    var velocity = new THREE.Vector3(),\n        normalizedVelocity = new THREE.Vector3(),\n        currentSurfaceNormal = new THREE.Vector3(),\n        groundNormal = new THREE.Vector3();\n    return function (t, dt) {\n      if (!dt) return;\n      let body = this.body,\n          data = this.data,\n          didCollide = false,\n          height,\n          groundHeight = -Infinity,\n          groundBody,\n          contacts = this.system.getContacts();\n      dt = Math.min(dt, this.system.data.maxInterval * 1000);\n      groundNormal.set(0, 0, 0);\n      velocity.copy(this.el.getAttribute('velocity'));\n      body.velocity.copy(velocity);\n\n      for (var i = 0, contact; contact = contacts[i]; i++) {\n        // 1. Find any collisions involving this element. Get the contact\n        // normal, and make sure it's oriented _out_ of the other object and\n        // enabled (body.collisionReponse is true for both bodies)\n        if (!contact.enabled) {\n          continue;\n        }\n\n        if (body.id === contact.bi.id) {\n          contact.ni.negate(currentSurfaceNormal);\n        } else if (body.id === contact.bj.id) {\n          currentSurfaceNormal.copy(contact.ni);\n        } else {\n          continue;\n        }\n\n        didCollide = body.velocity.dot(currentSurfaceNormal) < -EPS;\n\n        if (didCollide && currentSurfaceNormal.y <= 0.5) {\n          // 2. If current trajectory attempts to move _through_ another\n          // object, project the velocity against the collision plane to\n          // prevent passing through.\n          velocity = velocity.projectOnPlane(currentSurfaceNormal);\n        } else if (currentSurfaceNormal.y > 0.5) {\n          // 3. If in contact with something roughly horizontal (+/- 45º) then\n          // consider that the current ground. Only the highest qualifying\n          // ground is retained.\n          height = body.id === contact.bi.id ? Math.abs(contact.rj.y + contact.bj.position.y) : Math.abs(contact.ri.y + contact.bi.position.y);\n\n          if (height > groundHeight) {\n            groundHeight = height;\n            groundNormal.copy(currentSurfaceNormal);\n            groundBody = body.id === contact.bi.id ? contact.bj : contact.bi;\n          }\n        }\n      }\n\n      normalizedVelocity.copy(velocity).normalize();\n\n      if (groundBody && normalizedVelocity.y < 0.5) {\n        if (!data.enableSlopes) {\n          groundNormal.set(0, 1, 0);\n        } else if (groundNormal.y < 1 - EPS) {\n          groundNormal.copy(this.raycastToGround(groundBody, groundNormal));\n        } // 4. Project trajectory onto the top-most ground object, unless\n        // trajectory is > 45º.\n\n\n        velocity = velocity.projectOnPlane(groundNormal);\n      } else if (this.system.driver.world) {\n        // 5. If not in contact with anything horizontal, apply world gravity.\n        // TODO - Why is the 4x scalar necessary.\n        // NOTE: Does not work if physics runs on a worker.\n        velocity.add(this.system.driver.world.gravity.scale(dt * 4.0 / 1000));\n      } // 6. If the ground surface has a velocity, apply it directly to current\n      // position, not velocity, to preserve relative velocity.\n\n\n      if (groundBody && groundBody.el && groundBody.el.components.velocity) {\n        const groundVelocity = groundBody.el.getAttribute('velocity');\n        body.position.copy({\n          x: body.position.x + groundVelocity.x * dt / 1000,\n          y: body.position.y + groundVelocity.y * dt / 1000,\n          z: body.position.z + groundVelocity.z * dt / 1000\n        });\n      }\n\n      body.velocity.copy(velocity);\n      body.position.y -= data.userHeight;\n      this.el.setAttribute('velocity', body.velocity);\n      this.el.setAttribute('position', body.position);\n    };\n  }(),\n\n  /**\n   * When walking on complex surfaces (trimeshes, borders between two shapes),\n   * the collision normals returned for the player sphere can be very\n   * inconsistent. To address this, raycast straight down, find the collision\n   * normal, and return whichever normal is more vertical.\n   * @param  {CANNON.Body} groundBody\n   * @param  {CANNON.Vec3} groundNormal\n   * @return {CANNON.Vec3}\n   */\n  raycastToGround: function (groundBody, groundNormal) {\n    let ray,\n        hitNormal,\n        vFrom = this.body.position,\n        vTo = this.body.position.clone();\n    vTo.y -= this.data.height;\n    ray = new CANNON.Ray(vFrom, vTo);\n\n    ray._updateDirection(); // TODO - Report bug.\n\n\n    ray.intersectBody(groundBody);\n    if (!ray.hasHit) return groundNormal; // Compare ABS, in case we're projecting against the inside of the face.\n\n    hitNormal = ray.result.hitNormalWorld;\n    return Math.abs(hitNormal.y) > Math.abs(groundNormal.y) ? hitNormal : groundNormal;\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/misc/kinematic-body.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/misc/mesh-smooth.js":
/*!************************************************************!*\
  !*** ./node_modules/aframe-extras/src/misc/mesh-smooth.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Apply this component to models that looks \"blocky\", to have Three.js compute\n * vertex normals on the fly for a \"smoother\" look.\n */\nmodule.exports = AFRAME.registerComponent('mesh-smooth', {\n  init: function () {\n    this.el.addEventListener('model-loaded', e => {\n      e.detail.model.traverse(node => {\n        if (node.isMesh) node.geometry.computeVertexNormals();\n      });\n    });\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/misc/mesh-smooth.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/misc/normal-material.js":
/*!****************************************************************!*\
  !*** ./node_modules/aframe-extras/src/misc/normal-material.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Recursively applies a MeshNormalMaterial to the entity, such that\n * face colors are determined by their orientation. Helpful for\n * debugging geometry\n */\nmodule.exports = AFRAME.registerComponent('normal-material', {\n  init: function () {\n    this.material = new THREE.MeshNormalMaterial({\n      flatShading: true\n    });\n    this.applyMaterial = this.applyMaterial.bind(this);\n    this.el.addEventListener('object3dset', this.applyMaterial);\n  },\n  remove: function () {\n    this.el.removeEventListener('object3dset', this.applyMaterial);\n  },\n  applyMaterial: function () {\n    this.el.object3D.traverse(node => {\n      if (node.isMesh) node.material = this.material;\n    });\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/misc/normal-material.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/misc/sphere-collider.js":
/*!****************************************************************!*\
  !*** ./node_modules/aframe-extras/src/misc/sphere-collider.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Based on aframe/examples/showcase/tracked-controls.\n *\n * Implement bounding sphere collision detection for entities with a mesh.\n * Sets the specified state on the intersected entities.\n *\n * @property {string} objects - Selector of the entities to test for collision.\n * @property {string} state - State to set on collided entities.\n *\n */\nmodule.exports = AFRAME.registerComponent('sphere-collider', {\n  schema: {\n    objects: {\n      default: ''\n    },\n    state: {\n      default: 'collided'\n    },\n    radius: {\n      default: 0.05\n    },\n    watch: {\n      default: true\n    }\n  },\n  init: function () {\n    /** @type {MutationObserver} */\n    this.observer = null;\n    /** @type {Array<Element>} Elements to watch for collisions. */\n\n    this.els = [];\n    /** @type {Array<Element>} Elements currently in collision state. */\n\n    this.collisions = [];\n    this.handleHit = this.handleHit.bind(this);\n    this.handleHitEnd = this.handleHitEnd.bind(this);\n  },\n  remove: function () {\n    this.pause();\n  },\n  play: function () {\n    const sceneEl = this.el.sceneEl;\n\n    if (this.data.watch) {\n      this.observer = new MutationObserver(this.update.bind(this, null));\n      this.observer.observe(sceneEl, {\n        childList: true,\n        subtree: true\n      });\n    }\n  },\n  pause: function () {\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n  },\n\n  /**\n   * Update list of entities to test for collision.\n   */\n  update: function () {\n    const data = this.data;\n    let objectEls; // Push entities into list of els to intersect.\n\n    if (data.objects) {\n      objectEls = this.el.sceneEl.querySelectorAll(data.objects);\n    } else {\n      // If objects not defined, intersect with everything.\n      objectEls = this.el.sceneEl.children;\n    } // Convert from NodeList to Array\n\n\n    this.els = Array.prototype.slice.call(objectEls);\n  },\n  tick: function () {\n    const position = new THREE.Vector3(),\n          meshPosition = new THREE.Vector3(),\n          colliderScale = new THREE.Vector3(),\n          distanceMap = new Map();\n    return function () {\n      const el = this.el,\n            data = this.data,\n            mesh = el.getObject3D('mesh'),\n            collisions = [];\n      let colliderRadius;\n\n      if (!mesh) {\n        return;\n      }\n\n      distanceMap.clear();\n      position.copy(el.object3D.getWorldPosition());\n      el.object3D.getWorldScale(colliderScale);\n      colliderRadius = data.radius * scaleFactor(colliderScale); // Update collision list.\n\n      this.els.forEach(intersect); // Emit events and add collision states, in order of distance.\n\n      collisions.sort((a, b) => distanceMap.get(a) > distanceMap.get(b) ? 1 : -1).forEach(this.handleHit); // Remove collision state from current element.\n\n      if (collisions.length === 0) {\n        el.emit('hit', {\n          el: null\n        });\n      } // Remove collision state from other elements.\n\n\n      this.collisions.filter(el => !distanceMap.has(el)).forEach(this.handleHitEnd); // Store new collisions\n\n      this.collisions = collisions; // Bounding sphere collision detection\n\n      function intersect(el) {\n        let radius, mesh, distance, box, extent, size;\n\n        if (!el.isEntity) {\n          return;\n        }\n\n        mesh = el.getObject3D('mesh');\n\n        if (!mesh) {\n          return;\n        }\n\n        box = new THREE.Box3().setFromObject(mesh);\n        size = box.getSize();\n        extent = Math.max(size.x, size.y, size.z) / 2;\n        radius = Math.sqrt(2 * extent * extent);\n        box.getCenter(meshPosition);\n\n        if (!radius) {\n          return;\n        }\n\n        distance = position.distanceTo(meshPosition);\n\n        if (distance < radius + colliderRadius) {\n          collisions.push(el);\n          distanceMap.set(el, distance);\n        }\n      } // use max of scale factors to maintain bounding sphere collision\n\n\n      function scaleFactor(scaleVec) {\n        return Math.max.apply(null, scaleVec.toArray());\n      }\n    };\n  }(),\n  handleHit: function (targetEl) {\n    targetEl.emit('hit');\n    targetEl.addState(this.data.state);\n    this.el.emit('hit', {\n      el: targetEl\n    });\n  },\n  handleHitEnd: function (targetEl) {\n    targetEl.emit('hitend');\n    targetEl.removeState(this.data.state);\n    this.el.emit('hitend', {\n      el: targetEl\n    });\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/misc/sphere-collider.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/pathfinding/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/aframe-extras/src/pathfinding/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./nav-mesh */ \"./node_modules/aframe-extras/src/pathfinding/nav-mesh.js\");\n\n__webpack_require__(/*! ./nav-agent */ \"./node_modules/aframe-extras/src/pathfinding/nav-agent.js\");\n\n__webpack_require__(/*! ./system */ \"./node_modules/aframe-extras/src/pathfinding/system.js\");\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/pathfinding/index.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/pathfinding/nav-agent.js":
/*!*****************************************************************!*\
  !*** ./node_modules/aframe-extras/src/pathfinding/nav-agent.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = AFRAME.registerComponent('nav-agent', {\n  schema: {\n    destination: {\n      type: 'vec3'\n    },\n    active: {\n      default: false\n    },\n    speed: {\n      default: 2\n    }\n  },\n  init: function () {\n    this.system = this.el.sceneEl.systems.nav;\n    this.system.addAgent(this);\n    this.group = null;\n    this.path = [];\n    this.raycaster = new THREE.Raycaster();\n  },\n  remove: function () {\n    this.system.removeAgent(this);\n  },\n  update: function () {\n    this.path.length = 0;\n  },\n  updateNavLocation: function () {\n    this.group = null;\n    this.path = [];\n  },\n  tick: function () {\n    const vDest = new THREE.Vector3();\n    const vDelta = new THREE.Vector3();\n    const vNext = new THREE.Vector3();\n    return function (t, dt) {\n      const el = this.el;\n      const data = this.data;\n      const raycaster = this.raycaster;\n      const speed = data.speed * dt / 1000;\n      if (!data.active) return; // Use PatrolJS pathfinding system to get shortest path to target.\n\n      if (!this.path.length) {\n        const position = this.el.object3D.position;\n        this.group = this.group || this.system.getGroup(position);\n        this.path = this.system.getPath(position, vDest.copy(data.destination), this.group) || [];\n        el.emit('nav-start');\n      } // If no path is found, exit.\n\n\n      if (!this.path.length) {\n        console.warn('[nav] Unable to find path to %o.', data.destination);\n        this.el.setAttribute('nav-agent', {\n          active: false\n        });\n        el.emit('nav-end');\n        return;\n      } // Current segment is a vector from current position to next waypoint.\n\n\n      const vCurrent = el.object3D.position;\n      const vWaypoint = this.path[0];\n      vDelta.subVectors(vWaypoint, vCurrent);\n      const distance = vDelta.length();\n      let gazeTarget;\n\n      if (distance < speed) {\n        // If <1 step from current waypoint, discard it and move toward next.\n        this.path.shift(); // After discarding the last waypoint, exit pathfinding.\n\n        if (!this.path.length) {\n          this.el.setAttribute('nav-agent', {\n            active: false\n          });\n          el.emit('nav-end');\n          return;\n        }\n\n        vNext.copy(vCurrent);\n        gazeTarget = this.path[0];\n      } else {\n        // If still far away from next waypoint, find next position for\n        // the current frame.\n        vNext.copy(vDelta.setLength(speed)).add(vCurrent);\n        gazeTarget = vWaypoint;\n      } // Look at the next waypoint.\n\n\n      gazeTarget.y = vCurrent.y;\n      el.object3D.lookAt(gazeTarget); // Raycast against the nav mesh, to keep the agent moving along the\n      // ground, not traveling in a straight line from higher to lower waypoints.\n\n      raycaster.ray.origin.copy(vNext);\n      raycaster.ray.origin.y += 1.5;\n      raycaster.ray.direction.y = -1;\n      const intersections = raycaster.intersectObject(this.system.getNavMesh());\n\n      if (!intersections.length) {\n        // Raycasting failed. Step toward the waypoint and hope for the best.\n        vCurrent.copy(vNext);\n      } else {\n        // Re-project next position onto nav mesh.\n        vDelta.subVectors(intersections[0].point, vCurrent);\n        vCurrent.add(vDelta.setLength(speed));\n      }\n    };\n  }()\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/pathfinding/nav-agent.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/pathfinding/nav-mesh.js":
/*!****************************************************************!*\
  !*** ./node_modules/aframe-extras/src/pathfinding/nav-mesh.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * nav-mesh\n *\n * Waits for a mesh to be loaded on the current entity, then sets it as the\n * nav mesh in the pathfinding system.\n */\nmodule.exports = AFRAME.registerComponent('nav-mesh', {\n  init: function () {\n    this.system = this.el.sceneEl.systems.nav;\n    this.hasLoadedNavMesh = false;\n    this.el.addEventListener('model-loaded', this.loadNavMesh.bind(this));\n  },\n  play: function () {\n    if (!this.hasLoadedNavMesh) this.loadNavMesh();\n  },\n  loadNavMesh: function () {\n    const object = this.el.getObject3D('mesh');\n    const scene = this.el.sceneEl.object3D;\n    if (!object) return;\n    let navMesh;\n    object.traverse(node => {\n      if (node.isMesh) navMesh = node;\n    });\n    if (!navMesh) return;\n    const navMeshGeometry = navMesh.geometry.isBufferGeometry ? new THREE.Geometry().fromBufferGeometry(navMesh.geometry) : navMesh.geometry.clone();\n    scene.updateMatrixWorld();\n    navMeshGeometry.applyMatrix(navMesh.matrixWorld);\n    this.system.setNavMeshGeometry(navMeshGeometry);\n    this.hasLoadedNavMesh = true;\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/pathfinding/nav-mesh.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/pathfinding/system.js":
/*!**************************************************************!*\
  !*** ./node_modules/aframe-extras/src/pathfinding/system.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const Path = __webpack_require__(/*! three-pathfinding */ \"./node_modules/three-pathfinding/src/index.js\");\n\nconst pathfinder = new Path();\nconst ZONE = 'level';\n/**\n * nav\n *\n * Pathfinding system, using PatrolJS.\n */\n\nmodule.exports = AFRAME.registerSystem('nav', {\n  init: function () {\n    this.navMesh = null;\n    this.agents = new Set();\n  },\n\n  /**\n   * @param {THREE.Geometry} geometry\n   */\n  setNavMeshGeometry: function (geometry) {\n    this.navMesh = new THREE.Mesh(geometry);\n    pathfinder.setZoneData(ZONE, Path.createZone(geometry));\n    Array.from(this.agents).forEach(agent => agent.updateNavLocation());\n  },\n\n  /**\n   * @return {THREE.Mesh}\n   */\n  getNavMesh: function () {\n    return this.navMesh;\n  },\n\n  /**\n   * @param {NavAgent} ctrl\n   */\n  addAgent: function (ctrl) {\n    this.agents.add(ctrl);\n  },\n\n  /**\n   * @param {NavAgent} ctrl\n   */\n  removeAgent: function (ctrl) {\n    this.agents.delete(ctrl);\n  },\n\n  /**\n   * @param  {THREE.Vector3} start\n   * @param  {THREE.Vector3} end\n   * @param  {number} groupID\n   * @return {Array<THREE.Vector3>}\n   */\n  getPath: function (start, end, groupID) {\n    return this.navMesh ? pathfinder.findPath(start, end, ZONE, groupID) : null;\n  },\n\n  /**\n   * @param {THREE.Vector3} position\n   * @return {number}\n   */\n  getGroup: function (position) {\n    return this.navMesh ? pathfinder.getGroup(ZONE, position) : null;\n  },\n\n  /**\n   * @param  {THREE.Vector3} position\n   * @param  {number} groupID\n   * @return {Node}\n   */\n  getNode: function (position, groupID) {\n    return this.navMesh ? pathfinder.getClosestNode(position, ZONE, groupID, true) : null;\n  },\n\n  /**\n   * @param  {THREE.Vector3} start Starting position.\n   * @param  {THREE.Vector3} end Desired ending position.\n   * @param  {number} groupID\n   * @param  {Node} node\n   * @param  {THREE.Vector3} endTarget (Output) Adjusted step end position.\n   * @return {Node} Current node, after step is taken.\n   */\n  clampStep: function (start, end, groupID, node, endTarget) {\n    if (!this.navMesh) {\n      endTarget.copy(end);\n      return null;\n    } else if (!node) {\n      endTarget.copy(end);\n      return this.getNode(end, groupID);\n    }\n\n    return pathfinder.clampStep(start, end, node, ZONE, groupID, endTarget);\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/pathfinding/system.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/primitives/a-grid.js":
/*!*************************************************************!*\
  !*** ./node_modules/aframe-extras/src/primitives/a-grid.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Flat grid.\n *\n * Defaults to 75x75.\n */\nmodule.exports = AFRAME.registerPrimitive('a-grid', {\n  defaultComponents: {\n    geometry: {\n      primitive: 'plane',\n      width: 75,\n      height: 75\n    },\n    rotation: {\n      x: -90,\n      y: 0,\n      z: 0\n    },\n    material: {\n      src: 'url(https://cdn.rawgit.com/donmccurdy/aframe-extras/v1.16.3/assets/grid.png)',\n      repeat: '75 75'\n    }\n  },\n  mappings: {\n    width: 'geometry.width',\n    height: 'geometry.height',\n    src: 'material.src'\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/primitives/a-grid.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/primitives/a-hexgrid.js":
/*!****************************************************************!*\
  !*** ./node_modules/aframe-extras/src/primitives/a-hexgrid.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const vg = __webpack_require__(/*! ../../lib/hex-grid.min.js */ \"./node_modules/aframe-extras/lib/hex-grid.min.js\");\n\nconst defaultHexGrid = __webpack_require__(/*! ../../lib/default-hex-grid */ \"./node_modules/aframe-extras/lib/default-hex-grid.js\");\n/**\n * Hex grid.\n */\n\n\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-hexgrid', {\n  defaultComponents: {\n    'hexgrid': {}\n  },\n  mappings: {\n    src: 'hexgrid.src'\n  }\n});\nmodule.exports.Component = AFRAME.registerComponent('hexgrid', {\n  dependencies: ['material'],\n  schema: {\n    src: {\n      type: 'asset'\n    }\n  },\n  init: function () {\n    const data = this.data;\n\n    if (data.src) {\n      fetch(data.src).then(response => response.json()).then(json => this.addMesh(json));\n    } else {\n      this.addMesh(defaultHexGrid);\n    }\n  },\n  addMesh: function (json) {\n    const grid = new vg.HexGrid();\n    grid.fromJSON(json);\n    const board = new vg.Board(grid);\n    board.generateTilemap();\n    this.el.setObject3D('mesh', board.group);\n    this.addMaterial();\n  },\n  addMaterial: function () {\n    const materialComponent = this.el.components.material;\n    const material = (materialComponent || {}).material;\n    if (!material) return;\n    this.el.object3D.traverse(node => {\n      if (node.isMesh) {\n        node.material = material;\n      }\n    });\n  },\n  remove: function () {\n    this.el.removeObject3D('mesh');\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/primitives/a-hexgrid.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/primitives/a-ocean.js":
/*!**************************************************************!*\
  !*** ./node_modules/aframe-extras/src/primitives/a-ocean.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Flat-shaded ocean primitive.\n *\n * Based on a Codrops tutorial:\n * http://tympanus.net/codrops/2016/04/26/the-aviator-animating-basic-3d-scene-threejs/\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-ocean', {\n  defaultComponents: {\n    ocean: {},\n    rotation: {\n      x: -90,\n      y: 0,\n      z: 0\n    }\n  },\n  mappings: {\n    width: 'ocean.width',\n    depth: 'ocean.depth',\n    density: 'ocean.density',\n    amplitude: 'ocean.amplitude',\n    amplitudeVariance: 'ocean.amplitudeVariance',\n    speed: 'ocean.speed',\n    speedVariance: 'ocean.speedVariance',\n    color: 'ocean.color',\n    opacity: 'ocean.opacity'\n  }\n});\nmodule.exports.Component = AFRAME.registerComponent('ocean', {\n  schema: {\n    // Dimensions of the ocean area.\n    width: {\n      default: 10,\n      min: 0\n    },\n    depth: {\n      default: 10,\n      min: 0\n    },\n    // Density of waves.\n    density: {\n      default: 10\n    },\n    // Wave amplitude and variance.\n    amplitude: {\n      default: 0.1\n    },\n    amplitudeVariance: {\n      default: 0.3\n    },\n    // Wave speed and variance.\n    speed: {\n      default: 1\n    },\n    speedVariance: {\n      default: 2\n    },\n    // Material.\n    color: {\n      default: '#7AD2F7',\n      type: 'color'\n    },\n    opacity: {\n      default: 0.8\n    }\n  },\n\n  /**\n   * Use play() instead of init(), because component mappings – unavailable as dependencies – are\n   * not guaranteed to have parsed when this component is initialized.\n   */\n  play: function () {\n    const el = this.el,\n          data = this.data;\n    let material = el.components.material;\n    const geometry = new THREE.PlaneGeometry(data.width, data.depth, data.density, data.density);\n    geometry.mergeVertices();\n    this.waves = [];\n\n    for (let v, i = 0, l = geometry.vertices.length; i < l; i++) {\n      v = geometry.vertices[i];\n      this.waves.push({\n        z: v.z,\n        ang: Math.random() * Math.PI * 2,\n        amp: data.amplitude + Math.random() * data.amplitudeVariance,\n        speed: (data.speed + Math.random() * data.speedVariance) / 1000 // radians / frame\n\n      });\n    }\n\n    if (!material) {\n      material = {};\n      material.material = new THREE.MeshPhongMaterial({\n        color: data.color,\n        transparent: data.opacity < 1,\n        opacity: data.opacity,\n        shading: THREE.FlatShading\n      });\n    }\n\n    this.mesh = new THREE.Mesh(geometry, material.material);\n    el.setObject3D('mesh', this.mesh);\n  },\n  remove: function () {\n    this.el.removeObject3D('mesh');\n  },\n  tick: function (t, dt) {\n    if (!dt) return;\n    const verts = this.mesh.geometry.vertices;\n\n    for (let v, vprops, i = 0; v = verts[i]; i++) {\n      vprops = this.waves[i];\n      v.z = vprops.z + Math.sin(vprops.ang) * vprops.amp;\n      vprops.ang += vprops.speed * dt;\n    }\n\n    this.mesh.geometry.verticesNeedUpdate = true;\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/primitives/a-ocean.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/primitives/a-tube.js":
/*!*************************************************************!*\
  !*** ./node_modules/aframe-extras/src/primitives/a-tube.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Tube following a custom path.\n *\n * Usage:\n *\n * ```html\n * <a-tube path=\"5 0 5, 5 0 -5, -5 0 -5\" radius=\"0.5\"></a-tube>\n * ```\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-tube', {\n  defaultComponents: {\n    tube: {}\n  },\n  mappings: {\n    path: 'tube.path',\n    segments: 'tube.segments',\n    radius: 'tube.radius',\n    radialSegments: 'tube.radialSegments',\n    closed: 'tube.closed'\n  }\n});\nmodule.exports.Component = AFRAME.registerComponent('tube', {\n  schema: {\n    path: {\n      default: []\n    },\n    segments: {\n      default: 64\n    },\n    radius: {\n      default: 1\n    },\n    radialSegments: {\n      default: 8\n    },\n    closed: {\n      default: false\n    }\n  },\n  init: function () {\n    const el = this.el,\n          data = this.data;\n    let material = el.components.material;\n\n    if (!data.path.length) {\n      console.error('[a-tube] `path` property expected but not found.');\n      return;\n    }\n\n    const curve = new THREE.CatmullRomCurve3(data.path.map(function (point) {\n      point = point.split(' ');\n      return new THREE.Vector3(Number(point[0]), Number(point[1]), Number(point[2]));\n    }));\n    const geometry = new THREE.TubeGeometry(curve, data.segments, data.radius, data.radialSegments, data.closed);\n\n    if (!material) {\n      material = {};\n      material.material = new THREE.MeshPhongMaterial();\n    }\n\n    this.mesh = new THREE.Mesh(geometry, material.material);\n    this.el.setObject3D('mesh', this.mesh);\n  },\n  remove: function () {\n    if (this.mesh) this.el.removeObject3D('mesh');\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/primitives/a-tube.js?");

/***/ }),

/***/ "./node_modules/aframe-extras/src/primitives/index.js":
/*!************************************************************!*\
  !*** ./node_modules/aframe-extras/src/primitives/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./a-grid */ \"./node_modules/aframe-extras/src/primitives/a-grid.js\");\n\n__webpack_require__(/*! ./a-hexgrid */ \"./node_modules/aframe-extras/src/primitives/a-hexgrid.js\");\n\n__webpack_require__(/*! ./a-ocean */ \"./node_modules/aframe-extras/src/primitives/a-ocean.js\");\n\n__webpack_require__(/*! ./a-tube */ \"./node_modules/aframe-extras/src/primitives/a-tube.js\");\n\n//# sourceURL=webpack:///./node_modules/aframe-extras/src/primitives/index.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/aframe-physics-system/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var CANNON = __webpack_require__(/*! cannon */ \"./node_modules/cannon/src/Cannon.js\");\n\n__webpack_require__(/*! ./src/components/math */ \"./node_modules/aframe-physics-system/src/components/math/index.js\");\n\n__webpack_require__(/*! ./src/components/body/body */ \"./node_modules/aframe-physics-system/src/components/body/body.js\");\n\n__webpack_require__(/*! ./src/components/body/dynamic-body */ \"./node_modules/aframe-physics-system/src/components/body/dynamic-body.js\");\n\n__webpack_require__(/*! ./src/components/body/static-body */ \"./node_modules/aframe-physics-system/src/components/body/static-body.js\");\n\n__webpack_require__(/*! ./src/components/shape/shape */ \"./node_modules/aframe-physics-system/src/components/shape/shape.js\");\n\n__webpack_require__(/*! ./src/components/constraint */ \"./node_modules/aframe-physics-system/src/components/constraint.js\");\n\n__webpack_require__(/*! ./src/components/spring */ \"./node_modules/aframe-physics-system/src/components/spring.js\");\n\n__webpack_require__(/*! ./src/system */ \"./node_modules/aframe-physics-system/src/system.js\");\n\nmodule.exports = {\n  registerAll: function () {\n    console.warn('registerAll() is deprecated. Components are automatically registered.');\n  }\n}; // Export CANNON.js.\n\nwindow.CANNON = window.CANNON || CANNON;\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/index.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/lib/CANNON-shape2mesh.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aframe-physics-system/lib/CANNON-shape2mesh.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * CANNON.shape2mesh\n *\n * Source: http://schteppe.github.io/cannon.js/build/cannon.demo.js\n * Author: @schteppe\n */\nvar CANNON = __webpack_require__(/*! cannon */ \"./node_modules/cannon/src/Cannon.js\");\n\nCANNON.shape2mesh = function (body) {\n  var obj = new THREE.Object3D();\n\n  for (var l = 0; l < body.shapes.length; l++) {\n    var shape = body.shapes[l];\n    var mesh;\n\n    switch (shape.type) {\n      case CANNON.Shape.types.SPHERE:\n        var sphere_geometry = new THREE.SphereGeometry(shape.radius, 8, 8);\n        mesh = new THREE.Mesh(sphere_geometry, this.currentMaterial);\n        break;\n\n      case CANNON.Shape.types.PARTICLE:\n        mesh = new THREE.Mesh(this.particleGeo, this.particleMaterial);\n        var s = this.settings;\n        mesh.scale.set(s.particleSize, s.particleSize, s.particleSize);\n        break;\n\n      case CANNON.Shape.types.PLANE:\n        var geometry = new THREE.PlaneGeometry(10, 10, 4, 4);\n        mesh = new THREE.Object3D();\n        var submesh = new THREE.Object3D();\n        var ground = new THREE.Mesh(geometry, this.currentMaterial);\n        ground.scale.set(100, 100, 100);\n        submesh.add(ground);\n        ground.castShadow = true;\n        ground.receiveShadow = true;\n        mesh.add(submesh);\n        break;\n\n      case CANNON.Shape.types.BOX:\n        var box_geometry = new THREE.BoxGeometry(shape.halfExtents.x * 2, shape.halfExtents.y * 2, shape.halfExtents.z * 2);\n        mesh = new THREE.Mesh(box_geometry, this.currentMaterial);\n        break;\n\n      case CANNON.Shape.types.CONVEXPOLYHEDRON:\n        var geo = new THREE.Geometry(); // Add vertices\n\n        for (var i = 0; i < shape.vertices.length; i++) {\n          var v = shape.vertices[i];\n          geo.vertices.push(new THREE.Vector3(v.x, v.y, v.z));\n        }\n\n        for (var i = 0; i < shape.faces.length; i++) {\n          var face = shape.faces[i]; // add triangles\n\n          var a = face[0];\n\n          for (var j = 1; j < face.length - 1; j++) {\n            var b = face[j];\n            var c = face[j + 1];\n            geo.faces.push(new THREE.Face3(a, b, c));\n          }\n        }\n\n        geo.computeBoundingSphere();\n        geo.computeFaceNormals();\n        mesh = new THREE.Mesh(geo, this.currentMaterial);\n        break;\n\n      case CANNON.Shape.types.HEIGHTFIELD:\n        var geometry = new THREE.Geometry();\n        var v0 = new CANNON.Vec3();\n        var v1 = new CANNON.Vec3();\n        var v2 = new CANNON.Vec3();\n\n        for (var xi = 0; xi < shape.data.length - 1; xi++) {\n          for (var yi = 0; yi < shape.data[xi].length - 1; yi++) {\n            for (var k = 0; k < 2; k++) {\n              shape.getConvexTrianglePillar(xi, yi, k === 0);\n              v0.copy(shape.pillarConvex.vertices[0]);\n              v1.copy(shape.pillarConvex.vertices[1]);\n              v2.copy(shape.pillarConvex.vertices[2]);\n              v0.vadd(shape.pillarOffset, v0);\n              v1.vadd(shape.pillarOffset, v1);\n              v2.vadd(shape.pillarOffset, v2);\n              geometry.vertices.push(new THREE.Vector3(v0.x, v0.y, v0.z), new THREE.Vector3(v1.x, v1.y, v1.z), new THREE.Vector3(v2.x, v2.y, v2.z));\n              var i = geometry.vertices.length - 3;\n              geometry.faces.push(new THREE.Face3(i, i + 1, i + 2));\n            }\n          }\n        }\n\n        geometry.computeBoundingSphere();\n        geometry.computeFaceNormals();\n        mesh = new THREE.Mesh(geometry, this.currentMaterial);\n        break;\n\n      case CANNON.Shape.types.TRIMESH:\n        var geometry = new THREE.Geometry();\n        var v0 = new CANNON.Vec3();\n        var v1 = new CANNON.Vec3();\n        var v2 = new CANNON.Vec3();\n\n        for (var i = 0; i < shape.indices.length / 3; i++) {\n          shape.getTriangleVertices(i, v0, v1, v2);\n          geometry.vertices.push(new THREE.Vector3(v0.x, v0.y, v0.z), new THREE.Vector3(v1.x, v1.y, v1.z), new THREE.Vector3(v2.x, v2.y, v2.z));\n          var j = geometry.vertices.length - 3;\n          geometry.faces.push(new THREE.Face3(j, j + 1, j + 2));\n        }\n\n        geometry.computeBoundingSphere();\n        geometry.computeFaceNormals();\n        mesh = new THREE.Mesh(geometry, this.currentMaterial);\n        break;\n\n      default:\n        throw \"Visual type not recognized: \" + shape.type;\n    }\n\n    mesh.receiveShadow = true;\n    mesh.castShadow = true;\n\n    if (mesh.children) {\n      for (var i = 0; i < mesh.children.length; i++) {\n        mesh.children[i].castShadow = true;\n        mesh.children[i].receiveShadow = true;\n\n        if (mesh.children[i]) {\n          for (var j = 0; j < mesh.children[i].length; j++) {\n            mesh.children[i].children[j].castShadow = true;\n            mesh.children[i].children[j].receiveShadow = true;\n          }\n        }\n      }\n    }\n\n    var o = body.shapeOffsets[l];\n    var q = body.shapeOrientations[l];\n    mesh.position.set(o.x, o.y, o.z);\n    mesh.quaternion.set(q.x, q.y, q.z, q.w);\n    obj.add(mesh);\n  }\n\n  return obj;\n};\n\nmodule.exports = CANNON.shape2mesh;\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/lib/CANNON-shape2mesh.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/components/body/body.js":
/*!************************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/components/body/body.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var CANNON = __webpack_require__(/*! cannon */ \"./node_modules/cannon/src/Cannon.js\"),\n    mesh2shape = __webpack_require__(/*! three-to-cannon */ \"./node_modules/three-to-cannon/index.js\");\n\n__webpack_require__(/*! ../../../lib/CANNON-shape2mesh */ \"./node_modules/aframe-physics-system/lib/CANNON-shape2mesh.js\");\n\nvar Body = {\n  dependencies: ['velocity'],\n  schema: {\n    mass: {\n      default: 5,\n      if: {\n        type: 'dynamic'\n      }\n    },\n    linearDamping: {\n      default: 0.01,\n      if: {\n        type: 'dynamic'\n      }\n    },\n    angularDamping: {\n      default: 0.01,\n      if: {\n        type: 'dynamic'\n      }\n    },\n    shape: {\n      default: 'auto',\n      oneOf: ['auto', 'box', 'cylinder', 'sphere', 'hull', 'mesh', 'none']\n    },\n    cylinderAxis: {\n      default: 'y',\n      oneOf: ['x', 'y', 'z']\n    },\n    sphereRadius: {\n      default: NaN\n    },\n    type: {\n      default: 'dynamic',\n      oneOf: ['static', 'dynamic']\n    }\n  },\n\n  /**\n   * Initializes a body component, assigning it to the physics system and binding listeners for\n   * parsing the elements geometry.\n   */\n  init: function () {\n    this.system = this.el.sceneEl.systems.physics;\n\n    if (this.el.sceneEl.hasLoaded) {\n      this.initBody();\n    } else {\n      this.el.sceneEl.addEventListener('loaded', this.initBody.bind(this));\n    }\n  },\n\n  /**\n   * Parses an element's geometry and component metadata to create a CANNON.Body instance for the\n   * component.\n   */\n  initBody: function () {\n    var el = this.el,\n        data = this.data;\n    var obj = this.el.object3D;\n    var pos = obj.position;\n    var quat = obj.quaternion;\n    this.body = new CANNON.Body({\n      mass: data.type === 'static' ? 0 : data.mass || 0,\n      material: this.system.getMaterial('defaultMaterial'),\n      position: new CANNON.Vec3(pos.x, pos.y, pos.z),\n      quaternion: new CANNON.Quaternion(quat.x, quat.y, quat.z, quat.w),\n      linearDamping: data.linearDamping,\n      angularDamping: data.angularDamping,\n      type: data.type === 'dynamic' ? CANNON.Body.DYNAMIC : CANNON.Body.STATIC\n    }); // Matrix World must be updated at root level, if scale is to be applied – updateMatrixWorld()\n    // only checks an object's parent, not the rest of the ancestors. Hence, a wrapping entity with\n    // scale=\"0.5 0.5 0.5\" will be ignored.\n    // Reference: https://github.com/mrdoob/three.js/blob/master/src/core/Object3D.js#L511-L541\n    // Potential fix: https://github.com/mrdoob/three.js/pull/7019\n\n    this.el.object3D.updateMatrixWorld(true);\n\n    if (data.shape !== 'none') {\n      var options = data.shape === 'auto' ? undefined : AFRAME.utils.extend({}, this.data, {\n        type: mesh2shape.Type[data.shape.toUpperCase()]\n      });\n      var shape = mesh2shape(this.el.object3D, options);\n\n      if (!shape) {\n        el.addEventListener('object3dset', this.initBody.bind(this));\n        return;\n      }\n\n      this.body.addShape(shape, shape.offset, shape.orientation); // Show wireframe\n\n      if (this.system.debug) {\n        this.shouldUpdateWireframe = true;\n      }\n\n      this.isLoaded = true;\n    }\n\n    this.el.body = this.body;\n    this.body.el = el; // If component wasn't initialized when play() was called, finish up.\n\n    if (this.isPlaying) {\n      this._play();\n    }\n\n    if (this.isLoaded) {\n      this.el.emit('body-loaded', {\n        body: this.el.body\n      });\n    }\n  },\n  addShape: function (shape, offset, orientation) {\n    if (this.data.shape !== 'none') {\n      console.warn('shape can only be added if shape property is none');\n      return;\n    }\n\n    if (!shape) {\n      console.warn('shape cannot be null');\n      return;\n    }\n\n    if (!this.body) {\n      console.warn('shape cannot be added before body is loaded');\n      return;\n    }\n\n    this.body.addShape(shape, offset, orientation);\n\n    if (this.system.debug) {\n      this.shouldUpdateWireframe = true;\n    }\n\n    this.shouldUpdateBody = true;\n  },\n  tick: function () {\n    if (this.shouldUpdateBody) {\n      this.isLoaded = true;\n\n      this._play();\n\n      this.el.emit('body-loaded', {\n        body: this.el.body\n      });\n      this.shouldUpdateBody = false;\n    }\n\n    if (this.shouldUpdateWireframe) {\n      this.createWireframe(this.body);\n      this.shouldUpdateWireframe = false;\n    }\n  },\n\n  /**\n   * Registers the component with the physics system, if ready.\n   */\n  play: function () {\n    if (this.isLoaded) this._play();\n  },\n\n  /**\n   * Internal helper to register component with physics system.\n   */\n  _play: function () {\n    this.syncToPhysics();\n    this.system.addComponent(this);\n    this.system.addBody(this.body);\n    if (this.wireframe) this.el.sceneEl.object3D.add(this.wireframe);\n  },\n\n  /**\n   * Unregisters the component with the physics system.\n   */\n  pause: function () {\n    if (this.isLoaded) this._pause();\n  },\n  _pause: function () {\n    this.system.removeComponent(this);\n    if (this.body) this.system.removeBody(this.body);\n    if (this.wireframe) this.el.sceneEl.object3D.remove(this.wireframe);\n  },\n\n  /**\n   * Updates the CANNON.Body instance, where possible.\n   */\n  update: function (prevData) {\n    if (!this.body) return;\n    var data = this.data;\n\n    if (prevData.type != undefined && data.type != prevData.type) {\n      this.body.type = data.type === 'dynamic' ? CANNON.Body.DYNAMIC : CANNON.Body.STATIC;\n    }\n\n    this.body.mass = data.mass || 0;\n\n    if (data.type === 'dynamic') {\n      this.body.linearDamping = data.linearDamping;\n      this.body.angularDamping = data.angularDamping;\n    }\n\n    if (data.mass !== prevData.mass) {\n      this.body.updateMassProperties();\n    }\n\n    if (this.body.updateProperties) this.body.updateProperties();\n  },\n\n  /**\n   * Removes the component and all physics and scene side effects.\n   */\n  remove: function () {\n    if (this.body) {\n      delete this.body.el;\n      delete this.body;\n    }\n\n    delete this.el.body;\n    delete this.wireframe;\n  },\n  beforeStep: function () {\n    if (this.body.mass === 0) {\n      this.syncToPhysics();\n    }\n  },\n  step: function () {\n    if (this.body.mass !== 0) {\n      this.syncFromPhysics();\n    }\n  },\n\n  /**\n   * Creates a wireframe for the body, for debugging.\n   * TODO(donmccurdy) – Refactor this into a standalone utility or component.\n   * @param  {CANNON.Body} body\n   * @param  {CANNON.Shape} shape\n   */\n  createWireframe: function (body) {\n    if (this.wireframe) {\n      this.el.sceneEl.object3D.remove(this.wireframe);\n      delete this.wireframe;\n    }\n\n    this.wireframe = new THREE.Object3D();\n    this.el.sceneEl.object3D.add(this.wireframe);\n    var offset, mesh;\n    var orientation = new THREE.Quaternion();\n\n    for (var i = 0; i < this.body.shapes.length; i++) {\n      offset = this.body.shapeOffsets[i], orientation.copy(this.body.shapeOrientations[i]), mesh = CANNON.shape2mesh(this.body).children[i];\n      var wireframe = new THREE.LineSegments(new THREE.EdgesGeometry(mesh.geometry), new THREE.LineBasicMaterial({\n        color: 0xff0000\n      }));\n\n      if (offset) {\n        wireframe.position.copy(offset);\n      }\n\n      if (orientation) {\n        wireframe.quaternion.copy(orientation);\n      }\n\n      this.wireframe.add(wireframe);\n    }\n\n    this.syncWireframe();\n  },\n\n  /**\n   * Updates the debugging wireframe's position and rotation.\n   */\n  syncWireframe: function () {\n    var offset,\n        wireframe = this.wireframe;\n    if (!this.wireframe) return; // Apply rotation. If the shape required custom orientation, also apply\n    // that on the wireframe.\n\n    wireframe.quaternion.copy(this.body.quaternion);\n\n    if (wireframe.orientation) {\n      wireframe.quaternion.multiply(wireframe.orientation);\n    } // Apply position. If the shape required custom offset, also apply that on\n    // the wireframe.\n\n\n    wireframe.position.copy(this.body.position);\n\n    if (wireframe.offset) {\n      offset = wireframe.offset.clone().applyQuaternion(wireframe.quaternion);\n      wireframe.position.add(offset);\n    }\n\n    wireframe.updateMatrix();\n  },\n\n  /**\n   * Updates the CANNON.Body instance's position, velocity, and rotation, based on the scene.\n   */\n  syncToPhysics: function () {\n    var q = new THREE.Quaternion(),\n        v = new THREE.Vector3();\n    return function () {\n      var el = this.el,\n          parentEl = el.parentEl,\n          body = this.body;\n      if (!body) return;\n      if (el.components.velocity) body.velocity.copy(el.getAttribute('velocity'));\n\n      if (parentEl.isScene) {\n        body.quaternion.copy(el.object3D.quaternion);\n        body.position.copy(el.object3D.position);\n      } else {\n        el.object3D.getWorldQuaternion(q);\n        body.quaternion.copy(q);\n        el.object3D.getWorldPosition(v);\n        body.position.copy(v);\n      }\n\n      if (this.body.updateProperties) this.body.updateProperties();\n      if (this.wireframe) this.syncWireframe();\n    };\n  }(),\n\n  /**\n   * Updates the scene object's position and rotation, based on the physics simulation.\n   */\n  syncFromPhysics: function () {\n    var v = new THREE.Vector3(),\n        q1 = new THREE.Quaternion(),\n        q2 = new THREE.Quaternion();\n    return function () {\n      var el = this.el,\n          parentEl = el.parentEl,\n          body = this.body;\n      if (!body) return;\n      if (!parentEl) return;\n\n      if (parentEl.isScene) {\n        el.object3D.quaternion.copy(body.quaternion);\n        el.object3D.position.copy(body.position);\n      } else {\n        q1.copy(body.quaternion);\n        parentEl.object3D.getWorldQuaternion(q2);\n        q1.premultiply(q2.inverse());\n        el.object3D.quaternion.copy(q1);\n        v.copy(body.position);\n        parentEl.object3D.worldToLocal(v);\n        el.object3D.position.copy(v);\n      }\n\n      if (this.wireframe) this.syncWireframe();\n    };\n  }()\n};\nmodule.exports.definition = Body;\nmodule.exports.Component = AFRAME.registerComponent('body', Body);\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/components/body/body.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/components/body/dynamic-body.js":
/*!********************************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/components/body/dynamic-body.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Body = __webpack_require__(/*! ./body */ \"./node_modules/aframe-physics-system/src/components/body/body.js\");\n/**\n * Dynamic body.\n *\n * Moves according to physics simulation, and may collide with other objects.\n */\n\n\nvar DynamicBody = AFRAME.utils.extend({}, Body.definition);\nmodule.exports = AFRAME.registerComponent('dynamic-body', DynamicBody);\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/components/body/dynamic-body.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/components/body/static-body.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/components/body/static-body.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Body = __webpack_require__(/*! ./body */ \"./node_modules/aframe-physics-system/src/components/body/body.js\");\n/**\n * Static body.\n *\n * Solid body with a fixed position. Unaffected by gravity and collisions, but\n * other objects may collide with it.\n */\n\n\nvar StaticBody = AFRAME.utils.extend({}, Body.definition);\nStaticBody.schema = AFRAME.utils.extend({}, Body.definition.schema, {\n  type: {\n    default: 'static',\n    oneOf: ['static', 'dynamic']\n  },\n  mass: {\n    default: 0\n  }\n});\nmodule.exports = AFRAME.registerComponent('static-body', StaticBody);\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/components/body/static-body.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/components/constraint.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/components/constraint.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var CANNON = __webpack_require__(/*! cannon */ \"./node_modules/cannon/src/Cannon.js\");\n\nmodule.exports = AFRAME.registerComponent('constraint', {\n  multiple: true,\n  schema: {\n    // Type of constraint.\n    type: {\n      default: 'lock',\n      oneOf: ['coneTwist', 'distance', 'hinge', 'lock', 'pointToPoint']\n    },\n    // Target (other) body for the constraint.\n    target: {\n      type: 'selector'\n    },\n    // Maximum force that should be applied to constraint the bodies.\n    maxForce: {\n      default: 1e6,\n      min: 0\n    },\n    // If true, bodies can collide when they are connected.\n    collideConnected: {\n      default: true\n    },\n    // Wake up bodies when connected.\n    wakeUpBodies: {\n      default: true\n    },\n    // The distance to be kept between the bodies. If 0, will be set to current distance.\n    distance: {\n      default: 0,\n      min: 0\n    },\n    // Offset of the hinge or point-to-point constraint, defined locally in the body.\n    pivot: {\n      type: 'vec3'\n    },\n    targetPivot: {\n      type: 'vec3'\n    },\n    // An axis that each body can rotate around, defined locally to that body.\n    axis: {\n      type: 'vec3',\n      default: {\n        x: 0,\n        y: 0,\n        z: 1\n      }\n    },\n    targetAxis: {\n      type: 'vec3',\n      default: {\n        x: 0,\n        y: 0,\n        z: 1\n      }\n    }\n  },\n  init: function () {\n    this.system = this.el.sceneEl.systems.physics;\n    this.constraint =\n    /* {CANNON.Constraint} */\n    null;\n  },\n  remove: function () {\n    if (!this.constraint) return;\n    this.system.removeConstraint(this.constraint);\n    this.constraint = null;\n  },\n  update: function () {\n    var el = this.el,\n        data = this.data;\n    this.remove();\n\n    if (!el.body || !data.target.body) {\n      (el.body ? data.target : el).addEventListener('body-loaded', this.update.bind(this, {}));\n      return;\n    }\n\n    this.constraint = this.createConstraint();\n    this.system.addConstraint(this.constraint);\n  },\n\n  /**\n   * Creates a new constraint, given current component data. The CANNON.js constructors are a bit\n   * different for each constraint type. A `.type` property is added to each constraint, because\n   * `instanceof` checks are not reliable for some types. These types are needed for serialization.\n   * @return {CANNON.Constraint}\n   */\n  createConstraint: function () {\n    var constraint,\n        data = this.data,\n        pivot = new CANNON.Vec3(data.pivot.x, data.pivot.y, data.pivot.z),\n        targetPivot = new CANNON.Vec3(data.targetPivot.x, data.targetPivot.y, data.targetPivot.z),\n        axis = new CANNON.Vec3(data.axis.x, data.axis.y, data.axis.z),\n        targetAxis = new CANNON.Vec3(data.targetAxis.x, data.targetAxis.y, data.targetAxis.z);\n    var constraint;\n\n    switch (data.type) {\n      case 'lock':\n        constraint = new CANNON.LockConstraint(this.el.body, data.target.body, {\n          maxForce: data.maxForce\n        });\n        constraint.type = 'LockConstraint';\n        break;\n\n      case 'distance':\n        constraint = new CANNON.DistanceConstraint(this.el.body, data.target.body, data.distance, data.maxForce);\n        constraint.type = 'DistanceConstraint';\n        break;\n\n      case 'hinge':\n        constraint = new CANNON.HingeConstraint(this.el.body, data.target.body, {\n          pivotA: pivot,\n          pivotB: targetPivot,\n          axisA: axis,\n          axisB: targetAxis,\n          maxForce: data.maxForce\n        });\n        constraint.type = 'HingeConstraint';\n        break;\n\n      case 'coneTwist':\n        constraint = new CANNON.ConeTwistConstraint(this.el.body, data.target.body, {\n          pivotA: pivot,\n          pivotB: targetPivot,\n          axisA: axis,\n          axisB: targetAxis,\n          maxForce: data.maxForce\n        });\n        constraint.type = 'ConeTwistConstraint';\n        break;\n\n      case 'pointToPoint':\n        constraint = new CANNON.PointToPointConstraint(this.el.body, pivot, data.target.body, targetPivot, data.maxForce);\n        constraint.type = 'PointToPointConstraint';\n        break;\n\n      default:\n        throw new Error('[constraint] Unexpected type: ' + data.type);\n    }\n\n    constraint.collideConnected = data.collideConnected;\n    return constraint;\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/components/constraint.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/components/math/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/components/math/index.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = {\n  'velocity': __webpack_require__(/*! ./velocity */ \"./node_modules/aframe-physics-system/src/components/math/velocity.js\"),\n  registerAll: function (AFRAME) {\n    if (this._registered) return;\n    AFRAME = AFRAME || window.AFRAME;\n    if (!AFRAME.components['velocity']) AFRAME.registerComponent('velocity', this.velocity);\n    this._registered = true;\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/components/math/index.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/components/math/velocity.js":
/*!****************************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/components/math/velocity.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Velocity, in m/s.\n */\nmodule.exports = AFRAME.registerComponent('velocity', {\n  schema: {\n    type: 'vec3'\n  },\n  init: function () {\n    this.system = this.el.sceneEl.systems.physics;\n\n    if (this.system) {\n      this.system.addComponent(this);\n    }\n  },\n  remove: function () {\n    if (this.system) {\n      this.system.removeComponent(this);\n    }\n  },\n  tick: function (t, dt) {\n    if (!dt) return;\n    if (this.system) return;\n    this.afterStep(t, dt);\n  },\n  afterStep: function (t, dt) {\n    if (!dt) return;\n    var physics = this.el.sceneEl.systems.physics || {\n      data: {\n        maxInterval: 1 / 60\n      }\n    },\n        // TODO - There's definitely a bug with getComputedAttribute and el.data.\n    velocity = this.el.getAttribute('velocity') || {\n      x: 0,\n      y: 0,\n      z: 0\n    },\n        position = this.el.getAttribute('position') || {\n      x: 0,\n      y: 0,\n      z: 0\n    };\n    dt = Math.min(dt, physics.data.maxInterval * 1000);\n    this.el.setAttribute('position', {\n      x: position.x + velocity.x * dt / 1000,\n      y: position.y + velocity.y * dt / 1000,\n      z: position.z + velocity.z * dt / 1000\n    });\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/components/math/velocity.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/components/shape/shape.js":
/*!**************************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/components/shape/shape.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var CANNON = __webpack_require__(/*! cannon */ \"./node_modules/cannon/src/Cannon.js\");\n\nvar Shape = {\n  schema: {\n    shape: {\n      default: 'box',\n      oneOf: ['box', 'sphere', 'cylinder']\n    },\n    offset: {\n      type: 'vec3',\n      default: {\n        x: 0,\n        y: 0,\n        z: 0\n      }\n    },\n    orientation: {\n      type: 'vec4',\n      default: {\n        x: 0,\n        y: 0,\n        z: 0,\n        w: 1\n      }\n    },\n    // sphere\n    radius: {\n      type: 'number',\n      default: 1,\n      if: {\n        shape: ['sphere']\n      }\n    },\n    // box\n    halfExtents: {\n      type: 'vec3',\n      default: {\n        x: 0.5,\n        y: 0.5,\n        z: 0.5\n      },\n      if: {\n        shape: ['box']\n      }\n    },\n    // cylinder\n    radiusTop: {\n      type: 'number',\n      default: 1,\n      if: {\n        shape: ['cylinder']\n      }\n    },\n    radiusBottom: {\n      type: 'number',\n      default: 1,\n      if: {\n        shape: ['cylinder']\n      }\n    },\n    height: {\n      type: 'number',\n      default: 1,\n      if: {\n        shape: ['cylinder']\n      }\n    },\n    numSegments: {\n      type: 'int',\n      default: 8,\n      if: {\n        shape: ['cylinder']\n      }\n    }\n  },\n  multiple: true,\n  init: function () {\n    if (this.el.sceneEl.hasLoaded) {\n      this.initShape();\n    } else {\n      this.el.sceneEl.addEventListener('loaded', this.initShape.bind(this));\n    }\n  },\n  initShape: function () {\n    this.bodyEl = this.el;\n\n    var bodyType = this._findType(this.bodyEl);\n\n    var data = this.data;\n\n    while (!bodyType && this.bodyEl.parentNode != this.el.sceneEl) {\n      this.bodyEl = this.bodyEl.parentNode;\n      bodyType = this._findType(this.bodyEl);\n    }\n\n    if (!bodyType) {\n      console.warn('body not found');\n      return;\n    }\n\n    var scale = new THREE.Vector3();\n    this.bodyEl.object3D.getWorldScale(scale);\n    var shape, offset, orientation;\n\n    if (data.hasOwnProperty('offset')) {\n      offset = new CANNON.Vec3(data.offset.x * scale.x, data.offset.y * scale.y, data.offset.z * scale.z);\n    }\n\n    if (data.hasOwnProperty('orientation')) {\n      orientation = new CANNON.Quaternion();\n      orientation.copy(data.orientation);\n    }\n\n    switch (data.shape) {\n      case 'sphere':\n        shape = new CANNON.Sphere(data.radius * scale.x);\n        break;\n\n      case 'box':\n        var halfExtents = new CANNON.Vec3(data.halfExtents.x * scale.x, data.halfExtents.y * scale.y, data.halfExtents.z * scale.z);\n        shape = new CANNON.Box(halfExtents);\n        break;\n\n      case 'cylinder':\n        shape = new CANNON.Cylinder(data.radiusTop * scale.x, data.radiusBottom * scale.x, data.height * scale.y, data.numSegments); //rotate by 90 degrees similar to mesh2shape:createCylinderShape\n\n        var quat = new CANNON.Quaternion();\n        quat.setFromEuler(90 * THREE.Math.DEG2RAD, 0, 0, 'XYZ').normalize();\n        orientation.mult(quat, orientation);\n        break;\n\n      default:\n        console.warn(data.shape + ' shape not supported');\n        return;\n    }\n\n    if (this.bodyEl.body) {\n      this.bodyEl.components[bodyType].addShape(shape, offset, orientation);\n    } else {\n      this.bodyEl.addEventListener('body-loaded', function () {\n        this.bodyEl.components[bodyType].addShape(shape, offset, orientation);\n      }, {\n        once: true\n      });\n    }\n  },\n  _findType: function (el) {\n    if (el.hasAttribute('body')) {\n      return 'body';\n    } else if (el.hasAttribute('dynamic-body')) {\n      return 'dynamic-body';\n    } else if (el.hasAttribute('static-body')) {\n      return 'static-body';\n    }\n\n    return null;\n  },\n  remove: function () {\n    if (this.bodyEl.parentNode) {\n      console.warn('removing shape component not currently supported');\n    }\n  }\n};\nmodule.exports.definition = Shape;\nmodule.exports.Component = AFRAME.registerComponent('shape', Shape);\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/components/shape/shape.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/components/spring.js":
/*!*********************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/components/spring.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var CANNON = __webpack_require__(/*! cannon */ \"./node_modules/cannon/src/Cannon.js\");\n\nmodule.exports = AFRAME.registerComponent('spring', {\n  multiple: true,\n  schema: {\n    // Target (other) body for the constraint.\n    target: {\n      type: 'selector'\n    },\n    // Length of the spring, when no force acts upon it.\n    restLength: {\n      default: 1,\n      min: 0\n    },\n    // How much will the spring suppress the force.\n    stiffness: {\n      default: 100,\n      min: 0\n    },\n    // Stretch factor of the spring.\n    damping: {\n      default: 1,\n      min: 0\n    },\n    // Offsets.\n    localAnchorA: {\n      type: 'vec3',\n      default: {\n        x: 0,\n        y: 0,\n        z: 0\n      }\n    },\n    localAnchorB: {\n      type: 'vec3',\n      default: {\n        x: 0,\n        y: 0,\n        z: 0\n      }\n    }\n  },\n  init: function () {\n    this.system = this.el.sceneEl.systems.physics;\n    this.system.addComponent(this);\n    this.isActive = true;\n    this.spring =\n    /* {CANNON.Spring} */\n    null;\n  },\n  update: function (oldData) {\n    var el = this.el;\n    var data = this.data;\n\n    if (!data.target) {\n      console.warn('Spring: invalid target specified.');\n      return;\n    } // wait until the CANNON bodies is created and attached\n\n\n    if (!el.body || !data.target.body) {\n      (el.body ? data.target : el).addEventListener('body-loaded', this.update.bind(this, {}));\n      return;\n    } // create the spring if necessary\n\n\n    this.createSpring(); // apply new data to the spring\n\n    this.updateSpring(oldData);\n  },\n  updateSpring: function (oldData) {\n    if (!this.spring) {\n      console.warn('Spring: Component attempted to change spring before its created. No changes made.');\n      return;\n    }\n\n    var data = this.data;\n    var spring = this.spring; // Cycle through the schema and check if an attribute has changed.\n    // if so, apply it to the spring\n\n    Object.keys(data).forEach(function (attr) {\n      if (data[attr] !== oldData[attr]) {\n        if (attr === 'target') {\n          // special case for the target selector\n          spring.bodyB = data.target.body;\n          return;\n        }\n\n        spring[attr] = data[attr];\n      }\n    });\n  },\n  createSpring: function () {\n    if (this.spring) return; // no need to create a new spring\n\n    this.spring = new CANNON.Spring(this.el.body);\n  },\n  // If the spring is valid, update the force each tick the physics are calculated\n  step: function (t, dt) {\n    return this.spring && this.isActive ? this.spring.applyForce() : void 0;\n  },\n  // resume updating the force when component upon calling play()\n  play: function () {\n    this.isActive = true;\n  },\n  // stop updating the force when component upon calling stop()\n  pause: function () {\n    this.isActive = false;\n  },\n  //remove the event listener + delete the spring\n  remove: function () {\n    if (this.spring) delete this.spring;\n    this.spring = null;\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/components/spring.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/constants.js":
/*!*************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/constants.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  GRAVITY: -9.8,\n  MAX_INTERVAL: 4 / 60,\n  ITERATIONS: 10,\n  CONTACT_MATERIAL: {\n    friction: 0.01,\n    restitution: 0.3,\n    contactEquationStiffness: 1e8,\n    contactEquationRelaxation: 3,\n    frictionEquationStiffness: 1e8,\n    frictionEquationRegularization: 3\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/constants.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/drivers/ammo-driver.js":
/*!***********************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/drivers/ammo-driver.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Driver = __webpack_require__(/*! ./driver */ \"./node_modules/aframe-physics-system/src/drivers/driver.js\");\n\nfunction AmmoDriver() {\n  throw new Error('[AmmoDriver] Driver not implemented.');\n}\n\nAmmoDriver.prototype = new Driver();\nAmmoDriver.prototype.constructor = AmmoDriver;\nmodule.exports = AmmoDriver;\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/drivers/ammo-driver.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/drivers/driver.js":
/*!******************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/drivers/driver.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Driver - defines limited API to local and remote physics controllers.\n */\nfunction Driver() {}\n\nmodule.exports = Driver;\n/******************************************************************************\n * Lifecycle\n */\n\n/* @param {object} worldConfig */\n\nDriver.prototype.init = abstractMethod;\n/* @param {number} deltaMS */\n\nDriver.prototype.step = abstractMethod;\nDriver.prototype.destroy = abstractMethod;\n/******************************************************************************\n * Bodies\n */\n\n/* @param {CANNON.Body} body */\n\nDriver.prototype.addBody = abstractMethod;\n/* @param {CANNON.Body} body */\n\nDriver.prototype.removeBody = abstractMethod;\n/**\n * @param {CANNON.Body} body\n * @param {string} methodName\n * @param {Array} args\n */\n\nDriver.prototype.applyBodyMethod = abstractMethod;\n/** @param {CANNON.Body} body */\n\nDriver.prototype.updateBodyProperties = abstractMethod;\n/******************************************************************************\n * Materials\n */\n\n/** @param {object} materialConfig */\n\nDriver.prototype.addMaterial = abstractMethod;\n/**\n * @param {string} materialName1\n * @param {string} materialName2\n * @param {object} contactMaterialConfig\n */\n\nDriver.prototype.addContactMaterial = abstractMethod;\n/******************************************************************************\n * Constraints\n */\n\n/* @param {CANNON.Constraint} constraint */\n\nDriver.prototype.addConstraint = abstractMethod;\n/* @param {CANNON.Constraint} constraint */\n\nDriver.prototype.removeConstraint = abstractMethod;\n/******************************************************************************\n * Contacts\n */\n\n/** @return {Array<object>} */\n\nDriver.prototype.getContacts = abstractMethod;\n/*****************************************************************************/\n\nfunction abstractMethod() {\n  throw new Error('Method not implemented.');\n}\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/drivers/driver.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/drivers/event.js":
/*!*****************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/drivers/event.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = {\n  INIT: 'init',\n  STEP: 'step',\n  // Bodies.\n  ADD_BODY: 'add-body',\n  REMOVE_BODY: 'remove-body',\n  APPLY_BODY_METHOD: 'apply-body-method',\n  UPDATE_BODY_PROPERTIES: 'update-body-properties',\n  // Materials.\n  ADD_MATERIAL: 'add-material',\n  ADD_CONTACT_MATERIAL: 'add-contact-material',\n  // Constraints.\n  ADD_CONSTRAINT: 'add-constraint',\n  REMOVE_CONSTRAINT: 'remove-constraint',\n  // Events.\n  COLLIDE: 'collide'\n};\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/drivers/event.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/drivers/local-driver.js":
/*!************************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/drivers/local-driver.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var CANNON = __webpack_require__(/*! cannon */ \"./node_modules/cannon/src/Cannon.js\"),\n    Driver = __webpack_require__(/*! ./driver */ \"./node_modules/aframe-physics-system/src/drivers/driver.js\");\n\nfunction LocalDriver() {\n  this.world = null;\n  this.materials = {};\n  this.contactMaterial = null;\n}\n\nLocalDriver.prototype = new Driver();\nLocalDriver.prototype.constructor = LocalDriver;\nmodule.exports = LocalDriver;\n/******************************************************************************\n * Lifecycle\n */\n\n/* @param {object} worldConfig */\n\nLocalDriver.prototype.init = function (worldConfig) {\n  var world = new CANNON.World();\n  world.quatNormalizeSkip = worldConfig.quatNormalizeSkip;\n  world.quatNormalizeFast = worldConfig.quatNormalizeFast;\n  world.solver.iterations = worldConfig.solverIterations;\n  world.gravity.set(0, worldConfig.gravity, 0);\n  world.broadphase = new CANNON.NaiveBroadphase();\n  this.world = world;\n};\n/* @param {number} deltaMS */\n\n\nLocalDriver.prototype.step = function (deltaMS) {\n  this.world.step(deltaMS);\n};\n\nLocalDriver.prototype.destroy = function () {\n  delete this.world;\n  delete this.contactMaterial;\n  this.materials = {};\n};\n/******************************************************************************\n * Bodies\n */\n\n/* @param {CANNON.Body} body */\n\n\nLocalDriver.prototype.addBody = function (body) {\n  this.world.addBody(body);\n};\n/* @param {CANNON.Body} body */\n\n\nLocalDriver.prototype.removeBody = function (body) {\n  this.world.removeBody(body);\n};\n/**\n * @param {CANNON.Body} body\n * @param {string} methodName\n * @param {Array} args\n */\n\n\nLocalDriver.prototype.applyBodyMethod = function (body, methodName, args) {\n  body['__' + methodName].apply(body, args);\n};\n/** @param {CANNON.Body} body */\n\n\nLocalDriver.prototype.updateBodyProperties = function () {};\n/******************************************************************************\n * Materials\n */\n\n/**\n * @param {string} name\n * @return {CANNON.Material}\n */\n\n\nLocalDriver.prototype.getMaterial = function (name) {\n  return this.materials[name];\n};\n/** @param {object} materialConfig */\n\n\nLocalDriver.prototype.addMaterial = function (materialConfig) {\n  this.materials[materialConfig.name] = new CANNON.Material(materialConfig);\n  this.materials[materialConfig.name].name = materialConfig.name;\n};\n/**\n * @param {string} matName1\n * @param {string} matName2\n * @param {object} contactMaterialConfig\n */\n\n\nLocalDriver.prototype.addContactMaterial = function (matName1, matName2, contactMaterialConfig) {\n  var mat1 = this.materials[matName1],\n      mat2 = this.materials[matName2];\n  this.contactMaterial = new CANNON.ContactMaterial(mat1, mat2, contactMaterialConfig);\n  this.world.addContactMaterial(this.contactMaterial);\n};\n/******************************************************************************\n * Constraints\n */\n\n/* @param {CANNON.Constraint} constraint */\n\n\nLocalDriver.prototype.addConstraint = function (constraint) {\n  this.world.addConstraint(constraint);\n};\n/* @param {CANNON.Constraint} constraint */\n\n\nLocalDriver.prototype.removeConstraint = function (constraint) {\n  this.world.removeConstraint(constraint);\n};\n/******************************************************************************\n * Contacts\n */\n\n/** @return {Array<object>} */\n\n\nLocalDriver.prototype.getContacts = function () {\n  return this.world.contacts;\n};\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/drivers/local-driver.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/drivers/network-driver.js":
/*!**************************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/drivers/network-driver.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Driver = __webpack_require__(/*! ./driver */ \"./node_modules/aframe-physics-system/src/drivers/driver.js\");\n\nfunction NetworkDriver() {\n  throw new Error('[NetworkDriver] Driver not implemented.');\n}\n\nNetworkDriver.prototype = new Driver();\nNetworkDriver.prototype.constructor = NetworkDriver;\nmodule.exports = NetworkDriver;\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/drivers/network-driver.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/drivers/webworkify-debug.js":
/*!****************************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/drivers/webworkify-debug.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Stub version of webworkify, for debugging code outside of a webworker.\n */\nfunction webworkifyDebug(worker) {\n  var targetA = new EventTarget(),\n      targetB = new EventTarget();\n  targetA.setTarget(targetB);\n  targetB.setTarget(targetA);\n  worker(targetA);\n  return targetB;\n}\n\nmodule.exports = webworkifyDebug;\n/******************************************************************************\n * EventTarget\n */\n\nfunction EventTarget() {\n  this.listeners = [];\n}\n\nEventTarget.prototype.setTarget = function (target) {\n  this.target = target;\n};\n\nEventTarget.prototype.addEventListener = function (type, fn) {\n  this.listeners.push(fn);\n};\n\nEventTarget.prototype.dispatchEvent = function (type, event) {\n  for (var i = 0; i < this.listeners.length; i++) {\n    this.listeners[i](event);\n  }\n};\n\nEventTarget.prototype.postMessage = function (msg) {\n  this.target.dispatchEvent('message', {\n    data: msg\n  });\n};\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/drivers/webworkify-debug.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/drivers/worker-driver.js":
/*!*************************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/drivers/worker-driver.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* global performance */\nvar webworkify = __webpack_require__(/*! webworkify */ \"./node_modules/webworkify/index.js\"),\n    webworkifyDebug = __webpack_require__(/*! ./webworkify-debug */ \"./node_modules/aframe-physics-system/src/drivers/webworkify-debug.js\"),\n    Driver = __webpack_require__(/*! ./driver */ \"./node_modules/aframe-physics-system/src/drivers/driver.js\"),\n    Event = __webpack_require__(/*! ./event */ \"./node_modules/aframe-physics-system/src/drivers/event.js\"),\n    worker = __webpack_require__(/*! ./worker */ \"./node_modules/aframe-physics-system/src/drivers/worker.js\"),\n    protocol = __webpack_require__(/*! ../utils/protocol */ \"./node_modules/aframe-physics-system/src/utils/protocol.js\");\n\nvar ID = protocol.ID;\n/******************************************************************************\n * Constructor\n */\n\nfunction WorkerDriver(options) {\n  this.fps = options.fps;\n  this.engine = options.engine;\n  this.interpolate = options.interpolate; // Approximate number of physics steps to 'pad' rendering.\n\n  this.interpBufferSize = options.interpolationBufferSize;\n  this.debug = options.debug;\n  this.bodies = {};\n  this.contacts = []; // https://gafferongames.com/post/snapshot_interpolation/\n\n  this.frameDelay = this.interpBufferSize * 1000 / this.fps;\n  this.frameBuffer = [];\n  this.worker = this.debug ? webworkifyDebug(worker) : webworkify(worker);\n  this.worker.addEventListener('message', this._onMessage.bind(this));\n}\n\nWorkerDriver.prototype = new Driver();\nWorkerDriver.prototype.constructor = WorkerDriver;\nmodule.exports = WorkerDriver;\n/******************************************************************************\n * Lifecycle\n */\n\n/* @param {object} worldConfig */\n\nWorkerDriver.prototype.init = function (worldConfig) {\n  this.worker.postMessage({\n    type: Event.INIT,\n    worldConfig: worldConfig,\n    fps: this.fps,\n    engine: this.engine\n  });\n};\n/**\n * Increments the physics world forward one step, if interpolation is enabled.\n * If disabled, increments are performed as messages arrive.\n * @param {number} deltaMS\n */\n\n\nWorkerDriver.prototype.step = function () {\n  if (!this.interpolate) return; // Get the two oldest frames that haven't expired. Ideally we would use all\n  // available frames to keep things smooth, but lerping is easier and faster.\n\n  var prevFrame = this.frameBuffer[0];\n  var nextFrame = this.frameBuffer[1];\n  var timestamp = performance.now();\n\n  while (prevFrame && nextFrame && timestamp - prevFrame.timestamp > this.frameDelay) {\n    this.frameBuffer.shift();\n    prevFrame = this.frameBuffer[0];\n    nextFrame = this.frameBuffer[1];\n  }\n\n  if (!prevFrame || !nextFrame) return;\n  var mix = (timestamp - prevFrame.timestamp) / this.frameDelay;\n  mix = (mix - (1 - 1 / this.interpBufferSize)) * this.interpBufferSize;\n\n  for (var id in prevFrame.bodies) {\n    if (prevFrame.bodies.hasOwnProperty(id) && nextFrame.bodies.hasOwnProperty(id)) {\n      protocol.deserializeInterpBodyUpdate(prevFrame.bodies[id], nextFrame.bodies[id], this.bodies[id], mix);\n    }\n  }\n};\n\nWorkerDriver.prototype.destroy = function () {\n  this.worker.terminate();\n  delete this.worker;\n};\n/** {Event} event */\n\n\nWorkerDriver.prototype._onMessage = function (event) {\n  if (event.data.type === Event.STEP) {\n    var data = event.data,\n        bodies = data.bodies;\n    this.contacts = event.data.contacts; // If interpolation is enabled, store the frame. If not, update all bodies\n    // immediately.\n\n    if (this.interpolate) {\n      this.frameBuffer.push({\n        timestamp: performance.now(),\n        bodies: bodies\n      });\n    } else {\n      for (var id in bodies) {\n        if (bodies.hasOwnProperty(id)) {\n          protocol.deserializeBodyUpdate(bodies[id], this.bodies[id]);\n        }\n      }\n    }\n  } else if (event.data.type === Event.COLLIDE) {\n    var body = this.bodies[event.data.bodyID];\n    var target = this.bodies[event.data.targetID];\n    var contact = protocol.deserializeContact(event.data.contact, this.bodies);\n    if (!body._listeners || !body._listeners.collide) return;\n\n    for (var i = 0; i < body._listeners.collide.length; i++) {\n      body._listeners.collide[i]({\n        target: target,\n        body: body,\n        contact: contact\n      });\n    }\n  } else {\n    throw new Error('[WorkerDriver] Unexpected message type.');\n  }\n};\n/******************************************************************************\n * Bodies\n */\n\n/* @param {CANNON.Body} body */\n\n\nWorkerDriver.prototype.addBody = function (body) {\n  protocol.assignID('body', body);\n  this.bodies[body[ID]] = body;\n  this.worker.postMessage({\n    type: Event.ADD_BODY,\n    body: protocol.serializeBody(body)\n  });\n};\n/* @param {CANNON.Body} body */\n\n\nWorkerDriver.prototype.removeBody = function (body) {\n  this.worker.postMessage({\n    type: Event.REMOVE_BODY,\n    bodyID: body[ID]\n  });\n  delete this.bodies[body[ID]];\n};\n/**\n * @param {CANNON.Body} body\n * @param {string} methodName\n * @param {Array} args\n */\n\n\nWorkerDriver.prototype.applyBodyMethod = function (body, methodName, args) {\n  switch (methodName) {\n    case 'applyForce':\n    case 'applyImpulse':\n      this.worker.postMessage({\n        type: Event.APPLY_BODY_METHOD,\n        bodyID: body[ID],\n        methodName: methodName,\n        args: [args[0].toArray(), args[1].toArray()]\n      });\n      break;\n\n    default:\n      throw new Error('Unexpected methodName: %s', methodName);\n  }\n};\n/** @param {CANNON.Body} body */\n\n\nWorkerDriver.prototype.updateBodyProperties = function (body) {\n  this.worker.postMessage({\n    type: Event.UPDATE_BODY_PROPERTIES,\n    body: protocol.serializeBody(body)\n  });\n};\n/******************************************************************************\n * Materials\n */\n\n/**\n * @param  {string} name\n * @return {CANNON.Material}\n */\n\n\nWorkerDriver.prototype.getMaterial = function (name) {\n  // No access to materials here. Eventually we might return the name or ID, if\n  // multiple materials were selected, but for now there's only one and it's safe\n  // to assume the worker is already using it.\n  return undefined;\n};\n/** @param {object} materialConfig */\n\n\nWorkerDriver.prototype.addMaterial = function (materialConfig) {\n  this.worker.postMessage({\n    type: Event.ADD_MATERIAL,\n    materialConfig: materialConfig\n  });\n};\n/**\n * @param {string} matName1\n * @param {string} matName2\n * @param {object} contactMaterialConfig\n */\n\n\nWorkerDriver.prototype.addContactMaterial = function (matName1, matName2, contactMaterialConfig) {\n  this.worker.postMessage({\n    type: Event.ADD_CONTACT_MATERIAL,\n    materialName1: matName1,\n    materialName2: matName2,\n    contactMaterialConfig: contactMaterialConfig\n  });\n};\n/******************************************************************************\n * Constraints\n */\n\n/* @param {CANNON.Constraint} constraint */\n\n\nWorkerDriver.prototype.addConstraint = function (constraint) {\n  protocol.assignID('constraint', constraint);\n  this.worker.postMessage({\n    type: Event.ADD_CONSTRAINT,\n    constraint: protocol.serializeConstraint(constraint)\n  });\n};\n/* @param {CANNON.Constraint} constraint */\n\n\nWorkerDriver.prototype.removeConstraint = function (constraint) {\n  this.worker.postMessage({\n    type: Event.REMOVE_CONSTRAINT,\n    constraintID: constraint[ID]\n  });\n};\n/******************************************************************************\n * Contacts\n */\n\n/** @return {Array<object>} */\n\n\nWorkerDriver.prototype.getContacts = function () {\n  // TODO(donmccurdy): There's some wasted memory allocation here.\n  var bodies = this.bodies;\n  return this.contacts.map(function (message) {\n    return protocol.deserializeContact(message, bodies);\n  });\n};\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/drivers/worker-driver.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/drivers/worker.js":
/*!******************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/drivers/worker.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Event = __webpack_require__(/*! ./event */ \"./node_modules/aframe-physics-system/src/drivers/event.js\"),\n    LocalDriver = __webpack_require__(/*! ./local-driver */ \"./node_modules/aframe-physics-system/src/drivers/local-driver.js\"),\n    AmmoDriver = __webpack_require__(/*! ./ammo-driver */ \"./node_modules/aframe-physics-system/src/drivers/ammo-driver.js\"),\n    protocol = __webpack_require__(/*! ../utils/protocol */ \"./node_modules/aframe-physics-system/src/utils/protocol.js\");\n\nvar ID = protocol.ID;\n\nmodule.exports = function (self) {\n  var driver = null;\n  var bodies = {};\n  var constraints = {};\n  var stepSize;\n  self.addEventListener('message', function (event) {\n    var data = event.data;\n\n    switch (data.type) {\n      // Lifecycle.\n      case Event.INIT:\n        driver = data.engine === 'cannon' ? new LocalDriver() : new AmmoDriver();\n        driver.init(data.worldConfig);\n        stepSize = 1 / data.fps;\n        setInterval(step, 1000 / data.fps);\n        break;\n      // Bodies.\n\n      case Event.ADD_BODY:\n        var body = protocol.deserializeBody(data.body);\n        body.material = driver.getMaterial('defaultMaterial');\n        bodies[body[ID]] = body;\n        body.addEventListener('collide', function (evt) {\n          var message = {\n            type: Event.COLLIDE,\n            bodyID: evt.target[ID],\n            // set the target as the body to be identical to the local driver\n            targetID: evt.body[ID],\n            // set the body as the target to be identical to the local driver\n            contact: protocol.serializeContact(evt.contact)\n          };\n          self.postMessage(message);\n        });\n        driver.addBody(body);\n        break;\n\n      case Event.REMOVE_BODY:\n        driver.removeBody(bodies[data.bodyID]);\n        delete bodies[data.bodyID];\n        break;\n\n      case Event.APPLY_BODY_METHOD:\n        bodies[data.bodyID][data.methodName](protocol.deserializeVec3(data.args[0]), protocol.deserializeVec3(data.args[1]));\n        break;\n\n      case Event.UPDATE_BODY_PROPERTIES:\n        protocol.deserializeBodyUpdate(data.body, bodies[data.body.id]);\n        break;\n      // Materials.\n\n      case Event.ADD_MATERIAL:\n        driver.addMaterial(data.materialConfig);\n        break;\n\n      case Event.ADD_CONTACT_MATERIAL:\n        driver.addContactMaterial(data.materialName1, data.materialName2, data.contactMaterialConfig);\n        break;\n      // Constraints.\n\n      case Event.ADD_CONSTRAINT:\n        var constraint = protocol.deserializeConstraint(data.constraint, bodies);\n        constraints[constraint[ID]] = constraint;\n        driver.addConstraint(constraint);\n        break;\n\n      case Event.REMOVE_CONSTRAINT:\n        driver.removeConstraint(constraints[data.constraintID]);\n        delete constraints[data.constraintID];\n        break;\n\n      default:\n        throw new Error('[Worker] Unexpected event type: %s', data.type);\n    }\n  });\n\n  function step() {\n    driver.step(stepSize);\n    var bodyMessages = {};\n    Object.keys(bodies).forEach(function (id) {\n      bodyMessages[id] = protocol.serializeBody(bodies[id]);\n    });\n    self.postMessage({\n      type: Event.STEP,\n      bodies: bodyMessages,\n      contacts: driver.getContacts().map(protocol.serializeContact)\n    });\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/drivers/worker.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/system.js":
/*!**********************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/system.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var CANNON = __webpack_require__(/*! cannon */ \"./node_modules/cannon/src/Cannon.js\"),\n    CONSTANTS = __webpack_require__(/*! ./constants */ \"./node_modules/aframe-physics-system/src/constants.js\"),\n    C_GRAV = CONSTANTS.GRAVITY,\n    C_MAT = CONSTANTS.CONTACT_MATERIAL;\n\nvar LocalDriver = __webpack_require__(/*! ./drivers/local-driver */ \"./node_modules/aframe-physics-system/src/drivers/local-driver.js\"),\n    WorkerDriver = __webpack_require__(/*! ./drivers/worker-driver */ \"./node_modules/aframe-physics-system/src/drivers/worker-driver.js\"),\n    NetworkDriver = __webpack_require__(/*! ./drivers/network-driver */ \"./node_modules/aframe-physics-system/src/drivers/network-driver.js\"),\n    AmmoDriver = __webpack_require__(/*! ./drivers/ammo-driver */ \"./node_modules/aframe-physics-system/src/drivers/ammo-driver.js\");\n/**\n * Physics system.\n */\n\n\nmodule.exports = AFRAME.registerSystem('physics', {\n  schema: {\n    // CANNON.js driver type\n    driver: {\n      default: 'local',\n      oneOf: ['local', 'worker', 'network', 'ammo']\n    },\n    networkUrl: {\n      default: '',\n      if: {\n        driver: 'network'\n      }\n    },\n    workerFps: {\n      default: 60,\n      if: {\n        driver: 'worker'\n      }\n    },\n    workerInterpolate: {\n      default: true,\n      if: {\n        driver: 'worker'\n      }\n    },\n    workerInterpBufferSize: {\n      default: 2,\n      if: {\n        driver: 'worker'\n      }\n    },\n    workerEngine: {\n      default: 'cannon',\n      if: {\n        driver: 'worker'\n      },\n      oneOf: ['cannon']\n    },\n    workerDebug: {\n      default: false,\n      if: {\n        driver: 'worker'\n      }\n    },\n    gravity: {\n      default: C_GRAV\n    },\n    iterations: {\n      default: CONSTANTS.ITERATIONS\n    },\n    friction: {\n      default: C_MAT.friction\n    },\n    restitution: {\n      default: C_MAT.restitution\n    },\n    contactEquationStiffness: {\n      default: C_MAT.contactEquationStiffness\n    },\n    contactEquationRelaxation: {\n      default: C_MAT.contactEquationRelaxation\n    },\n    frictionEquationStiffness: {\n      default: C_MAT.frictionEquationStiffness\n    },\n    frictionEquationRegularization: {\n      default: C_MAT.frictionEquationRegularization\n    },\n    // Never step more than four frames at once. Effectively pauses the scene\n    // when out of focus, and prevents weird \"jumps\" when focus returns.\n    maxInterval: {\n      default: 4 / 60\n    },\n    // If true, show wireframes around physics bodies.\n    debug: {\n      default: false\n    }\n  },\n\n  /**\n   * Initializes the physics system.\n   */\n  init: function () {\n    var data = this.data; // If true, show wireframes around physics bodies.\n\n    this.debug = data.debug;\n    this.callbacks = {\n      beforeStep: [],\n      step: [],\n      afterStep: []\n    };\n    this.listeners = {};\n    this.driver = null;\n\n    switch (data.driver) {\n      case 'local':\n        this.driver = new LocalDriver();\n        break;\n\n      case 'network':\n        this.driver = new NetworkDriver(data.networkUrl);\n        break;\n\n      case 'worker':\n        this.driver = new WorkerDriver({\n          fps: data.workerFps,\n          engine: data.workerEngine,\n          interpolate: data.workerInterpolate,\n          interpolationBufferSize: data.workerInterpBufferSize,\n          debug: data.workerDebug\n        });\n        break;\n\n      default:\n        throw new Error('[physics] Driver not recognized: \"%s\".', data.driver);\n    }\n\n    this.driver.init({\n      quatNormalizeSkip: 0,\n      quatNormalizeFast: false,\n      solverIterations: data.iterations,\n      gravity: data.gravity\n    });\n    this.driver.addMaterial({\n      name: 'defaultMaterial'\n    });\n    this.driver.addMaterial({\n      name: 'staticMaterial'\n    });\n    this.driver.addContactMaterial('defaultMaterial', 'defaultMaterial', {\n      friction: data.friction,\n      restitution: data.restitution,\n      contactEquationStiffness: data.contactEquationStiffness,\n      contactEquationRelaxation: data.contactEquationRelaxation,\n      frictionEquationStiffness: data.frictionEquationStiffness,\n      frictionEquationRegularization: data.frictionEquationRegularization\n    });\n    this.driver.addContactMaterial('staticMaterial', 'defaultMaterial', {\n      friction: 1.0,\n      restitution: 0.0,\n      contactEquationStiffness: data.contactEquationStiffness,\n      contactEquationRelaxation: data.contactEquationRelaxation,\n      frictionEquationStiffness: data.frictionEquationStiffness,\n      frictionEquationRegularization: data.frictionEquationRegularization\n    });\n  },\n\n  /**\n   * Updates the physics world on each tick of the A-Frame scene. It would be\n   * entirely possible to separate the two – updating physics more or less\n   * frequently than the scene – if greater precision or performance were\n   * necessary.\n   * @param  {number} t\n   * @param  {number} dt\n   */\n  tick: function (t, dt) {\n    if (!dt) return;\n    var i;\n    var callbacks = this.callbacks;\n\n    for (i = 0; i < this.callbacks.beforeStep.length; i++) {\n      this.callbacks.beforeStep[i].beforeStep(t, dt);\n    }\n\n    this.driver.step(Math.min(dt / 1000, this.data.maxInterval));\n\n    for (i = 0; i < callbacks.step.length; i++) {\n      callbacks.step[i].step(t, dt);\n    }\n\n    for (i = 0; i < callbacks.afterStep.length; i++) {\n      callbacks.afterStep[i].afterStep(t, dt);\n    }\n  },\n\n  /**\n   * Adds a body to the scene, and binds proxied methods to the driver.\n   * @param {CANNON.Body} body\n   */\n  addBody: function (body) {\n    var driver = this.driver;\n    body.__applyImpulse = body.applyImpulse;\n\n    body.applyImpulse = function () {\n      driver.applyBodyMethod(body, 'applyImpulse', arguments);\n    };\n\n    body.__applyForce = body.applyForce;\n\n    body.applyForce = function () {\n      driver.applyBodyMethod(body, 'applyForce', arguments);\n    };\n\n    body.updateProperties = function () {\n      driver.updateBodyProperties(body);\n    };\n\n    this.listeners[body.id] = function (e) {\n      body.el.emit('collide', e);\n    };\n\n    body.addEventListener('collide', this.listeners[body.id]);\n    this.driver.addBody(body);\n  },\n\n  /**\n   * Removes a body and its proxied methods.\n   * @param {CANNON.Body} body\n   */\n  removeBody: function (body) {\n    this.driver.removeBody(body);\n    body.removeEventListener('collide', this.listeners[body.id]);\n    delete this.listeners[body.id];\n    body.applyImpulse = body.__applyImpulse;\n    delete body.__applyImpulse;\n    body.applyForce = body.__applyForce;\n    delete body.__applyForce;\n    delete body.updateProperties;\n  },\n\n  /** @param {CANNON.Constraint} constraint */\n  addConstraint: function (constraint) {\n    if (!constraint.type) {\n      if (constraint instanceof CANNON.LockConstraint) {\n        constraint.type = 'LockConstraint';\n      } else if (constraint instanceof CANNON.DistanceConstraint) {\n        constraint.type = 'DistanceConstraint';\n      } else if (constraint instanceof CANNON.HingeConstraint) {\n        constraint.type = 'HingeConstraint';\n      } else if (constraint instanceof CANNON.ConeTwistConstraint) {\n        constraint.type = 'ConeTwistConstraint';\n      } else if (constraint instanceof CANNON.PointToPointConstraint) {\n        constraint.type = 'PointToPointConstraint';\n      }\n    }\n\n    this.driver.addConstraint(constraint);\n  },\n\n  /** @param {CANNON.Constraint} constraint */\n  removeConstraint: function (constraint) {\n    this.driver.removeConstraint(constraint);\n  },\n\n  /**\n   * Adds a component instance to the system and schedules its update methods to be called\n   * the given phase.\n   * @param {Component} component\n   * @param {string} phase\n   */\n  addComponent: function (component) {\n    var callbacks = this.callbacks;\n    if (component.beforeStep) callbacks.beforeStep.push(component);\n    if (component.step) callbacks.step.push(component);\n    if (component.afterStep) callbacks.afterStep.push(component);\n  },\n\n  /**\n   * Removes a component instance from the system.\n   * @param {Component} component\n   * @param {string} phase\n   */\n  removeComponent: function (component) {\n    var callbacks = this.callbacks;\n\n    if (component.beforeStep) {\n      callbacks.beforeStep.splice(callbacks.beforeStep.indexOf(component), 1);\n    }\n\n    if (component.step) {\n      callbacks.step.splice(callbacks.step.indexOf(component), 1);\n    }\n\n    if (component.afterStep) {\n      callbacks.afterStep.splice(callbacks.afterStep.indexOf(component), 1);\n    }\n  },\n\n  /** @return {Array<object>} */\n  getContacts: function () {\n    return this.driver.getContacts();\n  },\n  getMaterial: function (name) {\n    return this.driver.getMaterial(name);\n  }\n});\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/system.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/utils/math.js":
/*!**************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/utils/math.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports.slerp = function (a, b, t) {\n  if (t <= 0) return a;\n  if (t >= 1) return b;\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3]; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n  var cosHalfTheta = w * b[3] + x * b[0] + y * b[1] + z * b[2];\n\n  if (cosHalfTheta < 0) {\n    a = a.slice();\n    a[3] = -b[3];\n    a[0] = -b[0];\n    a[1] = -b[1];\n    a[2] = -b[2];\n    cosHalfTheta = -cosHalfTheta;\n  } else {\n    return b;\n  }\n\n  if (cosHalfTheta >= 1.0) {\n    a[3] = w;\n    a[0] = x;\n    a[1] = y;\n    a[2] = z;\n    return this;\n  }\n\n  var sinHalfTheta = Math.sqrt(1.0 - cosHalfTheta * cosHalfTheta);\n\n  if (Math.abs(sinHalfTheta) < 0.001) {\n    a[3] = 0.5 * (w + a[3]);\n    a[0] = 0.5 * (x + a[0]);\n    a[1] = 0.5 * (y + a[1]);\n    a[2] = 0.5 * (z + a[2]);\n    return this;\n  }\n\n  var halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n  var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta;\n  var ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n  a[3] = w * ratioA + a[3] * ratioB;\n  a[0] = x * ratioA + a[0] * ratioB;\n  a[1] = y * ratioA + a[1] * ratioB;\n  a[2] = z * ratioA + a[2] * ratioB;\n  return a;\n};\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/utils/math.js?");

/***/ }),

/***/ "./node_modules/aframe-physics-system/src/utils/protocol.js":
/*!******************************************************************!*\
  !*** ./node_modules/aframe-physics-system/src/utils/protocol.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var CANNON = __webpack_require__(/*! cannon */ \"./node_modules/cannon/src/Cannon.js\");\n\nvar mathUtils = __webpack_require__(/*! ./math */ \"./node_modules/aframe-physics-system/src/utils/math.js\");\n/******************************************************************************\n * IDs\n */\n\n\nvar ID = '__id';\nmodule.exports.ID = ID;\nvar nextID = {};\n\nmodule.exports.assignID = function (prefix, object) {\n  if (object[ID]) return;\n  nextID[prefix] = nextID[prefix] || 1;\n  object[ID] = prefix + '_' + nextID[prefix]++;\n};\n/******************************************************************************\n * Bodies\n */\n\n\nmodule.exports.serializeBody = function (body) {\n  var message = {\n    // Shapes.\n    shapes: body.shapes.map(serializeShape),\n    shapeOffsets: body.shapeOffsets.map(serializeVec3),\n    shapeOrientations: body.shapeOrientations.map(serializeQuaternion),\n    // Vectors.\n    position: serializeVec3(body.position),\n    quaternion: body.quaternion.toArray(),\n    velocity: serializeVec3(body.velocity),\n    angularVelocity: serializeVec3(body.angularVelocity),\n    // Properties.\n    id: body[ID],\n    mass: body.mass,\n    linearDamping: body.linearDamping,\n    angularDamping: body.angularDamping,\n    fixedRotation: body.fixedRotation,\n    allowSleep: body.allowSleep,\n    sleepSpeedLimit: body.sleepSpeedLimit,\n    sleepTimeLimit: body.sleepTimeLimit\n  };\n  return message;\n};\n\nmodule.exports.deserializeBodyUpdate = function (message, body) {\n  body.position.set(message.position[0], message.position[1], message.position[2]);\n  body.quaternion.set(message.quaternion[0], message.quaternion[1], message.quaternion[2], message.quaternion[3]);\n  body.velocity.set(message.velocity[0], message.velocity[1], message.velocity[2]);\n  body.angularVelocity.set(message.angularVelocity[0], message.angularVelocity[1], message.angularVelocity[2]);\n  body.linearDamping = message.linearDamping;\n  body.angularDamping = message.angularDamping;\n  body.fixedRotation = message.fixedRotation;\n  body.allowSleep = message.allowSleep;\n  body.sleepSpeedLimit = message.sleepSpeedLimit;\n  body.sleepTimeLimit = message.sleepTimeLimit;\n\n  if (body.mass !== message.mass) {\n    body.mass = message.mass;\n    body.updateMassProperties();\n  }\n\n  return body;\n};\n\nmodule.exports.deserializeInterpBodyUpdate = function (message1, message2, body, mix) {\n  var weight1 = 1 - mix;\n  var weight2 = mix;\n  body.position.set(message1.position[0] * weight1 + message2.position[0] * weight2, message1.position[1] * weight1 + message2.position[1] * weight2, message1.position[2] * weight1 + message2.position[2] * weight2);\n  var quaternion = mathUtils.slerp(message1.quaternion, message2.quaternion, mix);\n  body.quaternion.set(quaternion[0], quaternion[1], quaternion[2], quaternion[3]);\n  body.velocity.set(message1.velocity[0] * weight1 + message2.velocity[0] * weight2, message1.velocity[1] * weight1 + message2.velocity[1] * weight2, message1.velocity[2] * weight1 + message2.velocity[2] * weight2);\n  body.angularVelocity.set(message1.angularVelocity[0] * weight1 + message2.angularVelocity[0] * weight2, message1.angularVelocity[1] * weight1 + message2.angularVelocity[1] * weight2, message1.angularVelocity[2] * weight1 + message2.angularVelocity[2] * weight2);\n  body.linearDamping = message2.linearDamping;\n  body.angularDamping = message2.angularDamping;\n  body.fixedRotation = message2.fixedRotation;\n  body.allowSleep = message2.allowSleep;\n  body.sleepSpeedLimit = message2.sleepSpeedLimit;\n  body.sleepTimeLimit = message2.sleepTimeLimit;\n\n  if (body.mass !== message2.mass) {\n    body.mass = message2.mass;\n    body.updateMassProperties();\n  }\n\n  return body;\n};\n\nmodule.exports.deserializeBody = function (message) {\n  var body = new CANNON.Body({\n    mass: message.mass,\n    position: deserializeVec3(message.position),\n    quaternion: deserializeQuaternion(message.quaternion),\n    velocity: deserializeVec3(message.velocity),\n    angularVelocity: deserializeVec3(message.angularVelocity),\n    linearDamping: message.linearDamping,\n    angularDamping: message.angularDamping,\n    fixedRotation: message.fixedRotation,\n    allowSleep: message.allowSleep,\n    sleepSpeedLimit: message.sleepSpeedLimit,\n    sleepTimeLimit: message.sleepTimeLimit\n  });\n\n  for (var shapeMsg, i = 0; shapeMsg = message.shapes[i]; i++) {\n    body.addShape(deserializeShape(shapeMsg), deserializeVec3(message.shapeOffsets[i]), deserializeQuaternion(message.shapeOrientations[i]));\n  }\n\n  body[ID] = message.id;\n  return body;\n};\n/******************************************************************************\n * Shapes\n */\n\n\nmodule.exports.serializeShape = serializeShape;\n\nfunction serializeShape(shape) {\n  var shapeMsg = {\n    type: shape.type\n  };\n\n  if (shape.type === CANNON.Shape.types.BOX) {\n    shapeMsg.halfExtents = serializeVec3(shape.halfExtents);\n  } else if (shape.type === CANNON.Shape.types.SPHERE) {\n    shapeMsg.radius = shape.radius; // Patch schteppe/cannon.js#329.\n  } else if (shape._type === CANNON.Shape.types.CYLINDER) {\n    shapeMsg.type = CANNON.Shape.types.CYLINDER;\n    shapeMsg.radiusTop = shape.radiusTop;\n    shapeMsg.radiusBottom = shape.radiusBottom;\n    shapeMsg.height = shape.height;\n    shapeMsg.numSegments = shape.numSegments;\n  } else {\n    // TODO(donmccurdy): Support for other shape types.\n    throw new Error('Unimplemented shape type: %s', shape.type);\n  }\n\n  return shapeMsg;\n}\n\nmodule.exports.deserializeShape = deserializeShape;\n\nfunction deserializeShape(message) {\n  var shape;\n\n  if (message.type === CANNON.Shape.types.BOX) {\n    shape = new CANNON.Box(deserializeVec3(message.halfExtents));\n  } else if (message.type === CANNON.Shape.types.SPHERE) {\n    shape = new CANNON.Sphere(message.radius); // Patch schteppe/cannon.js#329.\n  } else if (message.type === CANNON.Shape.types.CYLINDER) {\n    shape = new CANNON.Cylinder(message.radiusTop, message.radiusBottom, message.height, message.numSegments);\n    shape._type = CANNON.Shape.types.CYLINDER;\n  } else {\n    // TODO(donmccurdy): Support for other shape types.\n    throw new Error('Unimplemented shape type: %s', message.type);\n  }\n\n  return shape;\n}\n/******************************************************************************\n * Constraints\n */\n\n\nmodule.exports.serializeConstraint = function (constraint) {\n  var message = {\n    id: constraint[ID],\n    type: constraint.type,\n    maxForce: constraint.maxForce,\n    bodyA: constraint.bodyA[ID],\n    bodyB: constraint.bodyB[ID]\n  };\n\n  switch (constraint.type) {\n    case 'LockConstraint':\n      break;\n\n    case 'DistanceConstraint':\n      message.distance = constraint.distance;\n      break;\n\n    case 'HingeConstraint':\n    case 'ConeTwistConstraint':\n      message.axisA = serializeVec3(constraint.axisA);\n      message.axisB = serializeVec3(constraint.axisB);\n      message.pivotA = serializeVec3(constraint.pivotA);\n      message.pivotB = serializeVec3(constraint.pivotB);\n      break;\n\n    case 'PointToPointConstraint':\n      message.pivotA = serializeVec3(constraint.pivotA);\n      message.pivotB = serializeVec3(constraint.pivotB);\n      break;\n\n    default:\n      throw new Error('' + 'Unexpected constraint type: ' + constraint.type + '. ' + 'You may need to manually set `constraint.type = \"FooConstraint\";`.');\n  }\n\n  return message;\n};\n\nmodule.exports.deserializeConstraint = function (message, bodies) {\n  var TypedConstraint = CANNON[message.type];\n  var bodyA = bodies[message.bodyA];\n  var bodyB = bodies[message.bodyB];\n  var constraint;\n\n  switch (message.type) {\n    case 'LockConstraint':\n      constraint = new CANNON.LockConstraint(bodyA, bodyB, message);\n      break;\n\n    case 'DistanceConstraint':\n      constraint = new CANNON.DistanceConstraint(bodyA, bodyB, message.distance, message.maxForce);\n      break;\n\n    case 'HingeConstraint':\n    case 'ConeTwistConstraint':\n      constraint = new TypedConstraint(bodyA, bodyB, {\n        pivotA: deserializeVec3(message.pivotA),\n        pivotB: deserializeVec3(message.pivotB),\n        axisA: deserializeVec3(message.axisA),\n        axisB: deserializeVec3(message.axisB),\n        maxForce: message.maxForce\n      });\n      break;\n\n    case 'PointToPointConstraint':\n      constraint = new CANNON.PointToPointConstraint(bodyA, deserializeVec3(message.pivotA), bodyB, deserializeVec3(message.pivotB), message.maxForce);\n      break;\n\n    default:\n      throw new Error('Unexpected constraint type: ' + message.type);\n  }\n\n  constraint[ID] = message.id;\n  return constraint;\n};\n/******************************************************************************\n * Contacts\n */\n\n\nmodule.exports.serializeContact = function (contact) {\n  return {\n    bi: contact.bi[ID],\n    bj: contact.bj[ID],\n    ni: serializeVec3(contact.ni),\n    ri: serializeVec3(contact.ri),\n    rj: serializeVec3(contact.rj)\n  };\n};\n\nmodule.exports.deserializeContact = function (message, bodies) {\n  return {\n    bi: bodies[message.bi],\n    bj: bodies[message.bj],\n    ni: deserializeVec3(message.ni),\n    ri: deserializeVec3(message.ri),\n    rj: deserializeVec3(message.rj)\n  };\n};\n/******************************************************************************\n * Math\n */\n\n\nmodule.exports.serializeVec3 = serializeVec3;\n\nfunction serializeVec3(vec3) {\n  return vec3.toArray();\n}\n\nmodule.exports.deserializeVec3 = deserializeVec3;\n\nfunction deserializeVec3(message) {\n  return new CANNON.Vec3(message[0], message[1], message[2]);\n}\n\nmodule.exports.serializeQuaternion = serializeQuaternion;\n\nfunction serializeQuaternion(quat) {\n  return quat.toArray();\n}\n\nmodule.exports.deserializeQuaternion = deserializeQuaternion;\n\nfunction deserializeQuaternion(message) {\n  return new CANNON.Quaternion(message[0], message[1], message[2], message[3]);\n}\n\n//# sourceURL=webpack:///./node_modules/aframe-physics-system/src/utils/protocol.js?");

/***/ }),

/***/ "./node_modules/aframe/dist/aframe-master.js":
/*!***************************************************!*\
  !*** ./node_modules/aframe/dist/aframe-master.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, setImmediate) {var require;var require;(function(f){if(true){module.exports=f();}else { var g; }})(function(){var define,module,exports;return function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return require(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f;}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e);},l,l.exports,e,t,n,r);}return n[o].exports;}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s;}return e;}()({1:[function(_dereq_,module,exports){var str=Object.prototype.toString;module.exports=anArray;function anArray(arr){return arr.BYTES_PER_ELEMENT&&str.call(arr.buffer)==='[object ArrayBuffer]'||Array.isArray(arr);}},{}],2:[function(_dereq_,module,exports){(function(global){/*\n 2017 Julian Garnier\n Released under the MIT license\n*/var $jscomp={scope:{}};$jscomp.defineProperty=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(e,r,p){if(p.get||p.set)throw new TypeError(\"ES3 does not support getters and setters.\");e!=Array.prototype&&e!=Object.prototype&&(e[r]=p.value);};$jscomp.getGlobal=function(e){return\"undefined\"!=typeof window&&window===e?e:\"undefined\"!=typeof global&&null!=global?global:e;};$jscomp.global=$jscomp.getGlobal(this);$jscomp.SYMBOL_PREFIX=\"jscomp_symbol_\";$jscomp.initSymbol=function(){$jscomp.initSymbol=function(){};$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol);};$jscomp.symbolCounter_=0;$jscomp.Symbol=function(e){return $jscomp.SYMBOL_PREFIX+(e||\"\")+$jscomp.symbolCounter_++;};$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();var e=$jscomp.global.Symbol.iterator;e||(e=$jscomp.global.Symbol.iterator=$jscomp.global.Symbol(\"iterator\"));\"function\"!=typeof Array.prototype[e]&&$jscomp.defineProperty(Array.prototype,e,{configurable:!0,writable:!0,value:function(){return $jscomp.arrayIterator(this);}});$jscomp.initSymbolIterator=function(){};};$jscomp.arrayIterator=function(e){var r=0;return $jscomp.iteratorPrototype(function(){return r<e.length?{done:!1,value:e[r++]}:{done:!0};});};$jscomp.iteratorPrototype=function(e){$jscomp.initSymbolIterator();e={next:e};e[$jscomp.global.Symbol.iterator]=function(){return this;};return e;};$jscomp.array=$jscomp.array||{};$jscomp.iteratorFromArray=function(e,r){$jscomp.initSymbolIterator();e instanceof String&&(e+=\"\");var p=0,m={next:function(){if(p<e.length){var u=p++;return{value:r(u,e[u]),done:!1};}m.next=function(){return{done:!0,value:void 0};};return m.next();}};m[Symbol.iterator]=function(){return m;};return m;};$jscomp.polyfill=function(e,r,p,m){if(r){p=$jscomp.global;e=e.split(\".\");for(m=0;m<e.length-1;m++){var u=e[m];u in p||(p[u]={});p=p[u];}e=e[e.length-1];m=p[e];r=r(m);r!=m&&null!=r&&$jscomp.defineProperty(p,e,{configurable:!0,writable:!0,value:r});}};$jscomp.polyfill(\"Array.prototype.keys\",function(e){return e?e:function(){return $jscomp.iteratorFromArray(this,function(e){return e;});};},\"es6-impl\",\"es3\");var $jscomp$this=this;(function(e,r){\"function\"===typeof define&&define.amd?define([],r):\"object\"===typeof module&&module.exports?module.exports=r():e.anime=r();})(this,function(){function e(a){if(!h.col(a))try{return document.querySelectorAll(a);}catch(c){}}function r(a,c){for(var d=a.length,b=2<=arguments.length?arguments[1]:void 0,f=[],n=0;n<d;n++)if(n in a){var k=a[n];c.call(b,k,n,a)&&f.push(k);}return f;}function p(a){return a.reduce(function(a,d){return a.concat(h.arr(d)?p(d):d);},[]);}function m(a){if(h.arr(a))return a;h.str(a)&&(a=e(a)||a);return a instanceof NodeList||a instanceof HTMLCollection?[].slice.call(a):[a];}function u(a,c){return a.some(function(a){return a===c;});}function C(a){var c={},d;for(d in a)c[d]=a[d];return c;}function D(a,c){var d=C(a),b;for(b in a)d[b]=c.hasOwnProperty(b)?c[b]:a[b];return d;}function z(a,c){var d=C(a),b;for(b in c)d[b]=h.und(a[b])?c[b]:a[b];return d;}function T(a){a=a.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,function(a,c,d,k){return c+c+d+d+k+k;});var c=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(a);a=parseInt(c[1],16);var d=parseInt(c[2],16),c=parseInt(c[3],16);return\"rgba(\"+a+\",\"+d+\",\"+c+\",1)\";}function U(a){function c(a,c,b){0>b&&(b+=1);1<b&&--b;return b<1/6?a+6*(c-a)*b:.5>b?c:b<2/3?a+(c-a)*(2/3-b)*6:a;}var d=/hsl\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%\\)/g.exec(a)||/hsla\\((\\d+),\\s*([\\d.]+)%,\\s*([\\d.]+)%,\\s*([\\d.]+)\\)/g.exec(a);a=parseInt(d[1])/360;var b=parseInt(d[2])/100,f=parseInt(d[3])/100,d=d[4]||1;if(0==b)f=b=a=f;else{var n=.5>f?f*(1+b):f+b-f*b,k=2*f-n,f=c(k,n,a+1/3),b=c(k,n,a);a=c(k,n,a-1/3);}return\"rgba(\"+255*f+\",\"+255*b+\",\"+255*a+\",\"+d+\")\";}function y(a){if(a=/([\\+\\-]?[0-9#\\.]+)(%|px|pt|em|rem|in|cm|mm|ex|ch|pc|vw|vh|vmin|vmax|deg|rad|turn)?$/.exec(a))return a[2];}function V(a){if(-1<a.indexOf(\"translate\")||\"perspective\"===a)return\"px\";if(-1<a.indexOf(\"rotate\")||-1<a.indexOf(\"skew\"))return\"deg\";}function I(a,c){return h.fnc(a)?a(c.target,c.id,c.total):a;}function E(a,c){if(c in a.style)return getComputedStyle(a).getPropertyValue(c.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase())||\"0\";}function J(a,c){if(h.dom(a)&&u(W,c))return\"transform\";if(h.dom(a)&&(a.getAttribute(c)||h.svg(a)&&a[c]))return\"attribute\";if(h.dom(a)&&\"transform\"!==c&&E(a,c))return\"css\";if(null!=a[c])return\"object\";}function X(a,c){var d=V(c),d=-1<c.indexOf(\"scale\")?1:0+d;a=a.style.transform;if(!a)return d;for(var b=[],f=[],n=[],k=/(\\w+)\\((.+?)\\)/g;b=k.exec(a);)f.push(b[1]),n.push(b[2]);a=r(n,function(a,b){return f[b]===c;});return a.length?a[0]:d;}function K(a,c){switch(J(a,c)){case\"transform\":return X(a,c);case\"css\":return E(a,c);case\"attribute\":return a.getAttribute(c);}return a[c]||0;}function L(a,c){var d=/^(\\*=|\\+=|-=)/.exec(a);if(!d)return a;var b=y(a)||0;c=parseFloat(c);a=parseFloat(a.replace(d[0],\"\"));switch(d[0][0]){case\"+\":return c+a+b;case\"-\":return c-a+b;case\"*\":return c*a+b;}}function F(a,c){return Math.sqrt(Math.pow(c.x-a.x,2)+Math.pow(c.y-a.y,2));}function M(a){a=a.points;for(var c=0,d,b=0;b<a.numberOfItems;b++){var f=a.getItem(b);0<b&&(c+=F(d,f));d=f;}return c;}function N(a){if(a.getTotalLength)return a.getTotalLength();switch(a.tagName.toLowerCase()){case\"circle\":return 2*Math.PI*a.getAttribute(\"r\");case\"rect\":return 2*a.getAttribute(\"width\")+2*a.getAttribute(\"height\");case\"line\":return F({x:a.getAttribute(\"x1\"),y:a.getAttribute(\"y1\")},{x:a.getAttribute(\"x2\"),y:a.getAttribute(\"y2\")});case\"polyline\":return M(a);case\"polygon\":var c=a.points;return M(a)+F(c.getItem(c.numberOfItems-1),c.getItem(0));}}function Y(a,c){function d(b){b=void 0===b?0:b;return a.el.getPointAtLength(1<=c+b?c+b:0);}var b=d(),f=d(-1),n=d(1);switch(a.property){case\"x\":return b.x;case\"y\":return b.y;case\"angle\":return 180*Math.atan2(n.y-f.y,n.x-f.x)/Math.PI;}}function O(a,c){var d=/-?\\d*\\.?\\d+/g,b;b=h.pth(a)?a.totalLength:a;if(h.col(b)){if(h.rgb(b)){var f=/rgb\\((\\d+,\\s*[\\d]+,\\s*[\\d]+)\\)/g.exec(b);b=f?\"rgba(\"+f[1]+\",1)\":b;}else b=h.hex(b)?T(b):h.hsl(b)?U(b):void 0;}else f=(f=y(b))?b.substr(0,b.length-f.length):b,b=c&&!/\\s/g.test(b)?f+c:f;b+=\"\";return{original:b,numbers:b.match(d)?b.match(d).map(Number):[0],strings:h.str(a)||c?b.split(d):[]};}function P(a){a=a?p(h.arr(a)?a.map(m):m(a)):[];return r(a,function(a,d,b){return b.indexOf(a)===d;});}function Z(a){var c=P(a);return c.map(function(a,b){return{target:a,id:b,total:c.length};});}function aa(a,c){var d=C(c);if(h.arr(a)){var b=a.length;2!==b||h.obj(a[0])?h.fnc(c.duration)||(d.duration=c.duration/b):a={value:a};}return m(a).map(function(a,b){b=b?0:c.delay;a=h.obj(a)&&!h.pth(a)?a:{value:a};h.und(a.delay)&&(a.delay=b);return a;}).map(function(a){return z(a,d);});}function ba(a,c){var d={},b;for(b in a){var f=I(a[b],c);h.arr(f)&&(f=f.map(function(a){return I(a,c);}),1===f.length&&(f=f[0]));d[b]=f;}d.duration=parseFloat(d.duration);d.delay=parseFloat(d.delay);return d;}function ca(a){return h.arr(a)?A.apply(this,a):Q[a];}function da(a,c){var d;return a.tweens.map(function(b){b=ba(b,c);var f=b.value,e=K(c.target,a.name),k=d?d.to.original:e,k=h.arr(f)?f[0]:k,w=L(h.arr(f)?f[1]:f,k),e=y(w)||y(k)||y(e);b.from=O(k,e);b.to=O(w,e);b.start=d?d.end:a.offset;b.end=b.start+b.delay+b.duration;b.easing=ca(b.easing);b.elasticity=(1E3-Math.min(Math.max(b.elasticity,1),999))/1E3;b.isPath=h.pth(f);b.isColor=h.col(b.from.original);b.isColor&&(b.round=1);return d=b;});}function ea(a,c){return r(p(a.map(function(a){return c.map(function(b){var c=J(a.target,b.name);if(c){var d=da(b,a);b={type:c,property:b.name,animatable:a,tweens:d,duration:d[d.length-1].end,delay:d[0].delay};}else b=void 0;return b;});})),function(a){return!h.und(a);});}function R(a,c,d,b){var f=\"delay\"===a;return c.length?(f?Math.min:Math.max).apply(Math,c.map(function(b){return b[a];})):f?b.delay:d.offset+b.delay+b.duration;}function fa(a){var c=D(ga,a),d=D(S,a),b=Z(a.targets),f=[],e=z(c,d),k;for(k in a)e.hasOwnProperty(k)||\"targets\"===k||f.push({name:k,offset:e.offset,tweens:aa(a[k],d)});a=ea(b,f);return z(c,{children:[],animatables:b,animations:a,duration:R(\"duration\",a,c,d),delay:R(\"delay\",a,c,d)});}function q(a){function c(){return window.Promise&&new Promise(function(a){return p=a;});}function d(a){return g.reversed?g.duration-a:a;}function b(a){for(var b=0,c={},d=g.animations,f=d.length;b<f;){var e=d[b],k=e.animatable,h=e.tweens,n=h.length-1,l=h[n];n&&(l=r(h,function(b){return a<b.end;})[0]||l);for(var h=Math.min(Math.max(a-l.start-l.delay,0),l.duration)/l.duration,w=isNaN(h)?1:l.easing(h,l.elasticity),h=l.to.strings,p=l.round,n=[],m=void 0,m=l.to.numbers.length,t=0;t<m;t++){var x=void 0,x=l.to.numbers[t],q=l.from.numbers[t],x=l.isPath?Y(l.value,w*x):q+w*(x-q);p&&(l.isColor&&2<t||(x=Math.round(x*p)/p));n.push(x);}if(l=h.length)for(m=h[0],w=0;w<l;w++)p=h[w+1],t=n[w],isNaN(t)||(m=p?m+(t+p):m+(t+\" \"));else m=n[0];ha[e.type](k.target,e.property,m,c,k.id);e.currentValue=m;b++;}if(b=Object.keys(c).length)for(d=0;d<b;d++)H||(H=E(document.body,\"transform\")?\"transform\":\"-webkit-transform\"),g.animatables[d].target.style[H]=c[d].join(\" \");g.currentTime=a;g.progress=a/g.duration*100;}function f(a){if(g[a])g[a](g);}function e(){g.remaining&&!0!==g.remaining&&g.remaining--;}function k(a){var k=g.duration,n=g.offset,w=n+g.delay,r=g.currentTime,x=g.reversed,q=d(a);if(g.children.length){var u=g.children,v=u.length;if(q>=g.currentTime)for(var G=0;G<v;G++)u[G].seek(q);else for(;v--;)u[v].seek(q);}if(q>=w||!k)g.began||(g.began=!0,f(\"begin\")),f(\"run\");if(q>n&&q<k)b(q);else if(q<=n&&0!==r&&(b(0),x&&e()),q>=k&&r!==k||!k)b(k),x||e();f(\"update\");a>=k&&(g.remaining?(t=h,\"alternate\"===g.direction&&(g.reversed=!g.reversed)):(g.pause(),g.completed||(g.completed=!0,f(\"complete\"),\"Promise\"in window&&(p(),m=c()))),l=0);}a=void 0===a?{}:a;var h,t,l=0,p=null,m=c(),g=fa(a);g.reset=function(){var a=g.direction,c=g.loop;g.currentTime=0;g.progress=0;g.paused=!0;g.began=!1;g.completed=!1;g.reversed=\"reverse\"===a;g.remaining=\"alternate\"===a&&1===c?2:c;b(0);for(a=g.children.length;a--;)g.children[a].reset();};g.tick=function(a){h=a;t||(t=h);k((l+h-t)*q.speed);};g.seek=function(a){k(d(a));};g.pause=function(){var a=v.indexOf(g);-1<a&&v.splice(a,1);g.paused=!0;};g.play=function(){g.paused&&(g.paused=!1,t=0,l=d(g.currentTime),v.push(g),B||ia());};g.reverse=function(){g.reversed=!g.reversed;t=0;l=d(g.currentTime);};g.restart=function(){g.pause();g.reset();g.play();};g.finished=m;g.reset();g.autoplay&&g.play();return g;}var ga={update:void 0,begin:void 0,run:void 0,complete:void 0,loop:1,direction:\"normal\",autoplay:!0,offset:0},S={duration:1E3,delay:0,easing:\"easeOutElastic\",elasticity:500,round:0},W=\"translateX translateY translateZ rotate rotateX rotateY rotateZ scale scaleX scaleY scaleZ skewX skewY perspective\".split(\" \"),H,h={arr:function(a){return Array.isArray(a);},obj:function(a){return-1<Object.prototype.toString.call(a).indexOf(\"Object\");},pth:function(a){return h.obj(a)&&a.hasOwnProperty(\"totalLength\");},svg:function(a){return a instanceof SVGElement;},dom:function(a){return a.nodeType||h.svg(a);},str:function(a){return\"string\"===typeof a;},fnc:function(a){return\"function\"===typeof a;},und:function(a){return\"undefined\"===typeof a;},hex:function(a){return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a);},rgb:function(a){return /^rgb/.test(a);},hsl:function(a){return /^hsl/.test(a);},col:function(a){return h.hex(a)||h.rgb(a)||h.hsl(a);}},A=function(){function a(a,d,b){return(((1-3*b+3*d)*a+(3*b-6*d))*a+3*d)*a;}return function(c,d,b,f){if(0<=c&&1>=c&&0<=b&&1>=b){var e=new Float32Array(11);if(c!==d||b!==f)for(var k=0;11>k;++k)e[k]=a(.1*k,c,b);return function(k){if(c===d&&b===f)return k;if(0===k)return 0;if(1===k)return 1;for(var h=0,l=1;10!==l&&e[l]<=k;++l)h+=.1;--l;var l=h+(k-e[l])/(e[l+1]-e[l])*.1,n=3*(1-3*b+3*c)*l*l+2*(3*b-6*c)*l+3*c;if(.001<=n){for(h=0;4>h;++h){n=3*(1-3*b+3*c)*l*l+2*(3*b-6*c)*l+3*c;if(0===n)break;var m=a(l,c,b)-k,l=l-m/n;}k=l;}else if(0===n)k=l;else{var l=h,h=h+.1,g=0;do m=l+(h-l)/2,n=a(m,c,b)-k,0<n?h=m:l=m;while(1e-7<Math.abs(n)&&10>++g);k=m;}return a(k,d,f);};}};}(),Q=function(){function a(a,b){return 0===a||1===a?a:-Math.pow(2,10*(a-1))*Math.sin(2*(a-1-b/(2*Math.PI)*Math.asin(1))*Math.PI/b);}var c=\"Quad Cubic Quart Quint Sine Expo Circ Back Elastic\".split(\" \"),d={In:[[.55,.085,.68,.53],[.55,.055,.675,.19],[.895,.03,.685,.22],[.755,.05,.855,.06],[.47,0,.745,.715],[.95,.05,.795,.035],[.6,.04,.98,.335],[.6,-.28,.735,.045],a],Out:[[.25,.46,.45,.94],[.215,.61,.355,1],[.165,.84,.44,1],[.23,1,.32,1],[.39,.575,.565,1],[.19,1,.22,1],[.075,.82,.165,1],[.175,.885,.32,1.275],function(b,c){return 1-a(1-b,c);}],InOut:[[.455,.03,.515,.955],[.645,.045,.355,1],[.77,0,.175,1],[.86,0,.07,1],[.445,.05,.55,.95],[1,0,0,1],[.785,.135,.15,.86],[.68,-.55,.265,1.55],function(b,c){return .5>b?a(2*b,c)/2:1-a(-2*b+2,c)/2;}]},b={linear:A(.25,.25,.75,.75)},f={},e;for(e in d)f.type=e,d[f.type].forEach(function(a){return function(d,f){b[\"ease\"+a.type+c[f]]=h.fnc(d)?d:A.apply($jscomp$this,d);};}(f)),f={type:f.type};return b;}(),ha={css:function(a,c,d){return a.style[c]=d;},attribute:function(a,c,d){return a.setAttribute(c,d);},object:function(a,c,d){return a[c]=d;},transform:function(a,c,d,b,f){b[f]||(b[f]=[]);b[f].push(c+\"(\"+d+\")\");}},v=[],B=0,ia=function(){function a(){B=requestAnimationFrame(c);}function c(c){var b=v.length;if(b){for(var d=0;d<b;)v[d]&&v[d].tick(c),d++;a();}else cancelAnimationFrame(B),B=0;}return a;}();q.version=\"2.2.0\";q.speed=1;q.running=v;q.remove=function(a){a=P(a);for(var c=v.length;c--;)for(var d=v[c],b=d.animations,f=b.length;f--;)u(a,b[f].animatable.target)&&(b.splice(f,1),b.length||d.pause());};q.getValue=K;q.path=function(a,c){var d=h.str(a)?e(a)[0]:a,b=c||100;return function(a){return{el:d,property:a,totalLength:N(d)*(b/100)};};};q.setDashoffset=function(a){var c=N(a);a.setAttribute(\"stroke-dasharray\",c);return c;};q.bezier=A;q.easings=Q;q.timeline=function(a){var c=q(a);c.pause();c.duration=0;c.add=function(d){c.children.forEach(function(a){a.began=!0;a.completed=!0;});m(d).forEach(function(b){var d=z(b,D(S,a||{}));d.targets=d.targets||a.targets;b=c.duration;var e=d.offset;d.autoplay=!1;d.direction=c.direction;d.offset=h.und(e)?b:L(e,b);c.began=!0;c.completed=!0;c.seek(d.offset);d=q(d);d.began=!0;d.completed=!0;d.duration>b&&(c.duration=d.duration);c.children.push(d);});c.seek(0);c.reset();c.autoplay&&c.restart();return c;};return c;};q.random=function(a,c){return Math.floor(Math.random()*(c-a+1))+a;};return q;});}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});},{}],3:[function(_dereq_,module,exports){module.exports=function numtype(num,def){return typeof num==='number'?num:typeof def==='number'?def:0;};},{}],4:[function(_dereq_,module,exports){'use strict';exports.byteLength=byteLength;exports.toByteArray=toByteArray;exports.fromByteArray=fromByteArray;var lookup=[];var revLookup=[];var Arr=typeof Uint8Array!=='undefined'?Uint8Array:Array;var code='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';for(var i=0,len=code.length;i<len;++i){lookup[i]=code[i];revLookup[code.charCodeAt(i)]=i;}// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)]=62;revLookup['_'.charCodeAt(0)]=63;function placeHoldersCount(b64){var len=b64.length;if(len%4>0){throw new Error('Invalid string. Length must be a multiple of 4');}// the number of equal signs (place holders)\n// if there are two placeholders, than the two characters before it\n// represent one byte\n// if there is only one, then the three characters before it represent 2 bytes\n// this is just a cheap hack to not do indexOf twice\nreturn b64[len-2]==='='?2:b64[len-1]==='='?1:0;}function byteLength(b64){// base64 is 4/3 + up to two characters of the original data\nreturn b64.length*3/4-placeHoldersCount(b64);}function toByteArray(b64){var i,l,tmp,placeHolders,arr;var len=b64.length;placeHolders=placeHoldersCount(b64);arr=new Arr(len*3/4-placeHolders);// if there are placeholders, only get up to the last complete 4 chars\nl=placeHolders>0?len-4:len;var L=0;for(i=0;i<l;i+=4){tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)];arr[L++]=tmp>>16&0xFF;arr[L++]=tmp>>8&0xFF;arr[L++]=tmp&0xFF;}if(placeHolders===2){tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4;arr[L++]=tmp&0xFF;}else if(placeHolders===1){tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2;arr[L++]=tmp>>8&0xFF;arr[L++]=tmp&0xFF;}return arr;}function tripletToBase64(num){return lookup[num>>18&0x3F]+lookup[num>>12&0x3F]+lookup[num>>6&0x3F]+lookup[num&0x3F];}function encodeChunk(uint8,start,end){var tmp;var output=[];for(var i=start;i<end;i+=3){tmp=(uint8[i]<<16&0xFF0000)+(uint8[i+1]<<8&0xFF00)+(uint8[i+2]&0xFF);output.push(tripletToBase64(tmp));}return output.join('');}function fromByteArray(uint8){var tmp;var len=uint8.length;var extraBytes=len%3;// if we have 1 byte left, pad 2 bytes\nvar output='';var parts=[];var maxChunkLength=16383;// must be multiple of 3\n// go through the array every three bytes, we'll deal with trailing stuff later\nfor(var i=0,len2=len-extraBytes;i<len2;i+=maxChunkLength){parts.push(encodeChunk(uint8,i,i+maxChunkLength>len2?len2:i+maxChunkLength));}// pad the end with zeros, but make sure to not forget the extra bytes\nif(extraBytes===1){tmp=uint8[len-1];output+=lookup[tmp>>2];output+=lookup[tmp<<4&0x3F];output+='==';}else if(extraBytes===2){tmp=(uint8[len-2]<<8)+uint8[len-1];output+=lookup[tmp>>10];output+=lookup[tmp>>4&0x3F];output+=lookup[tmp<<2&0x3F];output+='=';}parts.push(output);return parts.join('');}},{}],5:[function(_dereq_,module,exports){'use strict';// For more information about browser field, check out the browser field at https://github.com/substack/browserify-handbook#browser-field.\nmodule.exports={// Create a <link> tag with optional data attributes\ncreateLink:function(href,attributes){var head=document.head||document.getElementsByTagName('head')[0];var link=document.createElement('link');link.href=href;link.rel='stylesheet';for(var key in attributes){if(!attributes.hasOwnProperty(key)){continue;}var value=attributes[key];link.setAttribute('data-'+key,value);}head.appendChild(link);},// Create a <style> tag with optional data attributes\ncreateStyle:function(cssText,attributes){var head=document.head||document.getElementsByTagName('head')[0],style=document.createElement('style');style.type='text/css';for(var key in attributes){if(!attributes.hasOwnProperty(key)){continue;}var value=attributes[key];style.setAttribute('data-'+key,value);}if(style.sheet){// for jsdom and IE9+\nstyle.innerHTML=cssText;style.sheet.cssText=cssText;head.appendChild(style);}else if(style.styleSheet){// for IE8 and below\nhead.appendChild(style);style.styleSheet.cssText=cssText;}else{// for Chrome, Firefox, and Safari\nstyle.appendChild(document.createTextNode(cssText));head.appendChild(style);}}};},{}],6:[function(_dereq_,module,exports){var Buffer=_dereq_('buffer').Buffer;// for use with browserify\nmodule.exports=function(a,b){if(!Buffer.isBuffer(a))return undefined;if(!Buffer.isBuffer(b))return undefined;if(typeof a.equals==='function')return a.equals(b);if(a.length!==b.length)return false;for(var i=0;i<a.length;i++){if(a[i]!==b[i])return false;}return true;};},{\"buffer\":7}],7:[function(_dereq_,module,exports){(function(global){/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */ /* eslint-disable no-proto */'use strict';var base64=_dereq_('base64-js');var ieee754=_dereq_('ieee754');var isArray=_dereq_('isarray');exports.Buffer=Buffer;exports.SlowBuffer=SlowBuffer;exports.INSPECT_MAX_BYTES=50;/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */Buffer.TYPED_ARRAY_SUPPORT=global.TYPED_ARRAY_SUPPORT!==undefined?global.TYPED_ARRAY_SUPPORT:typedArraySupport();/*\n * Export kMaxLength after typed array support is determined.\n */exports.kMaxLength=kMaxLength();function typedArraySupport(){try{var arr=new Uint8Array(1);arr.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42;}};return arr.foo()===42&&// typed array instances can be augmented\ntypeof arr.subarray==='function'&&// chrome 9-10 lack `subarray`\narr.subarray(1,1).byteLength===0;// ie10 has broken `subarray`\n}catch(e){return false;}}function kMaxLength(){return Buffer.TYPED_ARRAY_SUPPORT?0x7fffffff:0x3fffffff;}function createBuffer(that,length){if(kMaxLength()<length){throw new RangeError('Invalid typed array length');}if(Buffer.TYPED_ARRAY_SUPPORT){// Return an augmented `Uint8Array` instance, for best performance\nthat=new Uint8Array(length);that.__proto__=Buffer.prototype;}else{// Fallback: Return an object instance of the Buffer class\nif(that===null){that=new Buffer(length);}that.length=length;}return that;}/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */function Buffer(arg,encodingOrOffset,length){if(!Buffer.TYPED_ARRAY_SUPPORT&&!(this instanceof Buffer)){return new Buffer(arg,encodingOrOffset,length);}// Common case.\nif(typeof arg==='number'){if(typeof encodingOrOffset==='string'){throw new Error('If encoding is specified then the first argument must be a string');}return allocUnsafe(this,arg);}return from(this,arg,encodingOrOffset,length);}Buffer.poolSize=8192;// not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment=function(arr){arr.__proto__=Buffer.prototype;return arr;};function from(that,value,encodingOrOffset,length){if(typeof value==='number'){throw new TypeError('\"value\" argument must not be a number');}if(typeof ArrayBuffer!=='undefined'&&value instanceof ArrayBuffer){return fromArrayBuffer(that,value,encodingOrOffset,length);}if(typeof value==='string'){return fromString(that,value,encodingOrOffset);}return fromObject(that,value);}/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/Buffer.from=function(value,encodingOrOffset,length){return from(null,value,encodingOrOffset,length);};if(Buffer.TYPED_ARRAY_SUPPORT){Buffer.prototype.__proto__=Uint8Array.prototype;Buffer.__proto__=Uint8Array;if(typeof Symbol!=='undefined'&&Symbol.species&&Buffer[Symbol.species]===Buffer){// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nObject.defineProperty(Buffer,Symbol.species,{value:null,configurable:true});}}function assertSize(size){if(typeof size!=='number'){throw new TypeError('\"size\" argument must be a number');}else if(size<0){throw new RangeError('\"size\" argument must not be negative');}}function alloc(that,size,fill,encoding){assertSize(size);if(size<=0){return createBuffer(that,size);}if(fill!==undefined){// Only pay attention to encoding if it's a string. This\n// prevents accidentally sending in a number that would\n// be interpretted as a start offset.\nreturn typeof encoding==='string'?createBuffer(that,size).fill(fill,encoding):createBuffer(that,size).fill(fill);}return createBuffer(that,size);}/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/Buffer.alloc=function(size,fill,encoding){return alloc(null,size,fill,encoding);};function allocUnsafe(that,size){assertSize(size);that=createBuffer(that,size<0?0:checked(size)|0);if(!Buffer.TYPED_ARRAY_SUPPORT){for(var i=0;i<size;++i){that[i]=0;}}return that;}/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */Buffer.allocUnsafe=function(size){return allocUnsafe(null,size);};/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */Buffer.allocUnsafeSlow=function(size){return allocUnsafe(null,size);};function fromString(that,string,encoding){if(typeof encoding!=='string'||encoding===''){encoding='utf8';}if(!Buffer.isEncoding(encoding)){throw new TypeError('\"encoding\" must be a valid string encoding');}var length=byteLength(string,encoding)|0;that=createBuffer(that,length);var actual=that.write(string,encoding);if(actual!==length){// Writing a hex string, for example, that contains invalid characters will\n// cause everything after the first invalid character to be ignored. (e.g.\n// 'abxxcd' will be treated as 'ab')\nthat=that.slice(0,actual);}return that;}function fromArrayLike(that,array){var length=array.length<0?0:checked(array.length)|0;that=createBuffer(that,length);for(var i=0;i<length;i+=1){that[i]=array[i]&255;}return that;}function fromArrayBuffer(that,array,byteOffset,length){array.byteLength;// this throws if `array` is not a valid ArrayBuffer\nif(byteOffset<0||array.byteLength<byteOffset){throw new RangeError('\\'offset\\' is out of bounds');}if(array.byteLength<byteOffset+(length||0)){throw new RangeError('\\'length\\' is out of bounds');}if(byteOffset===undefined&&length===undefined){array=new Uint8Array(array);}else if(length===undefined){array=new Uint8Array(array,byteOffset);}else{array=new Uint8Array(array,byteOffset,length);}if(Buffer.TYPED_ARRAY_SUPPORT){// Return an augmented `Uint8Array` instance, for best performance\nthat=array;that.__proto__=Buffer.prototype;}else{// Fallback: Return an object instance of the Buffer class\nthat=fromArrayLike(that,array);}return that;}function fromObject(that,obj){if(Buffer.isBuffer(obj)){var len=checked(obj.length)|0;that=createBuffer(that,len);if(that.length===0){return that;}obj.copy(that,0,0,len);return that;}if(obj){if(typeof ArrayBuffer!=='undefined'&&obj.buffer instanceof ArrayBuffer||'length'in obj){if(typeof obj.length!=='number'||isnan(obj.length)){return createBuffer(that,0);}return fromArrayLike(that,obj);}if(obj.type==='Buffer'&&isArray(obj.data)){return fromArrayLike(that,obj.data);}}throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');}function checked(length){// Note: cannot use `length < kMaxLength()` here because that fails when\n// length is NaN (which is otherwise coerced to zero.)\nif(length>=kMaxLength()){throw new RangeError('Attempt to allocate Buffer larger than maximum '+'size: 0x'+kMaxLength().toString(16)+' bytes');}return length|0;}function SlowBuffer(length){if(+length!=length){// eslint-disable-line eqeqeq\nlength=0;}return Buffer.alloc(+length);}Buffer.isBuffer=function isBuffer(b){return!!(b!=null&&b._isBuffer);};Buffer.compare=function compare(a,b){if(!Buffer.isBuffer(a)||!Buffer.isBuffer(b)){throw new TypeError('Arguments must be Buffers');}if(a===b)return 0;var x=a.length;var y=b.length;for(var i=0,len=Math.min(x,y);i<len;++i){if(a[i]!==b[i]){x=a[i];y=b[i];break;}}if(x<y)return-1;if(y<x)return 1;return 0;};Buffer.isEncoding=function isEncoding(encoding){switch(String(encoding).toLowerCase()){case'hex':case'utf8':case'utf-8':case'ascii':case'latin1':case'binary':case'base64':case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return true;default:return false;}};Buffer.concat=function concat(list,length){if(!isArray(list)){throw new TypeError('\"list\" argument must be an Array of Buffers');}if(list.length===0){return Buffer.alloc(0);}var i;if(length===undefined){length=0;for(i=0;i<list.length;++i){length+=list[i].length;}}var buffer=Buffer.allocUnsafe(length);var pos=0;for(i=0;i<list.length;++i){var buf=list[i];if(!Buffer.isBuffer(buf)){throw new TypeError('\"list\" argument must be an Array of Buffers');}buf.copy(buffer,pos);pos+=buf.length;}return buffer;};function byteLength(string,encoding){if(Buffer.isBuffer(string)){return string.length;}if(typeof ArrayBuffer!=='undefined'&&typeof ArrayBuffer.isView==='function'&&(ArrayBuffer.isView(string)||string instanceof ArrayBuffer)){return string.byteLength;}if(typeof string!=='string'){string=''+string;}var len=string.length;if(len===0)return 0;// Use a for loop to avoid recursion\nvar loweredCase=false;for(;;){switch(encoding){case'ascii':case'latin1':case'binary':return len;case'utf8':case'utf-8':case undefined:return utf8ToBytes(string).length;case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return len*2;case'hex':return len>>>1;case'base64':return base64ToBytes(string).length;default:if(loweredCase)return utf8ToBytes(string).length;// assume utf8\nencoding=(''+encoding).toLowerCase();loweredCase=true;}}}Buffer.byteLength=byteLength;function slowToString(encoding,start,end){var loweredCase=false;// No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n// property of a typed array.\n// This behaves neither like String nor Uint8Array in that we set start/end\n// to their upper/lower bounds if the value passed is out of range.\n// undefined is handled specially as per ECMA-262 6th Edition,\n// Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\nif(start===undefined||start<0){start=0;}// Return early if start > this.length. Done here to prevent potential uint32\n// coercion fail below.\nif(start>this.length){return'';}if(end===undefined||end>this.length){end=this.length;}if(end<=0){return'';}// Force coersion to uint32. This will also coerce falsey/NaN values to 0.\nend>>>=0;start>>>=0;if(end<=start){return'';}if(!encoding)encoding='utf8';while(true){switch(encoding){case'hex':return hexSlice(this,start,end);case'utf8':case'utf-8':return utf8Slice(this,start,end);case'ascii':return asciiSlice(this,start,end);case'latin1':case'binary':return latin1Slice(this,start,end);case'base64':return base64Slice(this,start,end);case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return utf16leSlice(this,start,end);default:if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);encoding=(encoding+'').toLowerCase();loweredCase=true;}}}// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer=true;function swap(b,n,m){var i=b[n];b[n]=b[m];b[m]=i;}Buffer.prototype.swap16=function swap16(){var len=this.length;if(len%2!==0){throw new RangeError('Buffer size must be a multiple of 16-bits');}for(var i=0;i<len;i+=2){swap(this,i,i+1);}return this;};Buffer.prototype.swap32=function swap32(){var len=this.length;if(len%4!==0){throw new RangeError('Buffer size must be a multiple of 32-bits');}for(var i=0;i<len;i+=4){swap(this,i,i+3);swap(this,i+1,i+2);}return this;};Buffer.prototype.swap64=function swap64(){var len=this.length;if(len%8!==0){throw new RangeError('Buffer size must be a multiple of 64-bits');}for(var i=0;i<len;i+=8){swap(this,i,i+7);swap(this,i+1,i+6);swap(this,i+2,i+5);swap(this,i+3,i+4);}return this;};Buffer.prototype.toString=function toString(){var length=this.length|0;if(length===0)return'';if(arguments.length===0)return utf8Slice(this,0,length);return slowToString.apply(this,arguments);};Buffer.prototype.equals=function equals(b){if(!Buffer.isBuffer(b))throw new TypeError('Argument must be a Buffer');if(this===b)return true;return Buffer.compare(this,b)===0;};Buffer.prototype.inspect=function inspect(){var str='';var max=exports.INSPECT_MAX_BYTES;if(this.length>0){str=this.toString('hex',0,max).match(/.{2}/g).join(' ');if(this.length>max)str+=' ... ';}return'<Buffer '+str+'>';};Buffer.prototype.compare=function compare(target,start,end,thisStart,thisEnd){if(!Buffer.isBuffer(target)){throw new TypeError('Argument must be a Buffer');}if(start===undefined){start=0;}if(end===undefined){end=target?target.length:0;}if(thisStart===undefined){thisStart=0;}if(thisEnd===undefined){thisEnd=this.length;}if(start<0||end>target.length||thisStart<0||thisEnd>this.length){throw new RangeError('out of range index');}if(thisStart>=thisEnd&&start>=end){return 0;}if(thisStart>=thisEnd){return-1;}if(start>=end){return 1;}start>>>=0;end>>>=0;thisStart>>>=0;thisEnd>>>=0;if(this===target)return 0;var x=thisEnd-thisStart;var y=end-start;var len=Math.min(x,y);var thisCopy=this.slice(thisStart,thisEnd);var targetCopy=target.slice(start,end);for(var i=0;i<len;++i){if(thisCopy[i]!==targetCopy[i]){x=thisCopy[i];y=targetCopy[i];break;}}if(x<y)return-1;if(y<x)return 1;return 0;};// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer,val,byteOffset,encoding,dir){// Empty buffer means no match\nif(buffer.length===0)return-1;// Normalize byteOffset\nif(typeof byteOffset==='string'){encoding=byteOffset;byteOffset=0;}else if(byteOffset>0x7fffffff){byteOffset=0x7fffffff;}else if(byteOffset<-0x80000000){byteOffset=-0x80000000;}byteOffset=+byteOffset;// Coerce to Number.\nif(isNaN(byteOffset)){// byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\nbyteOffset=dir?0:buffer.length-1;}// Normalize byteOffset: negative offsets start from the end of the buffer\nif(byteOffset<0)byteOffset=buffer.length+byteOffset;if(byteOffset>=buffer.length){if(dir)return-1;else byteOffset=buffer.length-1;}else if(byteOffset<0){if(dir)byteOffset=0;else return-1;}// Normalize val\nif(typeof val==='string'){val=Buffer.from(val,encoding);}// Finally, search either indexOf (if dir is true) or lastIndexOf\nif(Buffer.isBuffer(val)){// Special case: looking for empty string/buffer always fails\nif(val.length===0){return-1;}return arrayIndexOf(buffer,val,byteOffset,encoding,dir);}else if(typeof val==='number'){val=val&0xFF;// Search for a byte value [0-255]\nif(Buffer.TYPED_ARRAY_SUPPORT&&typeof Uint8Array.prototype.indexOf==='function'){if(dir){return Uint8Array.prototype.indexOf.call(buffer,val,byteOffset);}else{return Uint8Array.prototype.lastIndexOf.call(buffer,val,byteOffset);}}return arrayIndexOf(buffer,[val],byteOffset,encoding,dir);}throw new TypeError('val must be string, number or Buffer');}function arrayIndexOf(arr,val,byteOffset,encoding,dir){var indexSize=1;var arrLength=arr.length;var valLength=val.length;if(encoding!==undefined){encoding=String(encoding).toLowerCase();if(encoding==='ucs2'||encoding==='ucs-2'||encoding==='utf16le'||encoding==='utf-16le'){if(arr.length<2||val.length<2){return-1;}indexSize=2;arrLength/=2;valLength/=2;byteOffset/=2;}}function read(buf,i){if(indexSize===1){return buf[i];}else{return buf.readUInt16BE(i*indexSize);}}var i;if(dir){var foundIndex=-1;for(i=byteOffset;i<arrLength;i++){if(read(arr,i)===read(val,foundIndex===-1?0:i-foundIndex)){if(foundIndex===-1)foundIndex=i;if(i-foundIndex+1===valLength)return foundIndex*indexSize;}else{if(foundIndex!==-1)i-=i-foundIndex;foundIndex=-1;}}}else{if(byteOffset+valLength>arrLength)byteOffset=arrLength-valLength;for(i=byteOffset;i>=0;i--){var found=true;for(var j=0;j<valLength;j++){if(read(arr,i+j)!==read(val,j)){found=false;break;}}if(found)return i;}}return-1;}Buffer.prototype.includes=function includes(val,byteOffset,encoding){return this.indexOf(val,byteOffset,encoding)!==-1;};Buffer.prototype.indexOf=function indexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,true);};Buffer.prototype.lastIndexOf=function lastIndexOf(val,byteOffset,encoding){return bidirectionalIndexOf(this,val,byteOffset,encoding,false);};function hexWrite(buf,string,offset,length){offset=Number(offset)||0;var remaining=buf.length-offset;if(!length){length=remaining;}else{length=Number(length);if(length>remaining){length=remaining;}}// must be an even number of digits\nvar strLen=string.length;if(strLen%2!==0)throw new TypeError('Invalid hex string');if(length>strLen/2){length=strLen/2;}for(var i=0;i<length;++i){var parsed=parseInt(string.substr(i*2,2),16);if(isNaN(parsed))return i;buf[offset+i]=parsed;}return i;}function utf8Write(buf,string,offset,length){return blitBuffer(utf8ToBytes(string,buf.length-offset),buf,offset,length);}function asciiWrite(buf,string,offset,length){return blitBuffer(asciiToBytes(string),buf,offset,length);}function latin1Write(buf,string,offset,length){return asciiWrite(buf,string,offset,length);}function base64Write(buf,string,offset,length){return blitBuffer(base64ToBytes(string),buf,offset,length);}function ucs2Write(buf,string,offset,length){return blitBuffer(utf16leToBytes(string,buf.length-offset),buf,offset,length);}Buffer.prototype.write=function write(string,offset,length,encoding){// Buffer#write(string)\nif(offset===undefined){encoding='utf8';length=this.length;offset=0;// Buffer#write(string, encoding)\n}else if(length===undefined&&typeof offset==='string'){encoding=offset;length=this.length;offset=0;// Buffer#write(string, offset[, length][, encoding])\n}else if(isFinite(offset)){offset=offset|0;if(isFinite(length)){length=length|0;if(encoding===undefined)encoding='utf8';}else{encoding=length;length=undefined;}// legacy write(string, encoding, offset, length) - remove in v0.13\n}else{throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');}var remaining=this.length-offset;if(length===undefined||length>remaining)length=remaining;if(string.length>0&&(length<0||offset<0)||offset>this.length){throw new RangeError('Attempt to write outside buffer bounds');}if(!encoding)encoding='utf8';var loweredCase=false;for(;;){switch(encoding){case'hex':return hexWrite(this,string,offset,length);case'utf8':case'utf-8':return utf8Write(this,string,offset,length);case'ascii':return asciiWrite(this,string,offset,length);case'latin1':case'binary':return latin1Write(this,string,offset,length);case'base64':// Warning: maxLength not taken into account in base64Write\nreturn base64Write(this,string,offset,length);case'ucs2':case'ucs-2':case'utf16le':case'utf-16le':return ucs2Write(this,string,offset,length);default:if(loweredCase)throw new TypeError('Unknown encoding: '+encoding);encoding=(''+encoding).toLowerCase();loweredCase=true;}}};Buffer.prototype.toJSON=function toJSON(){return{type:'Buffer',data:Array.prototype.slice.call(this._arr||this,0)};};function base64Slice(buf,start,end){if(start===0&&end===buf.length){return base64.fromByteArray(buf);}else{return base64.fromByteArray(buf.slice(start,end));}}function utf8Slice(buf,start,end){end=Math.min(buf.length,end);var res=[];var i=start;while(i<end){var firstByte=buf[i];var codePoint=null;var bytesPerSequence=firstByte>0xEF?4:firstByte>0xDF?3:firstByte>0xBF?2:1;if(i+bytesPerSequence<=end){var secondByte,thirdByte,fourthByte,tempCodePoint;switch(bytesPerSequence){case 1:if(firstByte<0x80){codePoint=firstByte;}break;case 2:secondByte=buf[i+1];if((secondByte&0xC0)===0x80){tempCodePoint=(firstByte&0x1F)<<0x6|secondByte&0x3F;if(tempCodePoint>0x7F){codePoint=tempCodePoint;}}break;case 3:secondByte=buf[i+1];thirdByte=buf[i+2];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0xC|(secondByte&0x3F)<<0x6|thirdByte&0x3F;if(tempCodePoint>0x7FF&&(tempCodePoint<0xD800||tempCodePoint>0xDFFF)){codePoint=tempCodePoint;}}break;case 4:secondByte=buf[i+1];thirdByte=buf[i+2];fourthByte=buf[i+3];if((secondByte&0xC0)===0x80&&(thirdByte&0xC0)===0x80&&(fourthByte&0xC0)===0x80){tempCodePoint=(firstByte&0xF)<<0x12|(secondByte&0x3F)<<0xC|(thirdByte&0x3F)<<0x6|fourthByte&0x3F;if(tempCodePoint>0xFFFF&&tempCodePoint<0x110000){codePoint=tempCodePoint;}}}}if(codePoint===null){// we did not generate a valid codePoint so insert a\n// replacement char (U+FFFD) and advance only 1 byte\ncodePoint=0xFFFD;bytesPerSequence=1;}else if(codePoint>0xFFFF){// encode to utf16 (surrogate pair dance)\ncodePoint-=0x10000;res.push(codePoint>>>10&0x3FF|0xD800);codePoint=0xDC00|codePoint&0x3FF;}res.push(codePoint);i+=bytesPerSequence;}return decodeCodePointsArray(res);}// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH=0x1000;function decodeCodePointsArray(codePoints){var len=codePoints.length;if(len<=MAX_ARGUMENTS_LENGTH){return String.fromCharCode.apply(String,codePoints);// avoid extra slice()\n}// Decode in chunks to avoid \"call stack size exceeded\".\nvar res='';var i=0;while(i<len){res+=String.fromCharCode.apply(String,codePoints.slice(i,i+=MAX_ARGUMENTS_LENGTH));}return res;}function asciiSlice(buf,start,end){var ret='';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]&0x7F);}return ret;}function latin1Slice(buf,start,end){var ret='';end=Math.min(buf.length,end);for(var i=start;i<end;++i){ret+=String.fromCharCode(buf[i]);}return ret;}function hexSlice(buf,start,end){var len=buf.length;if(!start||start<0)start=0;if(!end||end<0||end>len)end=len;var out='';for(var i=start;i<end;++i){out+=toHex(buf[i]);}return out;}function utf16leSlice(buf,start,end){var bytes=buf.slice(start,end);var res='';for(var i=0;i<bytes.length;i+=2){res+=String.fromCharCode(bytes[i]+bytes[i+1]*256);}return res;}Buffer.prototype.slice=function slice(start,end){var len=this.length;start=~~start;end=end===undefined?len:~~end;if(start<0){start+=len;if(start<0)start=0;}else if(start>len){start=len;}if(end<0){end+=len;if(end<0)end=0;}else if(end>len){end=len;}if(end<start)end=start;var newBuf;if(Buffer.TYPED_ARRAY_SUPPORT){newBuf=this.subarray(start,end);newBuf.__proto__=Buffer.prototype;}else{var sliceLen=end-start;newBuf=new Buffer(sliceLen,undefined);for(var i=0;i<sliceLen;++i){newBuf[i]=this[i+start];}}return newBuf;};/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */function checkOffset(offset,ext,length){if(offset%1!==0||offset<0)throw new RangeError('offset is not uint');if(offset+ext>length)throw new RangeError('Trying to access beyond buffer length');}Buffer.prototype.readUIntLE=function readUIntLE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}return val;};Buffer.prototype.readUIntBE=function readUIntBE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert){checkOffset(offset,byteLength,this.length);}var val=this[offset+--byteLength];var mul=1;while(byteLength>0&&(mul*=0x100)){val+=this[offset+--byteLength]*mul;}return val;};Buffer.prototype.readUInt8=function readUInt8(offset,noAssert){if(!noAssert)checkOffset(offset,1,this.length);return this[offset];};Buffer.prototype.readUInt16LE=function readUInt16LE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);return this[offset]|this[offset+1]<<8;};Buffer.prototype.readUInt16BE=function readUInt16BE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);return this[offset]<<8|this[offset+1];};Buffer.prototype.readUInt32LE=function readUInt32LE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return(this[offset]|this[offset+1]<<8|this[offset+2]<<16)+this[offset+3]*0x1000000;};Buffer.prototype.readUInt32BE=function readUInt32BE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return this[offset]*0x1000000+(this[offset+1]<<16|this[offset+2]<<8|this[offset+3]);};Buffer.prototype.readIntLE=function readIntLE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert)checkOffset(offset,byteLength,this.length);var val=this[offset];var mul=1;var i=0;while(++i<byteLength&&(mul*=0x100)){val+=this[offset+i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readIntBE=function readIntBE(offset,byteLength,noAssert){offset=offset|0;byteLength=byteLength|0;if(!noAssert)checkOffset(offset,byteLength,this.length);var i=byteLength;var mul=1;var val=this[offset+--i];while(i>0&&(mul*=0x100)){val+=this[offset+--i]*mul;}mul*=0x80;if(val>=mul)val-=Math.pow(2,8*byteLength);return val;};Buffer.prototype.readInt8=function readInt8(offset,noAssert){if(!noAssert)checkOffset(offset,1,this.length);if(!(this[offset]&0x80))return this[offset];return(0xff-this[offset]+1)*-1;};Buffer.prototype.readInt16LE=function readInt16LE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset]|this[offset+1]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt16BE=function readInt16BE(offset,noAssert){if(!noAssert)checkOffset(offset,2,this.length);var val=this[offset+1]|this[offset]<<8;return val&0x8000?val|0xFFFF0000:val;};Buffer.prototype.readInt32LE=function readInt32LE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return this[offset]|this[offset+1]<<8|this[offset+2]<<16|this[offset+3]<<24;};Buffer.prototype.readInt32BE=function readInt32BE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return this[offset]<<24|this[offset+1]<<16|this[offset+2]<<8|this[offset+3];};Buffer.prototype.readFloatLE=function readFloatLE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return ieee754.read(this,offset,true,23,4);};Buffer.prototype.readFloatBE=function readFloatBE(offset,noAssert){if(!noAssert)checkOffset(offset,4,this.length);return ieee754.read(this,offset,false,23,4);};Buffer.prototype.readDoubleLE=function readDoubleLE(offset,noAssert){if(!noAssert)checkOffset(offset,8,this.length);return ieee754.read(this,offset,true,52,8);};Buffer.prototype.readDoubleBE=function readDoubleBE(offset,noAssert){if(!noAssert)checkOffset(offset,8,this.length);return ieee754.read(this,offset,false,52,8);};function checkInt(buf,value,offset,ext,max,min){if(!Buffer.isBuffer(buf))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(value>max||value<min)throw new RangeError('\"value\" argument is out of bounds');if(offset+ext>buf.length)throw new RangeError('Index out of range');}Buffer.prototype.writeUIntLE=function writeUIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;byteLength=byteLength|0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var mul=1;var i=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUIntBE=function writeUIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;byteLength=byteLength|0;if(!noAssert){var maxBytes=Math.pow(2,8*byteLength)-1;checkInt(this,value,offset,byteLength,maxBytes,0);}var i=byteLength-1;var mul=1;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){this[offset+i]=value/mul&0xFF;}return offset+byteLength;};Buffer.prototype.writeUInt8=function writeUInt8(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,1,0xff,0);if(!Buffer.TYPED_ARRAY_SUPPORT)value=Math.floor(value);this[offset]=value&0xff;return offset+1;};function objectWriteUInt16(buf,value,offset,littleEndian){if(value<0)value=0xffff+value+1;for(var i=0,j=Math.min(buf.length-offset,2);i<j;++i){buf[offset+i]=(value&0xff<<8*(littleEndian?i:1-i))>>>(littleEndian?i:1-i)*8;}}Buffer.prototype.writeUInt16LE=function writeUInt16LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value&0xff;this[offset+1]=value>>>8;}else{objectWriteUInt16(this,value,offset,true);}return offset+2;};Buffer.prototype.writeUInt16BE=function writeUInt16BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0xffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>8;this[offset+1]=value&0xff;}else{objectWriteUInt16(this,value,offset,false);}return offset+2;};function objectWriteUInt32(buf,value,offset,littleEndian){if(value<0)value=0xffffffff+value+1;for(var i=0,j=Math.min(buf.length-offset,4);i<j;++i){buf[offset+i]=value>>>(littleEndian?i:3-i)*8&0xff;}}Buffer.prototype.writeUInt32LE=function writeUInt32LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset+3]=value>>>24;this[offset+2]=value>>>16;this[offset+1]=value>>>8;this[offset]=value&0xff;}else{objectWriteUInt32(this,value,offset,true);}return offset+4;};Buffer.prototype.writeUInt32BE=function writeUInt32BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0xffffffff,0);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;}else{objectWriteUInt32(this,value,offset,false);}return offset+4;};Buffer.prototype.writeIntLE=function writeIntLE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=0;var mul=1;var sub=0;this[offset]=value&0xFF;while(++i<byteLength&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i-1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeIntBE=function writeIntBE(value,offset,byteLength,noAssert){value=+value;offset=offset|0;if(!noAssert){var limit=Math.pow(2,8*byteLength-1);checkInt(this,value,offset,byteLength,limit-1,-limit);}var i=byteLength-1;var mul=1;var sub=0;this[offset+i]=value&0xFF;while(--i>=0&&(mul*=0x100)){if(value<0&&sub===0&&this[offset+i+1]!==0){sub=1;}this[offset+i]=(value/mul>>0)-sub&0xFF;}return offset+byteLength;};Buffer.prototype.writeInt8=function writeInt8(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,1,0x7f,-0x80);if(!Buffer.TYPED_ARRAY_SUPPORT)value=Math.floor(value);if(value<0)value=0xff+value+1;this[offset]=value&0xff;return offset+1;};Buffer.prototype.writeInt16LE=function writeInt16LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value&0xff;this[offset+1]=value>>>8;}else{objectWriteUInt16(this,value,offset,true);}return offset+2;};Buffer.prototype.writeInt16BE=function writeInt16BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,2,0x7fff,-0x8000);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>8;this[offset+1]=value&0xff;}else{objectWriteUInt16(this,value,offset,false);}return offset+2;};Buffer.prototype.writeInt32LE=function writeInt32LE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value&0xff;this[offset+1]=value>>>8;this[offset+2]=value>>>16;this[offset+3]=value>>>24;}else{objectWriteUInt32(this,value,offset,true);}return offset+4;};Buffer.prototype.writeInt32BE=function writeInt32BE(value,offset,noAssert){value=+value;offset=offset|0;if(!noAssert)checkInt(this,value,offset,4,0x7fffffff,-0x80000000);if(value<0)value=0xffffffff+value+1;if(Buffer.TYPED_ARRAY_SUPPORT){this[offset]=value>>>24;this[offset+1]=value>>>16;this[offset+2]=value>>>8;this[offset+3]=value&0xff;}else{objectWriteUInt32(this,value,offset,false);}return offset+4;};function checkIEEE754(buf,value,offset,ext,max,min){if(offset+ext>buf.length)throw new RangeError('Index out of range');if(offset<0)throw new RangeError('Index out of range');}function writeFloat(buf,value,offset,littleEndian,noAssert){if(!noAssert){checkIEEE754(buf,value,offset,4,3.4028234663852886e+38,-3.4028234663852886e+38);}ieee754.write(buf,value,offset,littleEndian,23,4);return offset+4;}Buffer.prototype.writeFloatLE=function writeFloatLE(value,offset,noAssert){return writeFloat(this,value,offset,true,noAssert);};Buffer.prototype.writeFloatBE=function writeFloatBE(value,offset,noAssert){return writeFloat(this,value,offset,false,noAssert);};function writeDouble(buf,value,offset,littleEndian,noAssert){if(!noAssert){checkIEEE754(buf,value,offset,8,1.7976931348623157E+308,-1.7976931348623157E+308);}ieee754.write(buf,value,offset,littleEndian,52,8);return offset+8;}Buffer.prototype.writeDoubleLE=function writeDoubleLE(value,offset,noAssert){return writeDouble(this,value,offset,true,noAssert);};Buffer.prototype.writeDoubleBE=function writeDoubleBE(value,offset,noAssert){return writeDouble(this,value,offset,false,noAssert);};// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy=function copy(target,targetStart,start,end){if(!start)start=0;if(!end&&end!==0)end=this.length;if(targetStart>=target.length)targetStart=target.length;if(!targetStart)targetStart=0;if(end>0&&end<start)end=start;// Copy 0 bytes; we're done\nif(end===start)return 0;if(target.length===0||this.length===0)return 0;// Fatal error conditions\nif(targetStart<0){throw new RangeError('targetStart out of bounds');}if(start<0||start>=this.length)throw new RangeError('sourceStart out of bounds');if(end<0)throw new RangeError('sourceEnd out of bounds');// Are we oob?\nif(end>this.length)end=this.length;if(target.length-targetStart<end-start){end=target.length-targetStart+start;}var len=end-start;var i;if(this===target&&start<targetStart&&targetStart<end){// descending copy from end\nfor(i=len-1;i>=0;--i){target[i+targetStart]=this[i+start];}}else if(len<1000||!Buffer.TYPED_ARRAY_SUPPORT){// ascending copy from start\nfor(i=0;i<len;++i){target[i+targetStart]=this[i+start];}}else{Uint8Array.prototype.set.call(target,this.subarray(start,start+len),targetStart);}return len;};// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill=function fill(val,start,end,encoding){// Handle string cases:\nif(typeof val==='string'){if(typeof start==='string'){encoding=start;start=0;end=this.length;}else if(typeof end==='string'){encoding=end;end=this.length;}if(val.length===1){var code=val.charCodeAt(0);if(code<256){val=code;}}if(encoding!==undefined&&typeof encoding!=='string'){throw new TypeError('encoding must be a string');}if(typeof encoding==='string'&&!Buffer.isEncoding(encoding)){throw new TypeError('Unknown encoding: '+encoding);}}else if(typeof val==='number'){val=val&255;}// Invalid ranges are not set to a default, so can range check early.\nif(start<0||this.length<start||this.length<end){throw new RangeError('Out of range index');}if(end<=start){return this;}start=start>>>0;end=end===undefined?this.length:end>>>0;if(!val)val=0;var i;if(typeof val==='number'){for(i=start;i<end;++i){this[i]=val;}}else{var bytes=Buffer.isBuffer(val)?val:utf8ToBytes(new Buffer(val,encoding).toString());var len=bytes.length;for(i=0;i<end-start;++i){this[i+start]=bytes[i%len];}}return this;};// HELPER FUNCTIONS\n// ================\nvar INVALID_BASE64_RE=/[^+\\/0-9A-Za-z-_]/g;function base64clean(str){// Node strips out invalid characters like \\n and \\t from the string, base64-js does not\nstr=stringtrim(str).replace(INVALID_BASE64_RE,'');// Node converts strings with length < 2 to ''\nif(str.length<2)return'';// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\nwhile(str.length%4!==0){str=str+'=';}return str;}function stringtrim(str){if(str.trim)return str.trim();return str.replace(/^\\s+|\\s+$/g,'');}function toHex(n){if(n<16)return'0'+n.toString(16);return n.toString(16);}function utf8ToBytes(string,units){units=units||Infinity;var codePoint;var length=string.length;var leadSurrogate=null;var bytes=[];for(var i=0;i<length;++i){codePoint=string.charCodeAt(i);// is surrogate component\nif(codePoint>0xD7FF&&codePoint<0xE000){// last char was a lead\nif(!leadSurrogate){// no lead yet\nif(codePoint>0xDBFF){// unexpected trail\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}else if(i+1===length){// unpaired lead\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);continue;}// valid lead\nleadSurrogate=codePoint;continue;}// 2 leads in a row\nif(codePoint<0xDC00){if((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);leadSurrogate=codePoint;continue;}// valid surrogate pair\ncodePoint=(leadSurrogate-0xD800<<10|codePoint-0xDC00)+0x10000;}else if(leadSurrogate){// valid bmp char, but last char was a lead\nif((units-=3)>-1)bytes.push(0xEF,0xBF,0xBD);}leadSurrogate=null;// encode utf8\nif(codePoint<0x80){if((units-=1)<0)break;bytes.push(codePoint);}else if(codePoint<0x800){if((units-=2)<0)break;bytes.push(codePoint>>0x6|0xC0,codePoint&0x3F|0x80);}else if(codePoint<0x10000){if((units-=3)<0)break;bytes.push(codePoint>>0xC|0xE0,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else if(codePoint<0x110000){if((units-=4)<0)break;bytes.push(codePoint>>0x12|0xF0,codePoint>>0xC&0x3F|0x80,codePoint>>0x6&0x3F|0x80,codePoint&0x3F|0x80);}else{throw new Error('Invalid code point');}}return bytes;}function asciiToBytes(str){var byteArray=[];for(var i=0;i<str.length;++i){// Node's code seems to be doing this and not & 0x7F..\nbyteArray.push(str.charCodeAt(i)&0xFF);}return byteArray;}function utf16leToBytes(str,units){var c,hi,lo;var byteArray=[];for(var i=0;i<str.length;++i){if((units-=2)<0)break;c=str.charCodeAt(i);hi=c>>8;lo=c%256;byteArray.push(lo);byteArray.push(hi);}return byteArray;}function base64ToBytes(str){return base64.toByteArray(base64clean(str));}function blitBuffer(src,dst,offset,length){for(var i=0;i<length;++i){if(i+offset>=dst.length||i>=src.length)break;dst[i+offset]=src[i];}return i;}function isnan(val){return val!==val;// eslint-disable-line no-self-compare\n}}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});},{\"base64-js\":4,\"ieee754\":17,\"isarray\":22}],8:[function(_dereq_,module,exports){// Polyfill for creating CustomEvents on IE9/10/11\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n(function(){if(typeof window==='undefined'){return;}try{var ce=new window.CustomEvent('test',{cancelable:true});ce.preventDefault();if(ce.defaultPrevented!==true){// IE has problems with .preventDefault() on custom events\n// http://stackoverflow.com/questions/23349191\nthrow new Error('Could not prevent default');}}catch(e){var CustomEvent=function(event,params){var evt,origPrevent;params=params||{bubbles:false,cancelable:false,detail:undefined};evt=document.createEvent('CustomEvent');evt.initCustomEvent(event,params.bubbles,params.cancelable,params.detail);origPrevent=evt.preventDefault;evt.preventDefault=function(){origPrevent.call(this);try{Object.defineProperty(this,'defaultPrevented',{get:function(){return true;}});}catch(e){this.defaultPrevented=true;}};return evt;};CustomEvent.prototype=window.Event.prototype;window.CustomEvent=CustomEvent;// expose definition to window\n}})();},{}],9:[function(_dereq_,module,exports){/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */exports=module.exports=_dereq_('./debug');exports.log=log;exports.formatArgs=formatArgs;exports.save=save;exports.load=load;exports.useColors=useColors;exports.storage='undefined'!=typeof chrome&&'undefined'!=typeof chrome.storage?chrome.storage.local:localstorage();/**\n * Colors.\n */exports.colors=['lightseagreen','forestgreen','goldenrod','dodgerblue','darkorchid','crimson'];/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */function useColors(){// is webkit? http://stackoverflow.com/a/16459606/376773\nreturn'WebkitAppearance'in document.documentElement.style||// is firebug? http://stackoverflow.com/a/398120/376773\nwindow.console&&(console.firebug||console.exception&&console.table)||// is firefox >= v31?\n// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\nnavigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31;}/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */exports.formatters.j=function(v){return JSON.stringify(v);};/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */function formatArgs(){var args=arguments;var useColors=this.useColors;args[0]=(useColors?'%c':'')+this.namespace+(useColors?' %c':' ')+args[0]+(useColors?'%c ':' ');if(!useColors)return args;var c='color: '+this.color;args=[args[0],c,'color: inherit'].concat(Array.prototype.slice.call(args,1));// the final \"%c\" is somewhat tricky, because there could be other\n// arguments passed either before or after the %c, so we need to\n// figure out the correct index to insert the CSS into\nvar index=0;var lastC=0;args[0].replace(/%[a-z%]/g,function(match){if('%%'===match)return;index++;if('%c'===match){// we only are interested in the *last* %c\n// (the user may have provided their own)\nlastC=index;}});args.splice(lastC,0,c);return args;}/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */function log(){// this hackery is required for IE8/9, where\n// the `console.log` function doesn't have 'apply'\nreturn'object'===typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments);}/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */function save(namespaces){try{if(null==namespaces){exports.storage.removeItem('debug');}else{exports.storage.debug=namespaces;}}catch(e){}}/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */function load(){var r;try{r=exports.storage.debug;}catch(e){}return r;}/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */exports.enable(load());/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */function localstorage(){try{return window.localStorage;}catch(e){}}},{\"./debug\":10}],10:[function(_dereq_,module,exports){/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */exports=module.exports=debug;exports.coerce=coerce;exports.disable=disable;exports.enable=enable;exports.enabled=enabled;/**\n * The currently active debug mode names, and names to skip.\n */exports.names=[];exports.skips=[];/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */exports.formatters={};/**\n * Previously assigned color.\n */var prevColor=0;/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */function selectColor(){return exports.colors[prevColor++%exports.colors.length];}/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */function debug(namespace){// define the `disabled` version\nfunction disabled(){}disabled.enabled=false;// define the `enabled` version\nfunction enabled(){var self=enabled;// add the `color` if not set\nif(null==self.useColors)self.useColors=exports.useColors();if(null==self.color&&self.useColors)self.color=selectColor();var args=Array.prototype.slice.call(arguments);args[0]=exports.coerce(args[0]);if('string'!==typeof args[0]){// anything else let's inspect with %o\nargs=['%o'].concat(args);}// apply any `formatters` transformations\nvar index=0;args[0]=args[0].replace(/%([a-z%])/g,function(match,format){// if we encounter an escaped % then don't increase the array index\nif(match==='%%')return match;index++;var formatter=exports.formatters[format];if('function'===typeof formatter){var val=args[index];match=formatter.call(self,val);// now we need to remove `args[index]` since it's inlined in the `format`\nargs.splice(index,1);index--;}return match;});if('function'===typeof exports.formatArgs){args=exports.formatArgs.apply(self,args);}var logFn=enabled.log||exports.log||console.log.bind(console);logFn.apply(self,args);}enabled.enabled=true;var fn=exports.enabled(namespace)?enabled:disabled;fn.namespace=namespace;return fn;}/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */function enable(namespaces){exports.save(namespaces);var split=(namespaces||'').split(/[\\s,]+/);var len=split.length;for(var i=0;i<len;i++){if(!split[i])continue;// ignore empty strings\nnamespaces=split[i].replace(/\\*/g,'.*?');if(namespaces[0]==='-'){exports.skips.push(new RegExp('^'+namespaces.substr(1)+'$'));}else{exports.names.push(new RegExp('^'+namespaces+'$'));}}}/**\n * Disable debug output.\n *\n * @api public\n */function disable(){exports.enable('');}/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */function enabled(name){var i,len;for(i=0,len=exports.skips.length;i<len;i++){if(exports.skips[i].test(name)){return false;}}for(i=0,len=exports.names.length;i<len;i++){if(exports.names[i].test(name)){return true;}}return false;}/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */function coerce(val){if(val instanceof Error)return val.stack||val.message;return val;}},{}],11:[function(_dereq_,module,exports){'use strict';var isObj=_dereq_('is-obj');var hasOwnProperty=Object.prototype.hasOwnProperty;var propIsEnumerable=Object.prototype.propertyIsEnumerable;function toObject(val){if(val===null||val===undefined){throw new TypeError('Sources cannot be null or undefined');}return Object(val);}function assignKey(to,from,key){var val=from[key];if(val===undefined||val===null){return;}if(hasOwnProperty.call(to,key)){if(to[key]===undefined||to[key]===null){throw new TypeError('Cannot convert undefined or null to object ('+key+')');}}if(!hasOwnProperty.call(to,key)||!isObj(val)){to[key]=val;}else{to[key]=assign(Object(to[key]),from[key]);}}function assign(to,from){if(to===from){return to;}from=Object(from);for(var key in from){if(hasOwnProperty.call(from,key)){assignKey(to,from,key);}}if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(from);for(var i=0;i<symbols.length;i++){if(propIsEnumerable.call(from,symbols[i])){assignKey(to,from,symbols[i]);}}}return to;}module.exports=function deepAssign(target){target=toObject(target);for(var s=1;s<arguments.length;s++){assign(target,arguments[s]);}return target;};},{\"is-obj\":21}],12:[function(_dereq_,module,exports){/*! (C) WebReflection Mit Style License */(function(t,n,r,i){\"use strict\";function st(e,t){for(var n=0,r=e.length;n<r;n++)gt(e[n],t);}function ot(e){for(var t=0,n=e.length,r;t<n;t++)r=e[t],it(r,w[at(r)]);}function ut(e){return function(t){F(t)&&(gt(t,e),st(t.querySelectorAll(E),e));};}function at(e){var t=R.call(e,\"is\"),n=e.nodeName.toUpperCase(),r=x.call(b,t?m+t.toUpperCase():v+n);return t&&-1<r&&!ft(n,t)?-1:r;}function ft(e,t){return-1<E.indexOf(e+'[is=\"'+t+'\"]');}function lt(e){var t=e.currentTarget,n=e.attrChange,r=e.attrName,i=e.target;Y&&(!i||i===t)&&t.attributeChangedCallback&&r!==\"style\"&&e.prevValue!==e.newValue&&t.attributeChangedCallback(r,n===e[f]?null:e.prevValue,n===e[c]?null:e.newValue);}function ct(e){var t=ut(e);return function(e){$.push(t,e.target);};}function ht(e){G&&(G=!1,e.currentTarget.removeEventListener(p,ht)),st((e.target||n).querySelectorAll(E),e.detail===u?u:o),j&&vt();}function pt(e,t){var n=this;U.call(n,e,t),Z.call(n,{target:n});}function dt(e,t){P(e,t),nt?nt.observe(e,X):(Q&&(e.setAttribute=pt,e[s]=tt(e),e.addEventListener(d,Z)),e.addEventListener(h,lt)),e.createdCallback&&Y&&(e.created=!0,e.createdCallback(),e.created=!1);}function vt(){for(var e,t=0,n=I.length;t<n;t++)e=I[t],S.contains(e)||(n--,I.splice(t--,1),gt(e,u));}function mt(e){throw new Error(\"A \"+e+\" type is already registered\");}function gt(e,t){var n,r=at(e);-1<r&&(rt(e,w[r]),r=0,t===o&&!e[o]?(e[u]=!1,e[o]=!0,r=1,j&&x.call(I,e)<0&&I.push(e)):t===u&&!e[u]&&(e[o]=!1,e[u]=!0,r=1),r&&(n=e[t+\"Callback\"])&&n.call(e));}if(i in n)return;var s=\"__\"+i+(Math.random()*1e5>>0),o=\"attached\",u=\"detached\",a=\"extends\",f=\"ADDITION\",l=\"MODIFICATION\",c=\"REMOVAL\",h=\"DOMAttrModified\",p=\"DOMContentLoaded\",d=\"DOMSubtreeModified\",v=\"<\",m=\"=\",g=/^[A-Z][A-Z0-9]*(?:-[A-Z0-9]+)+$/,y=[\"ANNOTATION-XML\",\"COLOR-PROFILE\",\"FONT-FACE\",\"FONT-FACE-SRC\",\"FONT-FACE-URI\",\"FONT-FACE-FORMAT\",\"FONT-FACE-NAME\",\"MISSING-GLYPH\"],b=[],w=[],E=\"\",S=n.documentElement,x=b.indexOf||function(e){for(var t=this.length;t--&&this[t]!==e;);return t;},T=r.prototype,N=T.hasOwnProperty,C=T.isPrototypeOf,k=r.defineProperty,L=r.getOwnPropertyDescriptor,A=r.getOwnPropertyNames,O=r.getPrototypeOf,M=r.setPrototypeOf,_=!!r.__proto__,D=r.create||function yt(e){return e?(yt.prototype=e,new yt()):this;},P=M||(_?function(e,t){return e.__proto__=t,e;}:A&&L?function(){function e(e,t){for(var n,r=A(t),i=0,s=r.length;i<s;i++)n=r[i],N.call(e,n)||k(e,n,L(t,n));}return function(t,n){do e(t,n);while((n=O(n))&&!C.call(n,t));return t;};}():function(e,t){for(var n in t)e[n]=t[n];return e;}),H=t.MutationObserver||t.WebKitMutationObserver,B=(t.HTMLElement||t.Element||t.Node).prototype,j=!C.call(B,S),F=j?function(e){return e.nodeType===1;}:function(e){return C.call(B,e);},I=j&&[],q=B.cloneNode,R=B.getAttribute,U=B.setAttribute,z=B.removeAttribute,W=n.createElement,X=H&&{attributes:!0,characterData:!0,attributeOldValue:!0},V=H||function(e){Q=!1,S.removeEventListener(h,V);},$,J=t.requestAnimationFrame||t.webkitRequestAnimationFrame||t.mozRequestAnimationFrame||t.msRequestAnimationFrame||function(e){setTimeout(e,10);},K=!1,Q=!0,G=!0,Y=!0,Z,et,tt,nt,rt,it;M||_?(rt=function(e,t){C.call(t,e)||dt(e,t);},it=dt):(rt=function(e,t){e[s]||(e[s]=r(!0),dt(e,t));},it=rt),j?(Q=!1,function(){var t=L(B,\"addEventListener\"),n=t.value,r=function(e){var t=new CustomEvent(h,{bubbles:!0});t.attrName=e,t.prevValue=R.call(this,e),t.newValue=null,t[c]=t.attrChange=2,z.call(this,e),this.dispatchEvent(t);},i=function(t,n){var r=this.hasAttribute(t),i=r&&R.call(this,t);e=new CustomEvent(h,{bubbles:!0}),U.call(this,t,n),e.attrName=t,e.prevValue=r?i:null,e.newValue=n,r?e[l]=e.attrChange=1:e[f]=e.attrChange=0,this.dispatchEvent(e);},o=function(e){var t=e.currentTarget,n=t[s],r=e.propertyName,i;n.hasOwnProperty(r)&&(n=n[r],i=new CustomEvent(h,{bubbles:!0}),i.attrName=n.name,i.prevValue=n.value||null,i.newValue=n.value=t[r]||null,i.prevValue==null?i[f]=i.attrChange=0:i[l]=i.attrChange=1,t.dispatchEvent(i));};t.value=function(e,t,u){e===h&&this.attributeChangedCallback&&this.setAttribute!==i&&(this[s]={className:{name:\"class\",value:this.className}},this.setAttribute=i,this.removeAttribute=r,n.call(this,\"propertychange\",o)),n.call(this,e,t,u);},k(B,\"addEventListener\",t);}()):H||(S.addEventListener(h,V),S.setAttribute(s,1),S.removeAttribute(s),Q&&(Z=function(e){var t=this,n,r,i;if(t===e.target){n=t[s],t[s]=r=tt(t);for(i in r){if(!(i in n))return et(0,t,i,n[i],r[i],f);if(r[i]!==n[i])return et(1,t,i,n[i],r[i],l);}for(i in n)if(!(i in r))return et(2,t,i,n[i],r[i],c);}},et=function(e,t,n,r,i,s){var o={attrChange:e,currentTarget:t,attrName:n,prevValue:r,newValue:i};o[s]=e,lt(o);},tt=function(e){for(var t,n,r={},i=e.attributes,s=0,o=i.length;s<o;s++)t=i[s],n=t.name,n!==\"setAttribute\"&&(r[n]=t.value);return r;})),n[i]=function(t,r){c=t.toUpperCase(),K||(K=!0,H?(nt=function(e,t){function n(e,t){for(var n=0,r=e.length;n<r;t(e[n++]));}return new H(function(r){for(var i,s,o,u=0,a=r.length;u<a;u++)i=r[u],i.type===\"childList\"?(n(i.addedNodes,e),n(i.removedNodes,t)):(s=i.target,Y&&s.attributeChangedCallback&&i.attributeName!==\"style\"&&(o=R.call(s,i.attributeName),o!==i.oldValue&&s.attributeChangedCallback(i.attributeName,i.oldValue,o)));});}(ut(o),ut(u)),nt.observe(n,{childList:!0,subtree:!0})):($=[],J(function d(){while($.length)$.shift().call(null,$.shift());J(d);}),n.addEventListener(\"DOMNodeInserted\",ct(o)),n.addEventListener(\"DOMNodeRemoved\",ct(u))),n.addEventListener(p,ht),n.addEventListener(\"readystatechange\",ht),n.createElement=function(e,t){var r=W.apply(n,arguments),i=\"\"+e,s=x.call(b,(t?m:v)+(t||i).toUpperCase()),o=-1<s;return t&&(r.setAttribute(\"is\",t=t.toLowerCase()),o&&(o=ft(i.toUpperCase(),t))),Y=!n.createElement.innerHTMLHelper,o&&it(r,w[s]),r;},B.cloneNode=function(e){var t=q.call(this,!!e),n=at(t);return-1<n&&it(t,w[n]),e&&ot(t.querySelectorAll(E)),t;}),-2<x.call(b,m+c)+x.call(b,v+c)&&mt(t);if(!g.test(c)||-1<x.call(y,c))throw new Error(\"The type \"+t+\" is invalid\");var i=function(){return f?n.createElement(l,c):n.createElement(l);},s=r||T,f=N.call(s,a),l=f?r[a].toUpperCase():c,c,h;return f&&-1<x.call(b,v+l)&&mt(l),h=b.push((f?m:v)+c)-1,E=E.concat(E.length?\",\":\"\",f?l+'[is=\"'+t.toLowerCase()+'\"]':l),i.prototype=w[h]=N.call(s,\"prototype\")?s.prototype:D(B),st(n.querySelectorAll(E),o),i;};})(window,document,Object,\"registerElement\");},{}],13:[function(_dereq_,module,exports){module.exports=function(dtype){switch(dtype){case'int8':return Int8Array;case'int16':return Int16Array;case'int32':return Int32Array;case'uint8':return Uint8Array;case'uint16':return Uint16Array;case'uint32':return Uint32Array;case'float32':return Float32Array;case'float64':return Float64Array;case'array':return Array;case'uint8_clamped':return Uint8ClampedArray;}};},{}],14:[function(_dereq_,module,exports){/*eslint new-cap:0*/var dtype=_dereq_('dtype');module.exports=flattenVertexData;function flattenVertexData(data,output,offset){if(!data)throw new TypeError('must specify data as first parameter');offset=+(offset||0)|0;if(Array.isArray(data)&&Array.isArray(data[0])){var dim=data[0].length;var length=data.length*dim;// no output specified, create a new typed array\nif(!output||typeof output==='string'){output=new(dtype(output||'float32'))(length+offset);}var dstLength=output.length-offset;if(length!==dstLength){throw new Error('source length '+length+' ('+dim+'x'+data.length+')'+' does not match destination length '+dstLength);}for(var i=0,k=offset;i<data.length;i++){for(var j=0;j<dim;j++){output[k++]=data[i][j];}}}else{if(!output||typeof output==='string'){// no output, create a new one\nvar Ctor=dtype(output||'float32');if(offset===0){output=new Ctor(data);}else{output=new Ctor(data.length+offset);output.set(data,offset);}}else{// store output in existing array\noutput.set(data,offset);}}return output;}},{\"dtype\":13}],15:[function(_dereq_,module,exports){var isFunction=_dereq_('is-function');module.exports=forEach;var toString=Object.prototype.toString;var hasOwnProperty=Object.prototype.hasOwnProperty;function forEach(list,iterator,context){if(!isFunction(iterator)){throw new TypeError('iterator must be a function');}if(arguments.length<3){context=this;}if(toString.call(list)==='[object Array]')forEachArray(list,iterator,context);else if(typeof list==='string')forEachString(list,iterator,context);else forEachObject(list,iterator,context);}function forEachArray(array,iterator,context){for(var i=0,len=array.length;i<len;i++){if(hasOwnProperty.call(array,i)){iterator.call(context,array[i],i,array);}}}function forEachString(string,iterator,context){for(var i=0,len=string.length;i<len;i++){// no such thing as a sparse string.\niterator.call(context,string.charAt(i),i,string);}}function forEachObject(object,iterator,context){for(var k in object){if(hasOwnProperty.call(object,k)){iterator.call(context,object[k],k,object);}}}},{\"is-function\":20}],16:[function(_dereq_,module,exports){(function(global){var win;if(typeof window!==\"undefined\"){win=window;}else if(typeof global!==\"undefined\"){win=global;}else if(typeof self!==\"undefined\"){win=self;}else{win={};}module.exports=win;}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});},{}],17:[function(_dereq_,module,exports){exports.read=function(buffer,offset,isLE,mLen,nBytes){var e,m;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var nBits=-7;var i=isLE?nBytes-1:0;var d=isLE?-1:1;var s=buffer[offset+i];i+=d;e=s&(1<<-nBits)-1;s>>=-nBits;nBits+=eLen;for(;nBits>0;e=e*256+buffer[offset+i],i+=d,nBits-=8){}m=e&(1<<-nBits)-1;e>>=-nBits;nBits+=mLen;for(;nBits>0;m=m*256+buffer[offset+i],i+=d,nBits-=8){}if(e===0){e=1-eBias;}else if(e===eMax){return m?NaN:(s?-1:1)*Infinity;}else{m=m+Math.pow(2,mLen);e=e-eBias;}return(s?-1:1)*m*Math.pow(2,e-mLen);};exports.write=function(buffer,value,offset,isLE,mLen,nBytes){var e,m,c;var eLen=nBytes*8-mLen-1;var eMax=(1<<eLen)-1;var eBias=eMax>>1;var rt=mLen===23?Math.pow(2,-24)-Math.pow(2,-77):0;var i=isLE?0:nBytes-1;var d=isLE?1:-1;var s=value<0||value===0&&1/value<0?1:0;value=Math.abs(value);if(isNaN(value)||value===Infinity){m=isNaN(value)?1:0;e=eMax;}else{e=Math.floor(Math.log(value)/Math.LN2);if(value*(c=Math.pow(2,-e))<1){e--;c*=2;}if(e+eBias>=1){value+=rt/c;}else{value+=rt*Math.pow(2,1-eBias);}if(value*c>=2){e++;c/=2;}if(e+eBias>=eMax){m=0;e=eMax;}else if(e+eBias>=1){m=(value*c-1)*Math.pow(2,mLen);e=e+eBias;}else{m=value*Math.pow(2,eBias-1)*Math.pow(2,mLen);e=0;}}for(;mLen>=8;buffer[offset+i]=m&0xff,i+=d,m/=256,mLen-=8){}e=e<<mLen|m;eLen+=mLen;for(;eLen>0;buffer[offset+i]=e&0xff,i+=d,e/=256,eLen-=8){}buffer[offset+i-d]|=s*128;};},{}],18:[function(_dereq_,module,exports){if(typeof Object.create==='function'){// implementation from standard node.js 'util' module\nmodule.exports=function inherits(ctor,superCtor){ctor.super_=superCtor;ctor.prototype=Object.create(superCtor.prototype,{constructor:{value:ctor,enumerable:false,writable:true,configurable:true}});};}else{// old school shim for old browsers\nmodule.exports=function inherits(ctor,superCtor){ctor.super_=superCtor;var TempCtor=function(){};TempCtor.prototype=superCtor.prototype;ctor.prototype=new TempCtor();ctor.prototype.constructor=ctor;};}},{}],19:[function(_dereq_,module,exports){/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */ // The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports=function(obj){return obj!=null&&(isBuffer(obj)||isSlowBuffer(obj)||!!obj._isBuffer);};function isBuffer(obj){return!!obj.constructor&&typeof obj.constructor.isBuffer==='function'&&obj.constructor.isBuffer(obj);}// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer(obj){return typeof obj.readFloatLE==='function'&&typeof obj.slice==='function'&&isBuffer(obj.slice(0,0));}},{}],20:[function(_dereq_,module,exports){module.exports=isFunction;var toString=Object.prototype.toString;function isFunction(fn){var string=toString.call(fn);return string==='[object Function]'||typeof fn==='function'&&string!=='[object RegExp]'||typeof window!=='undefined'&&(// IE8 and below\nfn===window.setTimeout||fn===window.alert||fn===window.confirm||fn===window.prompt);};},{}],21:[function(_dereq_,module,exports){'use strict';module.exports=function(x){var type=typeof x;return x!==null&&(type==='object'||type==='function');};},{}],22:[function(_dereq_,module,exports){var toString={}.toString;module.exports=Array.isArray||function(arr){return toString.call(arr)=='[object Array]';};},{}],23:[function(_dereq_,module,exports){var wordWrap=_dereq_('word-wrapper');var xtend=_dereq_('xtend');var number=_dereq_('as-number');var X_HEIGHTS=['x','e','a','o','n','s','r','c','u','m','v','w','z'];var M_WIDTHS=['m','w'];var CAP_HEIGHTS=['H','I','N','E','F','K','L','T','U','V','W','X','Y','Z'];var TAB_ID='\\t'.charCodeAt(0);var SPACE_ID=' '.charCodeAt(0);var ALIGN_LEFT=0,ALIGN_CENTER=1,ALIGN_RIGHT=2;module.exports=function createLayout(opt){return new TextLayout(opt);};function TextLayout(opt){this.glyphs=[];this._measure=this.computeMetrics.bind(this);this.update(opt);}TextLayout.prototype.update=function(opt){opt=xtend({measure:this._measure},opt);this._opt=opt;this._opt.tabSize=number(this._opt.tabSize,4);if(!opt.font)throw new Error('must provide a valid bitmap font');var glyphs=this.glyphs;var text=opt.text||'';var font=opt.font;this._setupSpaceGlyphs(font);var lines=wordWrap.lines(text,opt);var minWidth=opt.width||0;//clear glyphs\nglyphs.length=0;//get max line width\nvar maxLineWidth=lines.reduce(function(prev,line){return Math.max(prev,line.width,minWidth);},0);//the pen position\nvar x=0;var y=0;var lineHeight=number(opt.lineHeight,font.common.lineHeight);var baseline=font.common.base;var descender=lineHeight-baseline;var letterSpacing=opt.letterSpacing||0;var height=lineHeight*lines.length-descender;var align=getAlignType(this._opt.align);//draw text along baseline\ny-=height;//the metrics for this text layout\nthis._width=maxLineWidth;this._height=height;this._descender=lineHeight-baseline;this._baseline=baseline;this._xHeight=getXHeight(font);this._capHeight=getCapHeight(font);this._lineHeight=lineHeight;this._ascender=lineHeight-descender-this._xHeight;//layout each glyph\nvar self=this;lines.forEach(function(line,lineIndex){var start=line.start;var end=line.end;var lineWidth=line.width;var lastGlyph;//for each glyph in that line...\nfor(var i=start;i<end;i++){var id=text.charCodeAt(i);var glyph=self.getGlyph(font,id);if(glyph){if(lastGlyph)x+=getKerning(font,lastGlyph.id,glyph.id);var tx=x;if(align===ALIGN_CENTER)tx+=(maxLineWidth-lineWidth)/2;else if(align===ALIGN_RIGHT)tx+=maxLineWidth-lineWidth;glyphs.push({position:[tx,y],data:glyph,index:i,line:lineIndex});//move pen forward\nx+=glyph.xadvance+letterSpacing;lastGlyph=glyph;}}//next line down\ny+=lineHeight;x=0;});this._linesTotal=lines.length;};TextLayout.prototype._setupSpaceGlyphs=function(font){//These are fallbacks, when the font doesn't include\n//' ' or '\\t' glyphs\nthis._fallbackSpaceGlyph=null;this._fallbackTabGlyph=null;if(!font.chars||font.chars.length===0)return;//try to get space glyph\n//then fall back to the 'm' or 'w' glyphs\n//then fall back to the first glyph available\nvar space=getGlyphById(font,SPACE_ID)||getMGlyph(font)||font.chars[0];//and create a fallback for tab\nvar tabWidth=this._opt.tabSize*space.xadvance;this._fallbackSpaceGlyph=space;this._fallbackTabGlyph=xtend(space,{x:0,y:0,xadvance:tabWidth,id:TAB_ID,xoffset:0,yoffset:0,width:0,height:0});};TextLayout.prototype.getGlyph=function(font,id){var glyph=getGlyphById(font,id);if(glyph)return glyph;else if(id===TAB_ID)return this._fallbackTabGlyph;else if(id===SPACE_ID)return this._fallbackSpaceGlyph;return null;};TextLayout.prototype.computeMetrics=function(text,start,end,width){var letterSpacing=this._opt.letterSpacing||0;var font=this._opt.font;var curPen=0;var curWidth=0;var count=0;var glyph;var lastGlyph;if(!font.chars||font.chars.length===0){return{start:start,end:start,width:0};}end=Math.min(text.length,end);for(var i=start;i<end;i++){var id=text.charCodeAt(i);var glyph=this.getGlyph(font,id);if(glyph){//move pen forward\nvar xoff=glyph.xoffset;var kern=lastGlyph?getKerning(font,lastGlyph.id,glyph.id):0;curPen+=kern;var nextPen=curPen+glyph.xadvance+letterSpacing;var nextWidth=curPen+glyph.width;//we've hit our limit; we can't move onto the next glyph\nif(nextWidth>=width||nextPen>=width)break;//otherwise continue along our line\ncurPen=nextPen;curWidth=nextWidth;lastGlyph=glyph;}count++;}//make sure rightmost edge lines up with rendered glyphs\nif(lastGlyph)curWidth+=lastGlyph.xoffset;return{start:start,end:start+count,width:curWidth};}//getters for the private vars\n;['width','height','descender','ascender','xHeight','baseline','capHeight','lineHeight'].forEach(addGetter);function addGetter(name){Object.defineProperty(TextLayout.prototype,name,{get:wrapper(name),configurable:true});}//create lookups for private vars\nfunction wrapper(name){return new Function(['return function '+name+'() {','  return this._'+name,'}'].join('\\n'))();}function getGlyphById(font,id){if(!font.chars||font.chars.length===0)return null;var glyphIdx=findChar(font.chars,id);if(glyphIdx>=0)return font.chars[glyphIdx];return null;}function getXHeight(font){for(var i=0;i<X_HEIGHTS.length;i++){var id=X_HEIGHTS[i].charCodeAt(0);var idx=findChar(font.chars,id);if(idx>=0)return font.chars[idx].height;}return 0;}function getMGlyph(font){for(var i=0;i<M_WIDTHS.length;i++){var id=M_WIDTHS[i].charCodeAt(0);var idx=findChar(font.chars,id);if(idx>=0)return font.chars[idx];}return 0;}function getCapHeight(font){for(var i=0;i<CAP_HEIGHTS.length;i++){var id=CAP_HEIGHTS[i].charCodeAt(0);var idx=findChar(font.chars,id);if(idx>=0)return font.chars[idx].height;}return 0;}function getKerning(font,left,right){if(!font.kernings||font.kernings.length===0)return 0;var table=font.kernings;for(var i=0;i<table.length;i++){var kern=table[i];if(kern.first===left&&kern.second===right)return kern.amount;}return 0;}function getAlignType(align){if(align==='center')return ALIGN_CENTER;else if(align==='right')return ALIGN_RIGHT;return ALIGN_LEFT;}function findChar(array,value,start){start=start||0;for(var i=start;i<array.length;i++){if(array[i].id===value){return i;}}return-1;}},{\"as-number\":3,\"word-wrapper\":47,\"xtend\":50}],24:[function(_dereq_,module,exports){(function(Buffer){var xhr=_dereq_('xhr');var noop=function(){};var parseASCII=_dereq_('parse-bmfont-ascii');var parseXML=_dereq_('parse-bmfont-xml');var readBinary=_dereq_('parse-bmfont-binary');var isBinaryFormat=_dereq_('./lib/is-binary');var xtend=_dereq_('xtend');var xml2=function hasXML2(){return self.XMLHttpRequest&&\"withCredentials\"in new XMLHttpRequest();}();module.exports=function(opt,cb){cb=typeof cb==='function'?cb:noop;if(typeof opt==='string')opt={uri:opt};else if(!opt)opt={};var expectBinary=opt.binary;if(expectBinary)opt=getBinaryOpts(opt);xhr(opt,function(err,res,body){if(err)return cb(err);if(!/^2/.test(res.statusCode))return cb(new Error('http status code: '+res.statusCode));if(!body)return cb(new Error('no body result'));var binary=false;//if the response type is an array buffer,\n//we need to convert it into a regular Buffer object\nif(isArrayBuffer(body)){var array=new Uint8Array(body);body=new Buffer(array,'binary');}//now check the string/Buffer response\n//and see if it has a binary BMF header\nif(isBinaryFormat(body)){binary=true;//if we have a string, turn it into a Buffer\nif(typeof body==='string')body=new Buffer(body,'binary');}//we are not parsing a binary format, just ASCII/XML/etc\nif(!binary){//might still be a buffer if responseType is 'arraybuffer'\nif(Buffer.isBuffer(body))body=body.toString(opt.encoding);body=body.trim();}var result;try{var type=res.headers['content-type'];if(binary)result=readBinary(body);else if(/json/.test(type)||body.charAt(0)==='{')result=JSON.parse(body);else if(/xml/.test(type)||body.charAt(0)==='<')result=parseXML(body);else result=parseASCII(body);}catch(e){cb(new Error('error parsing font '+e.message));cb=noop;}cb(null,result);});};function isArrayBuffer(arr){var str=Object.prototype.toString;return str.call(arr)==='[object ArrayBuffer]';}function getBinaryOpts(opt){//IE10+ and other modern browsers support array buffers\nif(xml2)return xtend(opt,{responseType:'arraybuffer'});if(typeof self.XMLHttpRequest==='undefined')throw new Error('your browser does not support XHR loading');//IE9 and XML1 browsers could still use an override\nvar req=new self.XMLHttpRequest();req.overrideMimeType('text/plain; charset=x-user-defined');return xtend({xhr:req},opt);}}).call(this,_dereq_(\"buffer\").Buffer);},{\"./lib/is-binary\":25,\"buffer\":7,\"parse-bmfont-ascii\":27,\"parse-bmfont-binary\":28,\"parse-bmfont-xml\":29,\"xhr\":48,\"xtend\":50}],25:[function(_dereq_,module,exports){(function(Buffer){var equal=_dereq_('buffer-equal');var HEADER=new Buffer([66,77,70,3]);module.exports=function(buf){if(typeof buf==='string')return buf.substring(0,3)==='BMF';return buf.length>4&&equal(buf.slice(0,4),HEADER);};}).call(this,_dereq_(\"buffer\").Buffer);},{\"buffer\":7,\"buffer-equal\":6}],26:[function(_dereq_,module,exports){/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/'use strict';/* eslint-disable no-unused-vars */var getOwnPropertySymbols=Object.getOwnPropertySymbols;var hasOwnProperty=Object.prototype.hasOwnProperty;var propIsEnumerable=Object.prototype.propertyIsEnumerable;function toObject(val){if(val===null||val===undefined){throw new TypeError('Object.assign cannot be called with null or undefined');}return Object(val);}function shouldUseNative(){try{if(!Object.assign){return false;}// Detect buggy property enumeration order in older V8 versions.\n// https://bugs.chromium.org/p/v8/issues/detail?id=4118\nvar test1=new String('abc');// eslint-disable-line no-new-wrappers\ntest1[5]='de';if(Object.getOwnPropertyNames(test1)[0]==='5'){return false;}// https://bugs.chromium.org/p/v8/issues/detail?id=3056\nvar test2={};for(var i=0;i<10;i++){test2['_'+String.fromCharCode(i)]=i;}var order2=Object.getOwnPropertyNames(test2).map(function(n){return test2[n];});if(order2.join('')!=='0123456789'){return false;}// https://bugs.chromium.org/p/v8/issues/detail?id=3056\nvar test3={};'abcdefghijklmnopqrst'.split('').forEach(function(letter){test3[letter]=letter;});if(Object.keys(Object.assign({},test3)).join('')!=='abcdefghijklmnopqrst'){return false;}return true;}catch(err){// We don't expect any of the above to throw, but better to be safe.\nreturn false;}}module.exports=shouldUseNative()?Object.assign:function(target,source){var from;var to=toObject(target);var symbols;for(var s=1;s<arguments.length;s++){from=Object(arguments[s]);for(var key in from){if(hasOwnProperty.call(from,key)){to[key]=from[key];}}if(getOwnPropertySymbols){symbols=getOwnPropertySymbols(from);for(var i=0;i<symbols.length;i++){if(propIsEnumerable.call(from,symbols[i])){to[symbols[i]]=from[symbols[i]];}}}}return to;};},{}],27:[function(_dereq_,module,exports){module.exports=function parseBMFontAscii(data){if(!data)throw new Error('no data provided');data=data.toString().trim();var output={pages:[],chars:[],kernings:[]};var lines=data.split(/\\r\\n?|\\n/g);if(lines.length===0)throw new Error('no data in BMFont file');for(var i=0;i<lines.length;i++){var lineData=splitLine(lines[i],i);if(!lineData)//skip empty lines\ncontinue;if(lineData.key==='page'){if(typeof lineData.data.id!=='number')throw new Error('malformed file at line '+i+' -- needs page id=N');if(typeof lineData.data.file!=='string')throw new Error('malformed file at line '+i+' -- needs page file=\"path\"');output.pages[lineData.data.id]=lineData.data.file;}else if(lineData.key==='chars'||lineData.key==='kernings'){//... do nothing for these two ...\n}else if(lineData.key==='char'){output.chars.push(lineData.data);}else if(lineData.key==='kerning'){output.kernings.push(lineData.data);}else{output[lineData.key]=lineData.data;}}return output;};function splitLine(line,idx){line=line.replace(/\\t+/g,' ').trim();if(!line)return null;var space=line.indexOf(' ');if(space===-1)throw new Error(\"no named row at line \"+idx);var key=line.substring(0,space);line=line.substring(space+1);//clear \"letter\" field as it is non-standard and\n//requires additional complexity to parse \" / = symbols\nline=line.replace(/letter=[\\'\\\"]\\S+[\\'\\\"]/gi,'');line=line.split(\"=\");line=line.map(function(str){return str.trim().match(/(\".*?\"|[^\"\\s]+)+(?=\\s*|\\s*$)/g);});var data=[];for(var i=0;i<line.length;i++){var dt=line[i];if(i===0){data.push({key:dt[0],data:\"\"});}else if(i===line.length-1){data[data.length-1].data=parseData(dt[0]);}else{data[data.length-1].data=parseData(dt[0]);data.push({key:dt[1],data:\"\"});}}var out={key:key,data:{}};data.forEach(function(v){out.data[v.key]=v.data;});return out;}function parseData(data){if(!data||data.length===0)return\"\";if(data.indexOf('\"')===0||data.indexOf(\"'\")===0)return data.substring(1,data.length-1);if(data.indexOf(',')!==-1)return parseIntList(data);return parseInt(data,10);}function parseIntList(data){return data.split(',').map(function(val){return parseInt(val,10);});}},{}],28:[function(_dereq_,module,exports){var HEADER=[66,77,70];module.exports=function readBMFontBinary(buf){if(buf.length<6)throw new Error('invalid buffer length for BMFont');var header=HEADER.every(function(byte,i){return buf.readUInt8(i)===byte;});if(!header)throw new Error('BMFont missing BMF byte header');var i=3;var vers=buf.readUInt8(i++);if(vers>3)throw new Error('Only supports BMFont Binary v3 (BMFont App v1.10)');var target={kernings:[],chars:[]};for(var b=0;b<5;b++)i+=readBlock(target,buf,i);return target;};function readBlock(target,buf,i){if(i>buf.length-1)return 0;var blockID=buf.readUInt8(i++);var blockSize=buf.readInt32LE(i);i+=4;switch(blockID){case 1:target.info=readInfo(buf,i);break;case 2:target.common=readCommon(buf,i);break;case 3:target.pages=readPages(buf,i,blockSize);break;case 4:target.chars=readChars(buf,i,blockSize);break;case 5:target.kernings=readKernings(buf,i,blockSize);break;}return 5+blockSize;}function readInfo(buf,i){var info={};info.size=buf.readInt16LE(i);var bitField=buf.readUInt8(i+2);info.smooth=bitField>>7&1;info.unicode=bitField>>6&1;info.italic=bitField>>5&1;info.bold=bitField>>4&1;//fixedHeight is only mentioned in binary spec \nif(bitField>>3&1)info.fixedHeight=1;info.charset=buf.readUInt8(i+3)||'';info.stretchH=buf.readUInt16LE(i+4);info.aa=buf.readUInt8(i+6);info.padding=[buf.readInt8(i+7),buf.readInt8(i+8),buf.readInt8(i+9),buf.readInt8(i+10)];info.spacing=[buf.readInt8(i+11),buf.readInt8(i+12)];info.outline=buf.readUInt8(i+13);info.face=readStringNT(buf,i+14);return info;}function readCommon(buf,i){var common={};common.lineHeight=buf.readUInt16LE(i);common.base=buf.readUInt16LE(i+2);common.scaleW=buf.readUInt16LE(i+4);common.scaleH=buf.readUInt16LE(i+6);common.pages=buf.readUInt16LE(i+8);var bitField=buf.readUInt8(i+10);common.packed=0;common.alphaChnl=buf.readUInt8(i+11);common.redChnl=buf.readUInt8(i+12);common.greenChnl=buf.readUInt8(i+13);common.blueChnl=buf.readUInt8(i+14);return common;}function readPages(buf,i,size){var pages=[];var text=readNameNT(buf,i);var len=text.length+1;var count=size/len;for(var c=0;c<count;c++){pages[c]=buf.slice(i,i+text.length).toString('utf8');i+=len;}return pages;}function readChars(buf,i,blockSize){var chars=[];var count=blockSize/20;for(var c=0;c<count;c++){var char={};var off=c*20;char.id=buf.readUInt32LE(i+0+off);char.x=buf.readUInt16LE(i+4+off);char.y=buf.readUInt16LE(i+6+off);char.width=buf.readUInt16LE(i+8+off);char.height=buf.readUInt16LE(i+10+off);char.xoffset=buf.readInt16LE(i+12+off);char.yoffset=buf.readInt16LE(i+14+off);char.xadvance=buf.readInt16LE(i+16+off);char.page=buf.readUInt8(i+18+off);char.chnl=buf.readUInt8(i+19+off);chars[c]=char;}return chars;}function readKernings(buf,i,blockSize){var kernings=[];var count=blockSize/10;for(var c=0;c<count;c++){var kern={};var off=c*10;kern.first=buf.readUInt32LE(i+0+off);kern.second=buf.readUInt32LE(i+4+off);kern.amount=buf.readInt16LE(i+8+off);kernings[c]=kern;}return kernings;}function readNameNT(buf,offset){var pos=offset;for(;pos<buf.length;pos++){if(buf[pos]===0x00)break;}return buf.slice(offset,pos);}function readStringNT(buf,offset){return readNameNT(buf,offset).toString('utf8');}},{}],29:[function(_dereq_,module,exports){var parseAttributes=_dereq_('./parse-attribs');var parseFromString=_dereq_('xml-parse-from-string');//In some cases element.attribute.nodeName can return\n//all lowercase values.. so we need to map them to the correct \n//case\nvar NAME_MAP={scaleh:'scaleH',scalew:'scaleW',stretchh:'stretchH',lineheight:'lineHeight',alphachnl:'alphaChnl',redchnl:'redChnl',greenchnl:'greenChnl',bluechnl:'blueChnl'};module.exports=function parse(data){data=data.toString();var xmlRoot=parseFromString(data);var output={pages:[],chars:[],kernings:[]//get config settings\n};['info','common'].forEach(function(key){var element=xmlRoot.getElementsByTagName(key)[0];if(element)output[key]=parseAttributes(getAttribs(element));});//get page info\nvar pageRoot=xmlRoot.getElementsByTagName('pages')[0];if(!pageRoot)throw new Error('malformed file -- no <pages> element');var pages=pageRoot.getElementsByTagName('page');for(var i=0;i<pages.length;i++){var p=pages[i];var id=parseInt(p.getAttribute('id'),10);var file=p.getAttribute('file');if(isNaN(id))throw new Error('malformed file -- page \"id\" attribute is NaN');if(!file)throw new Error('malformed file -- needs page \"file\" attribute');output.pages[parseInt(id,10)]=file;}//get kernings / chars\n;['chars','kernings'].forEach(function(key){var element=xmlRoot.getElementsByTagName(key)[0];if(!element)return;var childTag=key.substring(0,key.length-1);var children=element.getElementsByTagName(childTag);for(var i=0;i<children.length;i++){var child=children[i];output[key].push(parseAttributes(getAttribs(child)));}});return output;};function getAttribs(element){var attribs=getAttribList(element);return attribs.reduce(function(dict,attrib){var key=mapName(attrib.nodeName);dict[key]=attrib.nodeValue;return dict;},{});}function getAttribList(element){//IE8+ and modern browsers\nvar attribs=[];for(var i=0;i<element.attributes.length;i++)attribs.push(element.attributes[i]);return attribs;}function mapName(nodeName){return NAME_MAP[nodeName.toLowerCase()]||nodeName;}},{\"./parse-attribs\":30,\"xml-parse-from-string\":49}],30:[function(_dereq_,module,exports){//Some versions of GlyphDesigner have a typo\n//that causes some bugs with parsing. \n//Need to confirm with recent version of the software\n//to see whether this is still an issue or not.\nvar GLYPH_DESIGNER_ERROR='chasrset';module.exports=function parseAttributes(obj){if(GLYPH_DESIGNER_ERROR in obj){obj['charset']=obj[GLYPH_DESIGNER_ERROR];delete obj[GLYPH_DESIGNER_ERROR];}for(var k in obj){if(k==='face'||k==='charset')continue;else if(k==='padding'||k==='spacing')obj[k]=parseIntList(obj[k]);else obj[k]=parseInt(obj[k],10);}return obj;};function parseIntList(data){return data.split(',').map(function(val){return parseInt(val,10);});}},{}],31:[function(_dereq_,module,exports){var trim=_dereq_('trim'),forEach=_dereq_('for-each'),isArray=function(arg){return Object.prototype.toString.call(arg)==='[object Array]';};module.exports=function(headers){if(!headers)return{};var result={};forEach(trim(headers).split('\\n'),function(row){var index=row.indexOf(':'),key=trim(row.slice(0,index)).toLowerCase(),value=trim(row.slice(index+1));if(typeof result[key]==='undefined'){result[key]=value;}else if(isArray(result[key])){result[key].push(value);}else{result[key]=[result[key],value];}});return result;};},{\"for-each\":15,\"trim\":45}],32:[function(_dereq_,module,exports){(function(global){var performance=global.performance||{};var present=function(){var names=['now','webkitNow','msNow','mozNow','oNow'];while(names.length){var name=names.shift();if(name in performance){return performance[name].bind(performance);}}var dateNow=Date.now||function(){return new Date().getTime();};var navigationStart=(performance.timing||{}).navigationStart||dateNow();return function(){return dateNow()-navigationStart;};}();present.performanceNow=performance.now;present.noConflict=function(){performance.now=present.performanceNow;};present.conflict=function(){performance.now=present;};present.conflict();module.exports=present;}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});},{}],33:[function(_dereq_,module,exports){// shim for using process in browser\nvar process=module.exports={};// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\nvar cachedSetTimeout;var cachedClearTimeout;function defaultSetTimout(){throw new Error('setTimeout has not been defined');}function defaultClearTimeout(){throw new Error('clearTimeout has not been defined');}(function(){try{if(typeof setTimeout==='function'){cachedSetTimeout=setTimeout;}else{cachedSetTimeout=defaultSetTimout;}}catch(e){cachedSetTimeout=defaultSetTimout;}try{if(typeof clearTimeout==='function'){cachedClearTimeout=clearTimeout;}else{cachedClearTimeout=defaultClearTimeout;}}catch(e){cachedClearTimeout=defaultClearTimeout;}})();function runTimeout(fun){if(cachedSetTimeout===setTimeout){//normal enviroments in sane situations\nreturn setTimeout(fun,0);}// if setTimeout wasn't available but was latter defined\nif((cachedSetTimeout===defaultSetTimout||!cachedSetTimeout)&&setTimeout){cachedSetTimeout=setTimeout;return setTimeout(fun,0);}try{// when when somebody has screwed with setTimeout but no I.E. maddness\nreturn cachedSetTimeout(fun,0);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\nreturn cachedSetTimeout.call(null,fun,0);}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\nreturn cachedSetTimeout.call(this,fun,0);}}}function runClearTimeout(marker){if(cachedClearTimeout===clearTimeout){//normal enviroments in sane situations\nreturn clearTimeout(marker);}// if clearTimeout wasn't available but was latter defined\nif((cachedClearTimeout===defaultClearTimeout||!cachedClearTimeout)&&clearTimeout){cachedClearTimeout=clearTimeout;return clearTimeout(marker);}try{// when when somebody has screwed with setTimeout but no I.E. maddness\nreturn cachedClearTimeout(marker);}catch(e){try{// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\nreturn cachedClearTimeout.call(null,marker);}catch(e){// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n// Some versions of I.E. have different rules for clearTimeout vs setTimeout\nreturn cachedClearTimeout.call(this,marker);}}}var queue=[];var draining=false;var currentQueue;var queueIndex=-1;function cleanUpNextTick(){if(!draining||!currentQueue){return;}draining=false;if(currentQueue.length){queue=currentQueue.concat(queue);}else{queueIndex=-1;}if(queue.length){drainQueue();}}function drainQueue(){if(draining){return;}var timeout=runTimeout(cleanUpNextTick);draining=true;var len=queue.length;while(len){currentQueue=queue;queue=[];while(++queueIndex<len){if(currentQueue){currentQueue[queueIndex].run();}}queueIndex=-1;len=queue.length;}currentQueue=null;draining=false;runClearTimeout(timeout);}process.nextTick=function(fun){var args=new Array(arguments.length-1);if(arguments.length>1){for(var i=1;i<arguments.length;i++){args[i-1]=arguments[i];}}queue.push(new Item(fun,args));if(queue.length===1&&!draining){runTimeout(drainQueue);}};// v8 likes predictible objects\nfunction Item(fun,array){this.fun=fun;this.array=array;}Item.prototype.run=function(){this.fun.apply(null,this.array);};process.title='browser';process.browser=true;process.env={};process.argv=[];process.version='';// empty string to avoid regexp issues\nprocess.versions={};function noop(){}process.on=noop;process.addListener=noop;process.once=noop;process.off=noop;process.removeListener=noop;process.removeAllListeners=noop;process.emit=noop;process.prependListener=noop;process.prependOnceListener=noop;process.listeners=function(name){return[];};process.binding=function(name){throw new Error('process.binding is not supported');};process.cwd=function(){return'/';};process.chdir=function(dir){throw new Error('process.chdir is not supported');};process.umask=function(){return 0;};},{}],34:[function(_dereq_,module,exports){(function(root){// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc=setTimeout;// Use polyfill for setImmediate for performance gains\nvar asap=typeof setImmediate==='function'&&setImmediate||function(fn){setTimeoutFunc(fn,1);};// Polyfill for Function.prototype.bind\nfunction bind(fn,thisArg){return function(){fn.apply(thisArg,arguments);};}var isArray=Array.isArray||function(value){return Object.prototype.toString.call(value)===\"[object Array]\";};function Promise(fn){if(typeof this!=='object')throw new TypeError('Promises must be constructed via new');if(typeof fn!=='function')throw new TypeError('not a function');this._state=null;this._value=null;this._deferreds=[];doResolve(fn,bind(resolve,this),bind(reject,this));}function handle(deferred){var me=this;if(this._state===null){this._deferreds.push(deferred);return;}asap(function(){var cb=me._state?deferred.onFulfilled:deferred.onRejected;if(cb===null){(me._state?deferred.resolve:deferred.reject)(me._value);return;}var ret;try{ret=cb(me._value);}catch(e){deferred.reject(e);return;}deferred.resolve(ret);});}function resolve(newValue){try{//Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\nif(newValue===this)throw new TypeError('A promise cannot be resolved with itself.');if(newValue&&(typeof newValue==='object'||typeof newValue==='function')){var then=newValue.then;if(typeof then==='function'){doResolve(bind(then,newValue),bind(resolve,this),bind(reject,this));return;}}this._state=true;this._value=newValue;finale.call(this);}catch(e){reject.call(this,e);}}function reject(newValue){this._state=false;this._value=newValue;finale.call(this);}function finale(){for(var i=0,len=this._deferreds.length;i<len;i++){handle.call(this,this._deferreds[i]);}this._deferreds=null;}function Handler(onFulfilled,onRejected,resolve,reject){this.onFulfilled=typeof onFulfilled==='function'?onFulfilled:null;this.onRejected=typeof onRejected==='function'?onRejected:null;this.resolve=resolve;this.reject=reject;}/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */function doResolve(fn,onFulfilled,onRejected){var done=false;try{fn(function(value){if(done)return;done=true;onFulfilled(value);},function(reason){if(done)return;done=true;onRejected(reason);});}catch(ex){if(done)return;done=true;onRejected(ex);}}Promise.prototype['catch']=function(onRejected){return this.then(null,onRejected);};Promise.prototype.then=function(onFulfilled,onRejected){var me=this;return new Promise(function(resolve,reject){handle.call(me,new Handler(onFulfilled,onRejected,resolve,reject));});};Promise.all=function(){var args=Array.prototype.slice.call(arguments.length===1&&isArray(arguments[0])?arguments[0]:arguments);return new Promise(function(resolve,reject){if(args.length===0)return resolve([]);var remaining=args.length;function res(i,val){try{if(val&&(typeof val==='object'||typeof val==='function')){var then=val.then;if(typeof then==='function'){then.call(val,function(val){res(i,val);},reject);return;}}args[i]=val;if(--remaining===0){resolve(args);}}catch(ex){reject(ex);}}for(var i=0;i<args.length;i++){res(i,args[i]);}});};Promise.resolve=function(value){if(value&&typeof value==='object'&&value.constructor===Promise){return value;}return new Promise(function(resolve){resolve(value);});};Promise.reject=function(value){return new Promise(function(resolve,reject){reject(value);});};Promise.race=function(values){return new Promise(function(resolve,reject){for(var i=0,len=values.length;i<len;i++){values[i].then(resolve,reject);}});};/**\n\t * Set the immediate function to execute callbacks\n\t * @param fn {function} Function to execute\n\t * @private\n\t */Promise._setImmediateFn=function _setImmediateFn(fn){asap=fn;};if(typeof module!=='undefined'&&module.exports){module.exports=Promise;}else if(!root.Promise){root.Promise=Promise;}})(this);},{}],35:[function(_dereq_,module,exports){var dtype=_dereq_('dtype');var anArray=_dereq_('an-array');var isBuffer=_dereq_('is-buffer');var CW=[0,2,3];var CCW=[2,1,3];module.exports=function createQuadElements(array,opt){//if user didn't specify an output array\nif(!array||!(anArray(array)||isBuffer(array))){opt=array||{};array=null;}if(typeof opt==='number')//backwards-compatible\nopt={count:opt};else opt=opt||{};var type=typeof opt.type==='string'?opt.type:'uint16';var count=typeof opt.count==='number'?opt.count:1;var start=opt.start||0;var dir=opt.clockwise!==false?CW:CCW,a=dir[0],b=dir[1],c=dir[2];var numIndices=count*6;var indices=array||new(dtype(type))(numIndices);for(var i=0,j=0;i<numIndices;i+=6,j+=4){var x=i+start;indices[x+0]=j+0;indices[x+1]=j+1;indices[x+2]=j+2;indices[x+3]=j+a;indices[x+4]=j+b;indices[x+5]=j+c;}return indices;};},{\"an-array\":1,\"dtype\":13,\"is-buffer\":19}],36:[function(_dereq_,module,exports){(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?factory(exports):typeof define==='function'&&define.amd?define(['exports'],factory):factory(global.THREE={});})(this,function(exports){'use strict';// Polyfills\nif(Number.EPSILON===undefined){Number.EPSILON=Math.pow(2,-52);}if(Number.isInteger===undefined){// Missing in IE\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\nNumber.isInteger=function(value){return typeof value==='number'&&isFinite(value)&&Math.floor(value)===value;};}//\nif(Math.sign===undefined){// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\nMath.sign=function(x){return x<0?-1:x>0?1:+x;};}if('name'in Function.prototype===false){// Missing in IE\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\nObject.defineProperty(Function.prototype,'name',{get:function(){return this.toString().match(/^\\s*function\\s*([^\\(\\s]*)/)[1];}});}if(Object.assign===undefined){// Missing in IE\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n(function(){Object.assign=function(target){if(target===undefined||target===null){throw new TypeError('Cannot convert undefined or null to object');}var output=Object(target);for(var index=1;index<arguments.length;index++){var source=arguments[index];if(source!==undefined&&source!==null){for(var nextKey in source){if(Object.prototype.hasOwnProperty.call(source,nextKey)){output[nextKey]=source[nextKey];}}}}return output;};})();}/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */function EventDispatcher(){}Object.assign(EventDispatcher.prototype,{addEventListener:function(type,listener){if(this._listeners===undefined)this._listeners={};var listeners=this._listeners;if(listeners[type]===undefined){listeners[type]=[];}if(listeners[type].indexOf(listener)===-1){listeners[type].push(listener);}},hasEventListener:function(type,listener){if(this._listeners===undefined)return false;var listeners=this._listeners;return listeners[type]!==undefined&&listeners[type].indexOf(listener)!==-1;},removeEventListener:function(type,listener){if(this._listeners===undefined)return;var listeners=this._listeners;var listenerArray=listeners[type];if(listenerArray!==undefined){var index=listenerArray.indexOf(listener);if(index!==-1){listenerArray.splice(index,1);}}},dispatchEvent:function(event){if(this._listeners===undefined)return;var listeners=this._listeners;var listenerArray=listeners[event.type];if(listenerArray!==undefined){event.target=this;var array=listenerArray.slice(0);for(var i=0,l=array.length;i<l;i++){array[i].call(this,event);}}}});var REVISION='101';var MOUSE={LEFT:0,MIDDLE:1,RIGHT:2};var CullFaceNone=0;var CullFaceBack=1;var CullFaceFront=2;var CullFaceFrontBack=3;var FrontFaceDirectionCW=0;var FrontFaceDirectionCCW=1;var BasicShadowMap=0;var PCFShadowMap=1;var PCFSoftShadowMap=2;var FrontSide=0;var BackSide=1;var DoubleSide=2;var FlatShading=1;var SmoothShading=2;var NoColors=0;var FaceColors=1;var VertexColors=2;var NoBlending=0;var NormalBlending=1;var AdditiveBlending=2;var SubtractiveBlending=3;var MultiplyBlending=4;var CustomBlending=5;var AddEquation=100;var SubtractEquation=101;var ReverseSubtractEquation=102;var MinEquation=103;var MaxEquation=104;var ZeroFactor=200;var OneFactor=201;var SrcColorFactor=202;var OneMinusSrcColorFactor=203;var SrcAlphaFactor=204;var OneMinusSrcAlphaFactor=205;var DstAlphaFactor=206;var OneMinusDstAlphaFactor=207;var DstColorFactor=208;var OneMinusDstColorFactor=209;var SrcAlphaSaturateFactor=210;var NeverDepth=0;var AlwaysDepth=1;var LessDepth=2;var LessEqualDepth=3;var EqualDepth=4;var GreaterEqualDepth=5;var GreaterDepth=6;var NotEqualDepth=7;var MultiplyOperation=0;var MixOperation=1;var AddOperation=2;var NoToneMapping=0;var LinearToneMapping=1;var ReinhardToneMapping=2;var Uncharted2ToneMapping=3;var CineonToneMapping=4;var ACESFilmicToneMapping=5;var UVMapping=300;var CubeReflectionMapping=301;var CubeRefractionMapping=302;var EquirectangularReflectionMapping=303;var EquirectangularRefractionMapping=304;var SphericalReflectionMapping=305;var CubeUVReflectionMapping=306;var CubeUVRefractionMapping=307;var RepeatWrapping=1000;var ClampToEdgeWrapping=1001;var MirroredRepeatWrapping=1002;var NearestFilter=1003;var NearestMipMapNearestFilter=1004;var NearestMipMapLinearFilter=1005;var LinearFilter=1006;var LinearMipMapNearestFilter=1007;var LinearMipMapLinearFilter=1008;var UnsignedByteType=1009;var ByteType=1010;var ShortType=1011;var UnsignedShortType=1012;var IntType=1013;var UnsignedIntType=1014;var FloatType=1015;var HalfFloatType=1016;var UnsignedShort4444Type=1017;var UnsignedShort5551Type=1018;var UnsignedShort565Type=1019;var UnsignedInt248Type=1020;var AlphaFormat=1021;var RGBFormat=1022;var RGBAFormat=1023;var LuminanceFormat=1024;var LuminanceAlphaFormat=1025;var RGBEFormat=RGBAFormat;var DepthFormat=1026;var DepthStencilFormat=1027;var RedFormat=1028;var RGB_S3TC_DXT1_Format=33776;var RGBA_S3TC_DXT1_Format=33777;var RGBA_S3TC_DXT3_Format=33778;var RGBA_S3TC_DXT5_Format=33779;var RGB_PVRTC_4BPPV1_Format=35840;var RGB_PVRTC_2BPPV1_Format=35841;var RGBA_PVRTC_4BPPV1_Format=35842;var RGBA_PVRTC_2BPPV1_Format=35843;var RGB_ETC1_Format=36196;var RGBA_ASTC_4x4_Format=37808;var RGBA_ASTC_5x4_Format=37809;var RGBA_ASTC_5x5_Format=37810;var RGBA_ASTC_6x5_Format=37811;var RGBA_ASTC_6x6_Format=37812;var RGBA_ASTC_8x5_Format=37813;var RGBA_ASTC_8x6_Format=37814;var RGBA_ASTC_8x8_Format=37815;var RGBA_ASTC_10x5_Format=37816;var RGBA_ASTC_10x6_Format=37817;var RGBA_ASTC_10x8_Format=37818;var RGBA_ASTC_10x10_Format=37819;var RGBA_ASTC_12x10_Format=37820;var RGBA_ASTC_12x12_Format=37821;var LoopOnce=2200;var LoopRepeat=2201;var LoopPingPong=2202;var InterpolateDiscrete=2300;var InterpolateLinear=2301;var InterpolateSmooth=2302;var ZeroCurvatureEnding=2400;var ZeroSlopeEnding=2401;var WrapAroundEnding=2402;var TrianglesDrawMode=0;var TriangleStripDrawMode=1;var TriangleFanDrawMode=2;var LinearEncoding=3000;var sRGBEncoding=3001;var GammaEncoding=3007;var RGBEEncoding=3002;var LogLuvEncoding=3003;var RGBM7Encoding=3004;var RGBM16Encoding=3005;var RGBDEncoding=3006;var BasicDepthPacking=3200;var RGBADepthPacking=3201;var TangentSpaceNormalMap=0;var ObjectSpaceNormalMap=1;/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */var _Math={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nvar lut=[];for(var i=0;i<256;i++){lut[i]=(i<16?'0':'')+i.toString(16);}return function generateUUID(){var d0=Math.random()*0xffffffff|0;var d1=Math.random()*0xffffffff|0;var d2=Math.random()*0xffffffff|0;var d3=Math.random()*0xffffffff|0;var uuid=lut[d0&0xff]+lut[d0>>8&0xff]+lut[d0>>16&0xff]+lut[d0>>24&0xff]+'-'+lut[d1&0xff]+lut[d1>>8&0xff]+'-'+lut[d1>>16&0x0f|0x40]+lut[d1>>24&0xff]+'-'+lut[d2&0x3f|0x80]+lut[d2>>8&0xff]+'-'+lut[d2>>16&0xff]+lut[d2>>24&0xff]+lut[d3&0xff]+lut[d3>>8&0xff]+lut[d3>>16&0xff]+lut[d3>>24&0xff];// .toUpperCase() here flattens concatenated strings to save heap memory space.\nreturn uuid.toUpperCase();};}(),clamp:function(value,min,max){return Math.max(min,Math.min(max,value));},// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\neuclideanModulo:function(n,m){return(n%m+m)%m;},// Linear mapping from range <a1, a2> to range <b1, b2>\nmapLinear:function(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1);},// https://en.wikipedia.org/wiki/Linear_interpolation\nlerp:function(x,y,t){return(1-t)*x+t*y;},// http://en.wikipedia.org/wiki/Smoothstep\nsmoothstep:function(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*(3-2*x);},smootherstep:function(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*x*(x*(x*6-15)+10);},// Random integer from <low, high> interval\nrandInt:function(low,high){return low+Math.floor(Math.random()*(high-low+1));},// Random float from <low, high> interval\nrandFloat:function(low,high){return low+Math.random()*(high-low);},// Random float from <-range/2, range/2> interval\nrandFloatSpread:function(range){return range*(0.5-Math.random());},degToRad:function(degrees){return degrees*_Math.DEG2RAD;},radToDeg:function(radians){return radians*_Math.RAD2DEG;},isPowerOfTwo:function(value){return(value&value-1)===0&&value!==0;},ceilPowerOfTwo:function(value){return Math.pow(2,Math.ceil(Math.log(value)/Math.LN2));},floorPowerOfTwo:function(value){return Math.pow(2,Math.floor(Math.log(value)/Math.LN2));}};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */function Vector2(x,y){this.x=x||0;this.y=y||0;}Object.defineProperties(Vector2.prototype,{\"width\":{get:function(){return this.x;},set:function(value){this.x=value;}},\"height\":{get:function(){return this.y;},set:function(value){this.y=value;}}});Object.assign(Vector2.prototype,{isVector2:true,set:function(x,y){this.x=x;this.y=y;return this;},setScalar:function(scalar){this.x=scalar;this.y=scalar;return this;},setX:function(x){this.x=x;return this;},setY:function(y){this.y=y;return this;},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;default:throw new Error('index is out of range: '+index);}return this;},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;default:throw new Error('index is out of range: '+index);}},clone:function(){return new this.constructor(this.x,this.y);},copy:function(v){this.x=v.x;this.y=v.y;return this;},add:function(v,w){if(w!==undefined){console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;return this;},addScalar:function(s){this.x+=s;this.y+=s;return this;},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this;},addScaledVector:function(v,s){this.x+=v.x*s;this.y+=v.y*s;return this;},sub:function(v,w){if(w!==undefined){console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;return this;},subScalar:function(s){this.x-=s;this.y-=s;return this;},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this;},multiply:function(v){this.x*=v.x;this.y*=v.y;return this;},multiplyScalar:function(scalar){this.x*=scalar;this.y*=scalar;return this;},divide:function(v){this.x/=v.x;this.y/=v.y;return this;},divideScalar:function(scalar){return this.multiplyScalar(1/scalar);},applyMatrix3:function(m){var x=this.x,y=this.y;var e=m.elements;this.x=e[0]*x+e[3]*y+e[6];this.y=e[1]*x+e[4]*y+e[7];return this;},min:function(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);return this;},max:function(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);return this;},clamp:function(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));return this;},clampScalar:function(){var min=new Vector2();var max=new Vector2();return function clampScalar(minVal,maxVal){min.set(minVal,minVal);max.set(maxVal,maxVal);return this.clamp(min,max);};}(),clampLength:function(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this;},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this;},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this;},roundToZero:function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);return this;},negate:function(){this.x=-this.x;this.y=-this.y;return this;},dot:function(v){return this.x*v.x+this.y*v.y;},cross:function(v){return this.x*v.y-this.y*v.x;},lengthSq:function(){return this.x*this.x+this.y*this.y;},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y);},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y);},normalize:function(){return this.divideScalar(this.length()||1);},angle:function(){// computes the angle in radians with respect to the positive x-axis\nvar angle=Math.atan2(this.y,this.x);if(angle<0)angle+=2*Math.PI;return angle;},distanceTo:function(v){return Math.sqrt(this.distanceToSquared(v));},distanceToSquared:function(v){var dx=this.x-v.x,dy=this.y-v.y;return dx*dx+dy*dy;},manhattanDistanceTo:function(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y);},setLength:function(length){return this.normalize().multiplyScalar(length);},lerp:function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;return this;},lerpVectors:function(v1,v2,alpha){return this.subVectors(v2,v1).multiplyScalar(alpha).add(v1);},equals:function(v){return v.x===this.x&&v.y===this.y;},fromArray:function(array,offset){if(offset===undefined)offset=0;this.x=array[offset];this.y=array[offset+1];return this;},toArray:function(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;array[offset]=this.x;array[offset+1]=this.y;return array;},fromBufferAttribute:function(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);return this;},rotateAround:function(center,angle){var c=Math.cos(angle),s=Math.sin(angle);var x=this.x-center.x;var y=this.y-center.y;this.x=x*c-y*s+center.x;this.y=x*s+y*c+center.y;return this;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */function Matrix4(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];if(arguments.length>0){console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');}}Object.assign(Matrix4.prototype,{isMatrix4:true,set:function(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){var te=this.elements;te[0]=n11;te[4]=n12;te[8]=n13;te[12]=n14;te[1]=n21;te[5]=n22;te[9]=n23;te[13]=n24;te[2]=n31;te[6]=n32;te[10]=n33;te[14]=n34;te[3]=n41;te[7]=n42;te[11]=n43;te[15]=n44;return this;},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this;},clone:function(){return new Matrix4().fromArray(this.elements);},copy:function(m){var te=this.elements;var me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];te[9]=me[9];te[10]=me[10];te[11]=me[11];te[12]=me[12];te[13]=me[13];te[14]=me[14];te[15]=me[15];return this;},copyPosition:function(m){var te=this.elements,me=m.elements;te[12]=me[12];te[13]=me[13];te[14]=me[14];return this;},extractBasis:function(xAxis,yAxis,zAxis){xAxis.setFromMatrixColumn(this,0);yAxis.setFromMatrixColumn(this,1);zAxis.setFromMatrixColumn(this,2);return this;},makeBasis:function(xAxis,yAxis,zAxis){this.set(xAxis.x,yAxis.x,zAxis.x,0,xAxis.y,yAxis.y,zAxis.y,0,xAxis.z,yAxis.z,zAxis.z,0,0,0,0,1);return this;},extractRotation:function(){var v1=new Vector3();return function extractRotation(m){// this method does not support reflection matrices\nvar te=this.elements;var me=m.elements;var scaleX=1/v1.setFromMatrixColumn(m,0).length();var scaleY=1/v1.setFromMatrixColumn(m,1).length();var scaleZ=1/v1.setFromMatrixColumn(m,2).length();te[0]=me[0]*scaleX;te[1]=me[1]*scaleX;te[2]=me[2]*scaleX;te[3]=0;te[4]=me[4]*scaleY;te[5]=me[5]*scaleY;te[6]=me[6]*scaleY;te[7]=0;te[8]=me[8]*scaleZ;te[9]=me[9]*scaleZ;te[10]=me[10]*scaleZ;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;};}(),makeRotationFromEuler:function(euler){if(!(euler&&euler.isEuler)){console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');}var te=this.elements;var x=euler.x,y=euler.y,z=euler.z;var a=Math.cos(x),b=Math.sin(x);var c=Math.cos(y),d=Math.sin(y);var e=Math.cos(z),f=Math.sin(z);if(euler.order==='XYZ'){var ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=-c*f;te[8]=d;te[1]=af+be*d;te[5]=ae-bf*d;te[9]=-b*c;te[2]=bf-ae*d;te[6]=be+af*d;te[10]=a*c;}else if(euler.order==='YXZ'){var ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce+df*b;te[4]=de*b-cf;te[8]=a*d;te[1]=a*f;te[5]=a*e;te[9]=-b;te[2]=cf*b-de;te[6]=df+ce*b;te[10]=a*c;}else if(euler.order==='ZXY'){var ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce-df*b;te[4]=-a*f;te[8]=de+cf*b;te[1]=cf+de*b;te[5]=a*e;te[9]=df-ce*b;te[2]=-a*d;te[6]=b;te[10]=a*c;}else if(euler.order==='ZYX'){var ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=be*d-af;te[8]=ae*d+bf;te[1]=c*f;te[5]=bf*d+ae;te[9]=af*d-be;te[2]=-d;te[6]=b*c;te[10]=a*c;}else if(euler.order==='YZX'){var ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=bd-ac*f;te[8]=bc*f+ad;te[1]=f;te[5]=a*e;te[9]=-b*e;te[2]=-d*e;te[6]=ad*f+bc;te[10]=ac-bd*f;}else if(euler.order==='XZY'){var ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=-f;te[8]=d*e;te[1]=ac*f+bd;te[5]=a*e;te[9]=ad*f-bc;te[2]=bc*f-ad;te[6]=b*e;te[10]=bd*f+ac;}// bottom row\nte[3]=0;te[7]=0;te[11]=0;// last column\nte[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;},makeRotationFromQuaternion:function(){var zero=new Vector3(0,0,0);var one=new Vector3(1,1,1);return function makeRotationFromQuaternion(q){return this.compose(zero,q,one);};}(),lookAt:function(){var x=new Vector3();var y=new Vector3();var z=new Vector3();return function lookAt(eye,target,up){var te=this.elements;z.subVectors(eye,target);if(z.lengthSq()===0){// eye and target are in the same position\nz.z=1;}z.normalize();x.crossVectors(up,z);if(x.lengthSq()===0){// up and z are parallel\nif(Math.abs(up.z)===1){z.x+=0.0001;}else{z.z+=0.0001;}z.normalize();x.crossVectors(up,z);}x.normalize();y.crossVectors(z,x);te[0]=x.x;te[4]=y.x;te[8]=z.x;te[1]=x.y;te[5]=y.y;te[9]=z.y;te[2]=x.z;te[6]=y.z;te[10]=z.z;return this;};}(),multiply:function(m,n){if(n!==undefined){console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');return this.multiplyMatrices(m,n);}return this.multiplyMatrices(this,m);},premultiply:function(m){return this.multiplyMatrices(m,this);},multiplyMatrices:function(a,b){var ae=a.elements;var be=b.elements;var te=this.elements;var a11=ae[0],a12=ae[4],a13=ae[8],a14=ae[12];var a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13];var a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14];var a41=ae[3],a42=ae[7],a43=ae[11],a44=ae[15];var b11=be[0],b12=be[4],b13=be[8],b14=be[12];var b21=be[1],b22=be[5],b23=be[9],b24=be[13];var b31=be[2],b32=be[6],b33=be[10],b34=be[14];var b41=be[3],b42=be[7],b43=be[11],b44=be[15];te[0]=a11*b11+a12*b21+a13*b31+a14*b41;te[4]=a11*b12+a12*b22+a13*b32+a14*b42;te[8]=a11*b13+a12*b23+a13*b33+a14*b43;te[12]=a11*b14+a12*b24+a13*b34+a14*b44;te[1]=a21*b11+a22*b21+a23*b31+a24*b41;te[5]=a21*b12+a22*b22+a23*b32+a24*b42;te[9]=a21*b13+a22*b23+a23*b33+a24*b43;te[13]=a21*b14+a22*b24+a23*b34+a24*b44;te[2]=a31*b11+a32*b21+a33*b31+a34*b41;te[6]=a31*b12+a32*b22+a33*b32+a34*b42;te[10]=a31*b13+a32*b23+a33*b33+a34*b43;te[14]=a31*b14+a32*b24+a33*b34+a34*b44;te[3]=a41*b11+a42*b21+a43*b31+a44*b41;te[7]=a41*b12+a42*b22+a43*b32+a44*b42;te[11]=a41*b13+a42*b23+a43*b33+a44*b43;te[15]=a41*b14+a42*b24+a43*b34+a44*b44;return this;},multiplyScalar:function(s){var te=this.elements;te[0]*=s;te[4]*=s;te[8]*=s;te[12]*=s;te[1]*=s;te[5]*=s;te[9]*=s;te[13]*=s;te[2]*=s;te[6]*=s;te[10]*=s;te[14]*=s;te[3]*=s;te[7]*=s;te[11]*=s;te[15]*=s;return this;},applyToBufferAttribute:function(){var v1=new Vector3();return function applyToBufferAttribute(attribute){for(var i=0,l=attribute.count;i<l;i++){v1.x=attribute.getX(i);v1.y=attribute.getY(i);v1.z=attribute.getZ(i);v1.applyMatrix4(this);attribute.setXYZ(i,v1.x,v1.y,v1.z);}return attribute;};}(),determinant:function(){var te=this.elements;var n11=te[0],n12=te[4],n13=te[8],n14=te[12];var n21=te[1],n22=te[5],n23=te[9],n24=te[13];var n31=te[2],n32=te[6],n33=te[10],n34=te[14];var n41=te[3],n42=te[7],n43=te[11],n44=te[15];//TODO: make this more efficient\n//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\nreturn n41*(+n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34)+n42*(+n11*n23*n34-n11*n24*n33+n14*n21*n33-n13*n21*n34+n13*n24*n31-n14*n23*n31)+n43*(+n11*n24*n32-n11*n22*n34-n14*n21*n32+n12*n21*n34+n14*n22*n31-n12*n24*n31)+n44*(-n13*n22*n31-n11*n23*n32+n11*n22*n33+n13*n21*n32-n12*n21*n33+n12*n23*n31);},transpose:function(){var te=this.elements;var tmp;tmp=te[1];te[1]=te[4];te[4]=tmp;tmp=te[2];te[2]=te[8];te[8]=tmp;tmp=te[6];te[6]=te[9];te[9]=tmp;tmp=te[3];te[3]=te[12];te[12]=tmp;tmp=te[7];te[7]=te[13];te[13]=tmp;tmp=te[11];te[11]=te[14];te[14]=tmp;return this;},setPosition:function(v){var te=this.elements;te[12]=v.x;te[13]=v.y;te[14]=v.z;return this;},getInverse:function(m,throwOnDegenerate){// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\nvar te=this.elements,me=m.elements,n11=me[0],n21=me[1],n31=me[2],n41=me[3],n12=me[4],n22=me[5],n32=me[6],n42=me[7],n13=me[8],n23=me[9],n33=me[10],n43=me[11],n14=me[12],n24=me[13],n34=me[14],n44=me[15],t11=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*n44+n22*n33*n44,t12=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*n44-n12*n33*n44,t13=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*n44+n12*n23*n44,t14=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34;var det=n11*t11+n21*t12+n31*t13+n41*t14;if(det===0){var msg=\"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";if(throwOnDegenerate===true){throw new Error(msg);}else{console.warn(msg);}return this.identity();}var detInv=1/det;te[0]=t11*detInv;te[1]=(n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*n44-n21*n33*n44)*detInv;te[2]=(n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*n44+n21*n32*n44)*detInv;te[3]=(n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43)*detInv;te[4]=t12*detInv;te[5]=(n13*n34*n41-n14*n33*n41+n14*n31*n43-n11*n34*n43-n13*n31*n44+n11*n33*n44)*detInv;te[6]=(n14*n32*n41-n12*n34*n41-n14*n31*n42+n11*n34*n42+n12*n31*n44-n11*n32*n44)*detInv;te[7]=(n12*n33*n41-n13*n32*n41+n13*n31*n42-n11*n33*n42-n12*n31*n43+n11*n32*n43)*detInv;te[8]=t13*detInv;te[9]=(n14*n23*n41-n13*n24*n41-n14*n21*n43+n11*n24*n43+n13*n21*n44-n11*n23*n44)*detInv;te[10]=(n12*n24*n41-n14*n22*n41+n14*n21*n42-n11*n24*n42-n12*n21*n44+n11*n22*n44)*detInv;te[11]=(n13*n22*n41-n12*n23*n41-n13*n21*n42+n11*n23*n42+n12*n21*n43-n11*n22*n43)*detInv;te[12]=t14*detInv;te[13]=(n13*n24*n31-n14*n23*n31+n14*n21*n33-n11*n24*n33-n13*n21*n34+n11*n23*n34)*detInv;te[14]=(n14*n22*n31-n12*n24*n31-n14*n21*n32+n11*n24*n32+n12*n21*n34-n11*n22*n34)*detInv;te[15]=(n12*n23*n31-n13*n22*n31+n13*n21*n32-n11*n23*n32-n12*n21*n33+n11*n22*n33)*detInv;return this;},scale:function(v){var te=this.elements;var x=v.x,y=v.y,z=v.z;te[0]*=x;te[4]*=y;te[8]*=z;te[1]*=x;te[5]*=y;te[9]*=z;te[2]*=x;te[6]*=y;te[10]*=z;te[3]*=x;te[7]*=y;te[11]*=z;return this;},getMaxScaleOnAxis:function(){var te=this.elements;var scaleXSq=te[0]*te[0]+te[1]*te[1]+te[2]*te[2];var scaleYSq=te[4]*te[4]+te[5]*te[5]+te[6]*te[6];var scaleZSq=te[8]*te[8]+te[9]*te[9]+te[10]*te[10];return Math.sqrt(Math.max(scaleXSq,scaleYSq,scaleZSq));},makeTranslation:function(x,y,z){this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1);return this;},makeRotationX:function(theta){var c=Math.cos(theta),s=Math.sin(theta);this.set(1,0,0,0,0,c,-s,0,0,s,c,0,0,0,0,1);return this;},makeRotationY:function(theta){var c=Math.cos(theta),s=Math.sin(theta);this.set(c,0,s,0,0,1,0,0,-s,0,c,0,0,0,0,1);return this;},makeRotationZ:function(theta){var c=Math.cos(theta),s=Math.sin(theta);this.set(c,-s,0,0,s,c,0,0,0,0,1,0,0,0,0,1);return this;},makeRotationAxis:function(axis,angle){// Based on http://www.gamedev.net/reference/articles/article1199.asp\nvar c=Math.cos(angle);var s=Math.sin(angle);var t=1-c;var x=axis.x,y=axis.y,z=axis.z;var tx=t*x,ty=t*y;this.set(tx*x+c,tx*y-s*z,tx*z+s*y,0,tx*y+s*z,ty*y+c,ty*z-s*x,0,tx*z-s*y,ty*z+s*x,t*z*z+c,0,0,0,0,1);return this;},makeScale:function(x,y,z){this.set(x,0,0,0,0,y,0,0,0,0,z,0,0,0,0,1);return this;},makeShear:function(x,y,z){this.set(1,y,z,0,x,1,z,0,x,y,1,0,0,0,0,1);return this;},compose:function(position,quaternion,scale){var te=this.elements;var x=quaternion._x,y=quaternion._y,z=quaternion._z,w=quaternion._w;var x2=x+x,y2=y+y,z2=z+z;var xx=x*x2,xy=x*y2,xz=x*z2;var yy=y*y2,yz=y*z2,zz=z*z2;var wx=w*x2,wy=w*y2,wz=w*z2;var sx=scale.x,sy=scale.y,sz=scale.z;te[0]=(1-(yy+zz))*sx;te[1]=(xy+wz)*sx;te[2]=(xz-wy)*sx;te[3]=0;te[4]=(xy-wz)*sy;te[5]=(1-(xx+zz))*sy;te[6]=(yz+wx)*sy;te[7]=0;te[8]=(xz+wy)*sz;te[9]=(yz-wx)*sz;te[10]=(1-(xx+yy))*sz;te[11]=0;te[12]=position.x;te[13]=position.y;te[14]=position.z;te[15]=1;return this;},decompose:function(){var vector=new Vector3();var matrix=new Matrix4();return function decompose(position,quaternion,scale){var te=this.elements;var sx=vector.set(te[0],te[1],te[2]).length();var sy=vector.set(te[4],te[5],te[6]).length();var sz=vector.set(te[8],te[9],te[10]).length();// if determine is negative, we need to invert one scale\nvar det=this.determinant();if(det<0)sx=-sx;position.x=te[12];position.y=te[13];position.z=te[14];// scale the rotation part\nmatrix.copy(this);var invSX=1/sx;var invSY=1/sy;var invSZ=1/sz;matrix.elements[0]*=invSX;matrix.elements[1]*=invSX;matrix.elements[2]*=invSX;matrix.elements[4]*=invSY;matrix.elements[5]*=invSY;matrix.elements[6]*=invSY;matrix.elements[8]*=invSZ;matrix.elements[9]*=invSZ;matrix.elements[10]*=invSZ;quaternion.setFromRotationMatrix(matrix);scale.x=sx;scale.y=sy;scale.z=sz;return this;};}(),makePerspective:function(left,right,top,bottom,near,far){if(far===undefined){console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');}var te=this.elements;var x=2*near/(right-left);var y=2*near/(top-bottom);var a=(right+left)/(right-left);var b=(top+bottom)/(top-bottom);var c=-(far+near)/(far-near);var d=-2*far*near/(far-near);te[0]=x;te[4]=0;te[8]=a;te[12]=0;te[1]=0;te[5]=y;te[9]=b;te[13]=0;te[2]=0;te[6]=0;te[10]=c;te[14]=d;te[3]=0;te[7]=0;te[11]=-1;te[15]=0;return this;},makeOrthographic:function(left,right,top,bottom,near,far){var te=this.elements;var w=1.0/(right-left);var h=1.0/(top-bottom);var p=1.0/(far-near);var x=(right+left)*w;var y=(top+bottom)*h;var z=(far+near)*p;te[0]=2*w;te[4]=0;te[8]=0;te[12]=-x;te[1]=0;te[5]=2*h;te[9]=0;te[13]=-y;te[2]=0;te[6]=0;te[10]=-2*p;te[14]=-z;te[3]=0;te[7]=0;te[11]=0;te[15]=1;return this;},equals:function(matrix){var te=this.elements;var me=matrix.elements;for(var i=0;i<16;i++){if(te[i]!==me[i])return false;}return true;},fromArray:function(array,offset){if(offset===undefined)offset=0;for(var i=0;i<16;i++){this.elements[i]=array[i+offset];}return this;},toArray:function(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;var te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];array[offset+9]=te[9];array[offset+10]=te[10];array[offset+11]=te[11];array[offset+12]=te[12];array[offset+13]=te[13];array[offset+14]=te[14];array[offset+15]=te[15];return array;}});/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */function Quaternion(x,y,z,w){this._x=x||0;this._y=y||0;this._z=z||0;this._w=w!==undefined?w:1;}Object.assign(Quaternion,{slerp:function(qa,qb,qm,t){return qm.copy(qa).slerp(qb,t);},slerpFlat:function(dst,dstOffset,src0,srcOffset0,src1,srcOffset1,t){// fuzz-free, array-based Quaternion SLERP operation\nvar x0=src0[srcOffset0+0],y0=src0[srcOffset0+1],z0=src0[srcOffset0+2],w0=src0[srcOffset0+3],x1=src1[srcOffset1+0],y1=src1[srcOffset1+1],z1=src1[srcOffset1+2],w1=src1[srcOffset1+3];if(w0!==w1||x0!==x1||y0!==y1||z0!==z1){var s=1-t,cos=x0*x1+y0*y1+z0*z1+w0*w1,dir=cos>=0?1:-1,sqrSin=1-cos*cos;// Skip the Slerp for tiny steps to avoid numeric problems:\nif(sqrSin>Number.EPSILON){var sin=Math.sqrt(sqrSin),len=Math.atan2(sin,cos*dir);s=Math.sin(s*len)/sin;t=Math.sin(t*len)/sin;}var tDir=t*dir;x0=x0*s+x1*tDir;y0=y0*s+y1*tDir;z0=z0*s+z1*tDir;w0=w0*s+w1*tDir;// Normalize in case we just did a lerp:\nif(s===1-t){var f=1/Math.sqrt(x0*x0+y0*y0+z0*z0+w0*w0);x0*=f;y0*=f;z0*=f;w0*=f;}}dst[dstOffset]=x0;dst[dstOffset+1]=y0;dst[dstOffset+2]=z0;dst[dstOffset+3]=w0;}});Object.defineProperties(Quaternion.prototype,{x:{get:function(){return this._x;},set:function(value){this._x=value;this.onChangeCallback();}},y:{get:function(){return this._y;},set:function(value){this._y=value;this.onChangeCallback();}},z:{get:function(){return this._z;},set:function(value){this._z=value;this.onChangeCallback();}},w:{get:function(){return this._w;},set:function(value){this._w=value;this.onChangeCallback();}}});Object.assign(Quaternion.prototype,{isQuaternion:true,set:function(x,y,z,w){this._x=x;this._y=y;this._z=z;this._w=w;this.onChangeCallback();return this;},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w);},copy:function(quaternion){this._x=quaternion.x;this._y=quaternion.y;this._z=quaternion.z;this._w=quaternion.w;this.onChangeCallback();return this;},setFromEuler:function(euler,update){if(!(euler&&euler.isEuler)){throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');}var x=euler._x,y=euler._y,z=euler._z,order=euler.order;// http://www.mathworks.com/matlabcentral/fileexchange/\n// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n//\tcontent/SpinCalc.m\nvar cos=Math.cos;var sin=Math.sin;var c1=cos(x/2);var c2=cos(y/2);var c3=cos(z/2);var s1=sin(x/2);var s2=sin(y/2);var s3=sin(z/2);if(order==='XYZ'){this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;}else if(order==='YXZ'){this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;}else if(order==='ZXY'){this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;}else if(order==='ZYX'){this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;}else if(order==='YZX'){this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;}else if(order==='XZY'){this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;}if(update!==false)this.onChangeCallback();return this;},setFromAxisAngle:function(axis,angle){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n// assumes axis is normalized\nvar halfAngle=angle/2,s=Math.sin(halfAngle);this._x=axis.x*s;this._y=axis.y*s;this._z=axis.z*s;this._w=Math.cos(halfAngle);this.onChangeCallback();return this;},setFromRotationMatrix:function(m){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nvar te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10],trace=m11+m22+m33,s;if(trace>0){s=0.5/Math.sqrt(trace+1.0);this._w=0.25/s;this._x=(m32-m23)*s;this._y=(m13-m31)*s;this._z=(m21-m12)*s;}else if(m11>m22&&m11>m33){s=2.0*Math.sqrt(1.0+m11-m22-m33);this._w=(m32-m23)/s;this._x=0.25*s;this._y=(m12+m21)/s;this._z=(m13+m31)/s;}else if(m22>m33){s=2.0*Math.sqrt(1.0+m22-m11-m33);this._w=(m13-m31)/s;this._x=(m12+m21)/s;this._y=0.25*s;this._z=(m23+m32)/s;}else{s=2.0*Math.sqrt(1.0+m33-m11-m22);this._w=(m21-m12)/s;this._x=(m13+m31)/s;this._y=(m23+m32)/s;this._z=0.25*s;}this.onChangeCallback();return this;},setFromUnitVectors:function(){// assumes direction vectors vFrom and vTo are normalized\nvar v1=new Vector3();var r;var EPS=0.000001;return function setFromUnitVectors(vFrom,vTo){if(v1===undefined)v1=new Vector3();r=vFrom.dot(vTo)+1;if(r<EPS){r=0;if(Math.abs(vFrom.x)>Math.abs(vFrom.z)){v1.set(-vFrom.y,vFrom.x,0);}else{v1.set(0,-vFrom.z,vFrom.y);}}else{v1.crossVectors(vFrom,vTo);}this._x=v1.x;this._y=v1.y;this._z=v1.z;this._w=r;return this.normalize();};}(),angleTo:function(q){return 2*Math.acos(Math.abs(_Math.clamp(this.dot(q),-1,1)));},rotateTowards:function(q,step){var angle=this.angleTo(q);if(angle===0)return this;var t=Math.min(1,step/angle);this.slerp(q,t);return this;},inverse:function(){// quaternion is assumed to have unit length\nreturn this.conjugate();},conjugate:function(){this._x*=-1;this._y*=-1;this._z*=-1;this.onChangeCallback();return this;},dot:function(v){return this._x*v._x+this._y*v._y+this._z*v._z+this._w*v._w;},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w;},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w);},normalize:function(){var l=this.length();if(l===0){this._x=0;this._y=0;this._z=0;this._w=1;}else{l=1/l;this._x=this._x*l;this._y=this._y*l;this._z=this._z*l;this._w=this._w*l;}this.onChangeCallback();return this;},multiply:function(q,p){if(p!==undefined){console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');return this.multiplyQuaternions(q,p);}return this.multiplyQuaternions(this,q);},premultiply:function(q){return this.multiplyQuaternions(q,this);},multiplyQuaternions:function(a,b){// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\nvar qax=a._x,qay=a._y,qaz=a._z,qaw=a._w;var qbx=b._x,qby=b._y,qbz=b._z,qbw=b._w;this._x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby;this._y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz;this._z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx;this._w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz;this.onChangeCallback();return this;},slerp:function(qb,t){if(t===0)return this;if(t===1)return this.copy(qb);var x=this._x,y=this._y,z=this._z,w=this._w;// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\nvar cosHalfTheta=w*qb._w+x*qb._x+y*qb._y+z*qb._z;if(cosHalfTheta<0){this._w=-qb._w;this._x=-qb._x;this._y=-qb._y;this._z=-qb._z;cosHalfTheta=-cosHalfTheta;}else{this.copy(qb);}if(cosHalfTheta>=1.0){this._w=w;this._x=x;this._y=y;this._z=z;return this;}var sqrSinHalfTheta=1.0-cosHalfTheta*cosHalfTheta;if(sqrSinHalfTheta<=Number.EPSILON){var s=1-t;this._w=s*w+t*this._w;this._x=s*x+t*this._x;this._y=s*y+t*this._y;this._z=s*z+t*this._z;return this.normalize();}var sinHalfTheta=Math.sqrt(sqrSinHalfTheta);var halfTheta=Math.atan2(sinHalfTheta,cosHalfTheta);var ratioA=Math.sin((1-t)*halfTheta)/sinHalfTheta,ratioB=Math.sin(t*halfTheta)/sinHalfTheta;this._w=w*ratioA+this._w*ratioB;this._x=x*ratioA+this._x*ratioB;this._y=y*ratioA+this._y*ratioB;this._z=z*ratioA+this._z*ratioB;this.onChangeCallback();return this;},equals:function(quaternion){return quaternion._x===this._x&&quaternion._y===this._y&&quaternion._z===this._z&&quaternion._w===this._w;},fromArray:function(array,offset){if(offset===undefined)offset=0;this._x=array[offset];this._y=array[offset+1];this._z=array[offset+2];this._w=array[offset+3];this.onChangeCallback();return this;},toArray:function(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._w;return array;},onChange:function(callback){this.onChangeCallback=callback;return this;},onChangeCallback:function(){}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */function Vector3(x,y,z){this.x=x||0;this.y=y||0;this.z=z||0;}Object.assign(Vector3.prototype,{isVector3:true,set:function(x,y,z){this.x=x;this.y=y;this.z=z;return this;},setScalar:function(scalar){this.x=scalar;this.y=scalar;this.z=scalar;return this;},setX:function(x){this.x=x;return this;},setY:function(y){this.y=y;return this;},setZ:function(z){this.z=z;return this;},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;default:throw new Error('index is out of range: '+index);}return this;},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error('index is out of range: '+index);}},clone:function(){return new this.constructor(this.x,this.y,this.z);},copy:function(v){this.x=v.x;this.y=v.y;this.z=v.z;return this;},add:function(v,w){if(w!==undefined){console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;return this;},addScalar:function(s){this.x+=s;this.y+=s;this.z+=s;return this;},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this;},addScaledVector:function(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;return this;},sub:function(v,w){if(w!==undefined){console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;return this;},subScalar:function(s){this.x-=s;this.y-=s;this.z-=s;return this;},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this;},multiply:function(v,w){if(w!==undefined){console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');return this.multiplyVectors(v,w);}this.x*=v.x;this.y*=v.y;this.z*=v.z;return this;},multiplyScalar:function(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;return this;},multiplyVectors:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this;},applyEuler:function(){var quaternion=new Quaternion();return function applyEuler(euler){if(!(euler&&euler.isEuler)){console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');}return this.applyQuaternion(quaternion.setFromEuler(euler));};}(),applyAxisAngle:function(){var quaternion=new Quaternion();return function applyAxisAngle(axis,angle){return this.applyQuaternion(quaternion.setFromAxisAngle(axis,angle));};}(),applyMatrix3:function(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;this.x=e[0]*x+e[3]*y+e[6]*z;this.y=e[1]*x+e[4]*y+e[7]*z;this.z=e[2]*x+e[5]*y+e[8]*z;return this;},applyMatrix4:function(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;var w=1/(e[3]*x+e[7]*y+e[11]*z+e[15]);this.x=(e[0]*x+e[4]*y+e[8]*z+e[12])*w;this.y=(e[1]*x+e[5]*y+e[9]*z+e[13])*w;this.z=(e[2]*x+e[6]*y+e[10]*z+e[14])*w;return this;},applyQuaternion:function(q){var x=this.x,y=this.y,z=this.z;var qx=q.x,qy=q.y,qz=q.z,qw=q.w;// calculate quat * vector\nvar ix=qw*x+qy*z-qz*y;var iy=qw*y+qz*x-qx*z;var iz=qw*z+qx*y-qy*x;var iw=-qx*x-qy*y-qz*z;// calculate result * inverse quat\nthis.x=ix*qw+iw*-qx+iy*-qz-iz*-qy;this.y=iy*qw+iw*-qy+iz*-qx-ix*-qz;this.z=iz*qw+iw*-qz+ix*-qy-iy*-qx;return this;},project:function(camera){return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);},unproject:function(){var matrix=new Matrix4();return function unproject(camera){return this.applyMatrix4(matrix.getInverse(camera.projectionMatrix)).applyMatrix4(camera.matrixWorld);};}(),transformDirection:function(m){// input: THREE.Matrix4 affine matrix\n// vector interpreted as a direction\nvar x=this.x,y=this.y,z=this.z;var e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z;this.y=e[1]*x+e[5]*y+e[9]*z;this.z=e[2]*x+e[6]*y+e[10]*z;return this.normalize();},divide:function(v){this.x/=v.x;this.y/=v.y;this.z/=v.z;return this;},divideScalar:function(scalar){return this.multiplyScalar(1/scalar);},min:function(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);return this;},max:function(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);return this;},clamp:function(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));return this;},clampScalar:function(){var min=new Vector3();var max=new Vector3();return function clampScalar(minVal,maxVal){min.set(minVal,minVal,minVal);max.set(maxVal,maxVal,maxVal);return this.clamp(min,max);};}(),clampLength:function(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this;},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this;},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this;},roundToZero:function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);return this;},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this;},dot:function(v){return this.x*v.x+this.y*v.y+this.z*v.z;},// TODO lengthSquared?\nlengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z;},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z);},normalize:function(){return this.divideScalar(this.length()||1);},setLength:function(length){return this.normalize().multiplyScalar(length);},lerp:function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;return this;},lerpVectors:function(v1,v2,alpha){return this.subVectors(v2,v1).multiplyScalar(alpha).add(v1);},cross:function(v,w){if(w!==undefined){console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');return this.crossVectors(v,w);}return this.crossVectors(this,v);},crossVectors:function(a,b){var ax=a.x,ay=a.y,az=a.z;var bx=b.x,by=b.y,bz=b.z;this.x=ay*bz-az*by;this.y=az*bx-ax*bz;this.z=ax*by-ay*bx;return this;},projectOnVector:function(vector){var scalar=vector.dot(this)/vector.lengthSq();return this.copy(vector).multiplyScalar(scalar);},projectOnPlane:function(){var v1=new Vector3();return function projectOnPlane(planeNormal){v1.copy(this).projectOnVector(planeNormal);return this.sub(v1);};}(),reflect:function(){// reflect incident vector off plane orthogonal to normal\n// normal is assumed to have unit length\nvar v1=new Vector3();return function reflect(normal){return this.sub(v1.copy(normal).multiplyScalar(2*this.dot(normal)));};}(),angleTo:function(v){var theta=this.dot(v)/Math.sqrt(this.lengthSq()*v.lengthSq());// clamp, to handle numerical problems\nreturn Math.acos(_Math.clamp(theta,-1,1));},distanceTo:function(v){return Math.sqrt(this.distanceToSquared(v));},distanceToSquared:function(v){var dx=this.x-v.x,dy=this.y-v.y,dz=this.z-v.z;return dx*dx+dy*dy+dz*dz;},manhattanDistanceTo:function(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y)+Math.abs(this.z-v.z);},setFromSpherical:function(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta);},setFromSphericalCoords:function(radius,phi,theta){var sinPhiRadius=Math.sin(phi)*radius;this.x=sinPhiRadius*Math.sin(theta);this.y=Math.cos(phi)*radius;this.z=sinPhiRadius*Math.cos(theta);return this;},setFromCylindrical:function(c){return this.setFromCylindricalCoords(c.radius,c.theta,c.y);},setFromCylindricalCoords:function(radius,theta,y){this.x=radius*Math.sin(theta);this.y=y;this.z=radius*Math.cos(theta);return this;},setFromMatrixPosition:function(m){var e=m.elements;this.x=e[12];this.y=e[13];this.z=e[14];return this;},setFromMatrixScale:function(m){var sx=this.setFromMatrixColumn(m,0).length();var sy=this.setFromMatrixColumn(m,1).length();var sz=this.setFromMatrixColumn(m,2).length();this.x=sx;this.y=sy;this.z=sz;return this;},setFromMatrixColumn:function(m,index){return this.fromArray(m.elements,index*4);},equals:function(v){return v.x===this.x&&v.y===this.y&&v.z===this.z;},fromArray:function(array,offset){if(offset===undefined)offset=0;this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];return this;},toArray:function(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;return array;},fromBufferAttribute:function(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);return this;}});/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */function Matrix3(){this.elements=[1,0,0,0,1,0,0,0,1];if(arguments.length>0){console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');}}Object.assign(Matrix3.prototype,{isMatrix3:true,set:function(n11,n12,n13,n21,n22,n23,n31,n32,n33){var te=this.elements;te[0]=n11;te[1]=n21;te[2]=n31;te[3]=n12;te[4]=n22;te[5]=n32;te[6]=n13;te[7]=n23;te[8]=n33;return this;},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this;},clone:function(){return new this.constructor().fromArray(this.elements);},copy:function(m){var te=this.elements;var me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];return this;},setFromMatrix4:function(m){var me=m.elements;this.set(me[0],me[4],me[8],me[1],me[5],me[9],me[2],me[6],me[10]);return this;},applyToBufferAttribute:function(){var v1=new Vector3();return function applyToBufferAttribute(attribute){for(var i=0,l=attribute.count;i<l;i++){v1.x=attribute.getX(i);v1.y=attribute.getY(i);v1.z=attribute.getZ(i);v1.applyMatrix3(this);attribute.setXYZ(i,v1.x,v1.y,v1.z);}return attribute;};}(),multiply:function(m){return this.multiplyMatrices(this,m);},premultiply:function(m){return this.multiplyMatrices(m,this);},multiplyMatrices:function(a,b){var ae=a.elements;var be=b.elements;var te=this.elements;var a11=ae[0],a12=ae[3],a13=ae[6];var a21=ae[1],a22=ae[4],a23=ae[7];var a31=ae[2],a32=ae[5],a33=ae[8];var b11=be[0],b12=be[3],b13=be[6];var b21=be[1],b22=be[4],b23=be[7];var b31=be[2],b32=be[5],b33=be[8];te[0]=a11*b11+a12*b21+a13*b31;te[3]=a11*b12+a12*b22+a13*b32;te[6]=a11*b13+a12*b23+a13*b33;te[1]=a21*b11+a22*b21+a23*b31;te[4]=a21*b12+a22*b22+a23*b32;te[7]=a21*b13+a22*b23+a23*b33;te[2]=a31*b11+a32*b21+a33*b31;te[5]=a31*b12+a32*b22+a33*b32;te[8]=a31*b13+a32*b23+a33*b33;return this;},multiplyScalar:function(s){var te=this.elements;te[0]*=s;te[3]*=s;te[6]*=s;te[1]*=s;te[4]*=s;te[7]*=s;te[2]*=s;te[5]*=s;te[8]*=s;return this;},determinant:function(){var te=this.elements;var a=te[0],b=te[1],c=te[2],d=te[3],e=te[4],f=te[5],g=te[6],h=te[7],i=te[8];return a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g;},getInverse:function(matrix,throwOnDegenerate){if(matrix&&matrix.isMatrix4){console.error(\"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\");}var me=matrix.elements,te=this.elements,n11=me[0],n21=me[1],n31=me[2],n12=me[3],n22=me[4],n32=me[5],n13=me[6],n23=me[7],n33=me[8],t11=n33*n22-n32*n23,t12=n32*n13-n33*n12,t13=n23*n12-n22*n13,det=n11*t11+n21*t12+n31*t13;if(det===0){var msg=\"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";if(throwOnDegenerate===true){throw new Error(msg);}else{console.warn(msg);}return this.identity();}var detInv=1/det;te[0]=t11*detInv;te[1]=(n31*n23-n33*n21)*detInv;te[2]=(n32*n21-n31*n22)*detInv;te[3]=t12*detInv;te[4]=(n33*n11-n31*n13)*detInv;te[5]=(n31*n12-n32*n11)*detInv;te[6]=t13*detInv;te[7]=(n21*n13-n23*n11)*detInv;te[8]=(n22*n11-n21*n12)*detInv;return this;},transpose:function(){var tmp,m=this.elements;tmp=m[1];m[1]=m[3];m[3]=tmp;tmp=m[2];m[2]=m[6];m[6]=tmp;tmp=m[5];m[5]=m[7];m[7]=tmp;return this;},getNormalMatrix:function(matrix4){return this.setFromMatrix4(matrix4).getInverse(this).transpose();},transposeIntoArray:function(r){var m=this.elements;r[0]=m[0];r[1]=m[3];r[2]=m[6];r[3]=m[1];r[4]=m[4];r[5]=m[7];r[6]=m[2];r[7]=m[5];r[8]=m[8];return this;},setUvTransform:function(tx,ty,sx,sy,rotation,cx,cy){var c=Math.cos(rotation);var s=Math.sin(rotation);this.set(sx*c,sx*s,-sx*(c*cx+s*cy)+cx+tx,-sy*s,sy*c,-sy*(-s*cx+c*cy)+cy+ty,0,0,1);},scale:function(sx,sy){var te=this.elements;te[0]*=sx;te[3]*=sx;te[6]*=sx;te[1]*=sy;te[4]*=sy;te[7]*=sy;return this;},rotate:function(theta){var c=Math.cos(theta);var s=Math.sin(theta);var te=this.elements;var a11=te[0],a12=te[3],a13=te[6];var a21=te[1],a22=te[4],a23=te[7];te[0]=c*a11+s*a21;te[3]=c*a12+s*a22;te[6]=c*a13+s*a23;te[1]=-s*a11+c*a21;te[4]=-s*a12+c*a22;te[7]=-s*a13+c*a23;return this;},translate:function(tx,ty){var te=this.elements;te[0]+=tx*te[2];te[3]+=tx*te[5];te[6]+=tx*te[8];te[1]+=ty*te[2];te[4]+=ty*te[5];te[7]+=ty*te[8];return this;},equals:function(matrix){var te=this.elements;var me=matrix.elements;for(var i=0;i<9;i++){if(te[i]!==me[i])return false;}return true;},fromArray:function(array,offset){if(offset===undefined)offset=0;for(var i=0;i<9;i++){this.elements[i]=array[i+offset];}return this;},toArray:function(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;var te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];return array;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */var _canvas;var ImageUtils={getDataURL:function(image){var canvas;if(typeof HTMLCanvasElement=='undefined'){return image.src;}else if(image instanceof HTMLCanvasElement){canvas=image;}else{if(_canvas===undefined)_canvas=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');_canvas.width=image.width;_canvas.height=image.height;var context=_canvas.getContext('2d');if(image instanceof ImageData){context.putImageData(image,0,0);}else{context.drawImage(image,0,0,image.width,image.height);}canvas=_canvas;}if(canvas.width>2048||canvas.height>2048){return canvas.toDataURL('image/jpeg',0.6);}else{return canvas.toDataURL('image/png');}}};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */var textureId=0;function Texture(image,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding){Object.defineProperty(this,'id',{value:textureId++});this.uuid=_Math.generateUUID();this.name='';this.image=image!==undefined?image:Texture.DEFAULT_IMAGE;this.mipmaps=[];this.mapping=mapping!==undefined?mapping:Texture.DEFAULT_MAPPING;this.wrapS=wrapS!==undefined?wrapS:ClampToEdgeWrapping;this.wrapT=wrapT!==undefined?wrapT:ClampToEdgeWrapping;this.magFilter=magFilter!==undefined?magFilter:LinearFilter;this.minFilter=minFilter!==undefined?minFilter:LinearMipMapLinearFilter;this.anisotropy=anisotropy!==undefined?anisotropy:1;this.format=format!==undefined?format:RGBAFormat;this.type=type!==undefined?type:UnsignedByteType;this.offset=new Vector2(0,0);this.repeat=new Vector2(1,1);this.center=new Vector2(0,0);this.rotation=0;this.matrixAutoUpdate=true;this.matrix=new Matrix3();this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.unpackAlignment=4;// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n//\n// Also changing the encoding after already used by a Material will not automatically make the Material\n// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\nthis.encoding=encoding!==undefined?encoding:LinearEncoding;this.version=0;this.onUpdate=null;}Texture.DEFAULT_IMAGE=undefined;Texture.DEFAULT_MAPPING=UVMapping;Texture.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Texture,isTexture:true,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y);},clone:function(){return new this.constructor().copy(this);},copy:function(source){this.name=source.name;this.image=source.image;this.mipmaps=source.mipmaps.slice(0);this.mapping=source.mapping;this.wrapS=source.wrapS;this.wrapT=source.wrapT;this.magFilter=source.magFilter;this.minFilter=source.minFilter;this.anisotropy=source.anisotropy;this.format=source.format;this.type=source.type;this.offset.copy(source.offset);this.repeat.copy(source.repeat);this.center.copy(source.center);this.rotation=source.rotation;this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrix.copy(source.matrix);this.generateMipmaps=source.generateMipmaps;this.premultiplyAlpha=source.premultiplyAlpha;this.flipY=source.flipY;this.unpackAlignment=source.unpackAlignment;this.encoding=source.encoding;return this;},toJSON:function(meta){var isRootObject=meta===undefined||typeof meta==='string';if(!isRootObject&&meta.textures[this.uuid]!==undefined){return meta.textures[this.uuid];}var output={metadata:{version:4.5,type:'Texture',generator:'Texture.toJSON'},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==undefined){// TODO: Move to THREE.Image\nvar image=this.image;if(image.uuid===undefined){image.uuid=_Math.generateUUID();// UGH\n}if(!isRootObject&&meta.images[image.uuid]===undefined){var url;if(Array.isArray(image)){// process array of images e.g. CubeTexture\nurl=[];for(var i=0,l=image.length;i<l;i++){url.push(ImageUtils.getDataURL(image[i]));}}else{// process single image\nurl=ImageUtils.getDataURL(image);}meta.images[image.uuid]={uuid:image.uuid,url:url};}output.image=image.uuid;}if(!isRootObject){meta.textures[this.uuid]=output;}return output;},dispose:function(){this.dispatchEvent({type:'dispose'});},transformUv:function(uv){if(this.mapping!==UVMapping)return uv;uv.applyMatrix3(this.matrix);if(uv.x<0||uv.x>1){switch(this.wrapS){case RepeatWrapping:uv.x=uv.x-Math.floor(uv.x);break;case ClampToEdgeWrapping:uv.x=uv.x<0?0:1;break;case MirroredRepeatWrapping:if(Math.abs(Math.floor(uv.x)%2)===1){uv.x=Math.ceil(uv.x)-uv.x;}else{uv.x=uv.x-Math.floor(uv.x);}break;}}if(uv.y<0||uv.y>1){switch(this.wrapT){case RepeatWrapping:uv.y=uv.y-Math.floor(uv.y);break;case ClampToEdgeWrapping:uv.y=uv.y<0?0:1;break;case MirroredRepeatWrapping:if(Math.abs(Math.floor(uv.y)%2)===1){uv.y=Math.ceil(uv.y)-uv.y;}else{uv.y=uv.y-Math.floor(uv.y);}break;}}if(this.flipY){uv.y=1-uv.y;}return uv;}});Object.defineProperty(Texture.prototype,\"needsUpdate\",{set:function(value){if(value===true)this.version++;}});/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */function Vector4(x,y,z,w){this.x=x||0;this.y=y||0;this.z=z||0;this.w=w!==undefined?w:1;}Object.assign(Vector4.prototype,{isVector4:true,set:function(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w;return this;},setScalar:function(scalar){this.x=scalar;this.y=scalar;this.z=scalar;this.w=scalar;return this;},setX:function(x){this.x=x;return this;},setY:function(y){this.y=y;return this;},setZ:function(z){this.z=z;return this;},setW:function(w){this.w=w;return this;},setComponent:function(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;case 3:this.w=value;break;default:throw new Error('index is out of range: '+index);}return this;},getComponent:function(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error('index is out of range: '+index);}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w);},copy:function(v){this.x=v.x;this.y=v.y;this.z=v.z;this.w=v.w!==undefined?v.w:1;return this;},add:function(v,w){if(w!==undefined){console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;this.w+=v.w;return this;},addScalar:function(s){this.x+=s;this.y+=s;this.z+=s;this.w+=s;return this;},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this;},addScaledVector:function(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;this.w+=v.w*s;return this;},sub:function(v,w){if(w!==undefined){console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;this.w-=v.w;return this;},subScalar:function(s){this.x-=s;this.y-=s;this.z-=s;this.w-=s;return this;},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this;},multiplyScalar:function(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;this.w*=scalar;return this;},applyMatrix4:function(m){var x=this.x,y=this.y,z=this.z,w=this.w;var e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z+e[12]*w;this.y=e[1]*x+e[5]*y+e[9]*z+e[13]*w;this.z=e[2]*x+e[6]*y+e[10]*z+e[14]*w;this.w=e[3]*x+e[7]*y+e[11]*z+e[15]*w;return this;},divideScalar:function(scalar){return this.multiplyScalar(1/scalar);},setAxisAngleFromQuaternion:function(q){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n// q is assumed to be normalized\nthis.w=2*Math.acos(q.w);var s=Math.sqrt(1-q.w*q.w);if(s<0.0001){this.x=1;this.y=0;this.z=0;}else{this.x=q.x/s;this.y=q.y/s;this.z=q.z/s;}return this;},setAxisAngleFromRotationMatrix:function(m){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nvar angle,x,y,z,// variables for result\nepsilon=0.01,// margin to allow for rounding errors\nepsilon2=0.1,// margin to distinguish between 0 and 180 degrees\nte=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10];if(Math.abs(m12-m21)<epsilon&&Math.abs(m13-m31)<epsilon&&Math.abs(m23-m32)<epsilon){// singularity found\n// first check for identity matrix which must have +1 for all terms\n// in leading diagonal and zero in other terms\nif(Math.abs(m12+m21)<epsilon2&&Math.abs(m13+m31)<epsilon2&&Math.abs(m23+m32)<epsilon2&&Math.abs(m11+m22+m33-3)<epsilon2){// this singularity is identity matrix so angle = 0\nthis.set(1,0,0,0);return this;// zero angle, arbitrary axis\n}// otherwise this singularity is angle = 180\nangle=Math.PI;var xx=(m11+1)/2;var yy=(m22+1)/2;var zz=(m33+1)/2;var xy=(m12+m21)/4;var xz=(m13+m31)/4;var yz=(m23+m32)/4;if(xx>yy&&xx>zz){// m11 is the largest diagonal term\nif(xx<epsilon){x=0;y=0.707106781;z=0.707106781;}else{x=Math.sqrt(xx);y=xy/x;z=xz/x;}}else if(yy>zz){// m22 is the largest diagonal term\nif(yy<epsilon){x=0.707106781;y=0;z=0.707106781;}else{y=Math.sqrt(yy);x=xy/y;z=yz/y;}}else{// m33 is the largest diagonal term so base result on this\nif(zz<epsilon){x=0.707106781;y=0.707106781;z=0;}else{z=Math.sqrt(zz);x=xz/z;y=yz/z;}}this.set(x,y,z,angle);return this;// return 180 deg rotation\n}// as we have reached here there are no singularities so we can handle normally\nvar s=Math.sqrt((m32-m23)*(m32-m23)+(m13-m31)*(m13-m31)+(m21-m12)*(m21-m12));// used to normalize\nif(Math.abs(s)<0.001)s=1;// prevent divide by zero, should not happen if matrix is orthogonal and should be\n// caught by singularity test above, but I've left it in just in case\nthis.x=(m32-m23)/s;this.y=(m13-m31)/s;this.z=(m21-m12)/s;this.w=Math.acos((m11+m22+m33-1)/2);return this;},min:function(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);this.w=Math.min(this.w,v.w);return this;},max:function(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);this.w=Math.max(this.w,v.w);return this;},clamp:function(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));this.w=Math.max(min.w,Math.min(max.w,this.w));return this;},clampScalar:function(){var min,max;return function clampScalar(minVal,maxVal){if(min===undefined){min=new Vector4();max=new Vector4();}min.set(minVal,minVal,minVal,minVal);max.set(maxVal,maxVal,maxVal,maxVal);return this.clamp(min,max);};}(),clampLength:function(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));},floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this;},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this;},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this;},roundToZero:function(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w);return this;},negate:function(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this;},dot:function(v){return this.x*v.x+this.y*v.y+this.z*v.z+this.w*v.w;},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w;},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);},manhattanLength:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w);},normalize:function(){return this.divideScalar(this.length()||1);},setLength:function(length){return this.normalize().multiplyScalar(length);},lerp:function(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;this.w+=(v.w-this.w)*alpha;return this;},lerpVectors:function(v1,v2,alpha){return this.subVectors(v2,v1).multiplyScalar(alpha).add(v1);},equals:function(v){return v.x===this.x&&v.y===this.y&&v.z===this.z&&v.w===this.w;},fromArray:function(array,offset){if(offset===undefined)offset=0;this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];this.w=array[offset+3];return this;},toArray:function(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;array[offset+3]=this.w;return array;},fromBufferAttribute:function(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);this.w=attribute.getW(index);return this;}});/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */ /*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/function WebGLRenderTarget(width,height,options){this.width=width;this.height=height;this.scissor=new Vector4(0,0,width,height);this.scissorTest=false;this.viewport=new Vector4(0,0,width,height);options=options||{};this.texture=new Texture(undefined,undefined,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.encoding);this.texture.generateMipmaps=options.generateMipmaps!==undefined?options.generateMipmaps:false;this.texture.minFilter=options.minFilter!==undefined?options.minFilter:LinearFilter;this.depthBuffer=options.depthBuffer!==undefined?options.depthBuffer:true;this.stencilBuffer=options.stencilBuffer!==undefined?options.stencilBuffer:true;this.depthTexture=options.depthTexture!==undefined?options.depthTexture:null;}WebGLRenderTarget.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:WebGLRenderTarget,isWebGLRenderTarget:true,setSize:function(width,height){if(this.width!==width||this.height!==height){this.width=width;this.height=height;this.dispose();}this.viewport.set(0,0,width,height);this.scissor.set(0,0,width,height);},clone:function(){return new this.constructor().copy(this);},copy:function(source){this.width=source.width;this.height=source.height;this.viewport.copy(source.viewport);this.texture=source.texture.clone();this.depthBuffer=source.depthBuffer;this.stencilBuffer=source.stencilBuffer;this.depthTexture=source.depthTexture;return this;},dispose:function(){this.dispatchEvent({type:'dispose'});}});/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author Matt DesLauriers / @mattdesl\n\t */function WebGLMultisampleRenderTarget(width,height,options){WebGLRenderTarget.call(this,width,height,options);this.samples=4;}WebGLMultisampleRenderTarget.prototype=Object.assign(Object.create(WebGLRenderTarget.prototype),{constructor:WebGLMultisampleRenderTarget,isWebGLMultisampleRenderTarget:true,copy:function(source){WebGLRenderTarget.prototype.copy.call(this,source);this.samples=source.samples;return this;}});/**\n\t * @author alteredq / http://alteredqualia.com\n\t */function WebGLRenderTargetCube(width,height,options){WebGLRenderTarget.call(this,width,height,options);this.activeCubeFace=0;// PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\nthis.activeMipMapLevel=0;}WebGLRenderTargetCube.prototype=Object.create(WebGLRenderTarget.prototype);WebGLRenderTargetCube.prototype.constructor=WebGLRenderTargetCube;WebGLRenderTargetCube.prototype.isWebGLRenderTargetCube=true;/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */function DataTexture(data,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.image={data:data,width:width,height:height};this.magFilter=magFilter!==undefined?magFilter:NearestFilter;this.minFilter=minFilter!==undefined?minFilter:NearestFilter;this.generateMipmaps=false;this.flipY=false;this.unpackAlignment=1;}DataTexture.prototype=Object.create(Texture.prototype);DataTexture.prototype.constructor=DataTexture;DataTexture.prototype.isDataTexture=true;/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */function Box3(min,max){this.min=min!==undefined?min:new Vector3(+Infinity,+Infinity,+Infinity);this.max=max!==undefined?max:new Vector3(-Infinity,-Infinity,-Infinity);}Object.assign(Box3.prototype,{isBox3:true,set:function(min,max){this.min.copy(min);this.max.copy(max);return this;},setFromArray:function(array){var minX=+Infinity;var minY=+Infinity;var minZ=+Infinity;var maxX=-Infinity;var maxY=-Infinity;var maxZ=-Infinity;for(var i=0,l=array.length;i<l;i+=3){var x=array[i];var y=array[i+1];var z=array[i+2];if(x<minX)minX=x;if(y<minY)minY=y;if(z<minZ)minZ=z;if(x>maxX)maxX=x;if(y>maxY)maxY=y;if(z>maxZ)maxZ=z;}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this;},setFromBufferAttribute:function(attribute){var minX=+Infinity;var minY=+Infinity;var minZ=+Infinity;var maxX=-Infinity;var maxY=-Infinity;var maxZ=-Infinity;for(var i=0,l=attribute.count;i<l;i++){var x=attribute.getX(i);var y=attribute.getY(i);var z=attribute.getZ(i);if(x<minX)minX=x;if(y<minY)minY=y;if(z<minZ)minZ=z;if(x>maxX)maxX=x;if(y>maxY)maxY=y;if(z>maxZ)maxZ=z;}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this;},setFromPoints:function(points){this.makeEmpty();for(var i=0,il=points.length;i<il;i++){this.expandByPoint(points[i]);}return this;},setFromCenterAndSize:function(){var v1=new Vector3();return function setFromCenterAndSize(center,size){var halfSize=v1.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;};}(),setFromObject:function(object){this.makeEmpty();return this.expandByObject(object);},clone:function(){return new this.constructor().copy(this);},copy:function(box){this.min.copy(box.min);this.max.copy(box.max);return this;},makeEmpty:function(){this.min.x=this.min.y=this.min.z=+Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this;},isEmpty:function(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\nreturn this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z;},getCenter:function(target){if(target===undefined){console.warn('THREE.Box3: .getCenter() target is now required');target=new Vector3();}return this.isEmpty()?target.set(0,0,0):target.addVectors(this.min,this.max).multiplyScalar(0.5);},getSize:function(target){if(target===undefined){console.warn('THREE.Box3: .getSize() target is now required');target=new Vector3();}return this.isEmpty()?target.set(0,0,0):target.subVectors(this.max,this.min);},expandByPoint:function(point){this.min.min(point);this.max.max(point);return this;},expandByVector:function(vector){this.min.sub(vector);this.max.add(vector);return this;},expandByScalar:function(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;},expandByObject:function(){// Computes the world-axis-aligned bounding box of an object (including its children),\n// accounting for both the object's, and children's, world transforms\nvar scope,i,l;var v1=new Vector3();function traverse(node){var geometry=node.geometry;if(geometry!==undefined){if(geometry.isGeometry){var vertices=geometry.vertices;for(i=0,l=vertices.length;i<l;i++){v1.copy(vertices[i]);v1.applyMatrix4(node.matrixWorld);scope.expandByPoint(v1);}}else if(geometry.isBufferGeometry){var attribute=geometry.attributes.position;if(attribute!==undefined){for(i=0,l=attribute.count;i<l;i++){v1.fromBufferAttribute(attribute,i).applyMatrix4(node.matrixWorld);scope.expandByPoint(v1);}}}}}return function expandByObject(object){scope=this;object.updateMatrixWorld(true);object.traverse(traverse);return this;};}(),containsPoint:function(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y||point.z<this.min.z||point.z>this.max.z?false:true;},containsBox:function(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y&&this.min.z<=box.min.z&&box.max.z<=this.max.z;},getParameter:function(point,target){// This can potentially have a divide by zero if the box\n// has a size dimension of 0.\nif(target===undefined){console.warn('THREE.Box3: .getParameter() target is now required');target=new Vector3();}return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y),(point.z-this.min.z)/(this.max.z-this.min.z));},intersectsBox:function(box){// using 6 splitting planes to rule out intersections.\nreturn box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y||box.max.z<this.min.z||box.min.z>this.max.z?false:true;},intersectsSphere:function(){var closestPoint=new Vector3();return function intersectsSphere(sphere){// Find the point on the AABB closest to the sphere center.\nthis.clampPoint(sphere.center,closestPoint);// If that point is inside the sphere, the AABB and sphere intersect.\nreturn closestPoint.distanceToSquared(sphere.center)<=sphere.radius*sphere.radius;};}(),intersectsPlane:function(plane){// We compute the minimum and maximum dot product values. If those values\n// are on the same side (back or front) of the plane, then there is no intersection.\nvar min,max;if(plane.normal.x>0){min=plane.normal.x*this.min.x;max=plane.normal.x*this.max.x;}else{min=plane.normal.x*this.max.x;max=plane.normal.x*this.min.x;}if(plane.normal.y>0){min+=plane.normal.y*this.min.y;max+=plane.normal.y*this.max.y;}else{min+=plane.normal.y*this.max.y;max+=plane.normal.y*this.min.y;}if(plane.normal.z>0){min+=plane.normal.z*this.min.z;max+=plane.normal.z*this.max.z;}else{min+=plane.normal.z*this.max.z;max+=plane.normal.z*this.min.z;}return min<=-plane.constant&&max>=-plane.constant;},intersectsTriangle:function(){// triangle centered vertices\nvar v0=new Vector3();var v1=new Vector3();var v2=new Vector3();// triangle edge vectors\nvar f0=new Vector3();var f1=new Vector3();var f2=new Vector3();var testAxis=new Vector3();var center=new Vector3();var extents=new Vector3();var triangleNormal=new Vector3();function satForAxes(axes){var i,j;for(i=0,j=axes.length-3;i<=j;i+=3){testAxis.fromArray(axes,i);// project the aabb onto the seperating axis\nvar r=extents.x*Math.abs(testAxis.x)+extents.y*Math.abs(testAxis.y)+extents.z*Math.abs(testAxis.z);// project all 3 vertices of the triangle onto the seperating axis\nvar p0=v0.dot(testAxis);var p1=v1.dot(testAxis);var p2=v2.dot(testAxis);// actual test, basically see if either of the most extreme of the triangle points intersects r\nif(Math.max(-Math.max(p0,p1,p2),Math.min(p0,p1,p2))>r){// points of the projected triangle are outside the projected half-length of the aabb\n// the axis is seperating and we can exit\nreturn false;}}return true;}return function intersectsTriangle(triangle){if(this.isEmpty()){return false;}// compute box center and extents\nthis.getCenter(center);extents.subVectors(this.max,center);// translate triangle to aabb origin\nv0.subVectors(triangle.a,center);v1.subVectors(triangle.b,center);v2.subVectors(triangle.c,center);// compute edge vectors for triangle\nf0.subVectors(v1,v0);f1.subVectors(v2,v1);f2.subVectors(v0,v2);// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\nvar axes=[0,-f0.z,f0.y,0,-f1.z,f1.y,0,-f2.z,f2.y,f0.z,0,-f0.x,f1.z,0,-f1.x,f2.z,0,-f2.x,-f0.y,f0.x,0,-f1.y,f1.x,0,-f2.y,f2.x,0];if(!satForAxes(axes)){return false;}// test 3 face normals from the aabb\naxes=[1,0,0,0,1,0,0,0,1];if(!satForAxes(axes)){return false;}// finally testing the face normal of the triangle\n// use already existing triangle edge vectors here\ntriangleNormal.crossVectors(f0,f1);axes=[triangleNormal.x,triangleNormal.y,triangleNormal.z];return satForAxes(axes);};}(),clampPoint:function(point,target){if(target===undefined){console.warn('THREE.Box3: .clampPoint() target is now required');target=new Vector3();}return target.copy(point).clamp(this.min,this.max);},distanceToPoint:function(){var v1=new Vector3();return function distanceToPoint(point){var clampedPoint=v1.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();};}(),getBoundingSphere:function(){var v1=new Vector3();return function getBoundingSphere(target){if(target===undefined){console.warn('THREE.Box3: .getBoundingSphere() target is now required');target=new Sphere();}this.getCenter(target.center);target.radius=this.getSize(v1).length()*0.5;return target;};}(),intersect:function(box){this.min.max(box.min);this.max.min(box.max);// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\nif(this.isEmpty())this.makeEmpty();return this;},union:function(box){this.min.min(box.min);this.max.max(box.max);return this;},applyMatrix4:function(){var points=[new Vector3(),new Vector3(),new Vector3(),new Vector3(),new Vector3(),new Vector3(),new Vector3(),new Vector3()];return function applyMatrix4(matrix){// transform of empty box is an empty box.\nif(this.isEmpty())return this;// NOTE: I am using a binary pattern to specify all 2^3 combinations below\npoints[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(matrix);// 000\npoints[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(matrix);// 001\npoints[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(matrix);// 010\npoints[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(matrix);// 011\npoints[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(matrix);// 100\npoints[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(matrix);// 101\npoints[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(matrix);// 110\npoints[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(matrix);// 111\nthis.setFromPoints(points);return this;};}(),translate:function(offset){this.min.add(offset);this.max.add(offset);return this;},equals:function(box){return box.min.equals(this.min)&&box.max.equals(this.max);}});/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */function Sphere(center,radius){this.center=center!==undefined?center:new Vector3();this.radius=radius!==undefined?radius:0;}Object.assign(Sphere.prototype,{set:function(center,radius){this.center.copy(center);this.radius=radius;return this;},setFromPoints:function(){var box=new Box3();return function setFromPoints(points,optionalCenter){var center=this.center;if(optionalCenter!==undefined){center.copy(optionalCenter);}else{box.setFromPoints(points).getCenter(center);}var maxRadiusSq=0;for(var i=0,il=points.length;i<il;i++){maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(points[i]));}this.radius=Math.sqrt(maxRadiusSq);return this;};}(),clone:function(){return new this.constructor().copy(this);},copy:function(sphere){this.center.copy(sphere.center);this.radius=sphere.radius;return this;},empty:function(){return this.radius<=0;},containsPoint:function(point){return point.distanceToSquared(this.center)<=this.radius*this.radius;},distanceToPoint:function(point){return point.distanceTo(this.center)-this.radius;},intersectsSphere:function(sphere){var radiusSum=this.radius+sphere.radius;return sphere.center.distanceToSquared(this.center)<=radiusSum*radiusSum;},intersectsBox:function(box){return box.intersectsSphere(this);},intersectsPlane:function(plane){return Math.abs(plane.distanceToPoint(this.center))<=this.radius;},clampPoint:function(point,target){var deltaLengthSq=this.center.distanceToSquared(point);if(target===undefined){console.warn('THREE.Sphere: .clampPoint() target is now required');target=new Vector3();}target.copy(point);if(deltaLengthSq>this.radius*this.radius){target.sub(this.center).normalize();target.multiplyScalar(this.radius).add(this.center);}return target;},getBoundingBox:function(target){if(target===undefined){console.warn('THREE.Sphere: .getBoundingBox() target is now required');target=new Box3();}target.set(this.center,this.center);target.expandByScalar(this.radius);return target;},applyMatrix4:function(matrix){this.center.applyMatrix4(matrix);this.radius=this.radius*matrix.getMaxScaleOnAxis();return this;},translate:function(offset){this.center.add(offset);return this;},equals:function(sphere){return sphere.center.equals(this.center)&&sphere.radius===this.radius;}});/**\n\t * @author bhouston / http://clara.io\n\t */function Plane(normal,constant){// normal is assumed to be normalized\nthis.normal=normal!==undefined?normal:new Vector3(1,0,0);this.constant=constant!==undefined?constant:0;}Object.assign(Plane.prototype,{set:function(normal,constant){this.normal.copy(normal);this.constant=constant;return this;},setComponents:function(x,y,z,w){this.normal.set(x,y,z);this.constant=w;return this;},setFromNormalAndCoplanarPoint:function(normal,point){this.normal.copy(normal);this.constant=-point.dot(this.normal);return this;},setFromCoplanarPoints:function(){var v1=new Vector3();var v2=new Vector3();return function setFromCoplanarPoints(a,b,c){var normal=v1.subVectors(c,b).cross(v2.subVectors(a,b)).normalize();// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\nthis.setFromNormalAndCoplanarPoint(normal,a);return this;};}(),clone:function(){return new this.constructor().copy(this);},copy:function(plane){this.normal.copy(plane.normal);this.constant=plane.constant;return this;},normalize:function(){// Note: will lead to a divide by zero if the plane is invalid.\nvar inverseNormalLength=1.0/this.normal.length();this.normal.multiplyScalar(inverseNormalLength);this.constant*=inverseNormalLength;return this;},negate:function(){this.constant*=-1;this.normal.negate();return this;},distanceToPoint:function(point){return this.normal.dot(point)+this.constant;},distanceToSphere:function(sphere){return this.distanceToPoint(sphere.center)-sphere.radius;},projectPoint:function(point,target){if(target===undefined){console.warn('THREE.Plane: .projectPoint() target is now required');target=new Vector3();}return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);},intersectLine:function(){var v1=new Vector3();return function intersectLine(line,target){if(target===undefined){console.warn('THREE.Plane: .intersectLine() target is now required');target=new Vector3();}var direction=line.delta(v1);var denominator=this.normal.dot(direction);if(denominator===0){// line is coplanar, return origin\nif(this.distanceToPoint(line.start)===0){return target.copy(line.start);}// Unsure if this is the correct method to handle this case.\nreturn undefined;}var t=-(line.start.dot(this.normal)+this.constant)/denominator;if(t<0||t>1){return undefined;}return target.copy(direction).multiplyScalar(t).add(line.start);};}(),intersectsLine:function(line){// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\nvar startSign=this.distanceToPoint(line.start);var endSign=this.distanceToPoint(line.end);return startSign<0&&endSign>0||endSign<0&&startSign>0;},intersectsBox:function(box){return box.intersectsPlane(this);},intersectsSphere:function(sphere){return sphere.intersectsPlane(this);},coplanarPoint:function(target){if(target===undefined){console.warn('THREE.Plane: .coplanarPoint() target is now required');target=new Vector3();}return target.copy(this.normal).multiplyScalar(-this.constant);},applyMatrix4:function(){var v1=new Vector3();var m1=new Matrix3();return function applyMatrix4(matrix,optionalNormalMatrix){var normalMatrix=optionalNormalMatrix||m1.getNormalMatrix(matrix);var referencePoint=this.coplanarPoint(v1).applyMatrix4(matrix);var normal=this.normal.applyMatrix3(normalMatrix).normalize();this.constant=-referencePoint.dot(normal);return this;};}(),translate:function(offset){this.constant-=offset.dot(this.normal);return this;},equals:function(plane){return plane.normal.equals(this.normal)&&plane.constant===this.constant;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */function Frustum(p0,p1,p2,p3,p4,p5){this.planes=[p0!==undefined?p0:new Plane(),p1!==undefined?p1:new Plane(),p2!==undefined?p2:new Plane(),p3!==undefined?p3:new Plane(),p4!==undefined?p4:new Plane(),p5!==undefined?p5:new Plane()];}Object.assign(Frustum.prototype,{set:function(p0,p1,p2,p3,p4,p5){var planes=this.planes;planes[0].copy(p0);planes[1].copy(p1);planes[2].copy(p2);planes[3].copy(p3);planes[4].copy(p4);planes[5].copy(p5);return this;},clone:function(){return new this.constructor().copy(this);},copy:function(frustum){var planes=this.planes;for(var i=0;i<6;i++){planes[i].copy(frustum.planes[i]);}return this;},setFromMatrix:function(m){var planes=this.planes;var me=m.elements;var me0=me[0],me1=me[1],me2=me[2],me3=me[3];var me4=me[4],me5=me[5],me6=me[6],me7=me[7];var me8=me[8],me9=me[9],me10=me[10],me11=me[11];var me12=me[12],me13=me[13],me14=me[14],me15=me[15];planes[0].setComponents(me3-me0,me7-me4,me11-me8,me15-me12).normalize();planes[1].setComponents(me3+me0,me7+me4,me11+me8,me15+me12).normalize();planes[2].setComponents(me3+me1,me7+me5,me11+me9,me15+me13).normalize();planes[3].setComponents(me3-me1,me7-me5,me11-me9,me15-me13).normalize();planes[4].setComponents(me3-me2,me7-me6,me11-me10,me15-me14).normalize();planes[5].setComponents(me3+me2,me7+me6,me11+me10,me15+me14).normalize();return this;},intersectsObject:function(){var sphere=new Sphere();return function intersectsObject(object){var geometry=object.geometry;if(geometry.boundingSphere===null)geometry.computeBoundingSphere();sphere.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);return this.intersectsSphere(sphere);};}(),intersectsSprite:function(){var sphere=new Sphere();return function intersectsSprite(sprite){sphere.center.set(0,0,0);sphere.radius=0.7071067811865476;sphere.applyMatrix4(sprite.matrixWorld);return this.intersectsSphere(sphere);};}(),intersectsSphere:function(sphere){var planes=this.planes;var center=sphere.center;var negRadius=-sphere.radius;for(var i=0;i<6;i++){var distance=planes[i].distanceToPoint(center);if(distance<negRadius){return false;}}return true;},intersectsBox:function(){var p=new Vector3();return function intersectsBox(box){var planes=this.planes;for(var i=0;i<6;i++){var plane=planes[i];// corner at max distance\np.x=plane.normal.x>0?box.max.x:box.min.x;p.y=plane.normal.y>0?box.max.y:box.min.y;p.z=plane.normal.z>0?box.max.z:box.min.z;if(plane.distanceToPoint(p)<0){return false;}}return true;};}(),containsPoint:function(point){var planes=this.planes;for(var i=0;i<6;i++){if(planes[i].distanceToPoint(point)<0){return false;}}return true;}});var alphamap_fragment=\"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";var alphamap_pars_fragment=\"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";var alphatest_fragment=\"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";var aomap_fragment=\"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";var aomap_pars_fragment=\"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";var begin_vertex=\"vec3 transformed = vec3( position );\";var beginnormal_vertex=\"vec3 objectNormal = vec3( normal );\";var bsdfs=\"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotNV );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\";var bumpmap_pars_fragment=\"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";var clipping_planes_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";var clipping_planes_pars_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";var clipping_planes_pars_vertex=\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\";var clipping_planes_vertex=\"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\";var color_fragment=\"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";var color_pars_fragment=\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";var color_pars_vertex=\"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";var color_vertex=\"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";var common=\"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\";var cube_uv_reflection_fragment=\"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\";var defaultnormal_vertex=\"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\";var displacementmap_pars_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";var displacementmap_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\";var emissivemap_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";var emissivemap_pars_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";var encodings_fragment=\"gl_FragColor = linearToOutputTexel( gl_FragColor );\";var encodings_pars_fragment=\"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";var envmap_fragment=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";var envmap_pars_fragment=\"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";var envmap_pars_vertex=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";var envmap_vertex=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";var fog_vertex=\"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";var fog_pars_vertex=\"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";var fog_fragment=\"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";var fog_pars_fragment=\"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";var gradientmap_pars_fragment=\"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";var lightmap_fragment=\"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\";var lightmap_pars_fragment=\"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";var lights_lambert_vertex=\"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\";var lights_pars_begin=\"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";var envmap_physical_pars_fragment=\"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent ));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";var lights_phong_fragment=\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";var lights_phong_pars_fragment=\"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";var lights_physical_fragment=\"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\";var lights_physical_pars_fragment=\"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#endif\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearCoatInv = 1.0 - clearCoatDHR;\\n\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec3 singleScattering = vec3( 0.0 );\\n\\t\\tvec3 multiScattering = vec3( 0.0 );\\n\\t\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\t\\tvec3 diffuse = material.diffuseColor;\\n\\t\\treflectedLight.indirectSpecular += clearCoatInv * radiance * singleScattering;\\n\\t\\treflectedLight.indirectDiffuse += multiScattering * cosineWeightedIrradiance;\\n\\t\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n\\t#else\\n\\t\\treflectedLight.indirectSpecular += clearCoatInv * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";var lights_fragment_begin=\"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\";var lights_fragment_maps=\"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\";var lights_fragment_end=\"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, irradiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\";var logdepthbuf_fragment=\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";var logdepthbuf_pars_fragment=\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n#endif\";var logdepthbuf_pars_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";var logdepthbuf_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\";var map_fragment=\"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";var map_pars_fragment=\"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";var map_particle_fragment=\"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\";var map_particle_pars_fragment=\"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\";var metalnessmap_fragment=\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";var metalnessmap_pars_fragment=\"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";var morphnormal_vertex=\"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\";var morphtarget_pars_vertex=\"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";var morphtarget_vertex=\"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";var normal_fragment_begin=\"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\";var normal_fragment_maps=\"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";var normalmap_pars_fragment=\"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\";var packing=\"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";var premultiplied_alpha_fragment=\"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";var project_vertex=\"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\";var dithering_fragment=\"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";var dithering_pars_fragment=\"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";var roughnessmap_fragment=\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";var roughnessmap_pars_fragment=\"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";var shadowmap_pars_fragment=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";var shadowmap_pars_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\";var shadowmap_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\";var shadowmask_pars_fragment=\"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";var skinbase_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";var skinning_pars_vertex=\"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";var skinning_vertex=\"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";var skinnormal_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\";var specularmap_fragment=\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";var specularmap_pars_fragment=\"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";var tonemapping_fragment=\"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";var tonemapping_pars_fragment=\"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\\n}\";var uv_pars_fragment=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";var uv_pars_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\";var uv_vertex=\"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";var uv2_pars_fragment=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";var uv2_pars_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";var uv2_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";var worldpos_vertex=\"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\";var background_frag=\"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var background_vert=\"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";var cube_frag=\"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var cube_vert=\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";var depth_frag=\"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\";var depth_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\";var distanceRGBA_frag=\"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";var distanceRGBA_vert=\"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";var equirect_frag=\"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var equirect_vert=\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";var linedashed_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";var linedashed_vert=\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshbasic_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";var meshbasic_vert=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshlambert_frag=\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshlambert_vert=\"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshmatcap_frag=\"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";var meshmatcap_vert=\"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";var meshphong_frag=\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshphong_vert=\"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var meshphysical_frag=\"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var meshphysical_vert=\"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var normal_frag=\"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";var normal_vert=\"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";var points_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";var points_vert=\"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";var shadow_frag=\"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\";var shadow_vert=\"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var sprite_frag=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";var sprite_vert=\"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";var ShaderChunk={alphamap_fragment:alphamap_fragment,alphamap_pars_fragment:alphamap_pars_fragment,alphatest_fragment:alphatest_fragment,aomap_fragment:aomap_fragment,aomap_pars_fragment:aomap_pars_fragment,begin_vertex:begin_vertex,beginnormal_vertex:beginnormal_vertex,bsdfs:bsdfs,bumpmap_pars_fragment:bumpmap_pars_fragment,clipping_planes_fragment:clipping_planes_fragment,clipping_planes_pars_fragment:clipping_planes_pars_fragment,clipping_planes_pars_vertex:clipping_planes_pars_vertex,clipping_planes_vertex:clipping_planes_vertex,color_fragment:color_fragment,color_pars_fragment:color_pars_fragment,color_pars_vertex:color_pars_vertex,color_vertex:color_vertex,common:common,cube_uv_reflection_fragment:cube_uv_reflection_fragment,defaultnormal_vertex:defaultnormal_vertex,displacementmap_pars_vertex:displacementmap_pars_vertex,displacementmap_vertex:displacementmap_vertex,emissivemap_fragment:emissivemap_fragment,emissivemap_pars_fragment:emissivemap_pars_fragment,encodings_fragment:encodings_fragment,encodings_pars_fragment:encodings_pars_fragment,envmap_fragment:envmap_fragment,envmap_pars_fragment:envmap_pars_fragment,envmap_pars_vertex:envmap_pars_vertex,envmap_physical_pars_fragment:envmap_physical_pars_fragment,envmap_vertex:envmap_vertex,fog_vertex:fog_vertex,fog_pars_vertex:fog_pars_vertex,fog_fragment:fog_fragment,fog_pars_fragment:fog_pars_fragment,gradientmap_pars_fragment:gradientmap_pars_fragment,lightmap_fragment:lightmap_fragment,lightmap_pars_fragment:lightmap_pars_fragment,lights_lambert_vertex:lights_lambert_vertex,lights_pars_begin:lights_pars_begin,lights_phong_fragment:lights_phong_fragment,lights_phong_pars_fragment:lights_phong_pars_fragment,lights_physical_fragment:lights_physical_fragment,lights_physical_pars_fragment:lights_physical_pars_fragment,lights_fragment_begin:lights_fragment_begin,lights_fragment_maps:lights_fragment_maps,lights_fragment_end:lights_fragment_end,logdepthbuf_fragment:logdepthbuf_fragment,logdepthbuf_pars_fragment:logdepthbuf_pars_fragment,logdepthbuf_pars_vertex:logdepthbuf_pars_vertex,logdepthbuf_vertex:logdepthbuf_vertex,map_fragment:map_fragment,map_pars_fragment:map_pars_fragment,map_particle_fragment:map_particle_fragment,map_particle_pars_fragment:map_particle_pars_fragment,metalnessmap_fragment:metalnessmap_fragment,metalnessmap_pars_fragment:metalnessmap_pars_fragment,morphnormal_vertex:morphnormal_vertex,morphtarget_pars_vertex:morphtarget_pars_vertex,morphtarget_vertex:morphtarget_vertex,normal_fragment_begin:normal_fragment_begin,normal_fragment_maps:normal_fragment_maps,normalmap_pars_fragment:normalmap_pars_fragment,packing:packing,premultiplied_alpha_fragment:premultiplied_alpha_fragment,project_vertex:project_vertex,dithering_fragment:dithering_fragment,dithering_pars_fragment:dithering_pars_fragment,roughnessmap_fragment:roughnessmap_fragment,roughnessmap_pars_fragment:roughnessmap_pars_fragment,shadowmap_pars_fragment:shadowmap_pars_fragment,shadowmap_pars_vertex:shadowmap_pars_vertex,shadowmap_vertex:shadowmap_vertex,shadowmask_pars_fragment:shadowmask_pars_fragment,skinbase_vertex:skinbase_vertex,skinning_pars_vertex:skinning_pars_vertex,skinning_vertex:skinning_vertex,skinnormal_vertex:skinnormal_vertex,specularmap_fragment:specularmap_fragment,specularmap_pars_fragment:specularmap_pars_fragment,tonemapping_fragment:tonemapping_fragment,tonemapping_pars_fragment:tonemapping_pars_fragment,uv_pars_fragment:uv_pars_fragment,uv_pars_vertex:uv_pars_vertex,uv_vertex:uv_vertex,uv2_pars_fragment:uv2_pars_fragment,uv2_pars_vertex:uv2_pars_vertex,uv2_vertex:uv2_vertex,worldpos_vertex:worldpos_vertex,background_frag:background_frag,background_vert:background_vert,cube_frag:cube_frag,cube_vert:cube_vert,depth_frag:depth_frag,depth_vert:depth_vert,distanceRGBA_frag:distanceRGBA_frag,distanceRGBA_vert:distanceRGBA_vert,equirect_frag:equirect_frag,equirect_vert:equirect_vert,linedashed_frag:linedashed_frag,linedashed_vert:linedashed_vert,meshbasic_frag:meshbasic_frag,meshbasic_vert:meshbasic_vert,meshlambert_frag:meshlambert_frag,meshlambert_vert:meshlambert_vert,meshmatcap_frag:meshmatcap_frag,meshmatcap_vert:meshmatcap_vert,meshphong_frag:meshphong_frag,meshphong_vert:meshphong_vert,meshphysical_frag:meshphysical_frag,meshphysical_vert:meshphysical_vert,normal_frag:normal_frag,normal_vert:normal_vert,points_frag:points_frag,points_vert:points_vert,shadow_frag:shadow_frag,shadow_vert:shadow_vert,sprite_frag:sprite_frag,sprite_vert:sprite_vert};/**\n\t * Uniform Utilities\n\t */function cloneUniforms(src){var dst={};for(var u in src){dst[u]={};for(var p in src[u]){var property=src[u][p];if(property&&(property.isColor||property.isMatrix3||property.isMatrix4||property.isVector2||property.isVector3||property.isVector4||property.isTexture)){dst[u][p]=property.clone();}else if(Array.isArray(property)){dst[u][p]=property.slice();}else{dst[u][p]=property;}}}return dst;}function mergeUniforms(uniforms){var merged={};for(var u=0;u<uniforms.length;u++){var tmp=cloneUniforms(uniforms[u]);for(var p in tmp){merged[p]=tmp[p];}}return merged;}// Legacy\nvar UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */var ColorKeywords={'aliceblue':0xF0F8FF,'antiquewhite':0xFAEBD7,'aqua':0x00FFFF,'aquamarine':0x7FFFD4,'azure':0xF0FFFF,'beige':0xF5F5DC,'bisque':0xFFE4C4,'black':0x000000,'blanchedalmond':0xFFEBCD,'blue':0x0000FF,'blueviolet':0x8A2BE2,'brown':0xA52A2A,'burlywood':0xDEB887,'cadetblue':0x5F9EA0,'chartreuse':0x7FFF00,'chocolate':0xD2691E,'coral':0xFF7F50,'cornflowerblue':0x6495ED,'cornsilk':0xFFF8DC,'crimson':0xDC143C,'cyan':0x00FFFF,'darkblue':0x00008B,'darkcyan':0x008B8B,'darkgoldenrod':0xB8860B,'darkgray':0xA9A9A9,'darkgreen':0x006400,'darkgrey':0xA9A9A9,'darkkhaki':0xBDB76B,'darkmagenta':0x8B008B,'darkolivegreen':0x556B2F,'darkorange':0xFF8C00,'darkorchid':0x9932CC,'darkred':0x8B0000,'darksalmon':0xE9967A,'darkseagreen':0x8FBC8F,'darkslateblue':0x483D8B,'darkslategray':0x2F4F4F,'darkslategrey':0x2F4F4F,'darkturquoise':0x00CED1,'darkviolet':0x9400D3,'deeppink':0xFF1493,'deepskyblue':0x00BFFF,'dimgray':0x696969,'dimgrey':0x696969,'dodgerblue':0x1E90FF,'firebrick':0xB22222,'floralwhite':0xFFFAF0,'forestgreen':0x228B22,'fuchsia':0xFF00FF,'gainsboro':0xDCDCDC,'ghostwhite':0xF8F8FF,'gold':0xFFD700,'goldenrod':0xDAA520,'gray':0x808080,'green':0x008000,'greenyellow':0xADFF2F,'grey':0x808080,'honeydew':0xF0FFF0,'hotpink':0xFF69B4,'indianred':0xCD5C5C,'indigo':0x4B0082,'ivory':0xFFFFF0,'khaki':0xF0E68C,'lavender':0xE6E6FA,'lavenderblush':0xFFF0F5,'lawngreen':0x7CFC00,'lemonchiffon':0xFFFACD,'lightblue':0xADD8E6,'lightcoral':0xF08080,'lightcyan':0xE0FFFF,'lightgoldenrodyellow':0xFAFAD2,'lightgray':0xD3D3D3,'lightgreen':0x90EE90,'lightgrey':0xD3D3D3,'lightpink':0xFFB6C1,'lightsalmon':0xFFA07A,'lightseagreen':0x20B2AA,'lightskyblue':0x87CEFA,'lightslategray':0x778899,'lightslategrey':0x778899,'lightsteelblue':0xB0C4DE,'lightyellow':0xFFFFE0,'lime':0x00FF00,'limegreen':0x32CD32,'linen':0xFAF0E6,'magenta':0xFF00FF,'maroon':0x800000,'mediumaquamarine':0x66CDAA,'mediumblue':0x0000CD,'mediumorchid':0xBA55D3,'mediumpurple':0x9370DB,'mediumseagreen':0x3CB371,'mediumslateblue':0x7B68EE,'mediumspringgreen':0x00FA9A,'mediumturquoise':0x48D1CC,'mediumvioletred':0xC71585,'midnightblue':0x191970,'mintcream':0xF5FFFA,'mistyrose':0xFFE4E1,'moccasin':0xFFE4B5,'navajowhite':0xFFDEAD,'navy':0x000080,'oldlace':0xFDF5E6,'olive':0x808000,'olivedrab':0x6B8E23,'orange':0xFFA500,'orangered':0xFF4500,'orchid':0xDA70D6,'palegoldenrod':0xEEE8AA,'palegreen':0x98FB98,'paleturquoise':0xAFEEEE,'palevioletred':0xDB7093,'papayawhip':0xFFEFD5,'peachpuff':0xFFDAB9,'peru':0xCD853F,'pink':0xFFC0CB,'plum':0xDDA0DD,'powderblue':0xB0E0E6,'purple':0x800080,'rebeccapurple':0x663399,'red':0xFF0000,'rosybrown':0xBC8F8F,'royalblue':0x4169E1,'saddlebrown':0x8B4513,'salmon':0xFA8072,'sandybrown':0xF4A460,'seagreen':0x2E8B57,'seashell':0xFFF5EE,'sienna':0xA0522D,'silver':0xC0C0C0,'skyblue':0x87CEEB,'slateblue':0x6A5ACD,'slategray':0x708090,'slategrey':0x708090,'snow':0xFFFAFA,'springgreen':0x00FF7F,'steelblue':0x4682B4,'tan':0xD2B48C,'teal':0x008080,'thistle':0xD8BFD8,'tomato':0xFF6347,'turquoise':0x40E0D0,'violet':0xEE82EE,'wheat':0xF5DEB3,'white':0xFFFFFF,'whitesmoke':0xF5F5F5,'yellow':0xFFFF00,'yellowgreen':0x9ACD32};function Color(r,g,b){if(g===undefined&&b===undefined){// r is THREE.Color, hex or string\nreturn this.set(r);}return this.setRGB(r,g,b);}Object.assign(Color.prototype,{isColor:true,r:1,g:1,b:1,set:function(value){if(value&&value.isColor){this.copy(value);}else if(typeof value==='number'){this.setHex(value);}else if(typeof value==='string'){this.setStyle(value);}return this;},setScalar:function(scalar){this.r=scalar;this.g=scalar;this.b=scalar;return this;},setHex:function(hex){hex=Math.floor(hex);this.r=(hex>>16&255)/255;this.g=(hex>>8&255)/255;this.b=(hex&255)/255;return this;},setRGB:function(r,g,b){this.r=r;this.g=g;this.b=b;return this;},setHSL:function(){function hue2rgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*6*(2/3-t);return p;}return function setHSL(h,s,l){// h,s,l ranges are in 0.0 - 1.0\nh=_Math.euclideanModulo(h,1);s=_Math.clamp(s,0,1);l=_Math.clamp(l,0,1);if(s===0){this.r=this.g=this.b=l;}else{var p=l<=0.5?l*(1+s):l+s-l*s;var q=2*l-p;this.r=hue2rgb(q,p,h+1/3);this.g=hue2rgb(q,p,h);this.b=hue2rgb(q,p,h-1/3);}return this;};}(),setStyle:function(style){function handleAlpha(string){if(string===undefined)return;if(parseFloat(string)<1){console.warn('THREE.Color: Alpha component of '+style+' will be ignored.');}}var m;if(m=/^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(style)){// rgb / hsl\nvar color;var name=m[1];var components=m[2];switch(name){case'rgb':case'rgba':if(color=/^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)){// rgb(255,0,0) rgba(255,0,0,0.5)\nthis.r=Math.min(255,parseInt(color[1],10))/255;this.g=Math.min(255,parseInt(color[2],10))/255;this.b=Math.min(255,parseInt(color[3],10))/255;handleAlpha(color[5]);return this;}if(color=/^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)){// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\nthis.r=Math.min(100,parseInt(color[1],10))/100;this.g=Math.min(100,parseInt(color[2],10))/100;this.b=Math.min(100,parseInt(color[3],10))/100;handleAlpha(color[5]);return this;}break;case'hsl':case'hsla':if(color=/^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)){// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\nvar h=parseFloat(color[1])/360;var s=parseInt(color[2],10)/100;var l=parseInt(color[3],10)/100;handleAlpha(color[5]);return this.setHSL(h,s,l);}break;}}else if(m=/^\\#([A-Fa-f0-9]+)$/.exec(style)){// hex color\nvar hex=m[1];var size=hex.length;if(size===3){// #ff0\nthis.r=parseInt(hex.charAt(0)+hex.charAt(0),16)/255;this.g=parseInt(hex.charAt(1)+hex.charAt(1),16)/255;this.b=parseInt(hex.charAt(2)+hex.charAt(2),16)/255;return this;}else if(size===6){// #ff0000\nthis.r=parseInt(hex.charAt(0)+hex.charAt(1),16)/255;this.g=parseInt(hex.charAt(2)+hex.charAt(3),16)/255;this.b=parseInt(hex.charAt(4)+hex.charAt(5),16)/255;return this;}}if(style&&style.length>0){// color keywords\nvar hex=ColorKeywords[style];if(hex!==undefined){// red\nthis.setHex(hex);}else{// unknown color\nconsole.warn('THREE.Color: Unknown color '+style);}}return this;},clone:function(){return new this.constructor(this.r,this.g,this.b);},copy:function(color){this.r=color.r;this.g=color.g;this.b=color.b;return this;},copyGammaToLinear:function(color,gammaFactor){if(gammaFactor===undefined)gammaFactor=2.0;this.r=Math.pow(color.r,gammaFactor);this.g=Math.pow(color.g,gammaFactor);this.b=Math.pow(color.b,gammaFactor);return this;},copyLinearToGamma:function(color,gammaFactor){if(gammaFactor===undefined)gammaFactor=2.0;var safeInverse=gammaFactor>0?1.0/gammaFactor:1.0;this.r=Math.pow(color.r,safeInverse);this.g=Math.pow(color.g,safeInverse);this.b=Math.pow(color.b,safeInverse);return this;},convertGammaToLinear:function(gammaFactor){this.copyGammaToLinear(this,gammaFactor);return this;},convertLinearToGamma:function(gammaFactor){this.copyLinearToGamma(this,gammaFactor);return this;},copySRGBToLinear:function(){function SRGBToLinear(c){return c<0.04045?c*0.0773993808:Math.pow(c*0.9478672986+0.0521327014,2.4);}return function copySRGBToLinear(color){this.r=SRGBToLinear(color.r);this.g=SRGBToLinear(color.g);this.b=SRGBToLinear(color.b);return this;};}(),copyLinearToSRGB:function(){function LinearToSRGB(c){return c<0.0031308?c*12.92:1.055*Math.pow(c,0.41666)-0.055;}return function copyLinearToSRGB(color){this.r=LinearToSRGB(color.r);this.g=LinearToSRGB(color.g);this.b=LinearToSRGB(color.b);return this;};}(),convertSRGBToLinear:function(){this.copySRGBToLinear(this);return this;},convertLinearToSRGB:function(){this.copyLinearToSRGB(this);return this;},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0;},getHexString:function(){return('000000'+this.getHex().toString(16)).slice(-6);},getHSL:function(target){// h,s,l ranges are in 0.0 - 1.0\nif(target===undefined){console.warn('THREE.Color: .getHSL() target is now required');target={h:0,s:0,l:0};}var r=this.r,g=this.g,b=this.b;var max=Math.max(r,g,b);var min=Math.min(r,g,b);var hue,saturation;var lightness=(min+max)/2.0;if(min===max){hue=0;saturation=0;}else{var delta=max-min;saturation=lightness<=0.5?delta/(max+min):delta/(2-max-min);switch(max){case r:hue=(g-b)/delta+(g<b?6:0);break;case g:hue=(b-r)/delta+2;break;case b:hue=(r-g)/delta+4;break;}hue/=6;}target.h=hue;target.s=saturation;target.l=lightness;return target;},getStyle:function(){return'rgb('+(this.r*255|0)+','+(this.g*255|0)+','+(this.b*255|0)+')';},offsetHSL:function(){var hsl={};return function(h,s,l){this.getHSL(hsl);hsl.h+=h;hsl.s+=s;hsl.l+=l;this.setHSL(hsl.h,hsl.s,hsl.l);return this;};}(),add:function(color){this.r+=color.r;this.g+=color.g;this.b+=color.b;return this;},addColors:function(color1,color2){this.r=color1.r+color2.r;this.g=color1.g+color2.g;this.b=color1.b+color2.b;return this;},addScalar:function(s){this.r+=s;this.g+=s;this.b+=s;return this;},sub:function(color){this.r=Math.max(0,this.r-color.r);this.g=Math.max(0,this.g-color.g);this.b=Math.max(0,this.b-color.b);return this;},multiply:function(color){this.r*=color.r;this.g*=color.g;this.b*=color.b;return this;},multiplyScalar:function(s){this.r*=s;this.g*=s;this.b*=s;return this;},lerp:function(color,alpha){this.r+=(color.r-this.r)*alpha;this.g+=(color.g-this.g)*alpha;this.b+=(color.b-this.b)*alpha;return this;},lerpHSL:function(){var hslA={h:0,s:0,l:0};var hslB={h:0,s:0,l:0};return function lerpHSL(color,alpha){this.getHSL(hslA);color.getHSL(hslB);var h=_Math.lerp(hslA.h,hslB.h,alpha);var s=_Math.lerp(hslA.s,hslB.s,alpha);var l=_Math.lerp(hslA.l,hslB.l,alpha);this.setHSL(h,s,l);return this;};}(),equals:function(c){return c.r===this.r&&c.g===this.g&&c.b===this.b;},fromArray:function(array,offset){if(offset===undefined)offset=0;this.r=array[offset];this.g=array[offset+1];this.b=array[offset+2];return this;},toArray:function(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;array[offset]=this.r;array[offset+1]=this.g;array[offset+2]=this.b;return array;},toJSON:function(){return this.getHex();}});/**\n\t * Uniforms library for shared webgl shaders\n\t */var UniformsLib={common:{diffuse:{value:new Color(0xeeeeee)},opacity:{value:1.0},map:{value:null},uvTransform:{value:new Matrix3()},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1.0},refractionRatio:{value:0.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:0.00025},fogNear:{value:1},fogFar:{value:2000},fogColor:{value:new Color(0xffffff)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\nrectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new Color(0xeeeeee)},opacity:{value:1.0},size:{value:1.0},scale:{value:1.0},map:{value:null},uvTransform:{value:new Matrix3()}},sprite:{diffuse:{value:new Color(0xeeeeee)},opacity:{value:1.0},center:{value:new Vector2(0.5,0.5)},rotation:{value:0.0},map:{value:null},uvTransform:{value:new Matrix3()}}};/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */var ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)},specular:{value:new Color(0x111111)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)},roughness:{value:0.5},metalness:{value:0.5},envMapIntensity:{value:1// temporary\n}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1.0}}]),vertexShader:ShaderChunk.normal_vert,fragmentShader:ShaderChunk.normal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3()},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1.0}},vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3()},nearDistance:{value:1},farDistance:{value:1000}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0x00000)},opacity:{value:1.0}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function WebGLAnimation(){var context=null;var isAnimating=false;var animationLoop=null;function onAnimationFrame(time,frame){if(isAnimating===false)return;animationLoop(time,frame);context.requestAnimationFrame(onAnimationFrame);}return{start:function(){if(isAnimating===true)return;if(animationLoop===null)return;context.requestAnimationFrame(onAnimationFrame);isAnimating=true;},stop:function(){isAnimating=false;},setAnimationLoop:function(callback){animationLoop=callback;},setContext:function(value){context=value;}};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function WebGLAttributes(gl){var buffers=new WeakMap();function createBuffer(attribute,bufferType){var array=attribute.array;var usage=attribute.dynamic?35048:35044;var buffer=gl.createBuffer();gl.bindBuffer(bufferType,buffer);gl.bufferData(bufferType,array,usage);attribute.onUploadCallback();var type=5126;if(array instanceof Float32Array){type=5126;}else if(array instanceof Float64Array){console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');}else if(array instanceof Uint16Array){type=5123;}else if(array instanceof Int16Array){type=5122;}else if(array instanceof Uint32Array){type=5125;}else if(array instanceof Int32Array){type=5124;}else if(array instanceof Int8Array){type=5120;}else if(array instanceof Uint8Array){type=5121;}return{buffer:buffer,type:type,bytesPerElement:array.BYTES_PER_ELEMENT,version:attribute.version};}function updateBuffer(buffer,attribute,bufferType){var array=attribute.array;var updateRange=attribute.updateRange;gl.bindBuffer(bufferType,buffer);if(attribute.dynamic===false){gl.bufferData(bufferType,array,35044);}else if(updateRange.count===-1){// Not using update ranges\ngl.bufferSubData(bufferType,0,array);}else if(updateRange.count===0){console.error('THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.');}else{gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array.subarray(updateRange.offset,updateRange.offset+updateRange.count));updateRange.count=-1;// reset range\n}}//\nfunction get(attribute){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;return buffers.get(attribute);}function remove(attribute){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;var data=buffers.get(attribute);if(data){gl.deleteBuffer(data.buffer);buffers.delete(attribute);}}function update(attribute,bufferType){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;var data=buffers.get(attribute);if(data===undefined){buffers.set(attribute,createBuffer(attribute,bufferType));}else if(data.version<attribute.version){updateBuffer(data.buffer,attribute,bufferType);data.version=attribute.version;}}return{get:get,remove:remove,update:update};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */function Face3(a,b,c,normal,color,materialIndex){this.a=a;this.b=b;this.c=c;this.normal=normal&&normal.isVector3?normal:new Vector3();this.vertexNormals=Array.isArray(normal)?normal:[];this.color=color&&color.isColor?color:new Color();this.vertexColors=Array.isArray(color)?color:[];this.materialIndex=materialIndex!==undefined?materialIndex:0;}Object.assign(Face3.prototype,{clone:function(){return new this.constructor().copy(this);},copy:function(source){this.a=source.a;this.b=source.b;this.c=source.c;this.normal.copy(source.normal);this.color.copy(source.color);this.materialIndex=source.materialIndex;for(var i=0,il=source.vertexNormals.length;i<il;i++){this.vertexNormals[i]=source.vertexNormals[i].clone();}for(var i=0,il=source.vertexColors.length;i<il;i++){this.vertexColors[i]=source.vertexColors[i].clone();}return this;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */function Euler(x,y,z,order){this._x=x||0;this._y=y||0;this._z=z||0;this._order=order||Euler.DefaultOrder;}Euler.RotationOrders=['XYZ','YZX','ZXY','XZY','YXZ','ZYX'];Euler.DefaultOrder='XYZ';Object.defineProperties(Euler.prototype,{x:{get:function(){return this._x;},set:function(value){this._x=value;this.onChangeCallback();}},y:{get:function(){return this._y;},set:function(value){this._y=value;this.onChangeCallback();}},z:{get:function(){return this._z;},set:function(value){this._z=value;this.onChangeCallback();}},order:{get:function(){return this._order;},set:function(value){this._order=value;this.onChangeCallback();}}});Object.assign(Euler.prototype,{isEuler:true,set:function(x,y,z,order){this._x=x;this._y=y;this._z=z;this._order=order||this._order;this.onChangeCallback();return this;},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order);},copy:function(euler){this._x=euler._x;this._y=euler._y;this._z=euler._z;this._order=euler._order;this.onChangeCallback();return this;},setFromRotationMatrix:function(m,order,update){var clamp=_Math.clamp;// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nvar te=m.elements;var m11=te[0],m12=te[4],m13=te[8];var m21=te[1],m22=te[5],m23=te[9];var m31=te[2],m32=te[6],m33=te[10];order=order||this._order;if(order==='XYZ'){this._y=Math.asin(clamp(m13,-1,1));if(Math.abs(m13)<0.99999){this._x=Math.atan2(-m23,m33);this._z=Math.atan2(-m12,m11);}else{this._x=Math.atan2(m32,m22);this._z=0;}}else if(order==='YXZ'){this._x=Math.asin(-clamp(m23,-1,1));if(Math.abs(m23)<0.99999){this._y=Math.atan2(m13,m33);this._z=Math.atan2(m21,m22);}else{this._y=Math.atan2(-m31,m11);this._z=0;}}else if(order==='ZXY'){this._x=Math.asin(clamp(m32,-1,1));if(Math.abs(m32)<0.99999){this._y=Math.atan2(-m31,m33);this._z=Math.atan2(-m12,m22);}else{this._y=0;this._z=Math.atan2(m21,m11);}}else if(order==='ZYX'){this._y=Math.asin(-clamp(m31,-1,1));if(Math.abs(m31)<0.99999){this._x=Math.atan2(m32,m33);this._z=Math.atan2(m21,m11);}else{this._x=0;this._z=Math.atan2(-m12,m22);}}else if(order==='YZX'){this._z=Math.asin(clamp(m21,-1,1));if(Math.abs(m21)<0.99999){this._x=Math.atan2(-m23,m22);this._y=Math.atan2(-m31,m11);}else{this._x=0;this._y=Math.atan2(m13,m33);}}else if(order==='XZY'){this._z=Math.asin(-clamp(m12,-1,1));if(Math.abs(m12)<0.99999){this._x=Math.atan2(m32,m22);this._y=Math.atan2(m13,m11);}else{this._x=Math.atan2(-m23,m33);this._y=0;}}else{console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: '+order);}this._order=order;if(update!==false)this.onChangeCallback();return this;},setFromQuaternion:function(){var matrix=new Matrix4();return function setFromQuaternion(q,order,update){matrix.makeRotationFromQuaternion(q);return this.setFromRotationMatrix(matrix,order,update);};}(),setFromVector3:function(v,order){return this.set(v.x,v.y,v.z,order||this._order);},reorder:function(){// WARNING: this discards revolution information -bhouston\nvar q=new Quaternion();return function reorder(newOrder){q.setFromEuler(this);return this.setFromQuaternion(q,newOrder);};}(),equals:function(euler){return euler._x===this._x&&euler._y===this._y&&euler._z===this._z&&euler._order===this._order;},fromArray:function(array){this._x=array[0];this._y=array[1];this._z=array[2];if(array[3]!==undefined)this._order=array[3];this.onChangeCallback();return this;},toArray:function(array,offset){if(array===undefined)array=[];if(offset===undefined)offset=0;array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._order;return array;},toVector3:function(optionalResult){if(optionalResult){return optionalResult.set(this._x,this._y,this._z);}else{return new Vector3(this._x,this._y,this._z);}},onChange:function(callback){this.onChangeCallback=callback;return this;},onChangeCallback:function(){}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function Layers(){this.mask=1|0;}Object.assign(Layers.prototype,{set:function(channel){this.mask=1<<channel|0;},enable:function(channel){this.mask|=1<<channel|0;},toggle:function(channel){this.mask^=1<<channel|0;},disable:function(channel){this.mask&=~(1<<channel|0);},test:function(layers){return(this.mask&layers.mask)!==0;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */var object3DId=0;function Object3D(){Object.defineProperty(this,'id',{value:object3DId++});this.uuid=_Math.generateUUID();this.name='';this.type='Object3D';this.parent=null;this.children=[];this.up=Object3D.DefaultUp.clone();var position=new Vector3();var rotation=new Euler();var quaternion=new Quaternion();var scale=new Vector3(1,1,1);function onRotationChange(){quaternion.setFromEuler(rotation,false);}function onQuaternionChange(){rotation.setFromQuaternion(quaternion,undefined,false);}rotation.onChange(onRotationChange);quaternion.onChange(onQuaternionChange);Object.defineProperties(this,{position:{configurable:true,enumerable:true,value:position},rotation:{configurable:true,enumerable:true,value:rotation},quaternion:{configurable:true,enumerable:true,value:quaternion},scale:{configurable:true,enumerable:true,value:scale},modelViewMatrix:{value:new Matrix4()},normalMatrix:{value:new Matrix3()}});this.matrix=new Matrix4();this.matrixWorld=new Matrix4();this.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate;this.matrixWorldNeedsUpdate=false;this.layers=new Layers();this.visible=true;this.castShadow=false;this.receiveShadow=false;this.frustumCulled=true;this.renderOrder=0;this.userData={};}Object3D.DefaultUp=new Vector3(0,1,0);Object3D.DefaultMatrixAutoUpdate=true;Object3D.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Object3D,isObject3D:true,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix:function(matrix){this.matrix.multiplyMatrices(matrix,this.matrix);this.matrix.decompose(this.position,this.quaternion,this.scale);},applyQuaternion:function(q){this.quaternion.premultiply(q);return this;},setRotationFromAxisAngle:function(axis,angle){// assumes axis is normalized\nthis.quaternion.setFromAxisAngle(axis,angle);},setRotationFromEuler:function(euler){this.quaternion.setFromEuler(euler,true);},setRotationFromMatrix:function(m){// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nthis.quaternion.setFromRotationMatrix(m);},setRotationFromQuaternion:function(q){// assumes q is normalized\nthis.quaternion.copy(q);},rotateOnAxis:function(){// rotate object on axis in object space\n// axis is assumed to be normalized\nvar q1=new Quaternion();return function rotateOnAxis(axis,angle){q1.setFromAxisAngle(axis,angle);this.quaternion.multiply(q1);return this;};}(),rotateOnWorldAxis:function(){// rotate object on axis in world space\n// axis is assumed to be normalized\n// method assumes no rotated parent\nvar q1=new Quaternion();return function rotateOnWorldAxis(axis,angle){q1.setFromAxisAngle(axis,angle);this.quaternion.premultiply(q1);return this;};}(),rotateX:function(){var v1=new Vector3(1,0,0);return function rotateX(angle){return this.rotateOnAxis(v1,angle);};}(),rotateY:function(){var v1=new Vector3(0,1,0);return function rotateY(angle){return this.rotateOnAxis(v1,angle);};}(),rotateZ:function(){var v1=new Vector3(0,0,1);return function rotateZ(angle){return this.rotateOnAxis(v1,angle);};}(),translateOnAxis:function(){// translate object by distance along axis in object space\n// axis is assumed to be normalized\nvar v1=new Vector3();return function translateOnAxis(axis,distance){v1.copy(axis).applyQuaternion(this.quaternion);this.position.add(v1.multiplyScalar(distance));return this;};}(),translateX:function(){var v1=new Vector3(1,0,0);return function translateX(distance){return this.translateOnAxis(v1,distance);};}(),translateY:function(){var v1=new Vector3(0,1,0);return function translateY(distance){return this.translateOnAxis(v1,distance);};}(),translateZ:function(){var v1=new Vector3(0,0,1);return function translateZ(distance){return this.translateOnAxis(v1,distance);};}(),localToWorld:function(vector){return vector.applyMatrix4(this.matrixWorld);},worldToLocal:function(){var m1=new Matrix4();return function worldToLocal(vector){return vector.applyMatrix4(m1.getInverse(this.matrixWorld));};}(),lookAt:function(){// This method does not support objects having non-uniformly-scaled parent(s)\nvar q1=new Quaternion();var m1=new Matrix4();var target=new Vector3();var position=new Vector3();return function lookAt(x,y,z){if(x.isVector3){target.copy(x);}else{target.set(x,y,z);}var parent=this.parent;this.updateWorldMatrix(true,false);position.setFromMatrixPosition(this.matrixWorld);if(this.isCamera||this.isLight){m1.lookAt(position,target,this.up);}else{m1.lookAt(target,position,this.up);}this.quaternion.setFromRotationMatrix(m1);if(parent){m1.extractRotation(parent.matrixWorld);q1.setFromRotationMatrix(m1);this.quaternion.premultiply(q1.inverse());}};}(),add:function(object){if(arguments.length>1){for(var i=0;i<arguments.length;i++){this.add(arguments[i]);}return this;}if(object===this){console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\",object);return this;}if(object&&object.isObject3D){if(object.parent!==null){object.parent.remove(object);}object.parent=this;object.dispatchEvent({type:'added'});this.children.push(object);}else{console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\",object);}return this;},remove:function(object){if(arguments.length>1){for(var i=0;i<arguments.length;i++){this.remove(arguments[i]);}return this;}var index=this.children.indexOf(object);if(index!==-1){object.parent=null;object.dispatchEvent({type:'removed'});this.children.splice(index,1);}return this;},getObjectById:function(id){return this.getObjectByProperty('id',id);},getObjectByName:function(name){return this.getObjectByProperty('name',name);},getObjectByProperty:function(name,value){if(this[name]===value)return this;for(var i=0,l=this.children.length;i<l;i++){var child=this.children[i];var object=child.getObjectByProperty(name,value);if(object!==undefined){return object;}}return undefined;},getWorldPosition:function(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldPosition() target is now required');target=new Vector3();}this.updateMatrixWorld(true);return target.setFromMatrixPosition(this.matrixWorld);},getWorldQuaternion:function(){var position=new Vector3();var scale=new Vector3();return function getWorldQuaternion(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldQuaternion() target is now required');target=new Quaternion();}this.updateMatrixWorld(true);this.matrixWorld.decompose(position,target,scale);return target;};}(),getWorldScale:function(){var position=new Vector3();var quaternion=new Quaternion();return function getWorldScale(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldScale() target is now required');target=new Vector3();}this.updateMatrixWorld(true);this.matrixWorld.decompose(position,quaternion,target);return target;};}(),getWorldDirection:function(target){if(target===undefined){console.warn('THREE.Object3D: .getWorldDirection() target is now required');target=new Vector3();}this.updateMatrixWorld(true);var e=this.matrixWorld.elements;return target.set(e[8],e[9],e[10]).normalize();},raycast:function(){},traverse:function(callback){callback(this);var children=this.children;for(var i=0,l=children.length;i<l;i++){children[i].traverse(callback);}},traverseVisible:function(callback){if(this.visible===false)return;callback(this);var children=this.children;for(var i=0,l=children.length;i<l;i++){children[i].traverseVisible(callback);}},traverseAncestors:function(callback){var parent=this.parent;if(parent!==null){callback(parent);parent.traverseAncestors(callback);}},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true;},updateMatrixWorld:function(force){if(this.matrixAutoUpdate)this.updateMatrix();if(this.matrixWorldNeedsUpdate||force){if(this.parent===null){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}this.matrixWorldNeedsUpdate=false;force=true;}// update children\nvar children=this.children;for(var i=0,l=children.length;i<l;i++){children[i].updateMatrixWorld(force);}},updateWorldMatrix:function(updateParents,updateChildren){var parent=this.parent;if(updateParents===true&&parent!==null){parent.updateWorldMatrix(true,false);}if(this.matrixAutoUpdate)this.updateMatrix();if(this.parent===null){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}// update children\nif(updateChildren===true){var children=this.children;for(var i=0,l=children.length;i<l;i++){children[i].updateWorldMatrix(false,true);}}},toJSON:function(meta){// meta is a string when called from JSON.stringify\nvar isRootObject=meta===undefined||typeof meta==='string';var output={};// meta is a hash used to collect geometries, materials.\n// not providing it implies that this is the root object\n// being serialized.\nif(isRootObject){// initialize meta obj\nmeta={geometries:{},materials:{},textures:{},images:{},shapes:{}};output.metadata={version:4.5,type:'Object',generator:'Object3D.toJSON'};}// standard Object3D serialization\nvar object={};object.uuid=this.uuid;object.type=this.type;if(this.name!=='')object.name=this.name;if(this.castShadow===true)object.castShadow=true;if(this.receiveShadow===true)object.receiveShadow=true;if(this.visible===false)object.visible=false;if(this.frustumCulled===false)object.frustumCulled=false;if(this.renderOrder!==0)object.renderOrder=this.renderOrder;if(JSON.stringify(this.userData)!=='{}')object.userData=this.userData;object.layers=this.layers.mask;object.matrix=this.matrix.toArray();if(this.matrixAutoUpdate===false)object.matrixAutoUpdate=false;// object specific properties\nif(this.isMesh&&this.drawMode!==TrianglesDrawMode)object.drawMode=this.drawMode;//\nfunction serialize(library,element){if(library[element.uuid]===undefined){library[element.uuid]=element.toJSON(meta);}return element.uuid;}if(this.isMesh||this.isLine||this.isPoints){object.geometry=serialize(meta.geometries,this.geometry);var parameters=this.geometry.parameters;if(parameters!==undefined&&parameters.shapes!==undefined){var shapes=parameters.shapes;if(Array.isArray(shapes)){for(var i=0,l=shapes.length;i<l;i++){var shape=shapes[i];serialize(meta.shapes,shape);}}else{serialize(meta.shapes,shapes);}}}if(this.material!==undefined){if(Array.isArray(this.material)){var uuids=[];for(var i=0,l=this.material.length;i<l;i++){uuids.push(serialize(meta.materials,this.material[i]));}object.material=uuids;}else{object.material=serialize(meta.materials,this.material);}}//\nif(this.children.length>0){object.children=[];for(var i=0;i<this.children.length;i++){object.children.push(this.children[i].toJSON(meta).object);}}if(isRootObject){var geometries=extractFromCache(meta.geometries);var materials=extractFromCache(meta.materials);var textures=extractFromCache(meta.textures);var images=extractFromCache(meta.images);var shapes=extractFromCache(meta.shapes);if(geometries.length>0)output.geometries=geometries;if(materials.length>0)output.materials=materials;if(textures.length>0)output.textures=textures;if(images.length>0)output.images=images;if(shapes.length>0)output.shapes=shapes;}output.object=object;return output;// extract data from the cache hash\n// remove metadata on each item\n// and return as array\nfunction extractFromCache(cache){var values=[];for(var key in cache){var data=cache[key];delete data.metadata;values.push(data);}return values;}},clone:function(recursive){return new this.constructor().copy(this,recursive);},copy:function(source,recursive){if(recursive===undefined)recursive=true;this.name=source.name;this.up.copy(source.up);this.position.copy(source.position);this.quaternion.copy(source.quaternion);this.scale.copy(source.scale);this.matrix.copy(source.matrix);this.matrixWorld.copy(source.matrixWorld);this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate;this.layers.mask=source.layers.mask;this.visible=source.visible;this.castShadow=source.castShadow;this.receiveShadow=source.receiveShadow;this.frustumCulled=source.frustumCulled;this.renderOrder=source.renderOrder;this.userData=JSON.parse(JSON.stringify(source.userData));if(recursive===true){for(var i=0;i<source.children.length;i++){var child=source.children[i];this.add(child.clone());}}return this;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */var geometryId=0;// Geometry uses even numbers as Id\nfunction Geometry(){Object.defineProperty(this,'id',{value:geometryId+=2});this.uuid=_Math.generateUUID();this.name='';this.type='Geometry';this.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;// update flags\nthis.elementsNeedUpdate=false;this.verticesNeedUpdate=false;this.uvsNeedUpdate=false;this.normalsNeedUpdate=false;this.colorsNeedUpdate=false;this.lineDistancesNeedUpdate=false;this.groupsNeedUpdate=false;}Geometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Geometry,isGeometry:true,applyMatrix:function(matrix){var normalMatrix=new Matrix3().getNormalMatrix(matrix);for(var i=0,il=this.vertices.length;i<il;i++){var vertex=this.vertices[i];vertex.applyMatrix4(matrix);}for(var i=0,il=this.faces.length;i<il;i++){var face=this.faces[i];face.normal.applyMatrix3(normalMatrix).normalize();for(var j=0,jl=face.vertexNormals.length;j<jl;j++){face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();}}if(this.boundingBox!==null){this.computeBoundingBox();}if(this.boundingSphere!==null){this.computeBoundingSphere();}this.verticesNeedUpdate=true;this.normalsNeedUpdate=true;return this;},rotateX:function(){// rotate geometry around world x-axis\nvar m1=new Matrix4();return function rotateX(angle){m1.makeRotationX(angle);this.applyMatrix(m1);return this;};}(),rotateY:function(){// rotate geometry around world y-axis\nvar m1=new Matrix4();return function rotateY(angle){m1.makeRotationY(angle);this.applyMatrix(m1);return this;};}(),rotateZ:function(){// rotate geometry around world z-axis\nvar m1=new Matrix4();return function rotateZ(angle){m1.makeRotationZ(angle);this.applyMatrix(m1);return this;};}(),translate:function(){// translate geometry\nvar m1=new Matrix4();return function translate(x,y,z){m1.makeTranslation(x,y,z);this.applyMatrix(m1);return this;};}(),scale:function(){// scale geometry\nvar m1=new Matrix4();return function scale(x,y,z){m1.makeScale(x,y,z);this.applyMatrix(m1);return this;};}(),lookAt:function(){var obj=new Object3D();return function lookAt(vector){obj.lookAt(vector);obj.updateMatrix();this.applyMatrix(obj.matrix);};}(),fromBufferGeometry:function(geometry){var scope=this;var indices=geometry.index!==null?geometry.index.array:undefined;var attributes=geometry.attributes;var positions=attributes.position.array;var normals=attributes.normal!==undefined?attributes.normal.array:undefined;var colors=attributes.color!==undefined?attributes.color.array:undefined;var uvs=attributes.uv!==undefined?attributes.uv.array:undefined;var uvs2=attributes.uv2!==undefined?attributes.uv2.array:undefined;if(uvs2!==undefined)this.faceVertexUvs[1]=[];for(var i=0,j=0;i<positions.length;i+=3,j+=2){scope.vertices.push(new Vector3().fromArray(positions,i));if(colors!==undefined){scope.colors.push(new Color().fromArray(colors,i));}}function addFace(a,b,c,materialIndex){var vertexColors=colors===undefined?[]:[scope.colors[a].clone(),scope.colors[b].clone(),scope.colors[c].clone()];var vertexNormals=normals===undefined?[]:[new Vector3().fromArray(normals,a*3),new Vector3().fromArray(normals,b*3),new Vector3().fromArray(normals,c*3)];var face=new Face3(a,b,c,vertexNormals,vertexColors,materialIndex);scope.faces.push(face);if(uvs!==undefined){scope.faceVertexUvs[0].push([new Vector2().fromArray(uvs,a*2),new Vector2().fromArray(uvs,b*2),new Vector2().fromArray(uvs,c*2)]);}if(uvs2!==undefined){scope.faceVertexUvs[1].push([new Vector2().fromArray(uvs2,a*2),new Vector2().fromArray(uvs2,b*2),new Vector2().fromArray(uvs2,c*2)]);}}var groups=geometry.groups;if(groups.length>0){for(var i=0;i<groups.length;i++){var group=groups[i];var start=group.start;var count=group.count;for(var j=start,jl=start+count;j<jl;j+=3){if(indices!==undefined){addFace(indices[j],indices[j+1],indices[j+2],group.materialIndex);}else{addFace(j,j+1,j+2,group.materialIndex);}}}}else{if(indices!==undefined){for(var i=0;i<indices.length;i+=3){addFace(indices[i],indices[i+1],indices[i+2]);}}else{for(var i=0;i<positions.length/3;i+=3){addFace(i,i+1,i+2);}}}this.computeFaceNormals();if(geometry.boundingBox!==null){this.boundingBox=geometry.boundingBox.clone();}if(geometry.boundingSphere!==null){this.boundingSphere=geometry.boundingSphere.clone();}return this;},center:function(){var offset=new Vector3();return function center(){this.computeBoundingBox();this.boundingBox.getCenter(offset).negate();this.translate(offset.x,offset.y,offset.z);return this;};}(),normalize:function(){this.computeBoundingSphere();var center=this.boundingSphere.center;var radius=this.boundingSphere.radius;var s=radius===0?1:1.0/radius;var matrix=new Matrix4();matrix.set(s,0,0,-s*center.x,0,s,0,-s*center.y,0,0,s,-s*center.z,0,0,0,1);this.applyMatrix(matrix);return this;},computeFaceNormals:function(){var cb=new Vector3(),ab=new Vector3();for(var f=0,fl=this.faces.length;f<fl;f++){var face=this.faces[f];var vA=this.vertices[face.a];var vB=this.vertices[face.b];var vC=this.vertices[face.c];cb.subVectors(vC,vB);ab.subVectors(vA,vB);cb.cross(ab);cb.normalize();face.normal.copy(cb);}},computeVertexNormals:function(areaWeighted){if(areaWeighted===undefined)areaWeighted=true;var v,vl,f,fl,face,vertices;vertices=new Array(this.vertices.length);for(v=0,vl=this.vertices.length;v<vl;v++){vertices[v]=new Vector3();}if(areaWeighted){// vertex normals weighted by triangle areas\n// http://www.iquilezles.org/www/articles/normals/normals.htm\nvar vA,vB,vC;var cb=new Vector3(),ab=new Vector3();for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];vA=this.vertices[face.a];vB=this.vertices[face.b];vC=this.vertices[face.c];cb.subVectors(vC,vB);ab.subVectors(vA,vB);cb.cross(ab);vertices[face.a].add(cb);vertices[face.b].add(cb);vertices[face.c].add(cb);}}else{this.computeFaceNormals();for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];vertices[face.a].add(face.normal);vertices[face.b].add(face.normal);vertices[face.c].add(face.normal);}}for(v=0,vl=this.vertices.length;v<vl;v++){vertices[v].normalize();}for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];var vertexNormals=face.vertexNormals;if(vertexNormals.length===3){vertexNormals[0].copy(vertices[face.a]);vertexNormals[1].copy(vertices[face.b]);vertexNormals[2].copy(vertices[face.c]);}else{vertexNormals[0]=vertices[face.a].clone();vertexNormals[1]=vertices[face.b].clone();vertexNormals[2]=vertices[face.c].clone();}}if(this.faces.length>0){this.normalsNeedUpdate=true;}},computeFlatVertexNormals:function(){var f,fl,face;this.computeFaceNormals();for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];var vertexNormals=face.vertexNormals;if(vertexNormals.length===3){vertexNormals[0].copy(face.normal);vertexNormals[1].copy(face.normal);vertexNormals[2].copy(face.normal);}else{vertexNormals[0]=face.normal.clone();vertexNormals[1]=face.normal.clone();vertexNormals[2]=face.normal.clone();}}if(this.faces.length>0){this.normalsNeedUpdate=true;}},computeMorphNormals:function(){var i,il,f,fl,face;// save original normals\n// - create temp variables on first access\n//   otherwise just copy (for faster repeated calls)\nfor(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];if(!face.__originalFaceNormal){face.__originalFaceNormal=face.normal.clone();}else{face.__originalFaceNormal.copy(face.normal);}if(!face.__originalVertexNormals)face.__originalVertexNormals=[];for(i=0,il=face.vertexNormals.length;i<il;i++){if(!face.__originalVertexNormals[i]){face.__originalVertexNormals[i]=face.vertexNormals[i].clone();}else{face.__originalVertexNormals[i].copy(face.vertexNormals[i]);}}}// use temp geometry to compute face and vertex normals for each morph\nvar tmpGeo=new Geometry();tmpGeo.faces=this.faces;for(i=0,il=this.morphTargets.length;i<il;i++){// create on first access\nif(!this.morphNormals[i]){this.morphNormals[i]={};this.morphNormals[i].faceNormals=[];this.morphNormals[i].vertexNormals=[];var dstNormalsFace=this.morphNormals[i].faceNormals;var dstNormalsVertex=this.morphNormals[i].vertexNormals;var faceNormal,vertexNormals;for(f=0,fl=this.faces.length;f<fl;f++){faceNormal=new Vector3();vertexNormals={a:new Vector3(),b:new Vector3(),c:new Vector3()};dstNormalsFace.push(faceNormal);dstNormalsVertex.push(vertexNormals);}}var morphNormals=this.morphNormals[i];// set vertices to morph target\ntmpGeo.vertices=this.morphTargets[i].vertices;// compute morph normals\ntmpGeo.computeFaceNormals();tmpGeo.computeVertexNormals();// store morph normals\nvar faceNormal,vertexNormals;for(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];faceNormal=morphNormals.faceNormals[f];vertexNormals=morphNormals.vertexNormals[f];faceNormal.copy(face.normal);vertexNormals.a.copy(face.vertexNormals[0]);vertexNormals.b.copy(face.vertexNormals[1]);vertexNormals.c.copy(face.vertexNormals[2]);}}// restore original normals\nfor(f=0,fl=this.faces.length;f<fl;f++){face=this.faces[f];face.normal=face.__originalFaceNormal;face.vertexNormals=face.__originalVertexNormals;}},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new Box3();}this.boundingBox.setFromPoints(this.vertices);},computeBoundingSphere:function(){if(this.boundingSphere===null){this.boundingSphere=new Sphere();}this.boundingSphere.setFromPoints(this.vertices);},merge:function(geometry,matrix,materialIndexOffset){if(!(geometry&&geometry.isGeometry)){console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.',geometry);return;}var normalMatrix,vertexOffset=this.vertices.length,vertices1=this.vertices,vertices2=geometry.vertices,faces1=this.faces,faces2=geometry.faces,uvs1=this.faceVertexUvs[0],uvs2=geometry.faceVertexUvs[0],colors1=this.colors,colors2=geometry.colors;if(materialIndexOffset===undefined)materialIndexOffset=0;if(matrix!==undefined){normalMatrix=new Matrix3().getNormalMatrix(matrix);}// vertices\nfor(var i=0,il=vertices2.length;i<il;i++){var vertex=vertices2[i];var vertexCopy=vertex.clone();if(matrix!==undefined)vertexCopy.applyMatrix4(matrix);vertices1.push(vertexCopy);}// colors\nfor(var i=0,il=colors2.length;i<il;i++){colors1.push(colors2[i].clone());}// faces\nfor(i=0,il=faces2.length;i<il;i++){var face=faces2[i],faceCopy,normal,color,faceVertexNormals=face.vertexNormals,faceVertexColors=face.vertexColors;faceCopy=new Face3(face.a+vertexOffset,face.b+vertexOffset,face.c+vertexOffset);faceCopy.normal.copy(face.normal);if(normalMatrix!==undefined){faceCopy.normal.applyMatrix3(normalMatrix).normalize();}for(var j=0,jl=faceVertexNormals.length;j<jl;j++){normal=faceVertexNormals[j].clone();if(normalMatrix!==undefined){normal.applyMatrix3(normalMatrix).normalize();}faceCopy.vertexNormals.push(normal);}faceCopy.color.copy(face.color);for(var j=0,jl=faceVertexColors.length;j<jl;j++){color=faceVertexColors[j];faceCopy.vertexColors.push(color.clone());}faceCopy.materialIndex=face.materialIndex+materialIndexOffset;faces1.push(faceCopy);}// uvs\nfor(i=0,il=uvs2.length;i<il;i++){var uv=uvs2[i],uvCopy=[];if(uv===undefined){continue;}for(var j=0,jl=uv.length;j<jl;j++){uvCopy.push(uv[j].clone());}uvs1.push(uvCopy);}},mergeMesh:function(mesh){if(!(mesh&&mesh.isMesh)){console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.',mesh);return;}if(mesh.matrixAutoUpdate)mesh.updateMatrix();this.merge(mesh.geometry,mesh.matrix);},/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */mergeVertices:function(){var verticesMap={};// Hashmap for looking up vertices by position coordinates (and making sure they are unique)\nvar unique=[],changes=[];var v,key;var precisionPoints=4;// number of decimal points, e.g. 4 for epsilon of 0.0001\nvar precision=Math.pow(10,precisionPoints);var i,il,face;var indices,j,jl;for(i=0,il=this.vertices.length;i<il;i++){v=this.vertices[i];key=Math.round(v.x*precision)+'_'+Math.round(v.y*precision)+'_'+Math.round(v.z*precision);if(verticesMap[key]===undefined){verticesMap[key]=i;unique.push(this.vertices[i]);changes[i]=unique.length-1;}else{//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\nchanges[i]=changes[verticesMap[key]];}}// if faces are completely degenerate after merging vertices, we\n// have to remove them from the geometry.\nvar faceIndicesToRemove=[];for(i=0,il=this.faces.length;i<il;i++){face=this.faces[i];face.a=changes[face.a];face.b=changes[face.b];face.c=changes[face.c];indices=[face.a,face.b,face.c];// if any duplicate vertices are found in a Face3\n// we have to remove the face as nothing can be saved\nfor(var n=0;n<3;n++){if(indices[n]===indices[(n+1)%3]){faceIndicesToRemove.push(i);break;}}}for(i=faceIndicesToRemove.length-1;i>=0;i--){var idx=faceIndicesToRemove[i];this.faces.splice(idx,1);for(j=0,jl=this.faceVertexUvs.length;j<jl;j++){this.faceVertexUvs[j].splice(idx,1);}}// Use unique set of vertices\nvar diff=this.vertices.length-unique.length;this.vertices=unique;return diff;},setFromPoints:function(points){this.vertices=[];for(var i=0,l=points.length;i<l;i++){var point=points[i];this.vertices.push(new Vector3(point.x,point.y,point.z||0));}return this;},sortFacesByMaterialIndex:function(){var faces=this.faces;var length=faces.length;// tag faces\nfor(var i=0;i<length;i++){faces[i]._id=i;}// sort faces\nfunction materialIndexSort(a,b){return a.materialIndex-b.materialIndex;}faces.sort(materialIndexSort);// sort uvs\nvar uvs1=this.faceVertexUvs[0];var uvs2=this.faceVertexUvs[1];var newUvs1,newUvs2;if(uvs1&&uvs1.length===length)newUvs1=[];if(uvs2&&uvs2.length===length)newUvs2=[];for(var i=0;i<length;i++){var id=faces[i]._id;if(newUvs1)newUvs1.push(uvs1[id]);if(newUvs2)newUvs2.push(uvs2[id]);}if(newUvs1)this.faceVertexUvs[0]=newUvs1;if(newUvs2)this.faceVertexUvs[1]=newUvs2;},toJSON:function(){var data={metadata:{version:4.5,type:'Geometry',generator:'Geometry.toJSON'}};// standard Geometry serialization\ndata.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(this.parameters!==undefined){var parameters=this.parameters;for(var key in parameters){if(parameters[key]!==undefined)data[key]=parameters[key];}return data;}var vertices=[];for(var i=0;i<this.vertices.length;i++){var vertex=this.vertices[i];vertices.push(vertex.x,vertex.y,vertex.z);}var faces=[];var normals=[];var normalsHash={};var colors=[];var colorsHash={};var uvs=[];var uvsHash={};for(var i=0;i<this.faces.length;i++){var face=this.faces[i];var hasMaterial=true;var hasFaceUv=false;// deprecated\nvar hasFaceVertexUv=this.faceVertexUvs[0][i]!==undefined;var hasFaceNormal=face.normal.length()>0;var hasFaceVertexNormal=face.vertexNormals.length>0;var hasFaceColor=face.color.r!==1||face.color.g!==1||face.color.b!==1;var hasFaceVertexColor=face.vertexColors.length>0;var faceType=0;faceType=setBit(faceType,0,0);// isQuad\nfaceType=setBit(faceType,1,hasMaterial);faceType=setBit(faceType,2,hasFaceUv);faceType=setBit(faceType,3,hasFaceVertexUv);faceType=setBit(faceType,4,hasFaceNormal);faceType=setBit(faceType,5,hasFaceVertexNormal);faceType=setBit(faceType,6,hasFaceColor);faceType=setBit(faceType,7,hasFaceVertexColor);faces.push(faceType);faces.push(face.a,face.b,face.c);faces.push(face.materialIndex);if(hasFaceVertexUv){var faceVertexUvs=this.faceVertexUvs[0][i];faces.push(getUvIndex(faceVertexUvs[0]),getUvIndex(faceVertexUvs[1]),getUvIndex(faceVertexUvs[2]));}if(hasFaceNormal){faces.push(getNormalIndex(face.normal));}if(hasFaceVertexNormal){var vertexNormals=face.vertexNormals;faces.push(getNormalIndex(vertexNormals[0]),getNormalIndex(vertexNormals[1]),getNormalIndex(vertexNormals[2]));}if(hasFaceColor){faces.push(getColorIndex(face.color));}if(hasFaceVertexColor){var vertexColors=face.vertexColors;faces.push(getColorIndex(vertexColors[0]),getColorIndex(vertexColors[1]),getColorIndex(vertexColors[2]));}}function setBit(value,position,enabled){return enabled?value|1<<position:value&~(1<<position);}function getNormalIndex(normal){var hash=normal.x.toString()+normal.y.toString()+normal.z.toString();if(normalsHash[hash]!==undefined){return normalsHash[hash];}normalsHash[hash]=normals.length/3;normals.push(normal.x,normal.y,normal.z);return normalsHash[hash];}function getColorIndex(color){var hash=color.r.toString()+color.g.toString()+color.b.toString();if(colorsHash[hash]!==undefined){return colorsHash[hash];}colorsHash[hash]=colors.length;colors.push(color.getHex());return colorsHash[hash];}function getUvIndex(uv){var hash=uv.x.toString()+uv.y.toString();if(uvsHash[hash]!==undefined){return uvsHash[hash];}uvsHash[hash]=uvs.length/2;uvs.push(uv.x,uv.y);return uvsHash[hash];}data.data={};data.data.vertices=vertices;data.data.normals=normals;if(colors.length>0)data.data.colors=colors;if(uvs.length>0)data.data.uvs=[uvs];// temporal backward compatibility\ndata.data.faces=faces;return data;},clone:function(){/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */return new Geometry().copy(this);},copy:function(source){var i,il,j,jl,k,kl;// reset\nthis.vertices=[];this.colors=[];this.faces=[];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingBox=null;this.boundingSphere=null;// name\nthis.name=source.name;// vertices\nvar vertices=source.vertices;for(i=0,il=vertices.length;i<il;i++){this.vertices.push(vertices[i].clone());}// colors\nvar colors=source.colors;for(i=0,il=colors.length;i<il;i++){this.colors.push(colors[i].clone());}// faces\nvar faces=source.faces;for(i=0,il=faces.length;i<il;i++){this.faces.push(faces[i].clone());}// face vertex uvs\nfor(i=0,il=source.faceVertexUvs.length;i<il;i++){var faceVertexUvs=source.faceVertexUvs[i];if(this.faceVertexUvs[i]===undefined){this.faceVertexUvs[i]=[];}for(j=0,jl=faceVertexUvs.length;j<jl;j++){var uvs=faceVertexUvs[j],uvsCopy=[];for(k=0,kl=uvs.length;k<kl;k++){var uv=uvs[k];uvsCopy.push(uv.clone());}this.faceVertexUvs[i].push(uvsCopy);}}// morph targets\nvar morphTargets=source.morphTargets;for(i=0,il=morphTargets.length;i<il;i++){var morphTarget={};morphTarget.name=morphTargets[i].name;// vertices\nif(morphTargets[i].vertices!==undefined){morphTarget.vertices=[];for(j=0,jl=morphTargets[i].vertices.length;j<jl;j++){morphTarget.vertices.push(morphTargets[i].vertices[j].clone());}}// normals\nif(morphTargets[i].normals!==undefined){morphTarget.normals=[];for(j=0,jl=morphTargets[i].normals.length;j<jl;j++){morphTarget.normals.push(morphTargets[i].normals[j].clone());}}this.morphTargets.push(morphTarget);}// morph normals\nvar morphNormals=source.morphNormals;for(i=0,il=morphNormals.length;i<il;i++){var morphNormal={};// vertex normals\nif(morphNormals[i].vertexNormals!==undefined){morphNormal.vertexNormals=[];for(j=0,jl=morphNormals[i].vertexNormals.length;j<jl;j++){var srcVertexNormal=morphNormals[i].vertexNormals[j];var destVertexNormal={};destVertexNormal.a=srcVertexNormal.a.clone();destVertexNormal.b=srcVertexNormal.b.clone();destVertexNormal.c=srcVertexNormal.c.clone();morphNormal.vertexNormals.push(destVertexNormal);}}// face normals\nif(morphNormals[i].faceNormals!==undefined){morphNormal.faceNormals=[];for(j=0,jl=morphNormals[i].faceNormals.length;j<jl;j++){morphNormal.faceNormals.push(morphNormals[i].faceNormals[j].clone());}}this.morphNormals.push(morphNormal);}// skin weights\nvar skinWeights=source.skinWeights;for(i=0,il=skinWeights.length;i<il;i++){this.skinWeights.push(skinWeights[i].clone());}// skin indices\nvar skinIndices=source.skinIndices;for(i=0,il=skinIndices.length;i<il;i++){this.skinIndices.push(skinIndices[i].clone());}// line distances\nvar lineDistances=source.lineDistances;for(i=0,il=lineDistances.length;i<il;i++){this.lineDistances.push(lineDistances[i]);}// bounding box\nvar boundingBox=source.boundingBox;if(boundingBox!==null){this.boundingBox=boundingBox.clone();}// bounding sphere\nvar boundingSphere=source.boundingSphere;if(boundingSphere!==null){this.boundingSphere=boundingSphere.clone();}// update flags\nthis.elementsNeedUpdate=source.elementsNeedUpdate;this.verticesNeedUpdate=source.verticesNeedUpdate;this.uvsNeedUpdate=source.uvsNeedUpdate;this.normalsNeedUpdate=source.normalsNeedUpdate;this.colorsNeedUpdate=source.colorsNeedUpdate;this.lineDistancesNeedUpdate=source.lineDistancesNeedUpdate;this.groupsNeedUpdate=source.groupsNeedUpdate;return this;},dispose:function(){this.dispatchEvent({type:'dispose'});}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function BufferAttribute(array,itemSize,normalized){if(Array.isArray(array)){throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');}this.name='';this.array=array;this.itemSize=itemSize;this.count=array!==undefined?array.length/itemSize:0;this.normalized=normalized===true;this.dynamic=false;this.updateRange={offset:0,count:-1};this.version=0;}Object.defineProperty(BufferAttribute.prototype,'needsUpdate',{set:function(value){if(value===true)this.version++;}});Object.assign(BufferAttribute.prototype,{isBufferAttribute:true,onUploadCallback:function(){},setArray:function(array){if(Array.isArray(array)){throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');}this.count=array!==undefined?array.length/this.itemSize:0;this.array=array;return this;},setDynamic:function(value){this.dynamic=value;return this;},copy:function(source){this.name=source.name;this.array=new source.array.constructor(source.array);this.itemSize=source.itemSize;this.count=source.count;this.normalized=source.normalized;this.dynamic=source.dynamic;return this;},copyAt:function(index1,attribute,index2){index1*=this.itemSize;index2*=attribute.itemSize;for(var i=0,l=this.itemSize;i<l;i++){this.array[index1+i]=attribute.array[index2+i];}return this;},copyArray:function(array){this.array.set(array);return this;},copyColorsArray:function(colors){var array=this.array,offset=0;for(var i=0,l=colors.length;i<l;i++){var color=colors[i];if(color===undefined){console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined',i);color=new Color();}array[offset++]=color.r;array[offset++]=color.g;array[offset++]=color.b;}return this;},copyVector2sArray:function(vectors){var array=this.array,offset=0;for(var i=0,l=vectors.length;i<l;i++){var vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined',i);vector=new Vector2();}array[offset++]=vector.x;array[offset++]=vector.y;}return this;},copyVector3sArray:function(vectors){var array=this.array,offset=0;for(var i=0,l=vectors.length;i<l;i++){var vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined',i);vector=new Vector3();}array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;}return this;},copyVector4sArray:function(vectors){var array=this.array,offset=0;for(var i=0,l=vectors.length;i<l;i++){var vector=vectors[i];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined',i);vector=new Vector4();}array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;array[offset++]=vector.w;}return this;},set:function(value,offset){if(offset===undefined)offset=0;this.array.set(value,offset);return this;},getX:function(index){return this.array[index*this.itemSize];},setX:function(index,x){this.array[index*this.itemSize]=x;return this;},getY:function(index){return this.array[index*this.itemSize+1];},setY:function(index,y){this.array[index*this.itemSize+1]=y;return this;},getZ:function(index){return this.array[index*this.itemSize+2];},setZ:function(index,z){this.array[index*this.itemSize+2]=z;return this;},getW:function(index){return this.array[index*this.itemSize+3];},setW:function(index,w){this.array[index*this.itemSize+3]=w;return this;},setXY:function(index,x,y){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;return this;},setXYZ:function(index,x,y,z){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;return this;},setXYZW:function(index,x,y,z,w){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;this.array[index+3]=w;return this;},onUpload:function(callback){this.onUploadCallback=callback;return this;},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this);}});//\nfunction Int8BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int8Array(array),itemSize,normalized);}Int8BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int8BufferAttribute.prototype.constructor=Int8BufferAttribute;function Uint8BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint8Array(array),itemSize,normalized);}Uint8BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint8BufferAttribute.prototype.constructor=Uint8BufferAttribute;function Uint8ClampedBufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint8ClampedArray(array),itemSize,normalized);}Uint8ClampedBufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint8ClampedBufferAttribute.prototype.constructor=Uint8ClampedBufferAttribute;function Int16BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int16Array(array),itemSize,normalized);}Int16BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int16BufferAttribute.prototype.constructor=Int16BufferAttribute;function Uint16BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint16Array(array),itemSize,normalized);}Uint16BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint16BufferAttribute.prototype.constructor=Uint16BufferAttribute;function Int32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Int32Array(array),itemSize,normalized);}Int32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Int32BufferAttribute.prototype.constructor=Int32BufferAttribute;function Uint32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Uint32Array(array),itemSize,normalized);}Uint32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Uint32BufferAttribute.prototype.constructor=Uint32BufferAttribute;function Float32BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Float32Array(array),itemSize,normalized);}Float32BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Float32BufferAttribute.prototype.constructor=Float32BufferAttribute;function Float64BufferAttribute(array,itemSize,normalized){BufferAttribute.call(this,new Float64Array(array),itemSize,normalized);}Float64BufferAttribute.prototype=Object.create(BufferAttribute.prototype);Float64BufferAttribute.prototype.constructor=Float64BufferAttribute;/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function DirectGeometry(){this.vertices=[];this.normals=[];this.colors=[];this.uvs=[];this.uvs2=[];this.groups=[];this.morphTargets={};this.skinWeights=[];this.skinIndices=[];// this.lineDistances = [];\nthis.boundingBox=null;this.boundingSphere=null;// update flags\nthis.verticesNeedUpdate=false;this.normalsNeedUpdate=false;this.colorsNeedUpdate=false;this.uvsNeedUpdate=false;this.groupsNeedUpdate=false;}Object.assign(DirectGeometry.prototype,{computeGroups:function(geometry){var group;var groups=[];var materialIndex=undefined;var faces=geometry.faces;for(var i=0;i<faces.length;i++){var face=faces[i];// materials\nif(face.materialIndex!==materialIndex){materialIndex=face.materialIndex;if(group!==undefined){group.count=i*3-group.start;groups.push(group);}group={start:i*3,materialIndex:materialIndex};}}if(group!==undefined){group.count=i*3-group.start;groups.push(group);}this.groups=groups;},fromGeometry:function(geometry){var faces=geometry.faces;var vertices=geometry.vertices;var faceVertexUvs=geometry.faceVertexUvs;var hasFaceVertexUv=faceVertexUvs[0]&&faceVertexUvs[0].length>0;var hasFaceVertexUv2=faceVertexUvs[1]&&faceVertexUvs[1].length>0;// morphs\nvar morphTargets=geometry.morphTargets;var morphTargetsLength=morphTargets.length;var morphTargetsPosition;if(morphTargetsLength>0){morphTargetsPosition=[];for(var i=0;i<morphTargetsLength;i++){morphTargetsPosition[i]={name:morphTargets[i].name,data:[]};}this.morphTargets.position=morphTargetsPosition;}var morphNormals=geometry.morphNormals;var morphNormalsLength=morphNormals.length;var morphTargetsNormal;if(morphNormalsLength>0){morphTargetsNormal=[];for(var i=0;i<morphNormalsLength;i++){morphTargetsNormal[i]={name:morphNormals[i].name,data:[]};}this.morphTargets.normal=morphTargetsNormal;}// skins\nvar skinIndices=geometry.skinIndices;var skinWeights=geometry.skinWeights;var hasSkinIndices=skinIndices.length===vertices.length;var hasSkinWeights=skinWeights.length===vertices.length;//\nif(vertices.length>0&&faces.length===0){console.error('THREE.DirectGeometry: Faceless geometries are not supported.');}for(var i=0;i<faces.length;i++){var face=faces[i];this.vertices.push(vertices[face.a],vertices[face.b],vertices[face.c]);var vertexNormals=face.vertexNormals;if(vertexNormals.length===3){this.normals.push(vertexNormals[0],vertexNormals[1],vertexNormals[2]);}else{var normal=face.normal;this.normals.push(normal,normal,normal);}var vertexColors=face.vertexColors;if(vertexColors.length===3){this.colors.push(vertexColors[0],vertexColors[1],vertexColors[2]);}else{var color=face.color;this.colors.push(color,color,color);}if(hasFaceVertexUv===true){var vertexUvs=faceVertexUvs[0][i];if(vertexUvs!==undefined){this.uvs.push(vertexUvs[0],vertexUvs[1],vertexUvs[2]);}else{console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ',i);this.uvs.push(new Vector2(),new Vector2(),new Vector2());}}if(hasFaceVertexUv2===true){var vertexUvs=faceVertexUvs[1][i];if(vertexUvs!==undefined){this.uvs2.push(vertexUvs[0],vertexUvs[1],vertexUvs[2]);}else{console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ',i);this.uvs2.push(new Vector2(),new Vector2(),new Vector2());}}// morphs\nfor(var j=0;j<morphTargetsLength;j++){var morphTarget=morphTargets[j].vertices;morphTargetsPosition[j].data.push(morphTarget[face.a],morphTarget[face.b],morphTarget[face.c]);}for(var j=0;j<morphNormalsLength;j++){var morphNormal=morphNormals[j].vertexNormals[i];morphTargetsNormal[j].data.push(morphNormal.a,morphNormal.b,morphNormal.c);}// skins\nif(hasSkinIndices){this.skinIndices.push(skinIndices[face.a],skinIndices[face.b],skinIndices[face.c]);}if(hasSkinWeights){this.skinWeights.push(skinWeights[face.a],skinWeights[face.b],skinWeights[face.c]);}}this.computeGroups(geometry);this.verticesNeedUpdate=geometry.verticesNeedUpdate;this.normalsNeedUpdate=geometry.normalsNeedUpdate;this.colorsNeedUpdate=geometry.colorsNeedUpdate;this.uvsNeedUpdate=geometry.uvsNeedUpdate;this.groupsNeedUpdate=geometry.groupsNeedUpdate;return this;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function arrayMax(array){if(array.length===0)return-Infinity;var max=array[0];for(var i=1,l=array.length;i<l;++i){if(array[i]>max)max=array[i];}return max;}/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */var bufferGeometryId=1;// BufferGeometry uses odd numbers as Id\nfunction BufferGeometry(){Object.defineProperty(this,'id',{value:bufferGeometryId+=2});this.uuid=_Math.generateUUID();this.name='';this.type='BufferGeometry';this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.drawRange={start:0,count:Infinity};this.userData={};}BufferGeometry.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:BufferGeometry,isBufferGeometry:true,getIndex:function(){return this.index;},setIndex:function(index){if(Array.isArray(index)){this.index=new(arrayMax(index)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(index,1);}else{this.index=index;}},addAttribute:function(name,attribute){if(!(attribute&&attribute.isBufferAttribute)&&!(attribute&&attribute.isInterleavedBufferAttribute)){console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');return this.addAttribute(name,new BufferAttribute(arguments[1],arguments[2]));}if(name==='index'){console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');this.setIndex(attribute);return this;}this.attributes[name]=attribute;return this;},getAttribute:function(name){return this.attributes[name];},removeAttribute:function(name){delete this.attributes[name];return this;},addGroup:function(start,count,materialIndex){this.groups.push({start:start,count:count,materialIndex:materialIndex!==undefined?materialIndex:0});},clearGroups:function(){this.groups=[];},setDrawRange:function(start,count){this.drawRange.start=start;this.drawRange.count=count;},applyMatrix:function(matrix){var position=this.attributes.position;if(position!==undefined){matrix.applyToBufferAttribute(position);position.needsUpdate=true;}var normal=this.attributes.normal;if(normal!==undefined){var normalMatrix=new Matrix3().getNormalMatrix(matrix);normalMatrix.applyToBufferAttribute(normal);normal.needsUpdate=true;}if(this.boundingBox!==null){this.computeBoundingBox();}if(this.boundingSphere!==null){this.computeBoundingSphere();}return this;},rotateX:function(){// rotate geometry around world x-axis\nvar m1=new Matrix4();return function rotateX(angle){m1.makeRotationX(angle);this.applyMatrix(m1);return this;};}(),rotateY:function(){// rotate geometry around world y-axis\nvar m1=new Matrix4();return function rotateY(angle){m1.makeRotationY(angle);this.applyMatrix(m1);return this;};}(),rotateZ:function(){// rotate geometry around world z-axis\nvar m1=new Matrix4();return function rotateZ(angle){m1.makeRotationZ(angle);this.applyMatrix(m1);return this;};}(),translate:function(){// translate geometry\nvar m1=new Matrix4();return function translate(x,y,z){m1.makeTranslation(x,y,z);this.applyMatrix(m1);return this;};}(),scale:function(){// scale geometry\nvar m1=new Matrix4();return function scale(x,y,z){m1.makeScale(x,y,z);this.applyMatrix(m1);return this;};}(),lookAt:function(){var obj=new Object3D();return function lookAt(vector){obj.lookAt(vector);obj.updateMatrix();this.applyMatrix(obj.matrix);};}(),center:function(){var offset=new Vector3();return function center(){this.computeBoundingBox();this.boundingBox.getCenter(offset).negate();this.translate(offset.x,offset.y,offset.z);return this;};}(),setFromObject:function(object){// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\nvar geometry=object.geometry;if(object.isPoints||object.isLine){var positions=new Float32BufferAttribute(geometry.vertices.length*3,3);var colors=new Float32BufferAttribute(geometry.colors.length*3,3);this.addAttribute('position',positions.copyVector3sArray(geometry.vertices));this.addAttribute('color',colors.copyColorsArray(geometry.colors));if(geometry.lineDistances&&geometry.lineDistances.length===geometry.vertices.length){var lineDistances=new Float32BufferAttribute(geometry.lineDistances.length,1);this.addAttribute('lineDistance',lineDistances.copyArray(geometry.lineDistances));}if(geometry.boundingSphere!==null){this.boundingSphere=geometry.boundingSphere.clone();}if(geometry.boundingBox!==null){this.boundingBox=geometry.boundingBox.clone();}}else if(object.isMesh){if(geometry&&geometry.isGeometry){this.fromGeometry(geometry);}}return this;},setFromPoints:function(points){var position=[];for(var i=0,l=points.length;i<l;i++){var point=points[i];position.push(point.x,point.y,point.z||0);}this.addAttribute('position',new Float32BufferAttribute(position,3));return this;},updateFromObject:function(object){var geometry=object.geometry;if(object.isMesh){var direct=geometry.__directGeometry;if(geometry.elementsNeedUpdate===true){direct=undefined;geometry.elementsNeedUpdate=false;}if(direct===undefined){return this.fromGeometry(geometry);}direct.verticesNeedUpdate=geometry.verticesNeedUpdate;direct.normalsNeedUpdate=geometry.normalsNeedUpdate;direct.colorsNeedUpdate=geometry.colorsNeedUpdate;direct.uvsNeedUpdate=geometry.uvsNeedUpdate;direct.groupsNeedUpdate=geometry.groupsNeedUpdate;geometry.verticesNeedUpdate=false;geometry.normalsNeedUpdate=false;geometry.colorsNeedUpdate=false;geometry.uvsNeedUpdate=false;geometry.groupsNeedUpdate=false;geometry=direct;}var attribute;if(geometry.verticesNeedUpdate===true){attribute=this.attributes.position;if(attribute!==undefined){attribute.copyVector3sArray(geometry.vertices);attribute.needsUpdate=true;}geometry.verticesNeedUpdate=false;}if(geometry.normalsNeedUpdate===true){attribute=this.attributes.normal;if(attribute!==undefined){attribute.copyVector3sArray(geometry.normals);attribute.needsUpdate=true;}geometry.normalsNeedUpdate=false;}if(geometry.colorsNeedUpdate===true){attribute=this.attributes.color;if(attribute!==undefined){attribute.copyColorsArray(geometry.colors);attribute.needsUpdate=true;}geometry.colorsNeedUpdate=false;}if(geometry.uvsNeedUpdate){attribute=this.attributes.uv;if(attribute!==undefined){attribute.copyVector2sArray(geometry.uvs);attribute.needsUpdate=true;}geometry.uvsNeedUpdate=false;}if(geometry.lineDistancesNeedUpdate){attribute=this.attributes.lineDistance;if(attribute!==undefined){attribute.copyArray(geometry.lineDistances);attribute.needsUpdate=true;}geometry.lineDistancesNeedUpdate=false;}if(geometry.groupsNeedUpdate){geometry.computeGroups(object.geometry);this.groups=geometry.groups;geometry.groupsNeedUpdate=false;}return this;},fromGeometry:function(geometry){geometry.__directGeometry=new DirectGeometry().fromGeometry(geometry);return this.fromDirectGeometry(geometry.__directGeometry);},fromDirectGeometry:function(geometry){var positions=new Float32Array(geometry.vertices.length*3);this.addAttribute('position',new BufferAttribute(positions,3).copyVector3sArray(geometry.vertices));if(geometry.normals.length>0){var normals=new Float32Array(geometry.normals.length*3);this.addAttribute('normal',new BufferAttribute(normals,3).copyVector3sArray(geometry.normals));}if(geometry.colors.length>0){var colors=new Float32Array(geometry.colors.length*3);this.addAttribute('color',new BufferAttribute(colors,3).copyColorsArray(geometry.colors));}if(geometry.uvs.length>0){var uvs=new Float32Array(geometry.uvs.length*2);this.addAttribute('uv',new BufferAttribute(uvs,2).copyVector2sArray(geometry.uvs));}if(geometry.uvs2.length>0){var uvs2=new Float32Array(geometry.uvs2.length*2);this.addAttribute('uv2',new BufferAttribute(uvs2,2).copyVector2sArray(geometry.uvs2));}// groups\nthis.groups=geometry.groups;// morphs\nfor(var name in geometry.morphTargets){var array=[];var morphTargets=geometry.morphTargets[name];for(var i=0,l=morphTargets.length;i<l;i++){var morphTarget=morphTargets[i];var attribute=new Float32BufferAttribute(morphTarget.data.length*3,3);attribute.name=morphTarget.name;array.push(attribute.copyVector3sArray(morphTarget.data));}this.morphAttributes[name]=array;}// skinning\nif(geometry.skinIndices.length>0){var skinIndices=new Float32BufferAttribute(geometry.skinIndices.length*4,4);this.addAttribute('skinIndex',skinIndices.copyVector4sArray(geometry.skinIndices));}if(geometry.skinWeights.length>0){var skinWeights=new Float32BufferAttribute(geometry.skinWeights.length*4,4);this.addAttribute('skinWeight',skinWeights.copyVector4sArray(geometry.skinWeights));}//\nif(geometry.boundingSphere!==null){this.boundingSphere=geometry.boundingSphere.clone();}if(geometry.boundingBox!==null){this.boundingBox=geometry.boundingBox.clone();}return this;},computeBoundingBox:function(){if(this.boundingBox===null){this.boundingBox=new Box3();}var position=this.attributes.position;if(position!==undefined){this.boundingBox.setFromBufferAttribute(position);}else{this.boundingBox.makeEmpty();}if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)){console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',this);}},computeBoundingSphere:function(){var box=new Box3();var vector=new Vector3();return function computeBoundingSphere(){if(this.boundingSphere===null){this.boundingSphere=new Sphere();}var position=this.attributes.position;if(position){var center=this.boundingSphere.center;box.setFromBufferAttribute(position);box.getCenter(center);// hoping to find a boundingSphere with a radius smaller than the\n// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\nvar maxRadiusSq=0;for(var i=0,il=position.count;i<il;i++){vector.x=position.getX(i);vector.y=position.getY(i);vector.z=position.getZ(i);maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(vector));}this.boundingSphere.radius=Math.sqrt(maxRadiusSq);if(isNaN(this.boundingSphere.radius)){console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',this);}}};}(),computeFaceNormals:function(){// backwards compatibility\n},computeVertexNormals:function(){var index=this.index;var attributes=this.attributes;if(attributes.position){var positions=attributes.position.array;if(attributes.normal===undefined){this.addAttribute('normal',new BufferAttribute(new Float32Array(positions.length),3));}else{// reset existing normals to zero\nvar array=attributes.normal.array;for(var i=0,il=array.length;i<il;i++){array[i]=0;}}var normals=attributes.normal.array;var vA,vB,vC;var pA=new Vector3(),pB=new Vector3(),pC=new Vector3();var cb=new Vector3(),ab=new Vector3();// indexed elements\nif(index){var indices=index.array;for(var i=0,il=index.count;i<il;i+=3){vA=indices[i+0]*3;vB=indices[i+1]*3;vC=indices[i+2]*3;pA.fromArray(positions,vA);pB.fromArray(positions,vB);pC.fromArray(positions,vC);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);normals[vA]+=cb.x;normals[vA+1]+=cb.y;normals[vA+2]+=cb.z;normals[vB]+=cb.x;normals[vB+1]+=cb.y;normals[vB+2]+=cb.z;normals[vC]+=cb.x;normals[vC+1]+=cb.y;normals[vC+2]+=cb.z;}}else{// non-indexed elements (unconnected triangle soup)\nfor(var i=0,il=positions.length;i<il;i+=9){pA.fromArray(positions,i);pB.fromArray(positions,i+3);pC.fromArray(positions,i+6);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);normals[i]=cb.x;normals[i+1]=cb.y;normals[i+2]=cb.z;normals[i+3]=cb.x;normals[i+4]=cb.y;normals[i+5]=cb.z;normals[i+6]=cb.x;normals[i+7]=cb.y;normals[i+8]=cb.z;}}this.normalizeNormals();attributes.normal.needsUpdate=true;}},merge:function(geometry,offset){if(!(geometry&&geometry.isBufferGeometry)){console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.',geometry);return;}if(offset===undefined){offset=0;console.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '+'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');}var attributes=this.attributes;for(var key in attributes){if(geometry.attributes[key]===undefined)continue;var attribute1=attributes[key];var attributeArray1=attribute1.array;var attribute2=geometry.attributes[key];var attributeArray2=attribute2.array;var attributeSize=attribute2.itemSize;for(var i=0,j=attributeSize*offset;i<attributeArray2.length;i++,j++){attributeArray1[j]=attributeArray2[i];}}return this;},normalizeNormals:function(){var vector=new Vector3();return function normalizeNormals(){var normals=this.attributes.normal;for(var i=0,il=normals.count;i<il;i++){vector.x=normals.getX(i);vector.y=normals.getY(i);vector.z=normals.getZ(i);vector.normalize();normals.setXYZ(i,vector.x,vector.y,vector.z);}};}(),toNonIndexed:function(){function convertBufferAttribute(attribute,indices){var array=attribute.array;var itemSize=attribute.itemSize;var array2=new array.constructor(indices.length*itemSize);var index=0,index2=0;for(var i=0,l=indices.length;i<l;i++){index=indices[i]*itemSize;for(var j=0;j<itemSize;j++){array2[index2++]=array[index++];}}return new BufferAttribute(array2,itemSize);}//\nif(this.index===null){console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.');return this;}var geometry2=new BufferGeometry();var indices=this.index.array;var attributes=this.attributes;// attributes\nfor(var name in attributes){var attribute=attributes[name];var newAttribute=convertBufferAttribute(attribute,indices);geometry2.addAttribute(name,newAttribute);}// morph attributes\nvar morphAttributes=this.morphAttributes;for(name in morphAttributes){var morphArray=[];var morphAttribute=morphAttributes[name];// morphAttribute: array of Float32BufferAttributes\nfor(var i=0,il=morphAttribute.length;i<il;i++){var attribute=morphAttribute[i];var newAttribute=convertBufferAttribute(attribute,indices);morphArray.push(newAttribute);}geometry2.morphAttributes[name]=morphArray;}// groups\nvar groups=this.groups;for(var i=0,l=groups.length;i<l;i++){var group=groups[i];geometry2.addGroup(group.start,group.count,group.materialIndex);}return geometry2;},toJSON:function(){var data={metadata:{version:4.5,type:'BufferGeometry',generator:'BufferGeometry.toJSON'}};// standard BufferGeometry serialization\ndata.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(Object.keys(this.userData).length>0)data.userData=this.userData;if(this.parameters!==undefined){var parameters=this.parameters;for(var key in parameters){if(parameters[key]!==undefined)data[key]=parameters[key];}return data;}data.data={attributes:{}};var index=this.index;if(index!==null){var array=Array.prototype.slice.call(index.array);data.data.index={type:index.array.constructor.name,array:array};}var attributes=this.attributes;for(var key in attributes){var attribute=attributes[key];var array=Array.prototype.slice.call(attribute.array);data.data.attributes[key]={itemSize:attribute.itemSize,type:attribute.array.constructor.name,array:array,normalized:attribute.normalized};}var groups=this.groups;if(groups.length>0){data.data.groups=JSON.parse(JSON.stringify(groups));}var boundingSphere=this.boundingSphere;if(boundingSphere!==null){data.data.boundingSphere={center:boundingSphere.center.toArray(),radius:boundingSphere.radius};}return data;},clone:function(){/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */return new BufferGeometry().copy(this);},copy:function(source){var name,i,l;// reset\nthis.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;// name\nthis.name=source.name;// index\nvar index=source.index;if(index!==null){this.setIndex(index.clone());}// attributes\nvar attributes=source.attributes;for(name in attributes){var attribute=attributes[name];this.addAttribute(name,attribute.clone());}// morph attributes\nvar morphAttributes=source.morphAttributes;for(name in morphAttributes){var array=[];var morphAttribute=morphAttributes[name];// morphAttribute: array of Float32BufferAttributes\nfor(i=0,l=morphAttribute.length;i<l;i++){array.push(morphAttribute[i].clone());}this.morphAttributes[name]=array;}// groups\nvar groups=source.groups;for(i=0,l=groups.length;i<l;i++){var group=groups[i];this.addGroup(group.start,group.count,group.materialIndex);}// bounding box\nvar boundingBox=source.boundingBox;if(boundingBox!==null){this.boundingBox=boundingBox.clone();}// bounding sphere\nvar boundingSphere=source.boundingSphere;if(boundingSphere!==null){this.boundingSphere=boundingSphere.clone();}// draw range\nthis.drawRange.start=source.drawRange.start;this.drawRange.count=source.drawRange.count;// user data\nthis.userData=source.userData;return this;},dispose:function(){this.dispatchEvent({type:'dispose'});}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */ // BoxGeometry\nfunction BoxGeometry(width,height,depth,widthSegments,heightSegments,depthSegments){Geometry.call(this);this.type='BoxGeometry';this.parameters={width:width,height:height,depth:depth,widthSegments:widthSegments,heightSegments:heightSegments,depthSegments:depthSegments};this.fromBufferGeometry(new BoxBufferGeometry(width,height,depth,widthSegments,heightSegments,depthSegments));this.mergeVertices();}BoxGeometry.prototype=Object.create(Geometry.prototype);BoxGeometry.prototype.constructor=BoxGeometry;// BoxBufferGeometry\nfunction BoxBufferGeometry(width,height,depth,widthSegments,heightSegments,depthSegments){BufferGeometry.call(this);this.type='BoxBufferGeometry';this.parameters={width:width,height:height,depth:depth,widthSegments:widthSegments,heightSegments:heightSegments,depthSegments:depthSegments};var scope=this;width=width||1;height=height||1;depth=depth||1;// segments\nwidthSegments=Math.floor(widthSegments)||1;heightSegments=Math.floor(heightSegments)||1;depthSegments=Math.floor(depthSegments)||1;// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables\nvar numberOfVertices=0;var groupStart=0;// build each side of the box geometry\nbuildPlane('z','y','x',-1,-1,depth,height,width,depthSegments,heightSegments,0);// px\nbuildPlane('z','y','x',1,-1,depth,height,-width,depthSegments,heightSegments,1);// nx\nbuildPlane('x','z','y',1,1,width,depth,height,widthSegments,depthSegments,2);// py\nbuildPlane('x','z','y',1,-1,width,depth,-height,widthSegments,depthSegments,3);// ny\nbuildPlane('x','y','z',1,-1,width,height,depth,widthSegments,heightSegments,4);// pz\nbuildPlane('x','y','z',-1,-1,width,height,-depth,widthSegments,heightSegments,5);// nz\n// build geometry\nthis.setIndex(indices);this.addAttribute('position',new Float32BufferAttribute(vertices,3));this.addAttribute('normal',new Float32BufferAttribute(normals,3));this.addAttribute('uv',new Float32BufferAttribute(uvs,2));function buildPlane(u,v,w,udir,vdir,width,height,depth,gridX,gridY,materialIndex){var segmentWidth=width/gridX;var segmentHeight=height/gridY;var widthHalf=width/2;var heightHalf=height/2;var depthHalf=depth/2;var gridX1=gridX+1;var gridY1=gridY+1;var vertexCounter=0;var groupCount=0;var ix,iy;var vector=new Vector3();// generate vertices, normals and uvs\nfor(iy=0;iy<gridY1;iy++){var y=iy*segmentHeight-heightHalf;for(ix=0;ix<gridX1;ix++){var x=ix*segmentWidth-widthHalf;// set values to correct vector component\nvector[u]=x*udir;vector[v]=y*vdir;vector[w]=depthHalf;// now apply vector to vertex buffer\nvertices.push(vector.x,vector.y,vector.z);// set values to correct vector component\nvector[u]=0;vector[v]=0;vector[w]=depth>0?1:-1;// now apply vector to normal buffer\nnormals.push(vector.x,vector.y,vector.z);// uvs\nuvs.push(ix/gridX);uvs.push(1-iy/gridY);// counters\nvertexCounter+=1;}}// indices\n// 1. you need three indices to draw a single face\n// 2. a single segment consists of two faces\n// 3. so we need to generate six (2*3) indices per segment\nfor(iy=0;iy<gridY;iy++){for(ix=0;ix<gridX;ix++){var a=numberOfVertices+ix+gridX1*iy;var b=numberOfVertices+ix+gridX1*(iy+1);var c=numberOfVertices+(ix+1)+gridX1*(iy+1);var d=numberOfVertices+(ix+1)+gridX1*iy;// faces\nindices.push(a,b,d);indices.push(b,c,d);// increase counter\ngroupCount+=6;}}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,materialIndex);// calculate new start value for groups\ngroupStart+=groupCount;// update total number of vertices\nnumberOfVertices+=vertexCounter;}}BoxBufferGeometry.prototype=Object.create(BufferGeometry.prototype);BoxBufferGeometry.prototype.constructor=BoxBufferGeometry;/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */ // PlaneGeometry\nfunction PlaneGeometry(width,height,widthSegments,heightSegments){Geometry.call(this);this.type='PlaneGeometry';this.parameters={width:width,height:height,widthSegments:widthSegments,heightSegments:heightSegments};this.fromBufferGeometry(new PlaneBufferGeometry(width,height,widthSegments,heightSegments));this.mergeVertices();}PlaneGeometry.prototype=Object.create(Geometry.prototype);PlaneGeometry.prototype.constructor=PlaneGeometry;// PlaneBufferGeometry\nfunction PlaneBufferGeometry(width,height,widthSegments,heightSegments){BufferGeometry.call(this);this.type='PlaneBufferGeometry';this.parameters={width:width,height:height,widthSegments:widthSegments,heightSegments:heightSegments};width=width||1;height=height||1;var width_half=width/2;var height_half=height/2;var gridX=Math.floor(widthSegments)||1;var gridY=Math.floor(heightSegments)||1;var gridX1=gridX+1;var gridY1=gridY+1;var segment_width=width/gridX;var segment_height=height/gridY;var ix,iy;// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// generate vertices, normals and uvs\nfor(iy=0;iy<gridY1;iy++){var y=iy*segment_height-height_half;for(ix=0;ix<gridX1;ix++){var x=ix*segment_width-width_half;vertices.push(x,-y,0);normals.push(0,0,1);uvs.push(ix/gridX);uvs.push(1-iy/gridY);}}// indices\nfor(iy=0;iy<gridY;iy++){for(ix=0;ix<gridX;ix++){var a=ix+gridX1*iy;var b=ix+gridX1*(iy+1);var c=ix+1+gridX1*(iy+1);var d=ix+1+gridX1*iy;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.addAttribute('position',new Float32BufferAttribute(vertices,3));this.addAttribute('normal',new Float32BufferAttribute(normals,3));this.addAttribute('uv',new Float32BufferAttribute(uvs,2));}PlaneBufferGeometry.prototype=Object.create(BufferGeometry.prototype);PlaneBufferGeometry.prototype.constructor=PlaneBufferGeometry;/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */var materialId=0;function Material(){Object.defineProperty(this,'id',{value:materialId++});this.uuid=_Math.generateUUID();this.name='';this.type='Material';this.fog=true;this.lights=true;this.blending=NormalBlending;this.side=FrontSide;this.flatShading=false;this.vertexColors=NoColors;// THREE.NoColors, THREE.VertexColors, THREE.FaceColors\nthis.opacity=1;this.transparent=false;this.blendSrc=SrcAlphaFactor;this.blendDst=OneMinusSrcAlphaFactor;this.blendEquation=AddEquation;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthFunc=LessEqualDepth;this.depthTest=true;this.depthWrite=true;this.clippingPlanes=null;this.clipIntersection=false;this.clipShadows=false;this.shadowSide=null;this.colorWrite=true;this.precision=null;// override the renderer's default precision for this material\nthis.polygonOffset=false;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.dithering=false;this.alphaTest=0;this.premultipliedAlpha=false;this.visible=true;this.userData={};this.needsUpdate=true;}Material.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:Material,isMaterial:true,onBeforeCompile:function(){},setValues:function(values){if(values===undefined)return;for(var key in values){var newValue=values[key];if(newValue===undefined){console.warn(\"THREE.Material: '\"+key+\"' parameter is undefined.\");continue;}// for backward compatability if shading is set in the constructor\nif(key==='shading'){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=newValue===FlatShading?true:false;continue;}var currentValue=this[key];if(currentValue===undefined){console.warn(\"THREE.\"+this.type+\": '\"+key+\"' is not a property of this material.\");continue;}if(currentValue&&currentValue.isColor){currentValue.set(newValue);}else if(currentValue&&currentValue.isVector3&&newValue&&newValue.isVector3){currentValue.copy(newValue);}else{this[key]=newValue;}}},toJSON:function(meta){var isRoot=meta===undefined||typeof meta==='string';if(isRoot){meta={textures:{},images:{}};}var data={metadata:{version:4.5,type:'Material',generator:'Material.toJSON'}};// standard Material serialization\ndata.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(this.color&&this.color.isColor)data.color=this.color.getHex();if(this.roughness!==undefined)data.roughness=this.roughness;if(this.metalness!==undefined)data.metalness=this.metalness;if(this.emissive&&this.emissive.isColor)data.emissive=this.emissive.getHex();if(this.emissiveIntensity!==1)data.emissiveIntensity=this.emissiveIntensity;if(this.specular&&this.specular.isColor)data.specular=this.specular.getHex();if(this.shininess!==undefined)data.shininess=this.shininess;if(this.clearCoat!==undefined)data.clearCoat=this.clearCoat;if(this.clearCoatRoughness!==undefined)data.clearCoatRoughness=this.clearCoatRoughness;if(this.map&&this.map.isTexture)data.map=this.map.toJSON(meta).uuid;if(this.alphaMap&&this.alphaMap.isTexture)data.alphaMap=this.alphaMap.toJSON(meta).uuid;if(this.lightMap&&this.lightMap.isTexture)data.lightMap=this.lightMap.toJSON(meta).uuid;if(this.aoMap&&this.aoMap.isTexture){data.aoMap=this.aoMap.toJSON(meta).uuid;data.aoMapIntensity=this.aoMapIntensity;}if(this.bumpMap&&this.bumpMap.isTexture){data.bumpMap=this.bumpMap.toJSON(meta).uuid;data.bumpScale=this.bumpScale;}if(this.normalMap&&this.normalMap.isTexture){data.normalMap=this.normalMap.toJSON(meta).uuid;data.normalMapType=this.normalMapType;data.normalScale=this.normalScale.toArray();}if(this.displacementMap&&this.displacementMap.isTexture){data.displacementMap=this.displacementMap.toJSON(meta).uuid;data.displacementScale=this.displacementScale;data.displacementBias=this.displacementBias;}if(this.roughnessMap&&this.roughnessMap.isTexture)data.roughnessMap=this.roughnessMap.toJSON(meta).uuid;if(this.metalnessMap&&this.metalnessMap.isTexture)data.metalnessMap=this.metalnessMap.toJSON(meta).uuid;if(this.emissiveMap&&this.emissiveMap.isTexture)data.emissiveMap=this.emissiveMap.toJSON(meta).uuid;if(this.specularMap&&this.specularMap.isTexture)data.specularMap=this.specularMap.toJSON(meta).uuid;if(this.envMap&&this.envMap.isTexture){data.envMap=this.envMap.toJSON(meta).uuid;data.reflectivity=this.reflectivity;// Scale behind envMap\nif(this.combine!==undefined)data.combine=this.combine;if(this.envMapIntensity!==undefined)data.envMapIntensity=this.envMapIntensity;}if(this.gradientMap&&this.gradientMap.isTexture){data.gradientMap=this.gradientMap.toJSON(meta).uuid;}if(this.size!==undefined)data.size=this.size;if(this.sizeAttenuation!==undefined)data.sizeAttenuation=this.sizeAttenuation;if(this.blending!==NormalBlending)data.blending=this.blending;if(this.flatShading===true)data.flatShading=this.flatShading;if(this.side!==FrontSide)data.side=this.side;if(this.vertexColors!==NoColors)data.vertexColors=this.vertexColors;if(this.opacity<1)data.opacity=this.opacity;if(this.transparent===true)data.transparent=this.transparent;data.depthFunc=this.depthFunc;data.depthTest=this.depthTest;data.depthWrite=this.depthWrite;// rotation (SpriteMaterial)\nif(this.rotation!==0)data.rotation=this.rotation;if(this.polygonOffset===true)data.polygonOffset=true;if(this.polygonOffsetFactor!==0)data.polygonOffsetFactor=this.polygonOffsetFactor;if(this.polygonOffsetUnits!==0)data.polygonOffsetUnits=this.polygonOffsetUnits;if(this.linewidth!==1)data.linewidth=this.linewidth;if(this.dashSize!==undefined)data.dashSize=this.dashSize;if(this.gapSize!==undefined)data.gapSize=this.gapSize;if(this.scale!==undefined)data.scale=this.scale;if(this.dithering===true)data.dithering=true;if(this.alphaTest>0)data.alphaTest=this.alphaTest;if(this.premultipliedAlpha===true)data.premultipliedAlpha=this.premultipliedAlpha;if(this.wireframe===true)data.wireframe=this.wireframe;if(this.wireframeLinewidth>1)data.wireframeLinewidth=this.wireframeLinewidth;if(this.wireframeLinecap!=='round')data.wireframeLinecap=this.wireframeLinecap;if(this.wireframeLinejoin!=='round')data.wireframeLinejoin=this.wireframeLinejoin;if(this.morphTargets===true)data.morphTargets=true;if(this.skinning===true)data.skinning=true;if(this.visible===false)data.visible=false;if(JSON.stringify(this.userData)!=='{}')data.userData=this.userData;// TODO: Copied from Object3D.toJSON\nfunction extractFromCache(cache){var values=[];for(var key in cache){var data=cache[key];delete data.metadata;values.push(data);}return values;}if(isRoot){var textures=extractFromCache(meta.textures);var images=extractFromCache(meta.images);if(textures.length>0)data.textures=textures;if(images.length>0)data.images=images;}return data;},clone:function(){return new this.constructor().copy(this);},copy:function(source){this.name=source.name;this.fog=source.fog;this.lights=source.lights;this.blending=source.blending;this.side=source.side;this.flatShading=source.flatShading;this.vertexColors=source.vertexColors;this.opacity=source.opacity;this.transparent=source.transparent;this.blendSrc=source.blendSrc;this.blendDst=source.blendDst;this.blendEquation=source.blendEquation;this.blendSrcAlpha=source.blendSrcAlpha;this.blendDstAlpha=source.blendDstAlpha;this.blendEquationAlpha=source.blendEquationAlpha;this.depthFunc=source.depthFunc;this.depthTest=source.depthTest;this.depthWrite=source.depthWrite;this.colorWrite=source.colorWrite;this.precision=source.precision;this.polygonOffset=source.polygonOffset;this.polygonOffsetFactor=source.polygonOffsetFactor;this.polygonOffsetUnits=source.polygonOffsetUnits;this.dithering=source.dithering;this.alphaTest=source.alphaTest;this.premultipliedAlpha=source.premultipliedAlpha;this.visible=source.visible;this.userData=JSON.parse(JSON.stringify(source.userData));this.clipShadows=source.clipShadows;this.clipIntersection=source.clipIntersection;var srcPlanes=source.clippingPlanes,dstPlanes=null;if(srcPlanes!==null){var n=srcPlanes.length;dstPlanes=new Array(n);for(var i=0;i!==n;++i)dstPlanes[i]=srcPlanes[i].clone();}this.clippingPlanes=dstPlanes;this.shadowSide=source.shadowSide;return this;},dispose:function(){this.dispatchEvent({type:'dispose'});}});/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */function ShaderMaterial(parameters){Material.call(this);this.type='ShaderMaterial';this.defines={};this.uniforms={};this.vertexShader='void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';this.fragmentShader='void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';this.linewidth=1;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;// set to use scene fog\nthis.lights=false;// set to use scene lights\nthis.clipping=false;// set to use user-defined clipping planes\nthis.skinning=false;// set to use skinning attribute streams\nthis.morphTargets=false;// set to use morph targets\nthis.morphNormals=false;// set to use morph normals\nthis.extensions={derivatives:false,// set to use derivatives\nfragDepth:false,// set to use fragment depth values\ndrawBuffers:false,// set to use draw buffers\nshaderTextureLOD:false// set to use shader texture LOD\n};// When rendered geometry doesn't include these attributes but the material does,\n// use these default values in WebGL. This avoids errors when buffer data is missing.\nthis.defaultAttributeValues={'color':[1,1,1],'uv':[0,0],'uv2':[0,0]};this.index0AttributeName=undefined;this.uniformsNeedUpdate=false;if(parameters!==undefined){if(parameters.attributes!==undefined){console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');}this.setValues(parameters);}}ShaderMaterial.prototype=Object.create(Material.prototype);ShaderMaterial.prototype.constructor=ShaderMaterial;ShaderMaterial.prototype.isShaderMaterial=true;ShaderMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.fragmentShader=source.fragmentShader;this.vertexShader=source.vertexShader;this.uniforms=cloneUniforms(source.uniforms);this.defines=Object.assign({},source.defines);this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.lights=source.lights;this.clipping=source.clipping;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;this.extensions=source.extensions;return this;};ShaderMaterial.prototype.toJSON=function(meta){var data=Material.prototype.toJSON.call(this,meta);data.uniforms={};for(var name in this.uniforms){var uniform=this.uniforms[name];var value=uniform.value;if(value&&value.isTexture){data.uniforms[name]={type:'t',value:value.toJSON(meta).uuid};}else if(value&&value.isColor){data.uniforms[name]={type:'c',value:value.getHex()};}else if(value&&value.isVector2){data.uniforms[name]={type:'v2',value:value.toArray()};}else if(value&&value.isVector3){data.uniforms[name]={type:'v3',value:value.toArray()};}else if(value&&value.isVector4){data.uniforms[name]={type:'v4',value:value.toArray()};}else if(value&&value.isMatrix3){data.uniforms[name]={type:'m3',value:value.toArray()};}else if(value&&value.isMatrix4){data.uniforms[name]={type:'m4',value:value.toArray()};}else{data.uniforms[name]={value:value};// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n}}if(Object.keys(this.defines).length>0)data.defines=this.defines;data.vertexShader=this.vertexShader;data.fragmentShader=this.fragmentShader;var extensions={};for(var key in this.extensions){if(this.extensions[key]===true)extensions[key]=true;}if(Object.keys(extensions).length>0)data.extensions=extensions;return data;};/**\n\t * @author bhouston / http://clara.io\n\t */function Ray(origin,direction){this.origin=origin!==undefined?origin:new Vector3();this.direction=direction!==undefined?direction:new Vector3();}Object.assign(Ray.prototype,{set:function(origin,direction){this.origin.copy(origin);this.direction.copy(direction);return this;},clone:function(){return new this.constructor().copy(this);},copy:function(ray){this.origin.copy(ray.origin);this.direction.copy(ray.direction);return this;},at:function(t,target){if(target===undefined){console.warn('THREE.Ray: .at() target is now required');target=new Vector3();}return target.copy(this.direction).multiplyScalar(t).add(this.origin);},lookAt:function(v){this.direction.copy(v).sub(this.origin).normalize();return this;},recast:function(){var v1=new Vector3();return function recast(t){this.origin.copy(this.at(t,v1));return this;};}(),closestPointToPoint:function(point,target){if(target===undefined){console.warn('THREE.Ray: .closestPointToPoint() target is now required');target=new Vector3();}target.subVectors(point,this.origin);var directionDistance=target.dot(this.direction);if(directionDistance<0){return target.copy(this.origin);}return target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);},distanceToPoint:function(point){return Math.sqrt(this.distanceSqToPoint(point));},distanceSqToPoint:function(){var v1=new Vector3();return function distanceSqToPoint(point){var directionDistance=v1.subVectors(point,this.origin).dot(this.direction);// point behind the ray\nif(directionDistance<0){return this.origin.distanceToSquared(point);}v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);return v1.distanceToSquared(point);};}(),distanceSqToSegment:function(){var segCenter=new Vector3();var segDir=new Vector3();var diff=new Vector3();return function distanceSqToSegment(v0,v1,optionalPointOnRay,optionalPointOnSegment){// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n// It returns the min distance between the ray and the segment\n// defined by v0 and v1\n// It can also set two optional targets :\n// - The closest point on the ray\n// - The closest point on the segment\nsegCenter.copy(v0).add(v1).multiplyScalar(0.5);segDir.copy(v1).sub(v0).normalize();diff.copy(this.origin).sub(segCenter);var segExtent=v0.distanceTo(v1)*0.5;var a01=-this.direction.dot(segDir);var b0=diff.dot(this.direction);var b1=-diff.dot(segDir);var c=diff.lengthSq();var det=Math.abs(1-a01*a01);var s0,s1,sqrDist,extDet;if(det>0){// The ray and segment are not parallel.\ns0=a01*b1-b0;s1=a01*b0-b1;extDet=segExtent*det;if(s0>=0){if(s1>=-extDet){if(s1<=extDet){// region 0\n// Minimum at interior points of ray and segment.\nvar invDet=1/det;s0*=invDet;s1*=invDet;sqrDist=s0*(s0+a01*s1+2*b0)+s1*(a01*s0+s1+2*b1)+c;}else{// region 1\ns1=segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{// region 5\ns1=-segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{if(s1<=-extDet){// region 4\ns0=Math.max(0,-(-a01*segExtent+b0));s1=s0>0?-segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}else if(s1<=extDet){// region 3\ns0=0;s1=Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=s1*(s1+2*b1)+c;}else{// region 2\ns0=Math.max(0,-(a01*segExtent+b0));s1=s0>0?segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}}else{// Ray and segment are parallel.\ns1=a01>0?-segExtent:segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}if(optionalPointOnRay){optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);}if(optionalPointOnSegment){optionalPointOnSegment.copy(segDir).multiplyScalar(s1).add(segCenter);}return sqrDist;};}(),intersectSphere:function(){var v1=new Vector3();return function intersectSphere(sphere,target){v1.subVectors(sphere.center,this.origin);var tca=v1.dot(this.direction);var d2=v1.dot(v1)-tca*tca;var radius2=sphere.radius*sphere.radius;if(d2>radius2)return null;var thc=Math.sqrt(radius2-d2);// t0 = first intersect point - entrance on front of sphere\nvar t0=tca-thc;// t1 = second intersect point - exit point on back of sphere\nvar t1=tca+thc;// test to see if both t0 and t1 are behind the ray - if so, return null\nif(t0<0&&t1<0)return null;// test to see if t0 is behind the ray:\n// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n// in order to always return an intersect point that is in front of the ray.\nif(t0<0)return this.at(t1,target);// else t0 is in front of the ray, so return the first collision point scaled by t0\nreturn this.at(t0,target);};}(),intersectsSphere:function(sphere){return this.distanceSqToPoint(sphere.center)<=sphere.radius*sphere.radius;},distanceToPlane:function(plane){var denominator=plane.normal.dot(this.direction);if(denominator===0){// line is coplanar, return origin\nif(plane.distanceToPoint(this.origin)===0){return 0;}// Null is preferable to undefined since undefined means.... it is undefined\nreturn null;}var t=-(this.origin.dot(plane.normal)+plane.constant)/denominator;// Return if the ray never intersects the plane\nreturn t>=0?t:null;},intersectPlane:function(plane,target){var t=this.distanceToPlane(plane);if(t===null){return null;}return this.at(t,target);},intersectsPlane:function(plane){// check if the ray lies on the plane first\nvar distToPoint=plane.distanceToPoint(this.origin);if(distToPoint===0){return true;}var denominator=plane.normal.dot(this.direction);if(denominator*distToPoint<0){return true;}// ray origin is behind the plane (and is pointing behind it)\nreturn false;},intersectBox:function(box,target){var tmin,tmax,tymin,tymax,tzmin,tzmax;var invdirx=1/this.direction.x,invdiry=1/this.direction.y,invdirz=1/this.direction.z;var origin=this.origin;if(invdirx>=0){tmin=(box.min.x-origin.x)*invdirx;tmax=(box.max.x-origin.x)*invdirx;}else{tmin=(box.max.x-origin.x)*invdirx;tmax=(box.min.x-origin.x)*invdirx;}if(invdiry>=0){tymin=(box.min.y-origin.y)*invdiry;tymax=(box.max.y-origin.y)*invdiry;}else{tymin=(box.max.y-origin.y)*invdiry;tymax=(box.min.y-origin.y)*invdiry;}if(tmin>tymax||tymin>tmax)return null;// These lines also handle the case where tmin or tmax is NaN\n// (result of 0 * Infinity). x !== x returns true if x is NaN\nif(tymin>tmin||tmin!==tmin)tmin=tymin;if(tymax<tmax||tmax!==tmax)tmax=tymax;if(invdirz>=0){tzmin=(box.min.z-origin.z)*invdirz;tzmax=(box.max.z-origin.z)*invdirz;}else{tzmin=(box.max.z-origin.z)*invdirz;tzmax=(box.min.z-origin.z)*invdirz;}if(tmin>tzmax||tzmin>tmax)return null;if(tzmin>tmin||tmin!==tmin)tmin=tzmin;if(tzmax<tmax||tmax!==tmax)tmax=tzmax;//return point closest to the ray (positive side)\nif(tmax<0)return null;return this.at(tmin>=0?tmin:tmax,target);},intersectsBox:function(){var v=new Vector3();return function intersectsBox(box){return this.intersectBox(box,v)!==null;};}(),intersectTriangle:function(){// Compute the offset origin, edges, and normal.\nvar diff=new Vector3();var edge1=new Vector3();var edge2=new Vector3();var normal=new Vector3();return function intersectTriangle(a,b,c,backfaceCulling,target){// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\nedge1.subVectors(b,a);edge2.subVectors(c,a);normal.crossVectors(edge1,edge2);// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\nvar DdN=this.direction.dot(normal);var sign;if(DdN>0){if(backfaceCulling)return null;sign=1;}else if(DdN<0){sign=-1;DdN=-DdN;}else{return null;}diff.subVectors(this.origin,a);var DdQxE2=sign*this.direction.dot(edge2.crossVectors(diff,edge2));// b1 < 0, no intersection\nif(DdQxE2<0){return null;}var DdE1xQ=sign*this.direction.dot(edge1.cross(diff));// b2 < 0, no intersection\nif(DdE1xQ<0){return null;}// b1+b2 > 1, no intersection\nif(DdQxE2+DdE1xQ>DdN){return null;}// Line intersects triangle, check if ray does.\nvar QdN=-sign*diff.dot(normal);// t < 0, no intersection\nif(QdN<0){return null;}// Ray intersects triangle.\nreturn this.at(QdN/DdN,target);};}(),applyMatrix4:function(matrix4){this.origin.applyMatrix4(matrix4);this.direction.transformDirection(matrix4);return this;},equals:function(ray){return ray.origin.equals(this.origin)&&ray.direction.equals(this.direction);}});/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */function Triangle(a,b,c){this.a=a!==undefined?a:new Vector3();this.b=b!==undefined?b:new Vector3();this.c=c!==undefined?c:new Vector3();}Object.assign(Triangle,{getNormal:function(){var v0=new Vector3();return function getNormal(a,b,c,target){if(target===undefined){console.warn('THREE.Triangle: .getNormal() target is now required');target=new Vector3();}target.subVectors(c,b);v0.subVectors(a,b);target.cross(v0);var targetLengthSq=target.lengthSq();if(targetLengthSq>0){return target.multiplyScalar(1/Math.sqrt(targetLengthSq));}return target.set(0,0,0);};}(),// static/instance method to calculate barycentric coordinates\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\ngetBarycoord:function(){var v0=new Vector3();var v1=new Vector3();var v2=new Vector3();return function getBarycoord(point,a,b,c,target){v0.subVectors(c,a);v1.subVectors(b,a);v2.subVectors(point,a);var dot00=v0.dot(v0);var dot01=v0.dot(v1);var dot02=v0.dot(v2);var dot11=v1.dot(v1);var dot12=v1.dot(v2);var denom=dot00*dot11-dot01*dot01;if(target===undefined){console.warn('THREE.Triangle: .getBarycoord() target is now required');target=new Vector3();}// collinear or singular triangle\nif(denom===0){// arbitrary location outside of triangle?\n// not sure if this is the best idea, maybe should be returning undefined\nreturn target.set(-2,-1,-1);}var invDenom=1/denom;var u=(dot11*dot02-dot01*dot12)*invDenom;var v=(dot00*dot12-dot01*dot02)*invDenom;// barycentric coordinates must always sum to 1\nreturn target.set(1-u-v,v,u);};}(),containsPoint:function(){var v1=new Vector3();return function containsPoint(point,a,b,c){Triangle.getBarycoord(point,a,b,c,v1);return v1.x>=0&&v1.y>=0&&v1.x+v1.y<=1;};}(),getUV:function(){var barycoord=new Vector3();return function getUV(point,p1,p2,p3,uv1,uv2,uv3,target){this.getBarycoord(point,p1,p2,p3,barycoord);target.set(0,0);target.addScaledVector(uv1,barycoord.x);target.addScaledVector(uv2,barycoord.y);target.addScaledVector(uv3,barycoord.z);return target;};}()});Object.assign(Triangle.prototype,{set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this;},setFromPointsAndIndices:function(points,i0,i1,i2){this.a.copy(points[i0]);this.b.copy(points[i1]);this.c.copy(points[i2]);return this;},clone:function(){return new this.constructor().copy(this);},copy:function(triangle){this.a.copy(triangle.a);this.b.copy(triangle.b);this.c.copy(triangle.c);return this;},getArea:function(){var v0=new Vector3();var v1=new Vector3();return function getArea(){v0.subVectors(this.c,this.b);v1.subVectors(this.a,this.b);return v0.cross(v1).length()*0.5;};}(),getMidpoint:function(target){if(target===undefined){console.warn('THREE.Triangle: .getMidpoint() target is now required');target=new Vector3();}return target.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3);},getNormal:function(target){return Triangle.getNormal(this.a,this.b,this.c,target);},getPlane:function(target){if(target===undefined){console.warn('THREE.Triangle: .getPlane() target is now required');target=new Vector3();}return target.setFromCoplanarPoints(this.a,this.b,this.c);},getBarycoord:function(point,target){return Triangle.getBarycoord(point,this.a,this.b,this.c,target);},containsPoint:function(point){return Triangle.containsPoint(point,this.a,this.b,this.c);},getUV:function(point,uv1,uv2,uv3,result){return Triangle.getUV(point,this.a,this.b,this.c,uv1,uv2,uv3,result);},intersectsBox:function(box){return box.intersectsTriangle(this);},closestPointToPoint:function(){var vab=new Vector3();var vac=new Vector3();var vbc=new Vector3();var vap=new Vector3();var vbp=new Vector3();var vcp=new Vector3();return function closestPointToPoint(p,target){if(target===undefined){console.warn('THREE.Triangle: .closestPointToPoint() target is now required');target=new Vector3();}var a=this.a,b=this.b,c=this.c;var v,w;// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n// basically, we're distinguishing which of the voronoi regions of the triangle\n// the point lies in with the minimum amount of redundant computation.\nvab.subVectors(b,a);vac.subVectors(c,a);vap.subVectors(p,a);var d1=vab.dot(vap);var d2=vac.dot(vap);if(d1<=0&&d2<=0){// vertex region of A; barycentric coords (1, 0, 0)\nreturn target.copy(a);}vbp.subVectors(p,b);var d3=vab.dot(vbp);var d4=vac.dot(vbp);if(d3>=0&&d4<=d3){// vertex region of B; barycentric coords (0, 1, 0)\nreturn target.copy(b);}var vc=d1*d4-d3*d2;if(vc<=0&&d1>=0&&d3<=0){v=d1/(d1-d3);// edge region of AB; barycentric coords (1-v, v, 0)\nreturn target.copy(a).addScaledVector(vab,v);}vcp.subVectors(p,c);var d5=vab.dot(vcp);var d6=vac.dot(vcp);if(d6>=0&&d5<=d6){// vertex region of C; barycentric coords (0, 0, 1)\nreturn target.copy(c);}var vb=d5*d2-d1*d6;if(vb<=0&&d2>=0&&d6<=0){w=d2/(d2-d6);// edge region of AC; barycentric coords (1-w, 0, w)\nreturn target.copy(a).addScaledVector(vac,w);}var va=d3*d6-d5*d4;if(va<=0&&d4-d3>=0&&d5-d6>=0){vbc.subVectors(c,b);w=(d4-d3)/(d4-d3+(d5-d6));// edge region of BC; barycentric coords (0, 1-w, w)\nreturn target.copy(b).addScaledVector(vbc,w);// edge region of BC\n}// face region\nvar denom=1/(va+vb+vc);// u = va * denom\nv=vb*denom;w=vc*denom;return target.copy(a).addScaledVector(vab,v).addScaledVector(vac,w);};}(),equals:function(triangle){return triangle.a.equals(this.a)&&triangle.b.equals(this.b)&&triangle.c.equals(this.c);}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */function MeshBasicMaterial(parameters){Material.call(this);this.type='MeshBasicMaterial';this.color=new Color(0xffffff);// emissive\nthis.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.lights=false;this.setValues(parameters);}MeshBasicMaterial.prototype=Object.create(Material.prototype);MeshBasicMaterial.prototype.constructor=MeshBasicMaterial;MeshBasicMaterial.prototype.isMeshBasicMaterial=true;MeshBasicMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;return this;};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */function Mesh(geometry,material){Object3D.call(this);this.type='Mesh';this.geometry=geometry!==undefined?geometry:new BufferGeometry();this.material=material!==undefined?material:new MeshBasicMaterial({color:Math.random()*0xffffff});this.drawMode=TrianglesDrawMode;this.updateMorphTargets();}Mesh.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Mesh,isMesh:true,setDrawMode:function(value){this.drawMode=value;},copy:function(source){Object3D.prototype.copy.call(this,source);this.drawMode=source.drawMode;if(source.morphTargetInfluences!==undefined){this.morphTargetInfluences=source.morphTargetInfluences.slice();}if(source.morphTargetDictionary!==undefined){this.morphTargetDictionary=Object.assign({},source.morphTargetDictionary);}return this;},updateMorphTargets:function(){var geometry=this.geometry;var m,ml,name;if(geometry.isBufferGeometry){var morphAttributes=geometry.morphAttributes;var keys=Object.keys(morphAttributes);if(keys.length>0){var morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(m=0,ml=morphAttribute.length;m<ml;m++){name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{var morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}},raycast:function(){var inverseMatrix=new Matrix4();var ray=new Ray();var sphere=new Sphere();var vA=new Vector3();var vB=new Vector3();var vC=new Vector3();var tempA=new Vector3();var tempB=new Vector3();var tempC=new Vector3();var uvA=new Vector2();var uvB=new Vector2();var uvC=new Vector2();var intersectionPoint=new Vector3();var intersectionPointWorld=new Vector3();function checkIntersection(object,material,raycaster,ray,pA,pB,pC,point){var intersect;if(material.side===BackSide){intersect=ray.intersectTriangle(pC,pB,pA,true,point);}else{intersect=ray.intersectTriangle(pA,pB,pC,material.side!==DoubleSide,point);}if(intersect===null)return null;intersectionPointWorld.copy(point);intersectionPointWorld.applyMatrix4(object.matrixWorld);var distance=raycaster.ray.origin.distanceTo(intersectionPointWorld);if(distance<raycaster.near||distance>raycaster.far)return null;return{distance:distance,point:intersectionPointWorld.clone(),object:object};}function checkBufferGeometryIntersection(object,material,raycaster,ray,position,uv,a,b,c){vA.fromBufferAttribute(position,a);vB.fromBufferAttribute(position,b);vC.fromBufferAttribute(position,c);var intersection=checkIntersection(object,material,raycaster,ray,vA,vB,vC,intersectionPoint);if(intersection){if(uv){uvA.fromBufferAttribute(uv,a);uvB.fromBufferAttribute(uv,b);uvC.fromBufferAttribute(uv,c);intersection.uv=Triangle.getUV(intersectionPoint,vA,vB,vC,uvA,uvB,uvC,new Vector2());}var face=new Face3(a,b,c);Triangle.getNormal(vA,vB,vC,face.normal);intersection.face=face;}return intersection;}return function raycast(raycaster,intersects){var geometry=this.geometry;var material=this.material;var matrixWorld=this.matrixWorld;if(material===undefined)return;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();sphere.copy(geometry.boundingSphere);sphere.applyMatrix4(matrixWorld);if(raycaster.ray.intersectsSphere(sphere)===false)return;//\ninverseMatrix.getInverse(matrixWorld);ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);// Check boundingBox before continuing\nif(geometry.boundingBox!==null){if(ray.intersectsBox(geometry.boundingBox)===false)return;}var intersection;if(geometry.isBufferGeometry){var a,b,c;var index=geometry.index;var position=geometry.attributes.position;var uv=geometry.attributes.uv;var groups=geometry.groups;var drawRange=geometry.drawRange;var i,j,il,jl;var group,groupMaterial;var start,end;if(index!==null){// indexed buffer geometry\nif(Array.isArray(material)){for(i=0,il=groups.length;i<il;i++){group=groups[i];groupMaterial=material[group.materialIndex];start=Math.max(group.start,drawRange.start);end=Math.min(group.start+group.count,drawRange.start+drawRange.count);for(j=start,jl=end;j<jl;j+=3){a=index.getX(j);b=index.getX(j+1);c=index.getX(j+2);intersection=checkBufferGeometryIntersection(this,groupMaterial,raycaster,ray,position,uv,a,b,c);if(intersection){intersection.faceIndex=Math.floor(j/3);// triangle number in indexed buffer semantics\nintersection.face.materialIndex=group.materialIndex;intersects.push(intersection);}}}}else{start=Math.max(0,drawRange.start);end=Math.min(index.count,drawRange.start+drawRange.count);for(i=start,il=end;i<il;i+=3){a=index.getX(i);b=index.getX(i+1);c=index.getX(i+2);intersection=checkBufferGeometryIntersection(this,material,raycaster,ray,position,uv,a,b,c);if(intersection){intersection.faceIndex=Math.floor(i/3);// triangle number in indexed buffer semantics\nintersects.push(intersection);}}}}else if(position!==undefined){// non-indexed buffer geometry\nif(Array.isArray(material)){for(i=0,il=groups.length;i<il;i++){group=groups[i];groupMaterial=material[group.materialIndex];start=Math.max(group.start,drawRange.start);end=Math.min(group.start+group.count,drawRange.start+drawRange.count);for(j=start,jl=end;j<jl;j+=3){a=j;b=j+1;c=j+2;intersection=checkBufferGeometryIntersection(this,groupMaterial,raycaster,ray,position,uv,a,b,c);if(intersection){intersection.faceIndex=Math.floor(j/3);// triangle number in non-indexed buffer semantics\nintersection.face.materialIndex=group.materialIndex;intersects.push(intersection);}}}}else{start=Math.max(0,drawRange.start);end=Math.min(position.count,drawRange.start+drawRange.count);for(i=start,il=end;i<il;i+=3){a=i;b=i+1;c=i+2;intersection=checkBufferGeometryIntersection(this,material,raycaster,ray,position,uv,a,b,c);if(intersection){intersection.faceIndex=Math.floor(i/3);// triangle number in non-indexed buffer semantics\nintersects.push(intersection);}}}}}else if(geometry.isGeometry){var fvA,fvB,fvC;var isMultiMaterial=Array.isArray(material);var vertices=geometry.vertices;var faces=geometry.faces;var uvs;var faceVertexUvs=geometry.faceVertexUvs[0];if(faceVertexUvs.length>0)uvs=faceVertexUvs;for(var f=0,fl=faces.length;f<fl;f++){var face=faces[f];var faceMaterial=isMultiMaterial?material[face.materialIndex]:material;if(faceMaterial===undefined)continue;fvA=vertices[face.a];fvB=vertices[face.b];fvC=vertices[face.c];if(faceMaterial.morphTargets===true){var morphTargets=geometry.morphTargets;var morphInfluences=this.morphTargetInfluences;vA.set(0,0,0);vB.set(0,0,0);vC.set(0,0,0);for(var t=0,tl=morphTargets.length;t<tl;t++){var influence=morphInfluences[t];if(influence===0)continue;var targets=morphTargets[t].vertices;vA.addScaledVector(tempA.subVectors(targets[face.a],fvA),influence);vB.addScaledVector(tempB.subVectors(targets[face.b],fvB),influence);vC.addScaledVector(tempC.subVectors(targets[face.c],fvC),influence);}vA.add(fvA);vB.add(fvB);vC.add(fvC);fvA=vA;fvB=vB;fvC=vC;}intersection=checkIntersection(this,faceMaterial,raycaster,ray,fvA,fvB,fvC,intersectionPoint);if(intersection){if(uvs&&uvs[f]){var uvs_f=uvs[f];uvA.copy(uvs_f[0]);uvB.copy(uvs_f[1]);uvC.copy(uvs_f[2]);intersection.uv=Triangle.getUV(intersectionPoint,fvA,fvB,fvC,uvA,uvB,uvC,new Vector2());}intersection.face=face;intersection.faceIndex=f;intersects.push(intersection);}}}};}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this);}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function WebGLBackground(renderer,state,objects,premultipliedAlpha){var clearColor=new Color(0x000000);var clearAlpha=0;var planeMesh;var boxMesh;// Store the current background texture and its `version`\n// so we can recompile the material accordingly.\nvar currentBackground=null;var currentBackgroundVersion=0;function render(renderList,scene,camera,forceClear){var background=scene.background;if(background===null){setClear(clearColor,clearAlpha);currentBackground=null;currentBackgroundVersion=0;}else if(background&&background.isColor){setClear(background,1);forceClear=true;currentBackground=null;currentBackgroundVersion=0;}if(renderer.autoClear||forceClear){renderer.clear(renderer.autoClearColor,renderer.autoClearDepth,renderer.autoClearStencil);}if(background&&(background.isCubeTexture||background.isWebGLRenderTargetCube)){if(boxMesh===undefined){boxMesh=new Mesh(new BoxBufferGeometry(1,1,1),new ShaderMaterial({type:'BackgroundCubeMaterial',uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:BackSide,depthTest:false,depthWrite:false,fog:false}));boxMesh.geometry.removeAttribute('normal');boxMesh.geometry.removeAttribute('uv');boxMesh.onBeforeRender=function(renderer,scene,camera){this.matrixWorld.copyPosition(camera.matrixWorld);};// enable code injection for non-built-in material\nObject.defineProperty(boxMesh.material,'map',{get:function(){return this.uniforms.tCube.value;}});objects.update(boxMesh);}var texture=background.isWebGLRenderTargetCube?background.texture:background;boxMesh.material.uniforms.tCube.value=texture;boxMesh.material.uniforms.tFlip.value=background.isWebGLRenderTargetCube?1:-1;if(currentBackground!==background||currentBackgroundVersion!==texture.version){boxMesh.material.needsUpdate=true;currentBackground=background;currentBackgroundVersion=texture.version;}// push to the pre-sorted opaque render list\nrenderList.unshift(boxMesh,boxMesh.geometry,boxMesh.material,0,0,null);}else if(background&&background.isTexture){if(planeMesh===undefined){planeMesh=new Mesh(new PlaneBufferGeometry(2,2),new ShaderMaterial({type:'BackgroundMaterial',uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:false,depthWrite:false,fog:false}));planeMesh.geometry.removeAttribute('normal');// enable code injection for non-built-in material\nObject.defineProperty(planeMesh.material,'map',{get:function(){return this.uniforms.t2D.value;}});objects.update(planeMesh);}planeMesh.material.uniforms.t2D.value=background;if(background.matrixAutoUpdate===true){background.updateMatrix();}planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);if(currentBackground!==background||currentBackgroundVersion!==background.version){planeMesh.material.needsUpdate=true;currentBackground=background;currentBackgroundVersion=background.version;}// push to the pre-sorted opaque render list\nrenderList.unshift(planeMesh,planeMesh.geometry,planeMesh.material,0,0,null);}}function setClear(color,alpha){state.buffers.color.setClear(color.r,color.g,color.b,alpha,premultipliedAlpha);}return{getClearColor:function(){return clearColor;},setClearColor:function(color,alpha){clearColor.set(color);clearAlpha=alpha!==undefined?alpha:1;setClear(clearColor,clearAlpha);},getClearAlpha:function(){return clearAlpha;},setClearAlpha:function(alpha){clearAlpha=alpha;setClear(clearColor,clearAlpha);},render:render};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function WebGLBufferRenderer(gl,extensions,info,capabilities){var mode;function setMode(value){mode=value;}function render(start,count){gl.drawArrays(mode,start,count);info.update(count,mode);}function renderInstances(geometry,start,count){var extension;if(capabilities.isWebGL2){extension=gl;}else{extension=extensions.get('ANGLE_instanced_arrays');if(extension===null){console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}}extension[capabilities.isWebGL2?'drawArraysInstanced':'drawArraysInstancedANGLE'](mode,start,count,geometry.maxInstancedCount);info.update(count,mode,geometry.maxInstancedCount);}//\nthis.setMode=setMode;this.render=render;this.renderInstances=renderInstances;}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function WebGLCapabilities(gl,extensions,parameters){var maxAnisotropy;function getMaxAnisotropy(){if(maxAnisotropy!==undefined)return maxAnisotropy;var extension=extensions.get('EXT_texture_filter_anisotropic');if(extension!==null){maxAnisotropy=gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);}else{maxAnisotropy=0;}return maxAnisotropy;}function getMaxPrecision(precision){if(precision==='highp'){if(gl.getShaderPrecisionFormat(35633,36338).precision>0&&gl.getShaderPrecisionFormat(35632,36338).precision>0){return'highp';}precision='mediump';}if(precision==='mediump'){if(gl.getShaderPrecisionFormat(35633,36337).precision>0&&gl.getShaderPrecisionFormat(35632,36337).precision>0){return'mediump';}}return'lowp';}var isWebGL2=typeof WebGL2RenderingContext!=='undefined'&&gl instanceof WebGL2RenderingContext;var precision=parameters.precision!==undefined?parameters.precision:'highp';var maxPrecision=getMaxPrecision(precision);if(maxPrecision!==precision){console.warn('THREE.WebGLRenderer:',precision,'not supported, using',maxPrecision,'instead.');precision=maxPrecision;}var logarithmicDepthBuffer=parameters.logarithmicDepthBuffer===true;var maxTextures=gl.getParameter(34930);var maxVertexTextures=gl.getParameter(35660);var maxTextureSize=gl.getParameter(3379);var maxCubemapSize=gl.getParameter(34076);var maxAttributes=gl.getParameter(34921);var maxVertexUniforms=gl.getParameter(36347);var maxVaryings=gl.getParameter(36348);var maxFragmentUniforms=gl.getParameter(36349);var vertexTextures=maxVertexTextures>0;var floatFragmentTextures=isWebGL2||!!extensions.get('OES_texture_float');var floatVertexTextures=vertexTextures&&floatFragmentTextures;var maxSamples=isWebGL2?gl.getParameter(36183):0;return{isWebGL2:isWebGL2,getMaxAnisotropy:getMaxAnisotropy,getMaxPrecision:getMaxPrecision,precision:precision,logarithmicDepthBuffer:logarithmicDepthBuffer,maxTextures:maxTextures,maxVertexTextures:maxVertexTextures,maxTextureSize:maxTextureSize,maxCubemapSize:maxCubemapSize,maxAttributes:maxAttributes,maxVertexUniforms:maxVertexUniforms,maxVaryings:maxVaryings,maxFragmentUniforms:maxFragmentUniforms,vertexTextures:vertexTextures,floatFragmentTextures:floatFragmentTextures,floatVertexTextures:floatVertexTextures,maxSamples:maxSamples};}/**\n\t * @author tschw\n\t */function WebGLClipping(){var scope=this,globalState=null,numGlobalPlanes=0,localClippingEnabled=false,renderingShadows=false,plane=new Plane(),viewNormalMatrix=new Matrix3(),uniform={value:null,needsUpdate:false};this.uniform=uniform;this.numPlanes=0;this.numIntersection=0;this.init=function(planes,enableLocalClipping,camera){var enabled=planes.length!==0||enableLocalClipping||// enable state of previous frame - the clipping code has to\n// run another frame in order to reset the state:\nnumGlobalPlanes!==0||localClippingEnabled;localClippingEnabled=enableLocalClipping;globalState=projectPlanes(planes,camera,0);numGlobalPlanes=planes.length;return enabled;};this.beginShadows=function(){renderingShadows=true;projectPlanes(null);};this.endShadows=function(){renderingShadows=false;resetGlobalState();};this.setState=function(planes,clipIntersection,clipShadows,camera,cache,fromCache){if(!localClippingEnabled||planes===null||planes.length===0||renderingShadows&&!clipShadows){// there's no local clipping\nif(renderingShadows){// there's no global clipping\nprojectPlanes(null);}else{resetGlobalState();}}else{var nGlobal=renderingShadows?0:numGlobalPlanes,lGlobal=nGlobal*4,dstArray=cache.clippingState||null;uniform.value=dstArray;// ensure unique state\ndstArray=projectPlanes(planes,camera,lGlobal,fromCache);for(var i=0;i!==lGlobal;++i){dstArray[i]=globalState[i];}cache.clippingState=dstArray;this.numIntersection=clipIntersection?this.numPlanes:0;this.numPlanes+=nGlobal;}};function resetGlobalState(){if(uniform.value!==globalState){uniform.value=globalState;uniform.needsUpdate=numGlobalPlanes>0;}scope.numPlanes=numGlobalPlanes;scope.numIntersection=0;}function projectPlanes(planes,camera,dstOffset,skipTransform){var nPlanes=planes!==null?planes.length:0,dstArray=null;if(nPlanes!==0){dstArray=uniform.value;if(skipTransform!==true||dstArray===null){var flatSize=dstOffset+nPlanes*4,viewMatrix=camera.matrixWorldInverse;viewNormalMatrix.getNormalMatrix(viewMatrix);if(dstArray===null||dstArray.length<flatSize){dstArray=new Float32Array(flatSize);}for(var i=0,i4=dstOffset;i!==nPlanes;++i,i4+=4){plane.copy(planes[i]).applyMatrix4(viewMatrix,viewNormalMatrix);plane.normal.toArray(dstArray,i4);dstArray[i4+3]=plane.constant;}}uniform.value=dstArray;uniform.needsUpdate=true;}scope.numPlanes=nPlanes;return dstArray;}}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function WebGLExtensions(gl){var extensions={};return{get:function(name){if(extensions[name]!==undefined){return extensions[name];}var extension;switch(name){case'WEBGL_depth_texture':extension=gl.getExtension('WEBGL_depth_texture')||gl.getExtension('MOZ_WEBGL_depth_texture')||gl.getExtension('WEBKIT_WEBGL_depth_texture');break;case'EXT_texture_filter_anisotropic':extension=gl.getExtension('EXT_texture_filter_anisotropic')||gl.getExtension('MOZ_EXT_texture_filter_anisotropic')||gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');break;case'WEBGL_compressed_texture_s3tc':extension=gl.getExtension('WEBGL_compressed_texture_s3tc')||gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc')||gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');break;case'WEBGL_compressed_texture_pvrtc':extension=gl.getExtension('WEBGL_compressed_texture_pvrtc')||gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');break;default:extension=gl.getExtension(name);}if(extension===null){console.warn('THREE.WebGLRenderer: '+name+' extension not supported.');}extensions[name]=extension;return extension;}};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function WebGLGeometries(gl,attributes,info){var geometries={};var wireframeAttributes={};function onGeometryDispose(event){var geometry=event.target;var buffergeometry=geometries[geometry.id];if(buffergeometry.index!==null){attributes.remove(buffergeometry.index);}for(var name in buffergeometry.attributes){attributes.remove(buffergeometry.attributes[name]);}geometry.removeEventListener('dispose',onGeometryDispose);delete geometries[geometry.id];var attribute=wireframeAttributes[buffergeometry.id];if(attribute){attributes.remove(attribute);delete wireframeAttributes[buffergeometry.id];}//\ninfo.memory.geometries--;}function get(object,geometry){var buffergeometry=geometries[geometry.id];if(buffergeometry)return buffergeometry;geometry.addEventListener('dispose',onGeometryDispose);if(geometry.isBufferGeometry){buffergeometry=geometry;}else if(geometry.isGeometry){if(geometry._bufferGeometry===undefined){geometry._bufferGeometry=new BufferGeometry().setFromObject(object);}buffergeometry=geometry._bufferGeometry;}geometries[geometry.id]=buffergeometry;info.memory.geometries++;return buffergeometry;}function update(geometry){var index=geometry.index;var geometryAttributes=geometry.attributes;if(index!==null){attributes.update(index,34963);}for(var name in geometryAttributes){attributes.update(geometryAttributes[name],34962);}// morph targets\nvar morphAttributes=geometry.morphAttributes;for(var name in morphAttributes){var array=morphAttributes[name];for(var i=0,l=array.length;i<l;i++){attributes.update(array[i],34962);}}}function getWireframeAttribute(geometry){var attribute=wireframeAttributes[geometry.id];if(attribute)return attribute;var indices=[];var geometryIndex=geometry.index;var geometryAttributes=geometry.attributes;// console.time( 'wireframe' );\nif(geometryIndex!==null){var array=geometryIndex.array;for(var i=0,l=array.length;i<l;i+=3){var a=array[i+0];var b=array[i+1];var c=array[i+2];indices.push(a,b,b,c,c,a);}}else{var array=geometryAttributes.position.array;for(var i=0,l=array.length/3-1;i<l;i+=3){var a=i+0;var b=i+1;var c=i+2;indices.push(a,b,b,c,c,a);}}// console.timeEnd( 'wireframe' );\nattribute=new(arrayMax(indices)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(indices,1);attributes.update(attribute,34963);wireframeAttributes[geometry.id]=attribute;return attribute;}return{get:get,update:update,getWireframeAttribute:getWireframeAttribute};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function WebGLIndexedBufferRenderer(gl,extensions,info,capabilities){var mode;function setMode(value){mode=value;}var type,bytesPerElement;function setIndex(value){type=value.type;bytesPerElement=value.bytesPerElement;}function render(start,count){gl.drawElements(mode,count,type,start*bytesPerElement);info.update(count,mode);}function renderInstances(geometry,start,count){var extension;if(capabilities.isWebGL2){extension=gl;}else{var extension=extensions.get('ANGLE_instanced_arrays');if(extension===null){console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}}extension[capabilities.isWebGL2?'drawElementsInstanced':'drawElementsInstancedANGLE'](mode,count,type,start*bytesPerElement,geometry.maxInstancedCount);info.update(count,mode,geometry.maxInstancedCount);}//\nthis.setMode=setMode;this.setIndex=setIndex;this.render=render;this.renderInstances=renderInstances;}/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */function WebGLInfo(gl){var memory={geometries:0,textures:0};var render={frame:0,calls:0,triangles:0,points:0,lines:0};function update(count,mode,instanceCount){instanceCount=instanceCount||1;render.calls++;switch(mode){case 4:render.triangles+=instanceCount*(count/3);break;case 5:case 6:render.triangles+=instanceCount*(count-2);break;case 1:render.lines+=instanceCount*(count/2);break;case 3:render.lines+=instanceCount*(count-1);break;case 2:render.lines+=instanceCount*count;break;case 0:render.points+=instanceCount*count;break;default:console.error('THREE.WebGLInfo: Unknown draw mode:',mode);break;}}function reset(){render.frame++;render.calls=0;render.triangles=0;render.points=0;render.lines=0;}return{memory:memory,render:render,programs:null,autoReset:true,reset:reset,update:update};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function absNumericalSort(a,b){return Math.abs(b[1])-Math.abs(a[1]);}function WebGLMorphtargets(gl){var influencesList={};var morphInfluences=new Float32Array(8);function update(object,geometry,material,program){var objectInfluences=object.morphTargetInfluences;var length=objectInfluences.length;var influences=influencesList[geometry.id];if(influences===undefined){// initialise list\ninfluences=[];for(var i=0;i<length;i++){influences[i]=[i,0];}influencesList[geometry.id]=influences;}var morphTargets=material.morphTargets&&geometry.morphAttributes.position;var morphNormals=material.morphNormals&&geometry.morphAttributes.normal;// Remove current morphAttributes\nfor(var i=0;i<length;i++){var influence=influences[i];if(influence[1]!==0){if(morphTargets)geometry.removeAttribute('morphTarget'+i);if(morphNormals)geometry.removeAttribute('morphNormal'+i);}}// Collect influences\nfor(var i=0;i<length;i++){var influence=influences[i];influence[0]=i;influence[1]=objectInfluences[i];}influences.sort(absNumericalSort);// Add morphAttributes\nfor(var i=0;i<8;i++){var influence=influences[i];if(influence){var index=influence[0];var value=influence[1];if(value){if(morphTargets)geometry.addAttribute('morphTarget'+i,morphTargets[index]);if(morphNormals)geometry.addAttribute('morphNormal'+i,morphNormals[index]);morphInfluences[i]=value;continue;}}morphInfluences[i]=0;}program.getUniforms().setValue(gl,'morphTargetInfluences',morphInfluences);}return{update:update};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function WebGLObjects(geometries,info){var updateList={};function update(object){var frame=info.render.frame;var geometry=object.geometry;var buffergeometry=geometries.get(object,geometry);// Update once per frame\nif(updateList[buffergeometry.id]!==frame){if(geometry.isGeometry){buffergeometry.updateFromObject(object);}geometries.update(buffergeometry);updateList[buffergeometry.id]=frame;}return buffergeometry;}function dispose(){updateList={};}return{update:update,dispose:dispose};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function CubeTexture(images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding){images=images!==undefined?images:[];mapping=mapping!==undefined?mapping:CubeReflectionMapping;Texture.call(this,images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.flipY=false;}CubeTexture.prototype=Object.create(Texture.prototype);CubeTexture.prototype.constructor=CubeTexture;CubeTexture.prototype.isCubeTexture=true;Object.defineProperty(CubeTexture.prototype,'images',{get:function(){return this.image;},set:function(value){this.image=value;}});/**\n\t * @author Artur Trzesiok\n\t */function DataTexture3D(data,width,height,depth){// We're going to add .setXXX() methods for setting properties later.\n// Users can still set in DataTexture3D directly.\n//\n//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n// \ttexture.anisotropy = 16;\n//\n// See #14839\nTexture.call(this,null);this.image={data:data,width:width,height:height,depth:depth};this.magFilter=NearestFilter;this.minFilter=NearestFilter;this.generateMipmaps=false;this.flipY=false;}DataTexture3D.prototype=Object.create(Texture.prototype);DataTexture3D.prototype.constructor=DataTexture3D;DataTexture3D.prototype.isDataTexture3D=true;/**\n\t * @author tschw\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [renderer] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'renderer' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (renderer factorizations):\n\t *\n\t * .upload( gl, seq, values, renderer )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (renderer factorizations):\n\t *\n\t * .setValue( gl, name, value )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .set( gl, obj, prop )\n\t *\n\t * \t\tsets uniform from object and property with same name than uniform\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */var emptyTexture=new Texture();var emptyTexture3d=new DataTexture3D();var emptyCubeTexture=new CubeTexture();// --- Base for inner nodes (including the root) ---\nfunction UniformContainer(){this.seq=[];this.map={};}// --- Utilities ---\n// Array Caches (provide typed arrays for temporary by size)\nvar arrayCacheF32=[];var arrayCacheI32=[];// Float32Array caches used for uploading Matrix uniforms\nvar mat4array=new Float32Array(16);var mat3array=new Float32Array(9);var mat2array=new Float32Array(4);// Flattening for arrays of vectors and matrices\nfunction flatten(array,nBlocks,blockSize){var firstElem=array[0];if(firstElem<=0||firstElem>0)return array;// unoptimized: ! isNaN( firstElem )\n// see http://jacksondunstan.com/articles/983\nvar n=nBlocks*blockSize,r=arrayCacheF32[n];if(r===undefined){r=new Float32Array(n);arrayCacheF32[n]=r;}if(nBlocks!==0){firstElem.toArray(r,0);for(var i=1,offset=0;i!==nBlocks;++i){offset+=blockSize;array[i].toArray(r,offset);}}return r;}function arraysEqual(a,b){if(a.length!==b.length)return false;for(var i=0,l=a.length;i<l;i++){if(a[i]!==b[i])return false;}return true;}function copyArray(a,b){for(var i=0,l=b.length;i<l;i++){a[i]=b[i];}}// Texture unit allocation\nfunction allocTexUnits(renderer,n){var r=arrayCacheI32[n];if(r===undefined){r=new Int32Array(n);arrayCacheI32[n]=r;}for(var i=0;i!==n;++i)r[i]=renderer.allocTextureUnit();return r;}// --- Setters ---\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n// Single scalar\nfunction setValue1f(gl,v){var cache=this.cache;if(cache[0]===v)return;gl.uniform1f(this.addr,v);cache[0]=v;}function setValue1i(gl,v){var cache=this.cache;if(cache[0]===v)return;gl.uniform1i(this.addr,v);cache[0]=v;}// Single float vector (from flat array or THREE.VectorN)\nfunction setValue2fv(gl,v){var cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y){gl.uniform2f(this.addr,v.x,v.y);cache[0]=v.x;cache[1]=v.y;}}else{if(arraysEqual(cache,v))return;gl.uniform2fv(this.addr,v);copyArray(cache,v);}}function setValue3fv(gl,v){var cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z){gl.uniform3f(this.addr,v.x,v.y,v.z);cache[0]=v.x;cache[1]=v.y;cache[2]=v.z;}}else if(v.r!==undefined){if(cache[0]!==v.r||cache[1]!==v.g||cache[2]!==v.b){gl.uniform3f(this.addr,v.r,v.g,v.b);cache[0]=v.r;cache[1]=v.g;cache[2]=v.b;}}else{if(arraysEqual(cache,v))return;gl.uniform3fv(this.addr,v);copyArray(cache,v);}}function setValue4fv(gl,v){var cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z||cache[3]!==v.w){gl.uniform4f(this.addr,v.x,v.y,v.z,v.w);cache[0]=v.x;cache[1]=v.y;cache[2]=v.z;cache[3]=v.w;}}else{if(arraysEqual(cache,v))return;gl.uniform4fv(this.addr,v);copyArray(cache,v);}}// Single matrix (from flat array or MatrixN)\nfunction setValue2fm(gl,v){var cache=this.cache;var elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix2fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat2array.set(elements);gl.uniformMatrix2fv(this.addr,false,mat2array);copyArray(cache,elements);}}function setValue3fm(gl,v){var cache=this.cache;var elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix3fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat3array.set(elements);gl.uniformMatrix3fv(this.addr,false,mat3array);copyArray(cache,elements);}}function setValue4fm(gl,v){var cache=this.cache;var elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix4fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat4array.set(elements);gl.uniformMatrix4fv(this.addr,false,mat4array);copyArray(cache,elements);}}// Single texture (2D / Cube)\nfunction setValueT1(gl,v,renderer){var cache=this.cache;var unit=renderer.allocTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}renderer.setTexture2D(v||emptyTexture,unit);}function setValueT3D1(gl,v,renderer){var cache=this.cache;var unit=renderer.allocTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}renderer.setTexture3D(v||emptyTexture3d,unit);}function setValueT6(gl,v,renderer){var cache=this.cache;var unit=renderer.allocTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}renderer.setTextureCube(v||emptyCubeTexture,unit);}// Integer / Boolean vectors or arrays thereof (always flat arrays)\nfunction setValue2iv(gl,v){var cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform2iv(this.addr,v);copyArray(cache,v);}function setValue3iv(gl,v){var cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform3iv(this.addr,v);copyArray(cache,v);}function setValue4iv(gl,v){var cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform4iv(this.addr,v);copyArray(cache,v);}// Helper to pick the right setter for the singular case\nfunction getSingularSetter(type){switch(type){case 0x1406:return setValue1f;// FLOAT\ncase 0x8b50:return setValue2fv;// _VEC2\ncase 0x8b51:return setValue3fv;// _VEC3\ncase 0x8b52:return setValue4fv;// _VEC4\ncase 0x8b5a:return setValue2fm;// _MAT2\ncase 0x8b5b:return setValue3fm;// _MAT3\ncase 0x8b5c:return setValue4fm;// _MAT4\ncase 0x8b5e:case 0x8d66:return setValueT1;// SAMPLER_2D, SAMPLER_EXTERNAL_OES\ncase 0x8B5F:return setValueT3D1;// SAMPLER_3D\ncase 0x8b60:return setValueT6;// SAMPLER_CUBE\ncase 0x1404:case 0x8b56:return setValue1i;// INT, BOOL\ncase 0x8b53:case 0x8b57:return setValue2iv;// _VEC2\ncase 0x8b54:case 0x8b58:return setValue3iv;// _VEC3\ncase 0x8b55:case 0x8b59:return setValue4iv;// _VEC4\n}}// Array of scalars\nfunction setValue1fv(gl,v){var cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform1fv(this.addr,v);copyArray(cache,v);}function setValue1iv(gl,v){var cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform1iv(this.addr,v);copyArray(cache,v);}// Array of vectors (flat or from THREE classes)\nfunction setValueV2a(gl,v){var cache=this.cache;var data=flatten(v,this.size,2);if(arraysEqual(cache,data))return;gl.uniform2fv(this.addr,data);this.updateCache(data);}function setValueV3a(gl,v){var cache=this.cache;var data=flatten(v,this.size,3);if(arraysEqual(cache,data))return;gl.uniform3fv(this.addr,data);this.updateCache(data);}function setValueV4a(gl,v){var cache=this.cache;var data=flatten(v,this.size,4);if(arraysEqual(cache,data))return;gl.uniform4fv(this.addr,data);this.updateCache(data);}// Array of matrices (flat or from THREE clases)\nfunction setValueM2a(gl,v){var cache=this.cache;var data=flatten(v,this.size,4);if(arraysEqual(cache,data))return;gl.uniformMatrix2fv(this.addr,false,data);this.updateCache(data);}function setValueM3a(gl,v){var cache=this.cache;var data=flatten(v,this.size,9);if(arraysEqual(cache,data))return;gl.uniformMatrix3fv(this.addr,false,data);this.updateCache(data);}function setValueM4a(gl,v){var cache=this.cache;var data=flatten(v,this.size,16);if(arraysEqual(cache,data))return;gl.uniformMatrix4fv(this.addr,false,data);this.updateCache(data);}// Array of textures (2D / Cube)\nfunction setValueT1a(gl,v,renderer){var cache=this.cache;var n=v.length;var units=allocTexUnits(renderer,n);if(arraysEqual(cache,units)===false){gl.uniform1iv(this.addr,units);copyArray(cache,units);}for(var i=0;i!==n;++i){renderer.setTexture2D(v[i]||emptyTexture,units[i]);}}function setValueT6a(gl,v,renderer){var cache=this.cache;var n=v.length;var units=allocTexUnits(renderer,n);if(arraysEqual(cache,units)===false){gl.uniform1iv(this.addr,units);copyArray(cache,units);}for(var i=0;i!==n;++i){renderer.setTextureCube(v[i]||emptyCubeTexture,units[i]);}}// Helper to pick the right setter for a pure (bottom-level) array\nfunction getPureArraySetter(type){switch(type){case 0x1406:return setValue1fv;// FLOAT\ncase 0x8b50:return setValueV2a;// _VEC2\ncase 0x8b51:return setValueV3a;// _VEC3\ncase 0x8b52:return setValueV4a;// _VEC4\ncase 0x8b5a:return setValueM2a;// _MAT2\ncase 0x8b5b:return setValueM3a;// _MAT3\ncase 0x8b5c:return setValueM4a;// _MAT4\ncase 0x8b5e:return setValueT1a;// SAMPLER_2D\ncase 0x8b60:return setValueT6a;// SAMPLER_CUBE\ncase 0x1404:case 0x8b56:return setValue1iv;// INT, BOOL\ncase 0x8b53:case 0x8b57:return setValue2iv;// _VEC2\ncase 0x8b54:case 0x8b58:return setValue3iv;// _VEC3\ncase 0x8b55:case 0x8b59:return setValue4iv;// _VEC4\n}}// --- Uniform Classes ---\nfunction SingleUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.setValue=getSingularSetter(activeInfo.type);// this.path = activeInfo.name; // DEBUG\n}function PureArrayUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.size=activeInfo.size;this.setValue=getPureArraySetter(activeInfo.type);// this.path = activeInfo.name; // DEBUG\n}PureArrayUniform.prototype.updateCache=function(data){var cache=this.cache;if(data instanceof Float32Array&&cache.length!==data.length){this.cache=new Float32Array(data.length);}copyArray(cache,data);};function StructuredUniform(id){this.id=id;UniformContainer.call(this);// mix-in\n}StructuredUniform.prototype.setValue=function(gl,value,renderer){var seq=this.seq;for(var i=0,n=seq.length;i!==n;++i){var u=seq[i];u.setValue(gl,value[u.id],renderer);}};// --- Top-level ---\n// Parser - builds up the property tree from the path strings\nvar RePathPart=/([\\w\\d_]+)(\\])?(\\[|\\.)?/g;// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\nfunction addUniform(container,uniformObject){container.seq.push(uniformObject);container.map[uniformObject.id]=uniformObject;}function parseUniform(activeInfo,addr,container){var path=activeInfo.name,pathLength=path.length;// reset RegExp object, because of the early exit of a previous run\nRePathPart.lastIndex=0;while(true){var match=RePathPart.exec(path),matchEnd=RePathPart.lastIndex,id=match[1],idIsIndex=match[2]===']',subscript=match[3];if(idIsIndex)id=id|0;// convert to integer\nif(subscript===undefined||subscript==='['&&matchEnd+2===pathLength){// bare name or \"pure\" bottom-level array \"[0]\" suffix\naddUniform(container,subscript===undefined?new SingleUniform(id,activeInfo,addr):new PureArrayUniform(id,activeInfo,addr));break;}else{// step into inner node / create it in case it doesn't exist\nvar map=container.map,next=map[id];if(next===undefined){next=new StructuredUniform(id);addUniform(container,next);}container=next;}}}// Root Container\nfunction WebGLUniforms(gl,program,renderer){UniformContainer.call(this);this.renderer=renderer;var n=gl.getProgramParameter(program,35718);for(var i=0;i<n;++i){var info=gl.getActiveUniform(program,i),addr=gl.getUniformLocation(program,info.name);parseUniform(info,addr,this);}}WebGLUniforms.prototype.setValue=function(gl,name,value){var u=this.map[name];if(u!==undefined)u.setValue(gl,value,this.renderer);};WebGLUniforms.prototype.setOptional=function(gl,object,name){var v=object[name];if(v!==undefined)this.setValue(gl,name,v);};// Static interface\nWebGLUniforms.upload=function(gl,seq,values,renderer){for(var i=0,n=seq.length;i!==n;++i){var u=seq[i],v=values[u.id];if(v.needsUpdate!==false){// note: always updating when .needsUpdate is undefined\nu.setValue(gl,v.value,renderer);}}};WebGLUniforms.seqWithValue=function(seq,values){var r=[];for(var i=0,n=seq.length;i!==n;++i){var u=seq[i];if(u.id in values)r.push(u);}return r;};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function addLineNumbers(string){var lines=string.split('\\n');for(var i=0;i<lines.length;i++){lines[i]=i+1+': '+lines[i];}return lines.join('\\n');}function WebGLShader(gl,type,string){var shader=gl.createShader(type);gl.shaderSource(shader,string);gl.compileShader(shader);if(gl.getShaderParameter(shader,35713)===false){console.error('THREE.WebGLShader: Shader couldn\\'t compile.');}if(gl.getShaderInfoLog(shader)!==''){console.warn('THREE.WebGLShader: gl.getShaderInfoLog()',type===35633?'vertex':'fragment',gl.getShaderInfoLog(shader),addLineNumbers(string));}// --enable-privileged-webgl-extension\n// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\nreturn shader;}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */var programIdCount=0;function getEncodingComponents(encoding){switch(encoding){case LinearEncoding:return['Linear','( value )'];case sRGBEncoding:return['sRGB','( value )'];case RGBEEncoding:return['RGBE','( value )'];case RGBM7Encoding:return['RGBM','( value, 7.0 )'];case RGBM16Encoding:return['RGBM','( value, 16.0 )'];case RGBDEncoding:return['RGBD','( value, 256.0 )'];case GammaEncoding:return['Gamma','( value, float( GAMMA_FACTOR ) )'];default:throw new Error('unsupported encoding: '+encoding);}}function getTexelDecodingFunction(functionName,encoding){var components=getEncodingComponents(encoding);return'vec4 '+functionName+'( vec4 value ) { return '+components[0]+'ToLinear'+components[1]+'; }';}function getTexelEncodingFunction(functionName,encoding){var components=getEncodingComponents(encoding);return'vec4 '+functionName+'( vec4 value ) { return LinearTo'+components[0]+components[1]+'; }';}function getToneMappingFunction(functionName,toneMapping){var toneMappingName;switch(toneMapping){case LinearToneMapping:toneMappingName='Linear';break;case ReinhardToneMapping:toneMappingName='Reinhard';break;case Uncharted2ToneMapping:toneMappingName='Uncharted2';break;case CineonToneMapping:toneMappingName='OptimizedCineon';break;case ACESFilmicToneMapping:toneMappingName='ACESFilmic';break;default:throw new Error('unsupported toneMapping: '+toneMapping);}return'vec3 '+functionName+'( vec3 color ) { return '+toneMappingName+'ToneMapping( color ); }';}function generateExtensions(extensions,parameters,rendererExtensions){extensions=extensions||{};var chunks=[extensions.derivatives||parameters.envMapCubeUV||parameters.bumpMap||parameters.normalMap&&!parameters.objectSpaceNormalMap||parameters.flatShading?'#extension GL_OES_standard_derivatives : enable':'',(extensions.fragDepth||parameters.logarithmicDepthBuffer)&&rendererExtensions.get('EXT_frag_depth')?'#extension GL_EXT_frag_depth : enable':'',extensions.drawBuffers&&rendererExtensions.get('WEBGL_draw_buffers')?'#extension GL_EXT_draw_buffers : require':'',(extensions.shaderTextureLOD||parameters.envMap)&&rendererExtensions.get('EXT_shader_texture_lod')?'#extension GL_EXT_shader_texture_lod : enable':''];return chunks.filter(filterEmptyLine).join('\\n');}function generateDefines(defines){var chunks=[];for(var name in defines){var value=defines[name];if(value===false)continue;chunks.push('#define '+name+' '+value);}return chunks.join('\\n');}function fetchAttributeLocations(gl,program){var attributes={};var n=gl.getProgramParameter(program,35721);for(var i=0;i<n;i++){var info=gl.getActiveAttrib(program,i);var name=info.name;// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\nattributes[name]=gl.getAttribLocation(program,name);}return attributes;}function filterEmptyLine(string){return string!=='';}function replaceLightNums(string,parameters){return string.replace(/NUM_DIR_LIGHTS/g,parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g,parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g,parameters.numHemiLights);}function replaceClippingPlaneNums(string,parameters){return string.replace(/NUM_CLIPPING_PLANES/g,parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,parameters.numClippingPlanes-parameters.numClipIntersection);}function parseIncludes(string){var pattern=/^[ \\t]*#include +<([\\w\\d./]+)>/gm;function replace(match,include){var replace=ShaderChunk[include];if(replace===undefined){throw new Error('Can not resolve #include <'+include+'>');}return parseIncludes(replace);}return string.replace(pattern,replace);}function unrollLoops(string){var pattern=/#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;function replace(match,start,end,snippet){var unroll='';for(var i=parseInt(start);i<parseInt(end);i++){unroll+=snippet.replace(/\\[ i \\]/g,'[ '+i+' ]');}return unroll;}return string.replace(pattern,replace);}function WebGLProgram(renderer,extensions,code,material,shader,parameters,capabilities){var gl=renderer.context;var defines=material.defines;var vertexShader=shader.vertexShader;var fragmentShader=shader.fragmentShader;var shadowMapTypeDefine='SHADOWMAP_TYPE_BASIC';if(parameters.shadowMapType===PCFShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_PCF';}else if(parameters.shadowMapType===PCFSoftShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_PCF_SOFT';}var envMapTypeDefine='ENVMAP_TYPE_CUBE';var envMapModeDefine='ENVMAP_MODE_REFLECTION';var envMapBlendingDefine='ENVMAP_BLENDING_MULTIPLY';if(parameters.envMap){switch(material.envMap.mapping){case CubeReflectionMapping:case CubeRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_CUBE';break;case CubeUVReflectionMapping:case CubeUVRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_CUBE_UV';break;case EquirectangularReflectionMapping:case EquirectangularRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_EQUIREC';break;case SphericalReflectionMapping:envMapTypeDefine='ENVMAP_TYPE_SPHERE';break;}switch(material.envMap.mapping){case CubeRefractionMapping:case EquirectangularRefractionMapping:envMapModeDefine='ENVMAP_MODE_REFRACTION';break;}switch(material.combine){case MultiplyOperation:envMapBlendingDefine='ENVMAP_BLENDING_MULTIPLY';break;case MixOperation:envMapBlendingDefine='ENVMAP_BLENDING_MIX';break;case AddOperation:envMapBlendingDefine='ENVMAP_BLENDING_ADD';break;}}var gammaFactorDefine=renderer.gammaFactor>0?renderer.gammaFactor:1.0;// console.log( 'building new program ' );\n//\nvar customExtensions=capabilities.isWebGL2?'':generateExtensions(material.extensions,parameters,extensions);var customDefines=generateDefines(defines);//\nvar program=gl.createProgram();var prefixVertex,prefixFragment;if(material.isRawShaderMaterial){prefixVertex=[customDefines].filter(filterEmptyLine).join('\\n');if(prefixVertex.length>0){prefixVertex+='\\n';}prefixFragment=[customExtensions,customDefines].filter(filterEmptyLine).join('\\n');if(prefixFragment.length>0){prefixFragment+='\\n';}}else{prefixVertex=['precision '+parameters.precision+' float;','precision '+parameters.precision+' int;','#define SHADER_NAME '+shader.name,customDefines,parameters.supportsVertexTextures?'#define VERTEX_TEXTURES':'','#define GAMMA_FACTOR '+gammaFactorDefine,'#define MAX_BONES '+parameters.maxBones,parameters.useFog&&parameters.fog?'#define USE_FOG':'',parameters.useFog&&parameters.fogExp?'#define FOG_EXP2':'',parameters.map?'#define USE_MAP':'',parameters.envMap?'#define USE_ENVMAP':'',parameters.envMap?'#define '+envMapModeDefine:'',parameters.lightMap?'#define USE_LIGHTMAP':'',parameters.aoMap?'#define USE_AOMAP':'',parameters.emissiveMap?'#define USE_EMISSIVEMAP':'',parameters.bumpMap?'#define USE_BUMPMAP':'',parameters.normalMap?'#define USE_NORMALMAP':'',parameters.normalMap&&parameters.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',parameters.displacementMap&&parameters.supportsVertexTextures?'#define USE_DISPLACEMENTMAP':'',parameters.specularMap?'#define USE_SPECULARMAP':'',parameters.roughnessMap?'#define USE_ROUGHNESSMAP':'',parameters.metalnessMap?'#define USE_METALNESSMAP':'',parameters.alphaMap?'#define USE_ALPHAMAP':'',parameters.vertexColors?'#define USE_COLOR':'',parameters.flatShading?'#define FLAT_SHADED':'',parameters.skinning?'#define USE_SKINNING':'',parameters.useVertexTexture?'#define BONE_TEXTURE':'',parameters.morphTargets?'#define USE_MORPHTARGETS':'',parameters.morphNormals&&parameters.flatShading===false?'#define USE_MORPHNORMALS':'',parameters.doubleSided?'#define DOUBLE_SIDED':'',parameters.flipSided?'#define FLIP_SIDED':'',parameters.shadowMapEnabled?'#define USE_SHADOWMAP':'',parameters.shadowMapEnabled?'#define '+shadowMapTypeDefine:'',parameters.sizeAttenuation?'#define USE_SIZEATTENUATION':'',parameters.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',parameters.logarithmicDepthBuffer&&(capabilities.isWebGL2||extensions.get('EXT_frag_depth'))?'#define USE_LOGDEPTHBUF_EXT':'','uniform mat4 modelMatrix;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform mat4 viewMatrix;','uniform mat3 normalMatrix;','uniform vec3 cameraPosition;','attribute vec3 position;','attribute vec3 normal;','attribute vec2 uv;','#ifdef USE_COLOR','\tattribute vec3 color;','#endif','#ifdef USE_MORPHTARGETS','\tattribute vec3 morphTarget0;','\tattribute vec3 morphTarget1;','\tattribute vec3 morphTarget2;','\tattribute vec3 morphTarget3;','\t#ifdef USE_MORPHNORMALS','\t\tattribute vec3 morphNormal0;','\t\tattribute vec3 morphNormal1;','\t\tattribute vec3 morphNormal2;','\t\tattribute vec3 morphNormal3;','\t#else','\t\tattribute vec3 morphTarget4;','\t\tattribute vec3 morphTarget5;','\t\tattribute vec3 morphTarget6;','\t\tattribute vec3 morphTarget7;','\t#endif','#endif','#ifdef USE_SKINNING','\tattribute vec4 skinIndex;','\tattribute vec4 skinWeight;','#endif','\\n'].filter(filterEmptyLine).join('\\n');prefixFragment=[customExtensions,'precision '+parameters.precision+' float;','precision '+parameters.precision+' int;','#define SHADER_NAME '+shader.name,customDefines,parameters.alphaTest?'#define ALPHATEST '+parameters.alphaTest+(parameters.alphaTest%1?'':'.0'):'',// add '.0' if integer\n'#define GAMMA_FACTOR '+gammaFactorDefine,parameters.useFog&&parameters.fog?'#define USE_FOG':'',parameters.useFog&&parameters.fogExp?'#define FOG_EXP2':'',parameters.map?'#define USE_MAP':'',parameters.matcap?'#define USE_MATCAP':'',parameters.envMap?'#define USE_ENVMAP':'',parameters.envMap?'#define '+envMapTypeDefine:'',parameters.envMap?'#define '+envMapModeDefine:'',parameters.envMap?'#define '+envMapBlendingDefine:'',parameters.lightMap?'#define USE_LIGHTMAP':'',parameters.aoMap?'#define USE_AOMAP':'',parameters.emissiveMap?'#define USE_EMISSIVEMAP':'',parameters.bumpMap?'#define USE_BUMPMAP':'',parameters.normalMap?'#define USE_NORMALMAP':'',parameters.normalMap&&parameters.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',parameters.specularMap?'#define USE_SPECULARMAP':'',parameters.roughnessMap?'#define USE_ROUGHNESSMAP':'',parameters.metalnessMap?'#define USE_METALNESSMAP':'',parameters.alphaMap?'#define USE_ALPHAMAP':'',parameters.vertexColors?'#define USE_COLOR':'',parameters.gradientMap?'#define USE_GRADIENTMAP':'',parameters.flatShading?'#define FLAT_SHADED':'',parameters.doubleSided?'#define DOUBLE_SIDED':'',parameters.flipSided?'#define FLIP_SIDED':'',parameters.shadowMapEnabled?'#define USE_SHADOWMAP':'',parameters.shadowMapEnabled?'#define '+shadowMapTypeDefine:'',parameters.premultipliedAlpha?'#define PREMULTIPLIED_ALPHA':'',parameters.physicallyCorrectLights?'#define PHYSICALLY_CORRECT_LIGHTS':'',parameters.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',parameters.logarithmicDepthBuffer&&(capabilities.isWebGL2||extensions.get('EXT_frag_depth'))?'#define USE_LOGDEPTHBUF_EXT':'',parameters.envMap&&(capabilities.isWebGL2||extensions.get('EXT_shader_texture_lod'))?'#define TEXTURE_LOD_EXT':'','uniform mat4 viewMatrix;','uniform vec3 cameraPosition;',parameters.toneMapping!==NoToneMapping?'#define TONE_MAPPING':'',parameters.toneMapping!==NoToneMapping?ShaderChunk['tonemapping_pars_fragment']:'',// this code is required here because it is used by the toneMapping() function defined below\nparameters.toneMapping!==NoToneMapping?getToneMappingFunction('toneMapping',parameters.toneMapping):'',parameters.dithering?'#define DITHERING':'',parameters.outputEncoding||parameters.mapEncoding||parameters.matcapEncoding||parameters.envMapEncoding||parameters.emissiveMapEncoding?ShaderChunk['encodings_pars_fragment']:'',// this code is required here because it is used by the various encoding/decoding function defined below\nparameters.mapEncoding?getTexelDecodingFunction('mapTexelToLinear',parameters.mapEncoding):'',parameters.matcapEncoding?getTexelDecodingFunction('matcapTexelToLinear',parameters.matcapEncoding):'',parameters.envMapEncoding?getTexelDecodingFunction('envMapTexelToLinear',parameters.envMapEncoding):'',parameters.emissiveMapEncoding?getTexelDecodingFunction('emissiveMapTexelToLinear',parameters.emissiveMapEncoding):'',parameters.outputEncoding?getTexelEncodingFunction('linearToOutputTexel',parameters.outputEncoding):'',parameters.depthPacking?'#define DEPTH_PACKING '+material.depthPacking:'','\\n'].filter(filterEmptyLine).join('\\n');}vertexShader=parseIncludes(vertexShader);vertexShader=replaceLightNums(vertexShader,parameters);vertexShader=replaceClippingPlaneNums(vertexShader,parameters);fragmentShader=parseIncludes(fragmentShader);fragmentShader=replaceLightNums(fragmentShader,parameters);fragmentShader=replaceClippingPlaneNums(fragmentShader,parameters);vertexShader=unrollLoops(vertexShader);fragmentShader=unrollLoops(fragmentShader);if(capabilities.isWebGL2&&!material.isRawShaderMaterial){var isGLSL3ShaderMaterial=false;var versionRegex=/^\\s*#version\\s+300\\s+es\\s*\\n/;if(material.isShaderMaterial&&vertexShader.match(versionRegex)!==null&&fragmentShader.match(versionRegex)!==null){isGLSL3ShaderMaterial=true;vertexShader=vertexShader.replace(versionRegex,'');fragmentShader=fragmentShader.replace(versionRegex,'');}// GLSL 3.0 conversion\nprefixVertex=['#version 300 es\\n','#define attribute in','#define varying out','#define texture2D texture'].join('\\n')+'\\n'+prefixVertex;prefixFragment=['#version 300 es\\n','#define varying in',isGLSL3ShaderMaterial?'':'out highp vec4 pc_fragColor;',isGLSL3ShaderMaterial?'':'#define gl_FragColor pc_fragColor','#define gl_FragDepthEXT gl_FragDepth','#define texture2D texture','#define textureCube texture','#define texture2DProj textureProj','#define texture2DLodEXT textureLod','#define texture2DProjLodEXT textureProjLod','#define textureCubeLodEXT textureLod','#define texture2DGradEXT textureGrad','#define texture2DProjGradEXT textureProjGrad','#define textureCubeGradEXT textureGrad'].join('\\n')+'\\n'+prefixFragment;}var vertexGlsl=prefixVertex+vertexShader;var fragmentGlsl=prefixFragment+fragmentShader;// console.log( '*VERTEX*', vertexGlsl );\n// console.log( '*FRAGMENT*', fragmentGlsl );\nvar glVertexShader=WebGLShader(gl,35633,vertexGlsl);var glFragmentShader=WebGLShader(gl,35632,fragmentGlsl);gl.attachShader(program,glVertexShader);gl.attachShader(program,glFragmentShader);// Force a particular attribute to index 0.\nif(material.index0AttributeName!==undefined){gl.bindAttribLocation(program,0,material.index0AttributeName);}else if(parameters.morphTargets===true){// programs with morphTargets displace position out of attribute 0\ngl.bindAttribLocation(program,0,'position');}gl.linkProgram(program);var programLog=gl.getProgramInfoLog(program).trim();var vertexLog=gl.getShaderInfoLog(glVertexShader).trim();var fragmentLog=gl.getShaderInfoLog(glFragmentShader).trim();var runnable=true;var haveDiagnostics=true;// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\nif(gl.getProgramParameter(program,35714)===false){runnable=false;console.error('THREE.WebGLProgram: shader error: ',gl.getError(),'35715',gl.getProgramParameter(program,35715),'gl.getProgramInfoLog',programLog,vertexLog,fragmentLog);}else if(programLog!==''){console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()',programLog);}else if(vertexLog===''||fragmentLog===''){haveDiagnostics=false;}if(haveDiagnostics){this.diagnostics={runnable:runnable,material:material,programLog:programLog,vertexShader:{log:vertexLog,prefix:prefixVertex},fragmentShader:{log:fragmentLog,prefix:prefixFragment}};}// clean up\ngl.deleteShader(glVertexShader);gl.deleteShader(glFragmentShader);// set up caching for uniform locations\nvar cachedUniforms;this.getUniforms=function(){if(cachedUniforms===undefined){cachedUniforms=new WebGLUniforms(gl,program,renderer);}return cachedUniforms;};// set up caching for attribute locations\nvar cachedAttributes;this.getAttributes=function(){if(cachedAttributes===undefined){cachedAttributes=fetchAttributeLocations(gl,program);}return cachedAttributes;};// free resource\nthis.destroy=function(){gl.deleteProgram(program);this.program=undefined;};// DEPRECATED\nObject.defineProperties(this,{uniforms:{get:function(){console.warn('THREE.WebGLProgram: .uniforms is now .getUniforms().');return this.getUniforms();}},attributes:{get:function(){console.warn('THREE.WebGLProgram: .attributes is now .getAttributes().');return this.getAttributes();}}});//\nthis.name=shader.name;this.id=programIdCount++;this.code=code;this.usedTimes=1;this.program=program;this.vertexShader=glVertexShader;this.fragmentShader=glFragmentShader;return this;}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function WebGLPrograms(renderer,extensions,capabilities){var programs=[];var shaderIDs={MeshDepthMaterial:'depth',MeshDistanceMaterial:'distanceRGBA',MeshNormalMaterial:'normal',MeshBasicMaterial:'basic',MeshLambertMaterial:'lambert',MeshPhongMaterial:'phong',MeshToonMaterial:'phong',MeshStandardMaterial:'physical',MeshPhysicalMaterial:'physical',MeshMatcapMaterial:'matcap',LineBasicMaterial:'basic',LineDashedMaterial:'dashed',PointsMaterial:'points',ShadowMaterial:'shadow',SpriteMaterial:'sprite'};var parameterNames=[\"precision\",\"supportsVertexTextures\",\"map\",\"mapEncoding\",\"matcap\",\"matcapEncoding\",\"envMap\",\"envMapMode\",\"envMapEncoding\",\"lightMap\",\"aoMap\",\"emissiveMap\",\"emissiveMapEncoding\",\"bumpMap\",\"normalMap\",\"objectSpaceNormalMap\",\"displacementMap\",\"specularMap\",\"roughnessMap\",\"metalnessMap\",\"gradientMap\",\"alphaMap\",\"combine\",\"vertexColors\",\"fog\",\"useFog\",\"fogExp\",\"flatShading\",\"sizeAttenuation\",\"logarithmicDepthBuffer\",\"skinning\",\"maxBones\",\"useVertexTexture\",\"morphTargets\",\"morphNormals\",\"maxMorphTargets\",\"maxMorphNormals\",\"premultipliedAlpha\",\"numDirLights\",\"numPointLights\",\"numSpotLights\",\"numHemiLights\",\"numRectAreaLights\",\"shadowMapEnabled\",\"shadowMapType\",\"toneMapping\",'physicallyCorrectLights',\"alphaTest\",\"doubleSided\",\"flipSided\",\"numClippingPlanes\",\"numClipIntersection\",\"depthPacking\",\"dithering\"];function allocateBones(object){var skeleton=object.skeleton;var bones=skeleton.bones;if(capabilities.floatVertexTextures){return 1024;}else{// default for when object is not specified\n// ( for example when prebuilding shader to be used with multiple objects )\n//\n//  - leave some extra space for other uniforms\n//  - limit here is ANGLE's 254 max uniform vectors\n//    (up to 54 should be safe)\nvar nVertexUniforms=capabilities.maxVertexUniforms;var nVertexMatrices=Math.floor((nVertexUniforms-20)/4);var maxBones=Math.min(nVertexMatrices,bones.length);if(maxBones<bones.length){console.warn('THREE.WebGLRenderer: Skeleton has '+bones.length+' bones. This GPU supports '+maxBones+'.');return 0;}return maxBones;}}function getTextureEncodingFromMap(map,gammaOverrideLinear){var encoding;if(!map){encoding=LinearEncoding;}else if(map.isTexture){encoding=map.encoding;}else if(map.isWebGLRenderTarget){console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\");encoding=map.texture.encoding;}// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\nif(encoding===LinearEncoding&&gammaOverrideLinear){encoding=GammaEncoding;}return encoding;}this.getParameters=function(material,lights,shadows,fog,nClipPlanes,nClipIntersection,object){var shaderID=shaderIDs[material.type];// heuristics to create shader parameters according to lights in the scene\n// (not to blow over maxLights budget)\nvar maxBones=object.isSkinnedMesh?allocateBones(object):0;var precision=capabilities.precision;if(material.precision!==null){precision=capabilities.getMaxPrecision(material.precision);if(precision!==material.precision){console.warn('THREE.WebGLProgram.getParameters:',material.precision,'not supported, using',precision,'instead.');}}var currentRenderTarget=renderer.getRenderTarget();var parameters={shaderID:shaderID,precision:precision,supportsVertexTextures:capabilities.vertexTextures,outputEncoding:getTextureEncodingFromMap(!currentRenderTarget?null:currentRenderTarget.texture,renderer.gammaOutput),map:!!material.map,mapEncoding:getTextureEncodingFromMap(material.map,renderer.gammaInput),matcap:!!material.matcap,matcapEncoding:getTextureEncodingFromMap(material.matcap,renderer.gammaInput),envMap:!!material.envMap,envMapMode:material.envMap&&material.envMap.mapping,envMapEncoding:getTextureEncodingFromMap(material.envMap,renderer.gammaInput),envMapCubeUV:!!material.envMap&&(material.envMap.mapping===CubeUVReflectionMapping||material.envMap.mapping===CubeUVRefractionMapping),lightMap:!!material.lightMap,aoMap:!!material.aoMap,emissiveMap:!!material.emissiveMap,emissiveMapEncoding:getTextureEncodingFromMap(material.emissiveMap,renderer.gammaInput),bumpMap:!!material.bumpMap,normalMap:!!material.normalMap,objectSpaceNormalMap:material.normalMapType===ObjectSpaceNormalMap,displacementMap:!!material.displacementMap,roughnessMap:!!material.roughnessMap,metalnessMap:!!material.metalnessMap,specularMap:!!material.specularMap,alphaMap:!!material.alphaMap,gradientMap:!!material.gradientMap,combine:material.combine,vertexColors:material.vertexColors,fog:!!fog,useFog:material.fog,fogExp:fog&&fog.isFogExp2,flatShading:material.flatShading,sizeAttenuation:material.sizeAttenuation,logarithmicDepthBuffer:capabilities.logarithmicDepthBuffer,skinning:material.skinning&&maxBones>0,maxBones:maxBones,useVertexTexture:capabilities.floatVertexTextures,morphTargets:material.morphTargets,morphNormals:material.morphNormals,maxMorphTargets:renderer.maxMorphTargets,maxMorphNormals:renderer.maxMorphNormals,numDirLights:lights.directional.length,numPointLights:lights.point.length,numSpotLights:lights.spot.length,numRectAreaLights:lights.rectArea.length,numHemiLights:lights.hemi.length,numClippingPlanes:nClipPlanes,numClipIntersection:nClipIntersection,dithering:material.dithering,shadowMapEnabled:renderer.shadowMap.enabled&&object.receiveShadow&&shadows.length>0,shadowMapType:renderer.shadowMap.type,toneMapping:renderer.toneMapping,physicallyCorrectLights:renderer.physicallyCorrectLights,premultipliedAlpha:material.premultipliedAlpha,alphaTest:material.alphaTest,doubleSided:material.side===DoubleSide,flipSided:material.side===BackSide,depthPacking:material.depthPacking!==undefined?material.depthPacking:false};return parameters;};this.getProgramCode=function(material,parameters){var array=[];if(parameters.shaderID){array.push(parameters.shaderID);}else{array.push(material.fragmentShader);array.push(material.vertexShader);}if(material.defines!==undefined){for(var name in material.defines){array.push(name);array.push(material.defines[name]);}}for(var i=0;i<parameterNames.length;i++){array.push(parameters[parameterNames[i]]);}array.push(material.onBeforeCompile.toString());array.push(renderer.gammaOutput);array.push(renderer.gammaFactor);return array.join();};this.acquireProgram=function(material,shader,parameters,code){var program;// Check if code has been already compiled\nfor(var p=0,pl=programs.length;p<pl;p++){var programInfo=programs[p];if(programInfo.code===code){program=programInfo;++program.usedTimes;break;}}if(program===undefined){program=new WebGLProgram(renderer,extensions,code,material,shader,parameters,capabilities);programs.push(program);}return program;};this.releaseProgram=function(program){if(--program.usedTimes===0){// Remove from unordered set\nvar i=programs.indexOf(program);programs[i]=programs[programs.length-1];programs.pop();// Free WebGL resources\nprogram.destroy();}};// Exposed for resource monitoring & error feedback via renderer.info:\nthis.programs=programs;}/**\n\t * @author fordacious / fordacious.github.io\n\t */function WebGLProperties(){var properties=new WeakMap();function get(object){var map=properties.get(object);if(map===undefined){map={};properties.set(object,map);}return map;}function remove(object){properties.delete(object);}function update(object,key,value){properties.get(object)[key]=value;}function dispose(){properties=new WeakMap();}return{get:get,remove:remove,update:update,dispose:dispose};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function painterSortStable(a,b){if(a.groupOrder!==b.groupOrder){return a.groupOrder-b.groupOrder;}else if(a.renderOrder!==b.renderOrder){return a.renderOrder-b.renderOrder;}else if(a.program&&b.program&&a.program!==b.program){return a.program.id-b.program.id;}else if(a.material.id!==b.material.id){return a.material.id-b.material.id;}else if(a.z!==b.z){return a.z-b.z;}else{return a.id-b.id;}}function reversePainterSortStable(a,b){if(a.groupOrder!==b.groupOrder){return a.groupOrder-b.groupOrder;}else if(a.renderOrder!==b.renderOrder){return a.renderOrder-b.renderOrder;}if(a.z!==b.z){return b.z-a.z;}else{return a.id-b.id;}}function WebGLRenderList(){var renderItems=[];var renderItemsIndex=0;var opaque=[];var transparent=[];function init(){renderItemsIndex=0;opaque.length=0;transparent.length=0;}function getNextRenderItem(object,geometry,material,groupOrder,z,group){var renderItem=renderItems[renderItemsIndex];if(renderItem===undefined){renderItem={id:object.id,object:object,geometry:geometry,material:material,program:material.program,groupOrder:groupOrder,renderOrder:object.renderOrder,z:z,group:group};renderItems[renderItemsIndex]=renderItem;}else{renderItem.id=object.id;renderItem.object=object;renderItem.geometry=geometry;renderItem.material=material;renderItem.program=material.program;renderItem.groupOrder=groupOrder;renderItem.renderOrder=object.renderOrder;renderItem.z=z;renderItem.group=group;}renderItemsIndex++;return renderItem;}function push(object,geometry,material,groupOrder,z,group){var renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);(material.transparent===true?transparent:opaque).push(renderItem);}function unshift(object,geometry,material,groupOrder,z,group){var renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);(material.transparent===true?transparent:opaque).unshift(renderItem);}function sort(){if(opaque.length>1)opaque.sort(painterSortStable);if(transparent.length>1)transparent.sort(reversePainterSortStable);}return{opaque:opaque,transparent:transparent,init:init,push:push,unshift:unshift,sort:sort};}function WebGLRenderLists(){var lists={};function onSceneDispose(event){var scene=event.target;scene.removeEventListener('dispose',onSceneDispose);delete lists[scene.id];}function get(scene,camera){var cameras=lists[scene.id];var list;if(cameras===undefined){list=new WebGLRenderList();lists[scene.id]={};lists[scene.id][camera.id]=list;scene.addEventListener('dispose',onSceneDispose);}else{list=cameras[camera.id];if(list===undefined){list=new WebGLRenderList();cameras[camera.id]=list;}}return list;}function dispose(){lists={};}return{get:get,dispose:dispose};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function UniformsCache(){var lights={};return{get:function(light){if(lights[light.id]!==undefined){return lights[light.id];}var uniforms;switch(light.type){case'DirectionalLight':uniforms={direction:new Vector3(),color:new Color(),shadow:false,shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2()};break;case'SpotLight':uniforms={position:new Vector3(),direction:new Vector3(),color:new Color(),distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:false,shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2()};break;case'PointLight':uniforms={position:new Vector3(),color:new Color(),distance:0,decay:0,shadow:false,shadowBias:0,shadowRadius:1,shadowMapSize:new Vector2(),shadowCameraNear:1,shadowCameraFar:1000};break;case'HemisphereLight':uniforms={direction:new Vector3(),skyColor:new Color(),groundColor:new Color()};break;case'RectAreaLight':uniforms={color:new Color(),position:new Vector3(),halfWidth:new Vector3(),halfHeight:new Vector3()// TODO (abelnation): set RectAreaLight shadow uniforms\n};break;}lights[light.id]=uniforms;return uniforms;}};}var count=0;function WebGLLights(){var cache=new UniformsCache();var state={id:count++,hash:{stateID:-1,directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,shadowsLength:-1},ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};var vector3=new Vector3();var matrix4=new Matrix4();var matrix42=new Matrix4();function setup(lights,shadows,camera){var r=0,g=0,b=0;var directionalLength=0;var pointLength=0;var spotLength=0;var rectAreaLength=0;var hemiLength=0;var viewMatrix=camera.matrixWorldInverse;for(var i=0,l=lights.length;i<l;i++){var light=lights[i];var color=light.color;var intensity=light.intensity;var distance=light.distance;var shadowMap=light.shadow&&light.shadow.map?light.shadow.map.texture:null;if(light.isAmbientLight){r+=color.r*intensity;g+=color.g*intensity;b+=color.b*intensity;}else if(light.isDirectionalLight){var uniforms=cache.get(light);uniforms.color.copy(light.color).multiplyScalar(light.intensity);uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(viewMatrix);uniforms.shadow=light.castShadow;if(light.castShadow){var shadow=light.shadow;uniforms.shadowBias=shadow.bias;uniforms.shadowRadius=shadow.radius;uniforms.shadowMapSize=shadow.mapSize;}state.directionalShadowMap[directionalLength]=shadowMap;state.directionalShadowMatrix[directionalLength]=light.shadow.matrix;state.directional[directionalLength]=uniforms;directionalLength++;}else if(light.isSpotLight){var uniforms=cache.get(light);uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);uniforms.color.copy(color).multiplyScalar(intensity);uniforms.distance=distance;uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(viewMatrix);uniforms.coneCos=Math.cos(light.angle);uniforms.penumbraCos=Math.cos(light.angle*(1-light.penumbra));uniforms.decay=light.decay;uniforms.shadow=light.castShadow;if(light.castShadow){var shadow=light.shadow;uniforms.shadowBias=shadow.bias;uniforms.shadowRadius=shadow.radius;uniforms.shadowMapSize=shadow.mapSize;}state.spotShadowMap[spotLength]=shadowMap;state.spotShadowMatrix[spotLength]=light.shadow.matrix;state.spot[spotLength]=uniforms;spotLength++;}else if(light.isRectAreaLight){var uniforms=cache.get(light);// (a) intensity is the total visible light emitted\n//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n// (b) intensity is the brightness of the light\nuniforms.color.copy(color).multiplyScalar(intensity);uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);// extract local rotation of light to derive width/height half vectors\nmatrix42.identity();matrix4.copy(light.matrixWorld);matrix4.premultiply(viewMatrix);matrix42.extractRotation(matrix4);uniforms.halfWidth.set(light.width*0.5,0.0,0.0);uniforms.halfHeight.set(0.0,light.height*0.5,0.0);uniforms.halfWidth.applyMatrix4(matrix42);uniforms.halfHeight.applyMatrix4(matrix42);// TODO (abelnation): RectAreaLight distance?\n// uniforms.distance = distance;\nstate.rectArea[rectAreaLength]=uniforms;rectAreaLength++;}else if(light.isPointLight){var uniforms=cache.get(light);uniforms.position.setFromMatrixPosition(light.matrixWorld);uniforms.position.applyMatrix4(viewMatrix);uniforms.color.copy(light.color).multiplyScalar(light.intensity);uniforms.distance=light.distance;uniforms.decay=light.decay;uniforms.shadow=light.castShadow;if(light.castShadow){var shadow=light.shadow;uniforms.shadowBias=shadow.bias;uniforms.shadowRadius=shadow.radius;uniforms.shadowMapSize=shadow.mapSize;uniforms.shadowCameraNear=shadow.camera.near;uniforms.shadowCameraFar=shadow.camera.far;}state.pointShadowMap[pointLength]=shadowMap;state.pointShadowMatrix[pointLength]=light.shadow.matrix;state.point[pointLength]=uniforms;pointLength++;}else if(light.isHemisphereLight){var uniforms=cache.get(light);uniforms.direction.setFromMatrixPosition(light.matrixWorld);uniforms.direction.transformDirection(viewMatrix);uniforms.direction.normalize();uniforms.skyColor.copy(light.color).multiplyScalar(intensity);uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);state.hemi[hemiLength]=uniforms;hemiLength++;}}state.ambient[0]=r;state.ambient[1]=g;state.ambient[2]=b;state.directional.length=directionalLength;state.spot.length=spotLength;state.rectArea.length=rectAreaLength;state.point.length=pointLength;state.hemi.length=hemiLength;state.hash.stateID=state.id;state.hash.directionalLength=directionalLength;state.hash.pointLength=pointLength;state.hash.spotLength=spotLength;state.hash.rectAreaLength=rectAreaLength;state.hash.hemiLength=hemiLength;state.hash.shadowsLength=shadows.length;}return{setup:setup,state:state};}/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */function WebGLRenderState(){var lights=new WebGLLights();var lightsArray=[];var shadowsArray=[];function init(){lightsArray.length=0;shadowsArray.length=0;}function pushLight(light){lightsArray.push(light);}function pushShadow(shadowLight){shadowsArray.push(shadowLight);}function setupLights(camera){lights.setup(lightsArray,shadowsArray,camera);}var state={lightsArray:lightsArray,shadowsArray:shadowsArray,lights:lights};return{init:init,state:state,setupLights:setupLights,pushLight:pushLight,pushShadow:pushShadow};}function WebGLRenderStates(){var renderStates={};function onSceneDispose(event){var scene=event.target;scene.removeEventListener('dispose',onSceneDispose);delete renderStates[scene.id];}function get(scene,camera){var renderState;if(renderStates[scene.id]===undefined){renderState=new WebGLRenderState();renderStates[scene.id]={};renderStates[scene.id][camera.id]=renderState;scene.addEventListener('dispose',onSceneDispose);}else{if(renderStates[scene.id][camera.id]===undefined){renderState=new WebGLRenderState();renderStates[scene.id][camera.id]=renderState;}else{renderState=renderStates[scene.id][camera.id];}}return renderState;}function dispose(){renderStates={};}return{get:get,dispose:dispose};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */function MeshDepthMaterial(parameters){Material.call(this);this.type='MeshDepthMaterial';this.depthPacking=BasicDepthPacking;this.skinning=false;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.setValues(parameters);}MeshDepthMaterial.prototype=Object.create(Material.prototype);MeshDepthMaterial.prototype.constructor=MeshDepthMaterial;MeshDepthMaterial.prototype.isMeshDepthMaterial=true;MeshDepthMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.depthPacking=source.depthPacking;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;return this;};/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  referencePosition: <float>,\n\t *  nearDistance: <float>,\n\t *  farDistance: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>\n\t *\n\t * }\n\t */function MeshDistanceMaterial(parameters){Material.call(this);this.type='MeshDistanceMaterial';this.referencePosition=new Vector3();this.nearDistance=1;this.farDistance=1000;this.skinning=false;this.morphTargets=false;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.fog=false;this.lights=false;this.setValues(parameters);}MeshDistanceMaterial.prototype=Object.create(Material.prototype);MeshDistanceMaterial.prototype.constructor=MeshDistanceMaterial;MeshDistanceMaterial.prototype.isMeshDistanceMaterial=true;MeshDistanceMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.referencePosition.copy(source.referencePosition);this.nearDistance=source.nearDistance;this.farDistance=source.farDistance;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;return this;};/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */function WebGLShadowMap(_renderer,_objects,maxTextureSize){var _frustum=new Frustum(),_projScreenMatrix=new Matrix4(),_shadowMapSize=new Vector2(),_maxShadowMapSize=new Vector2(maxTextureSize,maxTextureSize),_lookTarget=new Vector3(),_lightPositionWorld=new Vector3(),_MorphingFlag=1,_SkinningFlag=2,_NumberOfMaterialVariants=(_MorphingFlag|_SkinningFlag)+1,_depthMaterials=new Array(_NumberOfMaterialVariants),_distanceMaterials=new Array(_NumberOfMaterialVariants),_materialCache={};var shadowSide={0:BackSide,1:FrontSide,2:DoubleSide};var cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)];var cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)];var cube2DViewPorts=[new Vector4(),new Vector4(),new Vector4(),new Vector4(),new Vector4(),new Vector4()];// init\nfor(var i=0;i!==_NumberOfMaterialVariants;++i){var useMorphing=(i&_MorphingFlag)!==0;var useSkinning=(i&_SkinningFlag)!==0;var depthMaterial=new MeshDepthMaterial({depthPacking:RGBADepthPacking,morphTargets:useMorphing,skinning:useSkinning});_depthMaterials[i]=depthMaterial;//\nvar distanceMaterial=new MeshDistanceMaterial({morphTargets:useMorphing,skinning:useSkinning});_distanceMaterials[i]=distanceMaterial;}//\nvar scope=this;this.enabled=false;this.autoUpdate=true;this.needsUpdate=false;this.type=PCFShadowMap;this.render=function(lights,scene,camera){if(scope.enabled===false)return;if(scope.autoUpdate===false&&scope.needsUpdate===false)return;if(lights.length===0)return;var _state=_renderer.state;// Set GL state for depth map.\n_state.setBlending(NoBlending);_state.buffers.color.setClear(1,1,1,1);_state.buffers.depth.setTest(true);_state.setScissorTest(false);// render depth map\nvar faceCount;for(var i=0,il=lights.length;i<il;i++){var light=lights[i];var shadow=light.shadow;var isPointLight=light&&light.isPointLight;if(shadow===undefined){console.warn('THREE.WebGLShadowMap:',light,'has no shadow.');continue;}var shadowCamera=shadow.camera;_shadowMapSize.copy(shadow.mapSize);_shadowMapSize.min(_maxShadowMapSize);if(isPointLight){var vpWidth=_shadowMapSize.x;var vpHeight=_shadowMapSize.y;// These viewports map a cube-map onto a 2D texture with the\n// following orientation:\n//\n//  xzXZ\n//   y Y\n//\n// X - Positive x direction\n// x - Negative x direction\n// Y - Positive y direction\n// y - Negative y direction\n// Z - Positive z direction\n// z - Negative z direction\n// positive X\ncube2DViewPorts[0].set(vpWidth*2,vpHeight,vpWidth,vpHeight);// negative X\ncube2DViewPorts[1].set(0,vpHeight,vpWidth,vpHeight);// positive Z\ncube2DViewPorts[2].set(vpWidth*3,vpHeight,vpWidth,vpHeight);// negative Z\ncube2DViewPorts[3].set(vpWidth,vpHeight,vpWidth,vpHeight);// positive Y\ncube2DViewPorts[4].set(vpWidth*3,0,vpWidth,vpHeight);// negative Y\ncube2DViewPorts[5].set(vpWidth,0,vpWidth,vpHeight);_shadowMapSize.x*=4.0;_shadowMapSize.y*=2.0;}if(shadow.map===null){var pars={minFilter:NearestFilter,magFilter:NearestFilter,format:RGBAFormat};shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.map.texture.name=light.name+\".shadowMap\";shadowCamera.updateProjectionMatrix();}if(shadow.isSpotLightShadow){shadow.update(light);}var shadowMap=shadow.map;var shadowMatrix=shadow.matrix;_lightPositionWorld.setFromMatrixPosition(light.matrixWorld);shadowCamera.position.copy(_lightPositionWorld);if(isPointLight){faceCount=6;// for point lights we set the shadow matrix to be a translation-only matrix\n// equal to inverse of the light's position\nshadowMatrix.makeTranslation(-_lightPositionWorld.x,-_lightPositionWorld.y,-_lightPositionWorld.z);}else{faceCount=1;_lookTarget.setFromMatrixPosition(light.target.matrixWorld);shadowCamera.lookAt(_lookTarget);shadowCamera.updateMatrixWorld();// compute shadow matrix\nshadowMatrix.set(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);shadowMatrix.multiply(shadowCamera.projectionMatrix);shadowMatrix.multiply(shadowCamera.matrixWorldInverse);}_renderer.setRenderTarget(shadowMap);_renderer.clear();// render shadow map for each cube face (if omni-directional) or\n// run a single pass if not\nfor(var face=0;face<faceCount;face++){if(isPointLight){_lookTarget.copy(shadowCamera.position);_lookTarget.add(cubeDirections[face]);shadowCamera.up.copy(cubeUps[face]);shadowCamera.lookAt(_lookTarget);shadowCamera.updateMatrixWorld();var vpDimensions=cube2DViewPorts[face];_state.viewport(vpDimensions);}// update camera matrices and frustum\n_projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix,shadowCamera.matrixWorldInverse);_frustum.setFromMatrix(_projScreenMatrix);// set object matrices & frustum culling\nrenderObject(scene,camera,shadowCamera,isPointLight);}}scope.needsUpdate=false;};function getDepthMaterial(object,material,isPointLight,lightPositionWorld,shadowCameraNear,shadowCameraFar){var geometry=object.geometry;var result=null;var materialVariants=_depthMaterials;var customMaterial=object.customDepthMaterial;if(isPointLight){materialVariants=_distanceMaterials;customMaterial=object.customDistanceMaterial;}if(!customMaterial){var useMorphing=false;if(material.morphTargets){if(geometry&&geometry.isBufferGeometry){useMorphing=geometry.morphAttributes&&geometry.morphAttributes.position&&geometry.morphAttributes.position.length>0;}else if(geometry&&geometry.isGeometry){useMorphing=geometry.morphTargets&&geometry.morphTargets.length>0;}}if(object.isSkinnedMesh&&material.skinning===false){console.warn('THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:',object);}var useSkinning=object.isSkinnedMesh&&material.skinning;var variantIndex=0;if(useMorphing)variantIndex|=_MorphingFlag;if(useSkinning)variantIndex|=_SkinningFlag;result=materialVariants[variantIndex];}else{result=customMaterial;}if(_renderer.localClippingEnabled&&material.clipShadows===true&&material.clippingPlanes.length!==0){// in this case we need a unique material instance reflecting the\n// appropriate state\nvar keyA=result.uuid,keyB=material.uuid;var materialsForVariant=_materialCache[keyA];if(materialsForVariant===undefined){materialsForVariant={};_materialCache[keyA]=materialsForVariant;}var cachedMaterial=materialsForVariant[keyB];if(cachedMaterial===undefined){cachedMaterial=result.clone();materialsForVariant[keyB]=cachedMaterial;}result=cachedMaterial;}result.visible=material.visible;result.wireframe=material.wireframe;result.side=material.shadowSide!=null?material.shadowSide:shadowSide[material.side];result.clipShadows=material.clipShadows;result.clippingPlanes=material.clippingPlanes;result.clipIntersection=material.clipIntersection;result.wireframeLinewidth=material.wireframeLinewidth;result.linewidth=material.linewidth;if(isPointLight&&result.isMeshDistanceMaterial){result.referencePosition.copy(lightPositionWorld);result.nearDistance=shadowCameraNear;result.farDistance=shadowCameraFar;}return result;}function renderObject(object,camera,shadowCamera,isPointLight){if(object.visible===false)return;var visible=object.layers.test(camera.layers);if(visible&&(object.isMesh||object.isLine||object.isPoints)){if(object.castShadow&&(!object.frustumCulled||_frustum.intersectsObject(object))){object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld);var geometry=_objects.update(object);var material=object.material;if(Array.isArray(material)){var groups=geometry.groups;for(var k=0,kl=groups.length;k<kl;k++){var group=groups[k];var groupMaterial=material[group.materialIndex];if(groupMaterial&&groupMaterial.visible){var depthMaterial=getDepthMaterial(object,groupMaterial,isPointLight,_lightPositionWorld,shadowCamera.near,shadowCamera.far);_renderer.renderBufferDirect(shadowCamera,null,geometry,depthMaterial,object,group);}}}else if(material.visible){var depthMaterial=getDepthMaterial(object,material,isPointLight,_lightPositionWorld,shadowCamera.near,shadowCamera.far);_renderer.renderBufferDirect(shadowCamera,null,geometry,depthMaterial,object,null);}}}var children=object.children;for(var i=0,l=children.length;i<l;i++){renderObject(children[i],camera,shadowCamera,isPointLight);}}}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function WebGLState(gl,extensions,utils,capabilities){function ColorBuffer(){var locked=false;var color=new Vector4();var currentColorMask=null;var currentColorClear=new Vector4(0,0,0,0);return{setMask:function(colorMask){if(currentColorMask!==colorMask&&!locked){gl.colorMask(colorMask,colorMask,colorMask,colorMask);currentColorMask=colorMask;}},setLocked:function(lock){locked=lock;},setClear:function(r,g,b,a,premultipliedAlpha){if(premultipliedAlpha===true){r*=a;g*=a;b*=a;}color.set(r,g,b,a);if(currentColorClear.equals(color)===false){gl.clearColor(r,g,b,a);currentColorClear.copy(color);}},reset:function(){locked=false;currentColorMask=null;currentColorClear.set(-1,0,0,0);// set to invalid state\n}};}function DepthBuffer(){var locked=false;var currentDepthMask=null;var currentDepthFunc=null;var currentDepthClear=null;return{setTest:function(depthTest){if(depthTest){enable(2929);}else{disable(2929);}},setMask:function(depthMask){if(currentDepthMask!==depthMask&&!locked){gl.depthMask(depthMask);currentDepthMask=depthMask;}},setFunc:function(depthFunc){if(currentDepthFunc!==depthFunc){if(depthFunc){switch(depthFunc){case NeverDepth:gl.depthFunc(512);break;case AlwaysDepth:gl.depthFunc(519);break;case LessDepth:gl.depthFunc(513);break;case LessEqualDepth:gl.depthFunc(515);break;case EqualDepth:gl.depthFunc(514);break;case GreaterEqualDepth:gl.depthFunc(518);break;case GreaterDepth:gl.depthFunc(516);break;case NotEqualDepth:gl.depthFunc(517);break;default:gl.depthFunc(515);}}else{gl.depthFunc(515);}currentDepthFunc=depthFunc;}},setLocked:function(lock){locked=lock;},setClear:function(depth){if(currentDepthClear!==depth){gl.clearDepth(depth);currentDepthClear=depth;}},reset:function(){locked=false;currentDepthMask=null;currentDepthFunc=null;currentDepthClear=null;}};}function StencilBuffer(){var locked=false;var currentStencilMask=null;var currentStencilFunc=null;var currentStencilRef=null;var currentStencilFuncMask=null;var currentStencilFail=null;var currentStencilZFail=null;var currentStencilZPass=null;var currentStencilClear=null;return{setTest:function(stencilTest){if(stencilTest){enable(2960);}else{disable(2960);}},setMask:function(stencilMask){if(currentStencilMask!==stencilMask&&!locked){gl.stencilMask(stencilMask);currentStencilMask=stencilMask;}},setFunc:function(stencilFunc,stencilRef,stencilMask){if(currentStencilFunc!==stencilFunc||currentStencilRef!==stencilRef||currentStencilFuncMask!==stencilMask){gl.stencilFunc(stencilFunc,stencilRef,stencilMask);currentStencilFunc=stencilFunc;currentStencilRef=stencilRef;currentStencilFuncMask=stencilMask;}},setOp:function(stencilFail,stencilZFail,stencilZPass){if(currentStencilFail!==stencilFail||currentStencilZFail!==stencilZFail||currentStencilZPass!==stencilZPass){gl.stencilOp(stencilFail,stencilZFail,stencilZPass);currentStencilFail=stencilFail;currentStencilZFail=stencilZFail;currentStencilZPass=stencilZPass;}},setLocked:function(lock){locked=lock;},setClear:function(stencil){if(currentStencilClear!==stencil){gl.clearStencil(stencil);currentStencilClear=stencil;}},reset:function(){locked=false;currentStencilMask=null;currentStencilFunc=null;currentStencilRef=null;currentStencilFuncMask=null;currentStencilFail=null;currentStencilZFail=null;currentStencilZPass=null;currentStencilClear=null;}};}//\nvar colorBuffer=new ColorBuffer();var depthBuffer=new DepthBuffer();var stencilBuffer=new StencilBuffer();var maxVertexAttributes=gl.getParameter(34921);var newAttributes=new Uint8Array(maxVertexAttributes);var enabledAttributes=new Uint8Array(maxVertexAttributes);var attributeDivisors=new Uint8Array(maxVertexAttributes);var enabledCapabilities={};var compressedTextureFormats=null;var currentProgram=null;var currentBlendingEnabled=null;var currentBlending=null;var currentBlendEquation=null;var currentBlendSrc=null;var currentBlendDst=null;var currentBlendEquationAlpha=null;var currentBlendSrcAlpha=null;var currentBlendDstAlpha=null;var currentPremultipledAlpha=false;var currentFlipSided=null;var currentCullFace=null;var currentLineWidth=null;var currentPolygonOffsetFactor=null;var currentPolygonOffsetUnits=null;var maxTextures=gl.getParameter(35661);var lineWidthAvailable=false;var version=0;var glVersion=gl.getParameter(7938);if(glVersion.indexOf('WebGL')!==-1){version=parseFloat(/^WebGL\\ ([0-9])/.exec(glVersion)[1]);lineWidthAvailable=version>=1.0;}else if(glVersion.indexOf('OpenGL ES')!==-1){version=parseFloat(/^OpenGL\\ ES\\ ([0-9])/.exec(glVersion)[1]);lineWidthAvailable=version>=2.0;}var currentTextureSlot=null;var currentBoundTextures={};var currentScissor=new Vector4();var currentViewport=new Vector4();function createTexture(type,target,count){var data=new Uint8Array(4);// 4 is required to match default unpack alignment of 4.\nvar texture=gl.createTexture();gl.bindTexture(type,texture);gl.texParameteri(type,10241,9728);gl.texParameteri(type,10240,9728);for(var i=0;i<count;i++){gl.texImage2D(target+i,0,6408,1,1,0,6408,5121,data);}return texture;}var emptyTextures={};emptyTextures[3553]=createTexture(3553,3553,1);emptyTextures[34067]=createTexture(34067,34069,6);// init\ncolorBuffer.setClear(0,0,0,1);depthBuffer.setClear(1);stencilBuffer.setClear(0);enable(2929);depthBuffer.setFunc(LessEqualDepth);setFlipSided(false);setCullFace(CullFaceBack);enable(2884);setBlending(NoBlending);//\nfunction initAttributes(){for(var i=0,l=newAttributes.length;i<l;i++){newAttributes[i]=0;}}function enableAttribute(attribute){enableAttributeAndDivisor(attribute,0);}function enableAttributeAndDivisor(attribute,meshPerAttribute){newAttributes[attribute]=1;if(enabledAttributes[attribute]===0){gl.enableVertexAttribArray(attribute);enabledAttributes[attribute]=1;}if(attributeDivisors[attribute]!==meshPerAttribute){var extension=capabilities.isWebGL2?gl:extensions.get('ANGLE_instanced_arrays');extension[capabilities.isWebGL2?'vertexAttribDivisor':'vertexAttribDivisorANGLE'](attribute,meshPerAttribute);attributeDivisors[attribute]=meshPerAttribute;}}function disableUnusedAttributes(){for(var i=0,l=enabledAttributes.length;i!==l;++i){if(enabledAttributes[i]!==newAttributes[i]){gl.disableVertexAttribArray(i);enabledAttributes[i]=0;}}}function enable(id){if(enabledCapabilities[id]!==true){gl.enable(id);enabledCapabilities[id]=true;}}function disable(id){if(enabledCapabilities[id]!==false){gl.disable(id);enabledCapabilities[id]=false;}}function getCompressedTextureFormats(){if(compressedTextureFormats===null){compressedTextureFormats=[];if(extensions.get('WEBGL_compressed_texture_pvrtc')||extensions.get('WEBGL_compressed_texture_s3tc')||extensions.get('WEBGL_compressed_texture_etc1')||extensions.get('WEBGL_compressed_texture_astc')){var formats=gl.getParameter(34467);for(var i=0;i<formats.length;i++){compressedTextureFormats.push(formats[i]);}}}return compressedTextureFormats;}function useProgram(program){if(currentProgram!==program){gl.useProgram(program);currentProgram=program;return true;}return false;}function setBlending(blending,blendEquation,blendSrc,blendDst,blendEquationAlpha,blendSrcAlpha,blendDstAlpha,premultipliedAlpha){if(blending===NoBlending){if(currentBlendingEnabled){disable(3042);currentBlendingEnabled=false;}return;}if(!currentBlendingEnabled){enable(3042);currentBlendingEnabled=true;}if(blending!==CustomBlending){if(blending!==currentBlending||premultipliedAlpha!==currentPremultipledAlpha){if(currentBlendEquation!==AddEquation||currentBlendEquationAlpha!==AddEquation){gl.blendEquation(32774);currentBlendEquation=AddEquation;currentBlendEquationAlpha=AddEquation;}if(premultipliedAlpha){switch(blending){case NormalBlending:gl.blendFuncSeparate(1,771,1,771);break;case AdditiveBlending:gl.blendFunc(1,1);break;case SubtractiveBlending:gl.blendFuncSeparate(0,0,769,771);break;case MultiplyBlending:gl.blendFuncSeparate(0,768,0,770);break;default:console.error('THREE.WebGLState: Invalid blending: ',blending);break;}}else{switch(blending){case NormalBlending:gl.blendFuncSeparate(770,771,1,771);break;case AdditiveBlending:gl.blendFunc(770,1);break;case SubtractiveBlending:gl.blendFunc(0,769);break;case MultiplyBlending:gl.blendFunc(0,768);break;default:console.error('THREE.WebGLState: Invalid blending: ',blending);break;}}currentBlendSrc=null;currentBlendDst=null;currentBlendSrcAlpha=null;currentBlendDstAlpha=null;currentBlending=blending;currentPremultipledAlpha=premultipliedAlpha;}return;}// custom blending\nblendEquationAlpha=blendEquationAlpha||blendEquation;blendSrcAlpha=blendSrcAlpha||blendSrc;blendDstAlpha=blendDstAlpha||blendDst;if(blendEquation!==currentBlendEquation||blendEquationAlpha!==currentBlendEquationAlpha){gl.blendEquationSeparate(utils.convert(blendEquation),utils.convert(blendEquationAlpha));currentBlendEquation=blendEquation;currentBlendEquationAlpha=blendEquationAlpha;}if(blendSrc!==currentBlendSrc||blendDst!==currentBlendDst||blendSrcAlpha!==currentBlendSrcAlpha||blendDstAlpha!==currentBlendDstAlpha){gl.blendFuncSeparate(utils.convert(blendSrc),utils.convert(blendDst),utils.convert(blendSrcAlpha),utils.convert(blendDstAlpha));currentBlendSrc=blendSrc;currentBlendDst=blendDst;currentBlendSrcAlpha=blendSrcAlpha;currentBlendDstAlpha=blendDstAlpha;}currentBlending=blending;currentPremultipledAlpha=null;}function setMaterial(material,frontFaceCW){material.side===DoubleSide?disable(2884):enable(2884);var flipSided=material.side===BackSide;if(frontFaceCW)flipSided=!flipSided;setFlipSided(flipSided);material.blending===NormalBlending&&material.transparent===false?setBlending(NoBlending):setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst,material.blendEquationAlpha,material.blendSrcAlpha,material.blendDstAlpha,material.premultipliedAlpha);depthBuffer.setFunc(material.depthFunc);depthBuffer.setTest(material.depthTest);depthBuffer.setMask(material.depthWrite);colorBuffer.setMask(material.colorWrite);setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits);}//\nfunction setFlipSided(flipSided){if(currentFlipSided!==flipSided){if(flipSided){gl.frontFace(2304);}else{gl.frontFace(2305);}currentFlipSided=flipSided;}}function setCullFace(cullFace){if(cullFace!==CullFaceNone){enable(2884);if(cullFace!==currentCullFace){if(cullFace===CullFaceBack){gl.cullFace(1029);}else if(cullFace===CullFaceFront){gl.cullFace(1028);}else{gl.cullFace(1032);}}}else{disable(2884);}currentCullFace=cullFace;}function setLineWidth(width){if(width!==currentLineWidth){if(lineWidthAvailable)gl.lineWidth(width);currentLineWidth=width;}}function setPolygonOffset(polygonOffset,factor,units){if(polygonOffset){enable(32823);if(currentPolygonOffsetFactor!==factor||currentPolygonOffsetUnits!==units){gl.polygonOffset(factor,units);currentPolygonOffsetFactor=factor;currentPolygonOffsetUnits=units;}}else{disable(32823);}}function setScissorTest(scissorTest){if(scissorTest){enable(3089);}else{disable(3089);}}// texture\nfunction activeTexture(webglSlot){if(webglSlot===undefined)webglSlot=33984+maxTextures-1;if(currentTextureSlot!==webglSlot){gl.activeTexture(webglSlot);currentTextureSlot=webglSlot;}}function bindTexture(webglType,webglTexture){if(currentTextureSlot===null){activeTexture();}var boundTexture=currentBoundTextures[currentTextureSlot];if(boundTexture===undefined){boundTexture={type:undefined,texture:undefined};currentBoundTextures[currentTextureSlot]=boundTexture;}if(boundTexture.type!==webglType||boundTexture.texture!==webglTexture){gl.bindTexture(webglType,webglTexture||emptyTextures[webglType]);boundTexture.type=webglType;boundTexture.texture=webglTexture;}}function compressedTexImage2D(){try{gl.compressedTexImage2D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}function texImage2D(){try{gl.texImage2D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}function texImage3D(){try{gl.texImage3D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}//\nfunction scissor(scissor){if(currentScissor.equals(scissor)===false){gl.scissor(scissor.x,scissor.y,scissor.z,scissor.w);currentScissor.copy(scissor);}}function viewport(viewport){if(currentViewport.equals(viewport)===false){gl.viewport(viewport.x,viewport.y,viewport.z,viewport.w);currentViewport.copy(viewport);}}//\nfunction reset(){for(var i=0;i<enabledAttributes.length;i++){if(enabledAttributes[i]===1){gl.disableVertexAttribArray(i);enabledAttributes[i]=0;}}enabledCapabilities={};compressedTextureFormats=null;currentTextureSlot=null;currentBoundTextures={};currentProgram=null;currentBlending=null;currentFlipSided=null;currentCullFace=null;colorBuffer.reset();depthBuffer.reset();stencilBuffer.reset();}return{buffers:{color:colorBuffer,depth:depthBuffer,stencil:stencilBuffer},initAttributes:initAttributes,enableAttribute:enableAttribute,enableAttributeAndDivisor:enableAttributeAndDivisor,disableUnusedAttributes:disableUnusedAttributes,enable:enable,disable:disable,getCompressedTextureFormats:getCompressedTextureFormats,useProgram:useProgram,setBlending:setBlending,setMaterial:setMaterial,setFlipSided:setFlipSided,setCullFace:setCullFace,setLineWidth:setLineWidth,setPolygonOffset:setPolygonOffset,setScissorTest:setScissorTest,activeTexture:activeTexture,bindTexture:bindTexture,compressedTexImage2D:compressedTexImage2D,texImage2D:texImage2D,texImage3D:texImage3D,scissor:scissor,viewport:viewport,reset:reset};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info){var _videoTextures={};var _canvas;//\nfunction resizeImage(image,needsPowerOfTwo,needsNewCanvas,maxSize){var scale=1;// handle case if texture exceeds max size\nif(image.width>maxSize||image.height>maxSize){scale=maxSize/Math.max(image.width,image.height);}// only perform resize if necessary\nif(scale<1||needsPowerOfTwo===true){// only perform resize for certain image types\nif(image instanceof HTMLImageElement||image instanceof HTMLCanvasElement||image instanceof ImageBitmap){if(_canvas===undefined)_canvas=document.createElementNS('http://www.w3.org/1999/xhtml','canvas');// cube textures can't reuse the same canvas\nvar canvas=needsNewCanvas?document.createElementNS('http://www.w3.org/1999/xhtml','canvas'):_canvas;var floor=needsPowerOfTwo?_Math.floorPowerOfTwo:Math.floor;canvas.width=floor(scale*image.width);canvas.height=floor(scale*image.height);var context=canvas.getContext('2d');context.drawImage(image,0,0,canvas.width,canvas.height);console.warn('THREE.WebGLRenderer: Texture has been resized from ('+image.width+'x'+image.height+') to ('+canvas.width+'x'+canvas.height+').');return canvas;}else{if('data'in image){console.warn('THREE.WebGLRenderer: Image in DataTexture is too big ('+image.width+'x'+image.height+').');}return image;}}return image;}function isPowerOfTwo(image){return _Math.isPowerOfTwo(image.width)&&_Math.isPowerOfTwo(image.height);}function textureNeedsPowerOfTwo(texture){if(capabilities.isWebGL2)return false;return texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping||texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter;}function textureNeedsGenerateMipmaps(texture,supportsMips){return texture.generateMipmaps&&supportsMips&&texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter;}function generateMipmap(target,texture,width,height){_gl.generateMipmap(target);var textureProperties=properties.get(texture);// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\ntextureProperties.__maxMipLevel=Math.log(Math.max(width,height))*Math.LOG2E;}function getInternalFormat(glFormat,glType){if(!capabilities.isWebGL2)return glFormat;var internalFormat=glFormat;if(glFormat===6403){if(glType===5126)internalFormat=33326;if(glType===5131)internalFormat=33325;if(glType===5121)internalFormat=33321;}if(glFormat===6407){if(glType===5126)internalFormat=34837;if(glType===5131)internalFormat=34843;if(glType===5121)internalFormat=32849;}if(glFormat===6408){if(glType===5126)internalFormat=34836;if(glType===5131)internalFormat=34842;if(glType===5121)internalFormat=32856;}if(internalFormat===33325||internalFormat===33326||internalFormat===34842||internalFormat===34836){extensions.get('EXT_color_buffer_float');}else if(internalFormat===34843||internalFormat===34837){console.warn('THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead.');}return internalFormat;}// Fallback filters for non-power-of-2 textures\nfunction filterFallback(f){if(f===NearestFilter||f===NearestMipMapNearestFilter||f===NearestMipMapLinearFilter){return 9728;}return 9729;}//\nfunction onTextureDispose(event){var texture=event.target;texture.removeEventListener('dispose',onTextureDispose);deallocateTexture(texture);if(texture.isVideoTexture){delete _videoTextures[texture.id];}info.memory.textures--;}function onRenderTargetDispose(event){var renderTarget=event.target;renderTarget.removeEventListener('dispose',onRenderTargetDispose);deallocateRenderTarget(renderTarget);info.memory.textures--;}//\nfunction deallocateTexture(texture){var textureProperties=properties.get(texture);if(texture.image&&textureProperties.__image__webglTextureCube){// cube texture\n_gl.deleteTexture(textureProperties.__image__webglTextureCube);}else{// 2D texture\nif(textureProperties.__webglInit===undefined)return;_gl.deleteTexture(textureProperties.__webglTexture);}// remove all webgl properties\nproperties.remove(texture);}function deallocateRenderTarget(renderTarget){var renderTargetProperties=properties.get(renderTarget);var textureProperties=properties.get(renderTarget.texture);if(!renderTarget)return;if(textureProperties.__webglTexture!==undefined){_gl.deleteTexture(textureProperties.__webglTexture);}if(renderTarget.depthTexture){renderTarget.depthTexture.dispose();}if(renderTarget.isWebGLRenderTargetCube){for(var i=0;i<6;i++){_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);if(renderTargetProperties.__webglDepthbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);}}else{_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);if(renderTargetProperties.__webglDepthbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);}properties.remove(renderTarget.texture);properties.remove(renderTarget);}//\nfunction setTexture2D(texture,slot){var textureProperties=properties.get(texture);if(texture.isVideoTexture)updateVideoTexture(texture);if(texture.version>0&&textureProperties.__version!==texture.version){var image=texture.image;if(image===undefined){console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');}else if(image.complete===false){console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');}else{uploadTexture(textureProperties,texture,slot);return;}}state.activeTexture(33984+slot);state.bindTexture(3553,textureProperties.__webglTexture);}function setTexture3D(texture,slot){var textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(32879,textureProperties.__webglTexture);}function setTextureCube(texture,slot){var textureProperties=properties.get(texture);if(texture.image.length===6){if(texture.version>0&&textureProperties.__version!==texture.version){if(!textureProperties.__image__webglTextureCube){texture.addEventListener('dispose',onTextureDispose);textureProperties.__image__webglTextureCube=_gl.createTexture();info.memory.textures++;}state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__image__webglTextureCube);_gl.pixelStorei(37440,texture.flipY);var isCompressed=texture&&texture.isCompressedTexture;var isDataTexture=texture.image[0]&&texture.image[0].isDataTexture;var cubeImage=[];for(var i=0;i<6;i++){if(!isCompressed&&!isDataTexture){cubeImage[i]=resizeImage(texture.image[i],false,true,capabilities.maxCubemapSize);}else{cubeImage[i]=isDataTexture?texture.image[i].image:texture.image[i];}}var image=cubeImage[0],supportsMips=isPowerOfTwo(image)||capabilities.isWebGL2,glFormat=utils.convert(texture.format),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(glFormat,glType);setTextureParameters(34067,texture,supportsMips);for(var i=0;i<6;i++){if(!isCompressed){if(isDataTexture){state.texImage2D(34069+i,0,glInternalFormat,cubeImage[i].width,cubeImage[i].height,0,glFormat,glType,cubeImage[i].data);}else{state.texImage2D(34069+i,0,glInternalFormat,glFormat,glType,cubeImage[i]);}}else{var mipmap,mipmaps=cubeImage[i].mipmaps;for(var j=0,jl=mipmaps.length;j<jl;j++){mipmap=mipmaps[j];if(texture.format!==RGBAFormat&&texture.format!==RGBFormat){if(state.getCompressedTextureFormats().indexOf(glFormat)>-1){state.compressedTexImage2D(34069+i,j,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');}}else{state.texImage2D(34069+i,j,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}}}if(!isCompressed){textureProperties.__maxMipLevel=0;}else{textureProperties.__maxMipLevel=mipmaps.length-1;}if(textureNeedsGenerateMipmaps(texture,supportsMips)){// We assume images for cube map have the same size.\ngenerateMipmap(34067,texture,image.width,image.height);}textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture);}else{state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__image__webglTextureCube);}}}function setTextureCubeDynamic(texture,slot){state.activeTexture(33984+slot);state.bindTexture(34067,properties.get(texture).__webglTexture);}function setTextureParameters(textureType,texture,supportsMips){var extension;if(supportsMips){_gl.texParameteri(textureType,10242,utils.convert(texture.wrapS));_gl.texParameteri(textureType,10243,utils.convert(texture.wrapT));_gl.texParameteri(textureType,10240,utils.convert(texture.magFilter));_gl.texParameteri(textureType,10241,utils.convert(texture.minFilter));}else{_gl.texParameteri(textureType,10242,33071);_gl.texParameteri(textureType,10243,33071);if(texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping){console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');}_gl.texParameteri(textureType,10240,filterFallback(texture.magFilter));_gl.texParameteri(textureType,10241,filterFallback(texture.minFilter));if(texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter){console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');}}extension=extensions.get('EXT_texture_filter_anisotropic');if(extension){if(texture.type===FloatType&&extensions.get('OES_texture_float_linear')===null)return;if(texture.type===HalfFloatType&&(capabilities.isWebGL2||extensions.get('OES_texture_half_float_linear'))===null)return;if(texture.anisotropy>1||properties.get(texture).__currentAnisotropy){_gl.texParameterf(textureType,extension.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texture.anisotropy,capabilities.getMaxAnisotropy()));properties.get(texture).__currentAnisotropy=texture.anisotropy;}}}function uploadTexture(textureProperties,texture,slot){var textureType;if(texture.isDataTexture3D){textureType=32879;}else{textureType=3553;}if(textureProperties.__webglInit===undefined){textureProperties.__webglInit=true;texture.addEventListener('dispose',onTextureDispose);textureProperties.__webglTexture=_gl.createTexture();info.memory.textures++;}state.activeTexture(33984+slot);state.bindTexture(textureType,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);_gl.pixelStorei(37441,texture.premultiplyAlpha);_gl.pixelStorei(3317,texture.unpackAlignment);var needsPowerOfTwo=textureNeedsPowerOfTwo(texture)&&isPowerOfTwo(texture.image)===false;var image=resizeImage(texture.image,needsPowerOfTwo,false,capabilities.maxTextureSize);var supportsMips=isPowerOfTwo(image)||capabilities.isWebGL2,glFormat=utils.convert(texture.format),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(glFormat,glType);setTextureParameters(textureType,texture,supportsMips);var mipmap,mipmaps=texture.mipmaps;if(texture.isDepthTexture){// populate depth texture with dummy data\nglInternalFormat=6402;if(texture.type===FloatType){if(!capabilities.isWebGL2)throw new Error('Float Depth Texture only supported in WebGL2.0');glInternalFormat=36012;}else if(capabilities.isWebGL2){// WebGL 2.0 requires signed internalformat for glTexImage2D\nglInternalFormat=33189;}if(texture.format===DepthFormat&&glInternalFormat===6402){// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nif(texture.type!==UnsignedShortType&&texture.type!==UnsignedIntType){console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');texture.type=UnsignedShortType;glType=utils.convert(texture.type);}}// Depth stencil textures need the DEPTH_STENCIL internal format\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nif(texture.format===DepthStencilFormat){glInternalFormat=34041;// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nif(texture.type!==UnsignedInt248Type){console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');texture.type=UnsignedInt248Type;glType=utils.convert(texture.type);}}state.texImage2D(3553,0,glInternalFormat,image.width,image.height,0,glFormat,glType,null);}else if(texture.isDataTexture){// use manually created mipmaps if available\n// if there are no manual mipmaps\n// set 0 level mipmap and then use GL to generate other mipmap levels\nif(mipmaps.length>0&&supportsMips){for(var i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];state.texImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}texture.generateMipmaps=false;textureProperties.__maxMipLevel=mipmaps.length-1;}else{state.texImage2D(3553,0,glInternalFormat,image.width,image.height,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}}else if(texture.isCompressedTexture){for(var i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];if(texture.format!==RGBAFormat&&texture.format!==RGBFormat){if(state.getCompressedTextureFormats().indexOf(glFormat)>-1){state.compressedTexImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');}}else{state.texImage2D(3553,i,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}textureProperties.__maxMipLevel=mipmaps.length-1;}else if(texture.isDataTexture3D){state.texImage3D(32879,0,glInternalFormat,image.width,image.height,image.depth,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}else{// regular Texture (image, video, canvas)\n// use manually created mipmaps if available\n// if there are no manual mipmaps\n// set 0 level mipmap and then use GL to generate other mipmap levels\nif(mipmaps.length>0&&supportsMips){for(var i=0,il=mipmaps.length;i<il;i++){mipmap=mipmaps[i];state.texImage2D(3553,i,glInternalFormat,glFormat,glType,mipmap);}texture.generateMipmaps=false;textureProperties.__maxMipLevel=mipmaps.length-1;}else{state.texImage2D(3553,0,glInternalFormat,glFormat,glType,image);textureProperties.__maxMipLevel=0;}}if(textureNeedsGenerateMipmaps(texture,supportsMips)){generateMipmap(3553,texture,image.width,image.height);}textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture);}// Render targets\n// Setup storage for target texture and bind it to correct framebuffer\nfunction setupFrameBufferTexture(framebuffer,renderTarget,attachment,textureTarget){var glFormat=utils.convert(renderTarget.texture.format);var glType=utils.convert(renderTarget.texture.type);var glInternalFormat=getInternalFormat(glFormat,glType);state.texImage2D(textureTarget,0,glInternalFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null);_gl.bindFramebuffer(36160,framebuffer);_gl.framebufferTexture2D(36160,attachment,textureTarget,properties.get(renderTarget.texture).__webglTexture,0);_gl.bindFramebuffer(36160,null);}// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\nfunction setupRenderBufferStorage(renderbuffer,renderTarget,isMultisample){_gl.bindRenderbuffer(36161,renderbuffer);if(renderTarget.depthBuffer&&!renderTarget.stencilBuffer){if(isMultisample){var samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,33189,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,33189,renderTarget.width,renderTarget.height);}_gl.framebufferRenderbuffer(36160,36096,36161,renderbuffer);}else if(renderTarget.depthBuffer&&renderTarget.stencilBuffer){if(isMultisample){var samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,34041,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,34041,renderTarget.width,renderTarget.height);}_gl.framebufferRenderbuffer(36160,33306,36161,renderbuffer);}else{var glFormat=utils.convert(renderTarget.texture.format);var glType=utils.convert(renderTarget.texture.type);var glInternalFormat=getInternalFormat(glFormat,glType);if(isMultisample){var samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,glInternalFormat,renderTarget.width,renderTarget.height);}}_gl.bindRenderbuffer(36161,null);}// Setup resources for a Depth Texture for a FBO (needs an extension)\nfunction setupDepthTexture(framebuffer,renderTarget){var isCube=renderTarget&&renderTarget.isWebGLRenderTargetCube;if(isCube)throw new Error('Depth Texture with cube render targets is not supported');_gl.bindFramebuffer(36160,framebuffer);if(!(renderTarget.depthTexture&&renderTarget.depthTexture.isDepthTexture)){throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');}// upload an empty depth texture with framebuffer size\nif(!properties.get(renderTarget.depthTexture).__webglTexture||renderTarget.depthTexture.image.width!==renderTarget.width||renderTarget.depthTexture.image.height!==renderTarget.height){renderTarget.depthTexture.image.width=renderTarget.width;renderTarget.depthTexture.image.height=renderTarget.height;renderTarget.depthTexture.needsUpdate=true;}setTexture2D(renderTarget.depthTexture,0);var webglDepthTexture=properties.get(renderTarget.depthTexture).__webglTexture;if(renderTarget.depthTexture.format===DepthFormat){_gl.framebufferTexture2D(36160,36096,3553,webglDepthTexture,0);}else if(renderTarget.depthTexture.format===DepthStencilFormat){_gl.framebufferTexture2D(36160,33306,3553,webglDepthTexture,0);}else{throw new Error('Unknown depthTexture format');}}// Setup GL resources for a non-texture depth buffer\nfunction setupDepthRenderbuffer(renderTarget){var renderTargetProperties=properties.get(renderTarget);var isCube=renderTarget.isWebGLRenderTargetCube===true;if(renderTarget.depthTexture){if(isCube)throw new Error('target.depthTexture not supported in Cube render targets');setupDepthTexture(renderTargetProperties.__webglFramebuffer,renderTarget);}else{if(isCube){renderTargetProperties.__webglDepthbuffer=[];for(var i=0;i<6;i++){_gl.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer[i]);renderTargetProperties.__webglDepthbuffer[i]=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i],renderTarget);}}else{_gl.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer);renderTargetProperties.__webglDepthbuffer=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer,renderTarget);}}_gl.bindFramebuffer(36160,null);}// Set up GL resources for the render target\nfunction setupRenderTarget(renderTarget){var renderTargetProperties=properties.get(renderTarget);var textureProperties=properties.get(renderTarget.texture);renderTarget.addEventListener('dispose',onRenderTargetDispose);textureProperties.__webglTexture=_gl.createTexture();info.memory.textures++;var isCube=renderTarget.isWebGLRenderTargetCube===true;var isMultisample=renderTarget.isWebGLMultisampleRenderTarget===true;var supportsMips=isPowerOfTwo(renderTarget)||capabilities.isWebGL2;// Setup framebuffer\nif(isCube){renderTargetProperties.__webglFramebuffer=[];for(var i=0;i<6;i++){renderTargetProperties.__webglFramebuffer[i]=_gl.createFramebuffer();}}else{renderTargetProperties.__webglFramebuffer=_gl.createFramebuffer();if(isMultisample){if(capabilities.isWebGL2){renderTargetProperties.__webglMultisampledFramebuffer=_gl.createFramebuffer();renderTargetProperties.__webglColorRenderbuffer=_gl.createRenderbuffer();_gl.bindRenderbuffer(36161,renderTargetProperties.__webglColorRenderbuffer);var glFormat=utils.convert(renderTarget.texture.format);var glType=utils.convert(renderTarget.texture.type);var glInternalFormat=getInternalFormat(glFormat,glType);var samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);_gl.bindFramebuffer(36160,renderTargetProperties.__webglMultisampledFramebuffer);_gl.framebufferRenderbuffer(36160,36064,36161,renderTargetProperties.__webglColorRenderbuffer);_gl.bindRenderbuffer(36161,null);if(renderTarget.depthBuffer){renderTargetProperties.__webglDepthRenderbuffer=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer,renderTarget,true);}_gl.bindFramebuffer(36160,null);}else{console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');}}}// Setup color buffer\nif(isCube){state.bindTexture(34067,textureProperties.__webglTexture);setTextureParameters(34067,renderTarget.texture,supportsMips);for(var i=0;i<6;i++){setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i],renderTarget,36064,34069+i);}if(textureNeedsGenerateMipmaps(renderTarget.texture,supportsMips)){generateMipmap(34067,renderTarget.texture,renderTarget.width,renderTarget.height);}state.bindTexture(34067,null);}else{state.bindTexture(3553,textureProperties.__webglTexture);setTextureParameters(3553,renderTarget.texture,supportsMips);setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,36064,3553);if(textureNeedsGenerateMipmaps(renderTarget.texture,supportsMips)){generateMipmap(3553,renderTarget.texture,renderTarget.width,renderTarget.height);}state.bindTexture(3553,null);}// Setup depth and stencil buffers\nif(renderTarget.depthBuffer){setupDepthRenderbuffer(renderTarget);}}function updateRenderTargetMipmap(renderTarget){var texture=renderTarget.texture;var supportsMips=isPowerOfTwo(renderTarget)||capabilities.isWebGL2;if(textureNeedsGenerateMipmaps(texture,supportsMips)){var target=renderTarget.isWebGLRenderTargetCube?34067:3553;var webglTexture=properties.get(texture).__webglTexture;state.bindTexture(target,webglTexture);generateMipmap(target,texture,renderTarget.width,renderTarget.height);state.bindTexture(target,null);}}function updateMultisampleRenderTarget(renderTarget){if(renderTarget.isWebGLMultisampleRenderTarget){if(capabilities.isWebGL2){var renderTargetProperties=properties.get(renderTarget);_gl.bindFramebuffer(36008,renderTargetProperties.__webglMultisampledFramebuffer);_gl.bindFramebuffer(36009,renderTargetProperties.__webglFramebuffer);var width=renderTarget.width;var height=renderTarget.height;var mask=16384;if(renderTarget.depthBuffer)mask|=256;if(renderTarget.stencilBuffer)mask|=1024;_gl.blitFramebuffer(0,0,width,height,0,0,width,height,mask,9728);}else{console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');}}}function getRenderTargetSamples(renderTarget){return capabilities.isWebGL2&&renderTarget.isWebGLMultisampleRenderTarget?Math.min(capabilities.maxSamples,renderTarget.samples):0;}function updateVideoTexture(texture){var id=texture.id;var frame=info.render.frame;// Check the last frame we updated the VideoTexture\nif(_videoTextures[id]!==frame){_videoTextures[id]=frame;texture.update();}}this.setTexture2D=setTexture2D;this.setTexture3D=setTexture3D;this.setTextureCube=setTextureCube;this.setTextureCubeDynamic=setTextureCubeDynamic;this.setupRenderTarget=setupRenderTarget;this.updateRenderTargetMipmap=updateRenderTargetMipmap;this.updateMultisampleRenderTarget=updateMultisampleRenderTarget;}/**\n\t * @author thespite / http://www.twitter.com/thespite\n\t */function WebGLUtils(gl,extensions,capabilities){function convert(p){var extension;if(p===RepeatWrapping)return 10497;if(p===ClampToEdgeWrapping)return 33071;if(p===MirroredRepeatWrapping)return 33648;if(p===NearestFilter)return 9728;if(p===NearestMipMapNearestFilter)return 9984;if(p===NearestMipMapLinearFilter)return 9986;if(p===LinearFilter)return 9729;if(p===LinearMipMapNearestFilter)return 9985;if(p===LinearMipMapLinearFilter)return 9987;if(p===UnsignedByteType)return 5121;if(p===UnsignedShort4444Type)return 32819;if(p===UnsignedShort5551Type)return 32820;if(p===UnsignedShort565Type)return 33635;if(p===ByteType)return 5120;if(p===ShortType)return 5122;if(p===UnsignedShortType)return 5123;if(p===IntType)return 5124;if(p===UnsignedIntType)return 5125;if(p===FloatType)return 5126;if(p===HalfFloatType){if(capabilities.isWebGL2)return 5131;extension=extensions.get('OES_texture_half_float');if(extension!==null)return extension.HALF_FLOAT_OES;}if(p===AlphaFormat)return 6406;if(p===RGBFormat)return 6407;if(p===RGBAFormat)return 6408;if(p===LuminanceFormat)return 6409;if(p===LuminanceAlphaFormat)return 6410;if(p===DepthFormat)return 6402;if(p===DepthStencilFormat)return 34041;if(p===RedFormat)return 6403;if(p===AddEquation)return 32774;if(p===SubtractEquation)return 32778;if(p===ReverseSubtractEquation)return 32779;if(p===ZeroFactor)return 0;if(p===OneFactor)return 1;if(p===SrcColorFactor)return 768;if(p===OneMinusSrcColorFactor)return 769;if(p===SrcAlphaFactor)return 770;if(p===OneMinusSrcAlphaFactor)return 771;if(p===DstAlphaFactor)return 772;if(p===OneMinusDstAlphaFactor)return 773;if(p===DstColorFactor)return 774;if(p===OneMinusDstColorFactor)return 775;if(p===SrcAlphaSaturateFactor)return 776;if(p===RGB_S3TC_DXT1_Format||p===RGBA_S3TC_DXT1_Format||p===RGBA_S3TC_DXT3_Format||p===RGBA_S3TC_DXT5_Format){extension=extensions.get('WEBGL_compressed_texture_s3tc');if(extension!==null){if(p===RGB_S3TC_DXT1_Format)return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT1_Format)return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT3_Format)return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===RGBA_S3TC_DXT5_Format)return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;}}if(p===RGB_PVRTC_4BPPV1_Format||p===RGB_PVRTC_2BPPV1_Format||p===RGBA_PVRTC_4BPPV1_Format||p===RGBA_PVRTC_2BPPV1_Format){extension=extensions.get('WEBGL_compressed_texture_pvrtc');if(extension!==null){if(p===RGB_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(p===RGB_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(p===RGBA_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(p===RGBA_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;}}if(p===RGB_ETC1_Format){extension=extensions.get('WEBGL_compressed_texture_etc1');if(extension!==null)return extension.COMPRESSED_RGB_ETC1_WEBGL;}if(p===RGBA_ASTC_4x4_Format||p===RGBA_ASTC_5x4_Format||p===RGBA_ASTC_5x5_Format||p===RGBA_ASTC_6x5_Format||p===RGBA_ASTC_6x6_Format||p===RGBA_ASTC_8x5_Format||p===RGBA_ASTC_8x6_Format||p===RGBA_ASTC_8x8_Format||p===RGBA_ASTC_10x5_Format||p===RGBA_ASTC_10x6_Format||p===RGBA_ASTC_10x8_Format||p===RGBA_ASTC_10x10_Format||p===RGBA_ASTC_12x10_Format||p===RGBA_ASTC_12x12_Format){extension=extensions.get('WEBGL_compressed_texture_astc');if(extension!==null){return p;}}if(p===MinEquation||p===MaxEquation){if(capabilities.isWebGL2){if(p===MinEquation)return 32775;if(p===MaxEquation)return 32776;}extension=extensions.get('EXT_blend_minmax');if(extension!==null){if(p===MinEquation)return extension.MIN_EXT;if(p===MaxEquation)return extension.MAX_EXT;}}if(p===UnsignedInt248Type){if(capabilities.isWebGL2)return 34042;extension=extensions.get('WEBGL_depth_texture');if(extension!==null)return extension.UNSIGNED_INT_24_8_WEBGL;}return 0;}return{convert:convert};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function Group(){Object3D.call(this);this.type='Group';}Group.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Group,isGroup:true});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/function Camera(){Object3D.call(this);this.type='Camera';this.matrixWorldInverse=new Matrix4();this.projectionMatrix=new Matrix4();this.projectionMatrixInverse=new Matrix4();}Camera.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Camera,isCamera:true,copy:function(source,recursive){Object3D.prototype.copy.call(this,source,recursive);this.matrixWorldInverse.copy(source.matrixWorldInverse);this.projectionMatrix.copy(source.projectionMatrix);this.projectionMatrixInverse.copy(source.projectionMatrixInverse);return this;},getWorldDirection:function(target){if(target===undefined){console.warn('THREE.Camera: .getWorldDirection() target is now required');target=new Vector3();}this.updateMatrixWorld(true);var e=this.matrixWorld.elements;return target.set(-e[8],-e[9],-e[10]).normalize();},updateMatrixWorld:function(force){Object3D.prototype.updateMatrixWorld.call(this,force);this.matrixWorldInverse.getInverse(this.matrixWorld);},clone:function(){return new this.constructor().copy(this);}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */function PerspectiveCamera(fov,aspect,near,far){Camera.call(this);this.type='PerspectiveCamera';this.fov=fov!==undefined?fov:50;this.zoom=1;this.near=near!==undefined?near:0.1;this.far=far!==undefined?far:2000;this.focus=10;this.aspect=aspect!==undefined?aspect:1;this.view=null;this.filmGauge=35;// width of the film (default in millimeters)\nthis.filmOffset=0;// horizontal film offset (same unit as gauge)\nthis.updateProjectionMatrix();}PerspectiveCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:PerspectiveCamera,isPerspectiveCamera:true,copy:function(source,recursive){Camera.prototype.copy.call(this,source,recursive);this.fov=source.fov;this.zoom=source.zoom;this.near=source.near;this.far=source.far;this.focus=source.focus;this.aspect=source.aspect;this.view=source.view===null?null:Object.assign({},source.view);this.filmGauge=source.filmGauge;this.filmOffset=source.filmOffset;return this;},/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */setFocalLength:function(focalLength){// see http://www.bobatkins.com/photography/technical/field_of_view.html\nvar vExtentSlope=0.5*this.getFilmHeight()/focalLength;this.fov=_Math.RAD2DEG*2*Math.atan(vExtentSlope);this.updateProjectionMatrix();},/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */getFocalLength:function(){var vExtentSlope=Math.tan(_Math.DEG2RAD*0.5*this.fov);return 0.5*this.getFilmHeight()/vExtentSlope;},getEffectiveFOV:function(){return _Math.RAD2DEG*2*Math.atan(Math.tan(_Math.DEG2RAD*0.5*this.fov)/this.zoom);},getFilmWidth:function(){// film not completely covered in portrait format (aspect < 1)\nreturn this.filmGauge*Math.min(this.aspect,1);},getFilmHeight:function(){// film not completely covered in landscape format (aspect > 1)\nreturn this.filmGauge/Math.max(this.aspect,1);},/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   var w = 1920;\n\t\t *   var h = 1080;\n\t\t *   var fullWidth = w * 3;\n\t\t *   var fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */setViewOffset:function(fullWidth,fullHeight,x,y,width,height){this.aspect=fullWidth/fullHeight;if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1};}this.view.enabled=true;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix();},clearViewOffset:function(){if(this.view!==null){this.view.enabled=false;}this.updateProjectionMatrix();},updateProjectionMatrix:function(){var near=this.near,top=near*Math.tan(_Math.DEG2RAD*0.5*this.fov)/this.zoom,height=2*top,width=this.aspect*height,left=-0.5*width,view=this.view;if(this.view!==null&&this.view.enabled){var fullWidth=view.fullWidth,fullHeight=view.fullHeight;left+=view.offsetX*width/fullWidth;top-=view.offsetY*height/fullHeight;width*=view.width/fullWidth;height*=view.height/fullHeight;}var skew=this.filmOffset;if(skew!==0)left+=near*skew/this.getFilmWidth();this.projectionMatrix.makePerspective(left,left+width,top,top-height,near,this.far);this.projectionMatrixInverse.getInverse(this.projectionMatrix);},toJSON:function(meta){var data=Object3D.prototype.toJSON.call(this,meta);data.object.fov=this.fov;data.object.zoom=this.zoom;data.object.near=this.near;data.object.far=this.far;data.object.focus=this.focus;data.object.aspect=this.aspect;if(this.view!==null)data.object.view=Object.assign({},this.view);data.object.filmGauge=this.filmGauge;data.object.filmOffset=this.filmOffset;return data;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function ArrayCamera(array){PerspectiveCamera.call(this);this.cameras=array||[];}ArrayCamera.prototype=Object.assign(Object.create(PerspectiveCamera.prototype),{constructor:ArrayCamera,isArrayCamera:true});/**\n\t * @author jsantell / https://www.jsantell.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */var cameraLPos=new Vector3();var cameraRPos=new Vector3();/**\n\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t * the cameras' projection and world matrices have already been set.\n\t * And that near and far planes are identical for both cameras.\n\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t */function setProjectionFromUnion(camera,cameraL,cameraR){cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);var ipd=cameraLPos.distanceTo(cameraRPos);var projL=cameraL.projectionMatrix.elements;var projR=cameraR.projectionMatrix.elements;// VR systems will have identical far and near planes, and\n// most likely identical top and bottom frustum extents.\n// Use the left camera for these values.\nvar near=projL[14]/(projL[10]-1);var far=projL[14]/(projL[10]+1);var topFov=(projL[9]+1)/projL[5];var bottomFov=(projL[9]-1)/projL[5];var leftFov=(projL[8]-1)/projL[0];var rightFov=(projR[8]+1)/projR[0];var left=near*leftFov;var right=near*rightFov;// Calculate the new camera's position offset from the\n// left camera. xOffset should be roughly half `ipd`.\nvar zOffset=ipd/(-leftFov+rightFov);var xOffset=zOffset*-leftFov;// TODO: Better way to apply this offset?\ncameraL.matrixWorld.decompose(camera.position,camera.quaternion,camera.scale);camera.translateX(xOffset);camera.translateZ(zOffset);camera.matrixWorld.compose(camera.position,camera.quaternion,camera.scale);camera.matrixWorldInverse.getInverse(camera.matrixWorld);// Find the union of the frustum values of the cameras and scale\n// the values so that the near plane's position does not change in world space,\n// although must now be relative to the new union camera.\nvar near2=near+zOffset;var far2=far+zOffset;var left2=left-xOffset;var right2=right+(ipd-xOffset);var top2=topFov*far/far2*near2;var bottom2=bottomFov*far/far2*near2;camera.projectionMatrix.makePerspective(left2,right2,top2,bottom2,near2,far2);}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function WebVRManager(renderer){var scope=this;var device=null;var frameData=null;var poseTarget=null;var controllers=[];var standingMatrix=new Matrix4();var standingMatrixInverse=new Matrix4();var framebufferScaleFactor=1.0;var frameOfReferenceType='stage';if(typeof window!=='undefined'&&'VRFrameData'in window){frameData=new window.VRFrameData();window.addEventListener('vrdisplaypresentchange',onVRDisplayPresentChange,false);}var matrixWorldInverse=new Matrix4();var tempQuaternion=new Quaternion();var tempPosition=new Vector3();var cameraL=new PerspectiveCamera();cameraL.bounds=new Vector4(0.0,0.0,0.5,1.0);cameraL.layers.enable(1);var cameraR=new PerspectiveCamera();cameraR.bounds=new Vector4(0.5,0.0,0.5,1.0);cameraR.layers.enable(2);var cameraVR=new ArrayCamera([cameraL,cameraR]);cameraVR.layers.enable(1);cameraVR.layers.enable(2);//\nfunction isPresenting(){return device!==null&&device.isPresenting===true;}var currentSize,currentPixelRatio;function onVRDisplayPresentChange(){if(isPresenting()){var eyeParameters=device.getEyeParameters('left');var renderWidth=eyeParameters.renderWidth*framebufferScaleFactor;var renderHeight=eyeParameters.renderHeight*framebufferScaleFactor;currentPixelRatio=renderer.getPixelRatio();currentSize=renderer.getSize();renderer.setDrawingBufferSize(renderWidth*2,renderHeight,1);animation.start();}else{if(scope.enabled){renderer.setDrawingBufferSize(currentSize.width,currentSize.height,currentPixelRatio);}animation.stop();}}//\nvar triggers=[];function findGamepad(id){var gamepads=navigator.getGamepads&&navigator.getGamepads();for(var i=0,j=0,l=gamepads.length;i<l;i++){var gamepad=gamepads[i];if(gamepad&&(gamepad.id==='Daydream Controller'||gamepad.id==='Gear VR Controller'||gamepad.id==='Oculus Go Controller'||gamepad.id==='OpenVR Gamepad'||gamepad.id.startsWith('Oculus Touch')||gamepad.id.startsWith('Spatial Controller'))){if(j===id)return gamepad;j++;}}}function updateControllers(){for(var i=0;i<controllers.length;i++){var controller=controllers[i];var gamepad=findGamepad(i);if(gamepad!==undefined&&gamepad.pose!==undefined){if(gamepad.pose===null)return;//  Pose\nvar pose=gamepad.pose;if(pose.hasPosition===false)controller.position.set(0.2,-0.6,-0.05);if(pose.position!==null)controller.position.fromArray(pose.position);if(pose.orientation!==null)controller.quaternion.fromArray(pose.orientation);controller.matrix.compose(controller.position,controller.quaternion,controller.scale);controller.matrix.premultiply(standingMatrix);controller.matrix.decompose(controller.position,controller.quaternion,controller.scale);controller.matrixWorldNeedsUpdate=true;controller.visible=true;//  Trigger\nvar buttonId=gamepad.id==='Daydream Controller'?0:1;if(triggers[i]!==gamepad.buttons[buttonId].pressed){triggers[i]=gamepad.buttons[buttonId].pressed;if(triggers[i]===true){controller.dispatchEvent({type:'selectstart'});}else{controller.dispatchEvent({type:'selectend'});controller.dispatchEvent({type:'select'});}}}else{controller.visible=false;}}}//\nthis.enabled=false;this.getController=function(id){var controller=controllers[id];if(controller===undefined){controller=new Group();controller.matrixAutoUpdate=false;controller.visible=false;controllers[id]=controller;}return controller;};this.getDevice=function(){return device;};this.setDevice=function(value){if(value!==undefined)device=value;animation.setContext(value);};this.setFramebufferScaleFactor=function(value){framebufferScaleFactor=value;};this.setFrameOfReferenceType=function(value){frameOfReferenceType=value;};this.setPoseTarget=function(object){if(object!==undefined)poseTarget=object;};this.getCamera=function(camera){var userHeight=frameOfReferenceType==='stage'?1.6:0;if(device===null){camera.position.set(0,userHeight,0);return camera;}device.depthNear=camera.near;device.depthFar=camera.far;device.getFrameData(frameData);//\nif(frameOfReferenceType==='stage'){var stageParameters=device.stageParameters;if(stageParameters){standingMatrix.fromArray(stageParameters.sittingToStandingTransform);}else{standingMatrix.makeTranslation(0,userHeight,0);}}var pose=frameData.pose;var poseObject=poseTarget!==null?poseTarget:camera;// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\nposeObject.matrix.copy(standingMatrix);poseObject.matrix.decompose(poseObject.position,poseObject.quaternion,poseObject.scale);if(pose.orientation!==null){tempQuaternion.fromArray(pose.orientation);poseObject.quaternion.multiply(tempQuaternion);}if(pose.position!==null){tempQuaternion.setFromRotationMatrix(standingMatrix);tempPosition.fromArray(pose.position);tempPosition.applyQuaternion(tempQuaternion);poseObject.position.add(tempPosition);}poseObject.updateMatrixWorld();if(device.isPresenting===false)return camera;//\ncameraL.near=camera.near;cameraR.near=camera.near;cameraL.far=camera.far;cameraR.far=camera.far;cameraL.matrixWorldInverse.fromArray(frameData.leftViewMatrix);cameraR.matrixWorldInverse.fromArray(frameData.rightViewMatrix);// TODO (mrdoob) Double check this code\nstandingMatrixInverse.getInverse(standingMatrix);if(frameOfReferenceType==='stage'){cameraL.matrixWorldInverse.multiply(standingMatrixInverse);cameraR.matrixWorldInverse.multiply(standingMatrixInverse);}var parent=poseObject.parent;if(parent!==null){matrixWorldInverse.getInverse(parent.matrixWorld);cameraL.matrixWorldInverse.multiply(matrixWorldInverse);cameraR.matrixWorldInverse.multiply(matrixWorldInverse);}// envMap and Mirror needs camera.matrixWorld\ncameraL.matrixWorld.getInverse(cameraL.matrixWorldInverse);cameraR.matrixWorld.getInverse(cameraR.matrixWorldInverse);cameraL.projectionMatrix.fromArray(frameData.leftProjectionMatrix);cameraR.projectionMatrix.fromArray(frameData.rightProjectionMatrix);setProjectionFromUnion(cameraVR,cameraL,cameraR);//\nvar layers=device.getLayers();if(layers.length){var layer=layers[0];if(layer.leftBounds!==null&&layer.leftBounds.length===4){cameraL.bounds.fromArray(layer.leftBounds);}if(layer.rightBounds!==null&&layer.rightBounds.length===4){cameraR.bounds.fromArray(layer.rightBounds);}}updateControllers();return cameraVR;};this.getStandingMatrix=function(){return standingMatrix;};this.isPresenting=isPresenting;// Animation Loop\nvar animation=new WebGLAnimation();this.setAnimationLoop=function(callback){animation.setAnimationLoop(callback);};this.submitFrame=function(){if(isPresenting())device.submitFrame();};this.dispose=function(){if(typeof window!=='undefined'){window.removeEventListener('vrdisplaypresentchange',onVRDisplayPresentChange);}};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function WebXRManager(renderer){var gl=renderer.context;var device=null;var session=null;var framebufferScaleFactor=1.0;var frameOfReference=null;var frameOfReferenceType='stage';var pose=null;var poseTarget=null;var controllers=[];var inputSources=[];function isPresenting(){return session!==null&&frameOfReference!==null;}//\nvar cameraL=new PerspectiveCamera();cameraL.layers.enable(1);cameraL.viewport=new Vector4();var cameraR=new PerspectiveCamera();cameraR.layers.enable(2);cameraR.viewport=new Vector4();var cameraVR=new ArrayCamera([cameraL,cameraR]);cameraVR.layers.enable(1);cameraVR.layers.enable(2);//\nthis.enabled=false;this.getController=function(id){var controller=controllers[id];if(controller===undefined){controller=new Group();controller.matrixAutoUpdate=false;controller.visible=false;controllers[id]=controller;}return controller;};this.getDevice=function(){return device;};this.setDevice=function(value){if(value!==undefined)device=value;if(value instanceof XRDevice)gl.setCompatibleXRDevice(value);};//\nfunction onSessionEvent(event){var controller=controllers[inputSources.indexOf(event.inputSource)];if(controller)controller.dispatchEvent({type:event.type});}function onSessionEnd(){renderer.setFramebuffer(null);animation.stop();}this.setFramebufferScaleFactor=function(value){framebufferScaleFactor=value;};this.setFrameOfReferenceType=function(value){frameOfReferenceType=value;};this.setSession=function(value){session=value;if(session!==null){session.addEventListener('select',onSessionEvent);session.addEventListener('selectstart',onSessionEvent);session.addEventListener('selectend',onSessionEvent);session.addEventListener('end',onSessionEnd);session.baseLayer=new XRWebGLLayer(session,gl,{framebufferScaleFactor:framebufferScaleFactor});session.requestFrameOfReference(frameOfReferenceType).then(function(value){frameOfReference=value;renderer.setFramebuffer(session.baseLayer.framebuffer);animation.setContext(session);animation.start();});//\ninputSources=session.getInputSources();session.addEventListener('inputsourceschange',function(){inputSources=session.getInputSources();console.log(inputSources);for(var i=0;i<controllers.length;i++){var controller=controllers[i];controller.userData.inputSource=inputSources[i];}});}};function updateCamera(camera,parent){if(parent===null){camera.matrixWorld.copy(camera.matrix);}else{camera.matrixWorld.multiplyMatrices(parent.matrixWorld,camera.matrix);}camera.matrixWorldInverse.getInverse(camera.matrixWorld);}this.setPoseTarget=function(object){if(object!==undefined)poseTarget=object;};this.getCamera=function(camera){if(isPresenting()){var parent=camera.parent;var cameras=cameraVR.cameras;var object=poseTarget||camera;updateCamera(cameraVR,parent);for(var i=0;i<cameras.length;i++){updateCamera(cameras[i],parent);}// update camera and its children\nobject.matrixWorld.copy(cameraVR.matrixWorld);var children=object.children;for(var i=0,l=children.length;i<l;i++){children[i].updateMatrixWorld(true);}setProjectionFromUnion(cameraVR,cameraL,cameraR);return cameraVR;}return camera;};this.getCameraPose=function(){return pose;};this.isPresenting=isPresenting;// Animation Loop\nvar onAnimationFrameCallback=null;function onAnimationFrame(time,frame){pose=frame.getDevicePose(frameOfReference);if(pose!==null){var layer=session.baseLayer;var views=frame.views;for(var i=0;i<views.length;i++){var view=views[i];var viewport=layer.getViewport(view);var viewMatrix=pose.getViewMatrix(view);var camera=cameraVR.cameras[i];camera.matrix.fromArray(viewMatrix).getInverse(camera.matrix);camera.projectionMatrix.fromArray(view.projectionMatrix);camera.viewport.set(viewport.x,viewport.y,viewport.width,viewport.height);if(i===0){cameraVR.matrix.copy(camera.matrix);}}}//\nfor(var i=0;i<controllers.length;i++){var controller=controllers[i];var inputSource=inputSources[i];if(inputSource){var inputPose=frame.getInputPose(inputSource,frameOfReference);if(inputPose!==null){if('targetRay'in inputPose){controller.matrix.elements=inputPose.targetRay.transformMatrix;}else if('pointerMatrix'in inputPose){// DEPRECATED\ncontroller.matrix.elements=inputPose.pointerMatrix;}controller.matrix.decompose(controller.position,controller.rotation,controller.scale);controller.visible=true;continue;}}controller.visible=false;}if(onAnimationFrameCallback)onAnimationFrameCallback(time,frame);}var animation=new WebGLAnimation();animation.setAnimationLoop(onAnimationFrame);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;};this.dispose=function(){};// DEPRECATED\nthis.getStandingMatrix=function(){console.warn('THREE.WebXRManager: getStandingMatrix() is no longer needed.');return new THREE.Matrix4();};this.submitFrame=function(){};}/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */function WebGLRenderer(parameters){console.log('THREE.WebGLRenderer',REVISION);parameters=parameters||{};var _canvas=parameters.canvas!==undefined?parameters.canvas:document.createElementNS('http://www.w3.org/1999/xhtml','canvas'),_context=parameters.context!==undefined?parameters.context:null,_alpha=parameters.alpha!==undefined?parameters.alpha:false,_depth=parameters.depth!==undefined?parameters.depth:true,_stencil=parameters.stencil!==undefined?parameters.stencil:true,_antialias=parameters.antialias!==undefined?parameters.antialias:false,_premultipliedAlpha=parameters.premultipliedAlpha!==undefined?parameters.premultipliedAlpha:true,_preserveDrawingBuffer=parameters.preserveDrawingBuffer!==undefined?parameters.preserveDrawingBuffer:false,_powerPreference=parameters.powerPreference!==undefined?parameters.powerPreference:'default';var currentRenderList=null;var currentRenderState=null;// public properties\nthis.domElement=_canvas;this.context=null;// clearing\nthis.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;// scene graph\nthis.sortObjects=true;// user-defined clipping\nthis.clippingPlanes=[];this.localClippingEnabled=false;// physically based shading\nthis.gammaFactor=2.0;// for backwards compatibility\nthis.gammaInput=false;this.gammaOutput=false;// physical lights\nthis.physicallyCorrectLights=false;// tone mapping\nthis.toneMapping=LinearToneMapping;this.toneMappingExposure=1.0;this.toneMappingWhitePoint=1.0;// morphs\nthis.maxMorphTargets=8;this.maxMorphNormals=4;// internal properties\nvar _this=this,_isContextLost=false,// internal state cache\n_framebuffer=null,_currentRenderTarget=null,_currentFramebuffer=null,_currentMaterialId=-1,// geometry and program caching\n_currentGeometryProgram={geometry:null,program:null,wireframe:false},_currentCamera=null,_currentArrayCamera=null,_currentViewport=new Vector4(),_currentScissor=new Vector4(),_currentScissorTest=null,//\n_usedTextureUnits=0,//\n_width=_canvas.width,_height=_canvas.height,_pixelRatio=1,_viewport=new Vector4(0,0,_width,_height),_scissor=new Vector4(0,0,_width,_height),_scissorTest=false,// frustum\n_frustum=new Frustum(),// clipping\n_clipping=new WebGLClipping(),_clippingEnabled=false,_localClippingEnabled=false,// camera matrices cache\n_projScreenMatrix=new Matrix4(),_vector3=new Vector3();function getTargetPixelRatio(){return _currentRenderTarget===null?_pixelRatio:1;}// initialize\nvar _gl;try{var contextAttributes={alpha:_alpha,depth:_depth,stencil:_stencil,antialias:_antialias,premultipliedAlpha:_premultipliedAlpha,preserveDrawingBuffer:_preserveDrawingBuffer,powerPreference:_powerPreference};// event listeners must be registered before WebGL context is created, see #12753\n_canvas.addEventListener('webglcontextlost',onContextLost,false);_canvas.addEventListener('webglcontextrestored',onContextRestore,false);_gl=_context||_canvas.getContext('webgl',contextAttributes)||_canvas.getContext('experimental-webgl',contextAttributes);if(_gl===null){if(_canvas.getContext('webgl')!==null){throw new Error('Error creating WebGL context with your selected attributes.');}else{throw new Error('Error creating WebGL context.');}}// Some experimental-webgl implementations do not have getShaderPrecisionFormat\nif(_gl.getShaderPrecisionFormat===undefined){_gl.getShaderPrecisionFormat=function(){return{'rangeMin':1,'rangeMax':1,'precision':1};};}}catch(error){console.error('THREE.WebGLRenderer: '+error.message);}var extensions,capabilities,state,info;var properties,textures,attributes,geometries,objects;var programCache,renderLists,renderStates;var background,morphtargets,bufferRenderer,indexedBufferRenderer;var utils;function initGLContext(){extensions=new WebGLExtensions(_gl);capabilities=new WebGLCapabilities(_gl,extensions,parameters);if(!capabilities.isWebGL2){extensions.get('WEBGL_depth_texture');extensions.get('OES_texture_float');extensions.get('OES_texture_half_float');extensions.get('OES_texture_half_float_linear');extensions.get('OES_standard_derivatives');extensions.get('OES_element_index_uint');extensions.get('ANGLE_instanced_arrays');}extensions.get('OES_texture_float_linear');utils=new WebGLUtils(_gl,extensions,capabilities);state=new WebGLState(_gl,extensions,utils,capabilities);state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));info=new WebGLInfo(_gl);properties=new WebGLProperties();textures=new WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info);attributes=new WebGLAttributes(_gl);geometries=new WebGLGeometries(_gl,attributes,info);objects=new WebGLObjects(geometries,info);morphtargets=new WebGLMorphtargets(_gl);programCache=new WebGLPrograms(_this,extensions,capabilities);renderLists=new WebGLRenderLists();renderStates=new WebGLRenderStates();background=new WebGLBackground(_this,state,objects,_premultipliedAlpha);bufferRenderer=new WebGLBufferRenderer(_gl,extensions,info,capabilities);indexedBufferRenderer=new WebGLIndexedBufferRenderer(_gl,extensions,info,capabilities);info.programs=programCache.programs;_this.context=_gl;_this.capabilities=capabilities;_this.extensions=extensions;_this.properties=properties;_this.renderLists=renderLists;_this.state=state;_this.info=info;}initGLContext();// vr\nvar vr=null;if(typeof navigator!=='undefined'){vr='xr'in navigator?new WebXRManager(_this):new WebVRManager(_this);}this.vr=vr;// shadow map\nvar shadowMap=new WebGLShadowMap(_this,objects,capabilities.maxTextureSize);this.shadowMap=shadowMap;// API\nthis.getContext=function(){return _gl;};this.getContextAttributes=function(){return _gl.getContextAttributes();};this.forceContextLoss=function(){var extension=extensions.get('WEBGL_lose_context');if(extension)extension.loseContext();};this.forceContextRestore=function(){var extension=extensions.get('WEBGL_lose_context');if(extension)extension.restoreContext();};this.getPixelRatio=function(){return _pixelRatio;};this.setPixelRatio=function(value){if(value===undefined)return;_pixelRatio=value;this.setSize(_width,_height,false);};this.getSize=function(){return{width:_width,height:_height};};this.setSize=function(width,height,updateStyle){if(vr.isPresenting()){console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');return;}_width=width;_height=height;_canvas.width=width*_pixelRatio;_canvas.height=height*_pixelRatio;if(updateStyle!==false){_canvas.style.width=width+'px';_canvas.style.height=height+'px';}this.setViewport(0,0,width,height);};this.getDrawingBufferSize=function(){return{width:_width*_pixelRatio,height:_height*_pixelRatio};};this.setDrawingBufferSize=function(width,height,pixelRatio){_width=width;_height=height;_pixelRatio=pixelRatio;_canvas.width=width*pixelRatio;_canvas.height=height*pixelRatio;this.setViewport(0,0,width,height);};this.getCurrentViewport=function(){return _currentViewport;};this.setViewport=function(x,y,width,height){_viewport.set(x,_height-y-height,width,height);state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));};this.setScissor=function(x,y,width,height){_scissor.set(x,_height-y-height,width,height);state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));};this.setScissorTest=function(boolean){state.setScissorTest(_scissorTest=boolean);};// Clearing\nthis.getClearColor=function(){return background.getClearColor();};this.setClearColor=function(){background.setClearColor.apply(background,arguments);};this.getClearAlpha=function(){return background.getClearAlpha();};this.setClearAlpha=function(){background.setClearAlpha.apply(background,arguments);};this.clear=function(color,depth,stencil){var bits=0;if(color===undefined||color)bits|=16384;if(depth===undefined||depth)bits|=256;if(stencil===undefined||stencil)bits|=1024;_gl.clear(bits);};this.clearColor=function(){this.clear(true,false,false);};this.clearDepth=function(){this.clear(false,true,false);};this.clearStencil=function(){this.clear(false,false,true);};//\nthis.dispose=function(){_canvas.removeEventListener('webglcontextlost',onContextLost,false);_canvas.removeEventListener('webglcontextrestored',onContextRestore,false);renderLists.dispose();renderStates.dispose();properties.dispose();objects.dispose();vr.dispose();animation.stop();};// Events\nfunction onContextLost(event){event.preventDefault();console.log('THREE.WebGLRenderer: Context Lost.');_isContextLost=true;}function onContextRestore()/* event */{console.log('THREE.WebGLRenderer: Context Restored.');_isContextLost=false;initGLContext();}function onMaterialDispose(event){var material=event.target;material.removeEventListener('dispose',onMaterialDispose);deallocateMaterial(material);}// Buffer deallocation\nfunction deallocateMaterial(material){releaseMaterialProgramReference(material);properties.remove(material);}function releaseMaterialProgramReference(material){var programInfo=properties.get(material).program;material.program=undefined;if(programInfo!==undefined){programCache.releaseProgram(programInfo);}}// Buffer rendering\nfunction renderObjectImmediate(object,program){object.render(function(object){_this.renderBufferImmediate(object,program);});}this.renderBufferImmediate=function(object,program){state.initAttributes();var buffers=properties.get(object);if(object.hasPositions&&!buffers.position)buffers.position=_gl.createBuffer();if(object.hasNormals&&!buffers.normal)buffers.normal=_gl.createBuffer();if(object.hasUvs&&!buffers.uv)buffers.uv=_gl.createBuffer();if(object.hasColors&&!buffers.color)buffers.color=_gl.createBuffer();var programAttributes=program.getAttributes();if(object.hasPositions){_gl.bindBuffer(34962,buffers.position);_gl.bufferData(34962,object.positionArray,35048);state.enableAttribute(programAttributes.position);_gl.vertexAttribPointer(programAttributes.position,3,5126,false,0,0);}if(object.hasNormals){_gl.bindBuffer(34962,buffers.normal);_gl.bufferData(34962,object.normalArray,35048);state.enableAttribute(programAttributes.normal);_gl.vertexAttribPointer(programAttributes.normal,3,5126,false,0,0);}if(object.hasUvs){_gl.bindBuffer(34962,buffers.uv);_gl.bufferData(34962,object.uvArray,35048);state.enableAttribute(programAttributes.uv);_gl.vertexAttribPointer(programAttributes.uv,2,5126,false,0,0);}if(object.hasColors){_gl.bindBuffer(34962,buffers.color);_gl.bufferData(34962,object.colorArray,35048);state.enableAttribute(programAttributes.color);_gl.vertexAttribPointer(programAttributes.color,3,5126,false,0,0);}state.disableUnusedAttributes();_gl.drawArrays(4,0,object.count);object.count=0;};this.renderBufferDirect=function(camera,fog,geometry,material,object,group){var frontFaceCW=object.isMesh&&object.normalMatrix.determinant()<0;state.setMaterial(material,frontFaceCW);var program=setProgram(camera,fog,material,object);var updateBuffers=false;if(_currentGeometryProgram.geometry!==geometry.id||_currentGeometryProgram.program!==program.id||_currentGeometryProgram.wireframe!==(material.wireframe===true)){_currentGeometryProgram.geometry=geometry.id;_currentGeometryProgram.program=program.id;_currentGeometryProgram.wireframe=material.wireframe===true;updateBuffers=true;}if(object.morphTargetInfluences){morphtargets.update(object,geometry,material,program);updateBuffers=true;}//\nvar index=geometry.index;var position=geometry.attributes.position;var rangeFactor=1;if(material.wireframe===true){index=geometries.getWireframeAttribute(geometry);rangeFactor=2;}var attribute;var renderer=bufferRenderer;if(index!==null){attribute=attributes.get(index);renderer=indexedBufferRenderer;renderer.setIndex(attribute);}if(updateBuffers){setupVertexAttributes(material,program,geometry);if(index!==null){_gl.bindBuffer(34963,attribute.buffer);}}//\nvar dataCount=Infinity;if(index!==null){dataCount=index.count;}else if(position!==undefined){dataCount=position.count;}var rangeStart=geometry.drawRange.start*rangeFactor;var rangeCount=geometry.drawRange.count*rangeFactor;var groupStart=group!==null?group.start*rangeFactor:0;var groupCount=group!==null?group.count*rangeFactor:Infinity;var drawStart=Math.max(rangeStart,groupStart);var drawEnd=Math.min(dataCount,rangeStart+rangeCount,groupStart+groupCount)-1;var drawCount=Math.max(0,drawEnd-drawStart+1);if(drawCount===0)return;//\nif(object.isMesh){if(material.wireframe===true){state.setLineWidth(material.wireframeLinewidth*getTargetPixelRatio());renderer.setMode(1);}else{switch(object.drawMode){case TrianglesDrawMode:renderer.setMode(4);break;case TriangleStripDrawMode:renderer.setMode(5);break;case TriangleFanDrawMode:renderer.setMode(6);break;}}}else if(object.isLine){var lineWidth=material.linewidth;if(lineWidth===undefined)lineWidth=1;// Not using Line*Material\nstate.setLineWidth(lineWidth*getTargetPixelRatio());if(object.isLineSegments){renderer.setMode(1);}else if(object.isLineLoop){renderer.setMode(2);}else{renderer.setMode(3);}}else if(object.isPoints){renderer.setMode(0);}else if(object.isSprite){renderer.setMode(4);}if(geometry&&geometry.isInstancedBufferGeometry){if(geometry.maxInstancedCount>0){renderer.renderInstances(geometry,drawStart,drawCount);}}else{renderer.render(drawStart,drawCount);}};function setupVertexAttributes(material,program,geometry){if(geometry&&geometry.isInstancedBufferGeometry&!capabilities.isWebGL2){if(extensions.get('ANGLE_instanced_arrays')===null){console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}}state.initAttributes();var geometryAttributes=geometry.attributes;var programAttributes=program.getAttributes();var materialDefaultAttributeValues=material.defaultAttributeValues;for(var name in programAttributes){var programAttribute=programAttributes[name];if(programAttribute>=0){var geometryAttribute=geometryAttributes[name];if(geometryAttribute!==undefined){var normalized=geometryAttribute.normalized;var size=geometryAttribute.itemSize;var attribute=attributes.get(geometryAttribute);// TODO Attribute may not be available on context restore\nif(attribute===undefined)continue;var buffer=attribute.buffer;var type=attribute.type;var bytesPerElement=attribute.bytesPerElement;if(geometryAttribute.isInterleavedBufferAttribute){var data=geometryAttribute.data;var stride=data.stride;var offset=geometryAttribute.offset;if(data&&data.isInstancedInterleavedBuffer){state.enableAttributeAndDivisor(programAttribute,data.meshPerAttribute);if(geometry.maxInstancedCount===undefined){geometry.maxInstancedCount=data.meshPerAttribute*data.count;}}else{state.enableAttribute(programAttribute);}_gl.bindBuffer(34962,buffer);_gl.vertexAttribPointer(programAttribute,size,type,normalized,stride*bytesPerElement,offset*bytesPerElement);}else{if(geometryAttribute.isInstancedBufferAttribute){state.enableAttributeAndDivisor(programAttribute,geometryAttribute.meshPerAttribute);if(geometry.maxInstancedCount===undefined){geometry.maxInstancedCount=geometryAttribute.meshPerAttribute*geometryAttribute.count;}}else{state.enableAttribute(programAttribute);}_gl.bindBuffer(34962,buffer);_gl.vertexAttribPointer(programAttribute,size,type,normalized,0,0);}}else if(materialDefaultAttributeValues!==undefined){var value=materialDefaultAttributeValues[name];if(value!==undefined){switch(value.length){case 2:_gl.vertexAttrib2fv(programAttribute,value);break;case 3:_gl.vertexAttrib3fv(programAttribute,value);break;case 4:_gl.vertexAttrib4fv(programAttribute,value);break;default:_gl.vertexAttrib1fv(programAttribute,value);}}}}}state.disableUnusedAttributes();}// Compile\nthis.compile=function(scene,camera){currentRenderState=renderStates.get(scene,camera);currentRenderState.init();scene.traverse(function(object){if(object.isLight){currentRenderState.pushLight(object);if(object.castShadow){currentRenderState.pushShadow(object);}}});currentRenderState.setupLights(camera);scene.traverse(function(object){if(object.material){if(Array.isArray(object.material)){for(var i=0;i<object.material.length;i++){initMaterial(object.material[i],scene.fog,object);}}else{initMaterial(object.material,scene.fog,object);}}});};// Animation Loop\nvar onAnimationFrameCallback=null;function onAnimationFrame(time){if(vr.isPresenting())return;if(onAnimationFrameCallback)onAnimationFrameCallback(time);}var animation=new WebGLAnimation();animation.setAnimationLoop(onAnimationFrame);if(typeof window!=='undefined')animation.setContext(window);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;vr.setAnimationLoop(callback);animation.start();};// Rendering\nthis.render=function(scene,camera,renderTarget,forceClear){if(!(camera&&camera.isCamera)){console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');return;}if(_isContextLost)return;// reset caching for this frame\n_currentGeometryProgram.geometry=null;_currentGeometryProgram.program=null;_currentGeometryProgram.wireframe=false;_currentMaterialId=-1;_currentCamera=null;// update scene graph\nif(scene.autoUpdate===true)scene.updateMatrixWorld();// update camera matrices and frustum\nif(camera.parent===null)camera.updateMatrixWorld();if(vr.enabled){camera=vr.getCamera(camera);}//\ncurrentRenderState=renderStates.get(scene,camera);currentRenderState.init();scene.onBeforeRender(_this,scene,camera,renderTarget);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum.setFromMatrix(_projScreenMatrix);_localClippingEnabled=this.localClippingEnabled;_clippingEnabled=_clipping.init(this.clippingPlanes,_localClippingEnabled,camera);currentRenderList=renderLists.get(scene,camera);currentRenderList.init();projectObject(scene,camera,0,_this.sortObjects);if(_this.sortObjects===true){currentRenderList.sort();}//\nif(_clippingEnabled)_clipping.beginShadows();var shadowsArray=currentRenderState.state.shadowsArray;shadowMap.render(shadowsArray,scene,camera);currentRenderState.setupLights(camera);if(_clippingEnabled)_clipping.endShadows();//\nif(this.info.autoReset)this.info.reset();if(renderTarget===undefined){renderTarget=null;}this.setRenderTarget(renderTarget);//\nbackground.render(currentRenderList,scene,camera,forceClear);// render scene\nvar opaqueObjects=currentRenderList.opaque;var transparentObjects=currentRenderList.transparent;if(scene.overrideMaterial){var overrideMaterial=scene.overrideMaterial;if(opaqueObjects.length)renderObjects(opaqueObjects,scene,camera,overrideMaterial);if(transparentObjects.length)renderObjects(transparentObjects,scene,camera,overrideMaterial);}else{// opaque pass (front-to-back order)\nif(opaqueObjects.length)renderObjects(opaqueObjects,scene,camera);// transparent pass (back-to-front order)\nif(transparentObjects.length)renderObjects(transparentObjects,scene,camera);}//\nif(renderTarget){// Generate mipmap if we're using any kind of mipmap filtering\ntextures.updateRenderTargetMipmap(renderTarget);// resolve multisample renderbuffers to a single-sample texture if necessary\ntextures.updateMultisampleRenderTarget(renderTarget);}// Ensure depth buffer writing is enabled so it can be cleared on next render\nstate.buffers.depth.setTest(true);state.buffers.depth.setMask(true);state.buffers.color.setMask(true);state.setPolygonOffset(false);scene.onAfterRender(_this,scene,camera);if(vr.enabled){vr.submitFrame();}// _gl.finish();\ncurrentRenderList=null;currentRenderState=null;};function projectObject(object,camera,groupOrder,sortObjects){if(object.visible===false)return;var visible=object.layers.test(camera.layers);if(visible){if(object.isGroup){groupOrder=object.renderOrder;}else if(object.isLight){currentRenderState.pushLight(object);if(object.castShadow){currentRenderState.pushShadow(object);}}else if(object.isSprite){if(!object.frustumCulled||_frustum.intersectsSprite(object)){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}var geometry=objects.update(object);var material=object.material;currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null);}}else if(object.isImmediateRenderObject){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}currentRenderList.push(object,null,object.material,groupOrder,_vector3.z,null);}else if(object.isMesh||object.isLine||object.isPoints){if(object.isSkinnedMesh){object.skeleton.update();}if(!object.frustumCulled||_frustum.intersectsObject(object)){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}var geometry=objects.update(object);var material=object.material;if(Array.isArray(material)){var groups=geometry.groups;for(var i=0,l=groups.length;i<l;i++){var group=groups[i];var groupMaterial=material[group.materialIndex];if(groupMaterial&&groupMaterial.visible){currentRenderList.push(object,geometry,groupMaterial,groupOrder,_vector3.z,group);}}}else if(material.visible){currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null);}}}}var children=object.children;for(var i=0,l=children.length;i<l;i++){projectObject(children[i],camera,groupOrder,sortObjects);}}function renderObjects(renderList,scene,camera,overrideMaterial){for(var i=0,l=renderList.length;i<l;i++){var renderItem=renderList[i];var object=renderItem.object;var geometry=renderItem.geometry;var material=overrideMaterial===undefined?renderItem.material:overrideMaterial;var group=renderItem.group;if(camera.isArrayCamera){_currentArrayCamera=camera;var cameras=camera.cameras;for(var j=0,jl=cameras.length;j<jl;j++){var camera2=cameras[j];if(object.layers.test(camera2.layers)){if('viewport'in camera2){// XR\nstate.viewport(_currentViewport.copy(camera2.viewport));}else{var bounds=camera2.bounds;var x=bounds.x*_width;var y=bounds.y*_height;var width=bounds.z*_width;var height=bounds.w*_height;state.viewport(_currentViewport.set(x,y,width,height).multiplyScalar(_pixelRatio));}currentRenderState.setupLights(camera2);renderObject(object,scene,camera2,geometry,material,group);}}}else{_currentArrayCamera=null;renderObject(object,scene,camera,geometry,material,group);}}}function renderObject(object,scene,camera,geometry,material,group){object.onBeforeRender(_this,scene,camera,geometry,material,group);currentRenderState=renderStates.get(scene,_currentArrayCamera||camera);object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);object.normalMatrix.getNormalMatrix(object.modelViewMatrix);if(object.isImmediateRenderObject){state.setMaterial(material);var program=setProgram(camera,scene.fog,material,object);_currentGeometryProgram.geometry=null;_currentGeometryProgram.program=null;_currentGeometryProgram.wireframe=false;renderObjectImmediate(object,program);}else{_this.renderBufferDirect(camera,scene.fog,geometry,material,object,group);}object.onAfterRender(_this,scene,camera,geometry,material,group);currentRenderState=renderStates.get(scene,_currentArrayCamera||camera);}function initMaterial(material,fog,object){var materialProperties=properties.get(material);var lights=currentRenderState.state.lights;var shadowsArray=currentRenderState.state.shadowsArray;var lightsHash=materialProperties.lightsHash;var lightsStateHash=lights.state.hash;var parameters=programCache.getParameters(material,lights.state,shadowsArray,fog,_clipping.numPlanes,_clipping.numIntersection,object);var code=programCache.getProgramCode(material,parameters);var program=materialProperties.program;var programChange=true;if(program===undefined){// new material\nmaterial.addEventListener('dispose',onMaterialDispose);}else if(program.code!==code){// changed glsl or parameters\nreleaseMaterialProgramReference(material);}else if(lightsHash.stateID!==lightsStateHash.stateID||lightsHash.directionalLength!==lightsStateHash.directionalLength||lightsHash.pointLength!==lightsStateHash.pointLength||lightsHash.spotLength!==lightsStateHash.spotLength||lightsHash.rectAreaLength!==lightsStateHash.rectAreaLength||lightsHash.hemiLength!==lightsStateHash.hemiLength||lightsHash.shadowsLength!==lightsStateHash.shadowsLength){lightsHash.stateID=lightsStateHash.stateID;lightsHash.directionalLength=lightsStateHash.directionalLength;lightsHash.pointLength=lightsStateHash.pointLength;lightsHash.spotLength=lightsStateHash.spotLength;lightsHash.rectAreaLength=lightsStateHash.rectAreaLength;lightsHash.hemiLength=lightsStateHash.hemiLength;lightsHash.shadowsLength=lightsStateHash.shadowsLength;programChange=false;}else if(parameters.shaderID!==undefined){// same glsl and uniform list\nreturn;}else{// only rebuild uniform list\nprogramChange=false;}if(programChange){if(parameters.shaderID){var shader=ShaderLib[parameters.shaderID];materialProperties.shader={name:material.type,uniforms:cloneUniforms(shader.uniforms),vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader};}else{materialProperties.shader={name:material.type,uniforms:material.uniforms,vertexShader:material.vertexShader,fragmentShader:material.fragmentShader};}material.onBeforeCompile(materialProperties.shader,_this);// Computing code again as onBeforeCompile may have changed the shaders\ncode=programCache.getProgramCode(material,parameters);program=programCache.acquireProgram(material,materialProperties.shader,parameters,code);materialProperties.program=program;material.program=program;}var programAttributes=program.getAttributes();if(material.morphTargets){material.numSupportedMorphTargets=0;for(var i=0;i<_this.maxMorphTargets;i++){if(programAttributes['morphTarget'+i]>=0){material.numSupportedMorphTargets++;}}}if(material.morphNormals){material.numSupportedMorphNormals=0;for(var i=0;i<_this.maxMorphNormals;i++){if(programAttributes['morphNormal'+i]>=0){material.numSupportedMorphNormals++;}}}var uniforms=materialProperties.shader.uniforms;if(!material.isShaderMaterial&&!material.isRawShaderMaterial||material.clipping===true){materialProperties.numClippingPlanes=_clipping.numPlanes;materialProperties.numIntersection=_clipping.numIntersection;uniforms.clippingPlanes=_clipping.uniform;}materialProperties.fog=fog;// store the light setup it was created for\nif(lightsHash===undefined){materialProperties.lightsHash=lightsHash={};}lightsHash.stateID=lightsStateHash.stateID;lightsHash.directionalLength=lightsStateHash.directionalLength;lightsHash.pointLength=lightsStateHash.pointLength;lightsHash.spotLength=lightsStateHash.spotLength;lightsHash.rectAreaLength=lightsStateHash.rectAreaLength;lightsHash.hemiLength=lightsStateHash.hemiLength;lightsHash.shadowsLength=lightsStateHash.shadowsLength;if(material.lights){// wire up the material to this renderer's lighting state\nuniforms.ambientLightColor.value=lights.state.ambient;uniforms.directionalLights.value=lights.state.directional;uniforms.spotLights.value=lights.state.spot;uniforms.rectAreaLights.value=lights.state.rectArea;uniforms.pointLights.value=lights.state.point;uniforms.hemisphereLights.value=lights.state.hemi;uniforms.directionalShadowMap.value=lights.state.directionalShadowMap;uniforms.directionalShadowMatrix.value=lights.state.directionalShadowMatrix;uniforms.spotShadowMap.value=lights.state.spotShadowMap;uniforms.spotShadowMatrix.value=lights.state.spotShadowMatrix;uniforms.pointShadowMap.value=lights.state.pointShadowMap;uniforms.pointShadowMatrix.value=lights.state.pointShadowMatrix;// TODO (abelnation): add area lights shadow info to uniforms\n}var progUniforms=materialProperties.program.getUniforms(),uniformsList=WebGLUniforms.seqWithValue(progUniforms.seq,uniforms);materialProperties.uniformsList=uniformsList;}function setProgram(camera,fog,material,object){_usedTextureUnits=0;var materialProperties=properties.get(material);var lights=currentRenderState.state.lights;var lightsHash=materialProperties.lightsHash;var lightsStateHash=lights.state.hash;if(_clippingEnabled){if(_localClippingEnabled||camera!==_currentCamera){var useCache=camera===_currentCamera&&material.id===_currentMaterialId;// we might want to call this function with some ClippingGroup\n// object instead of the material, once it becomes feasible\n// (#8465, #8379)\n_clipping.setState(material.clippingPlanes,material.clipIntersection,material.clipShadows,camera,materialProperties,useCache);}}if(material.needsUpdate===false){if(materialProperties.program===undefined){material.needsUpdate=true;}else if(material.fog&&materialProperties.fog!==fog){material.needsUpdate=true;}else if(material.lights&&(lightsHash.stateID!==lightsStateHash.stateID||lightsHash.directionalLength!==lightsStateHash.directionalLength||lightsHash.pointLength!==lightsStateHash.pointLength||lightsHash.spotLength!==lightsStateHash.spotLength||lightsHash.rectAreaLength!==lightsStateHash.rectAreaLength||lightsHash.hemiLength!==lightsStateHash.hemiLength||lightsHash.shadowsLength!==lightsStateHash.shadowsLength)){material.needsUpdate=true;}else if(materialProperties.numClippingPlanes!==undefined&&(materialProperties.numClippingPlanes!==_clipping.numPlanes||materialProperties.numIntersection!==_clipping.numIntersection)){material.needsUpdate=true;}}if(material.needsUpdate){initMaterial(material,fog,object);material.needsUpdate=false;}var refreshProgram=false;var refreshMaterial=false;var refreshLights=false;var program=materialProperties.program,p_uniforms=program.getUniforms(),m_uniforms=materialProperties.shader.uniforms;if(state.useProgram(program.program)){refreshProgram=true;refreshMaterial=true;refreshLights=true;}if(material.id!==_currentMaterialId){_currentMaterialId=material.id;refreshMaterial=true;}if(refreshProgram||_currentCamera!==camera){p_uniforms.setValue(_gl,'projectionMatrix',camera.projectionMatrix);if(capabilities.logarithmicDepthBuffer){p_uniforms.setValue(_gl,'logDepthBufFC',2.0/(Math.log(camera.far+1.0)/Math.LN2));}if(_currentCamera!==camera){_currentCamera=camera;// lighting uniforms depend on the camera so enforce an update\n// now, in case this material supports lights - or later, when\n// the next material that does gets activated:\nrefreshMaterial=true;// set to true on material change\nrefreshLights=true;// remains set until update done\n}// load material specific uniforms\n// (shader material also gets them for the sake of genericity)\nif(material.isShaderMaterial||material.isMeshPhongMaterial||material.isMeshStandardMaterial||material.envMap){var uCamPos=p_uniforms.map.cameraPosition;if(uCamPos!==undefined){uCamPos.setValue(_gl,_vector3.setFromMatrixPosition(camera.matrixWorld));}}if(material.isMeshPhongMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial||material.skinning){p_uniforms.setValue(_gl,'viewMatrix',camera.matrixWorldInverse);}}// skinning uniforms must be set even if material didn't change\n// auto-setting of texture unit for bone texture must go before other textures\n// not sure why, but otherwise weird things happen\nif(material.skinning){p_uniforms.setOptional(_gl,object,'bindMatrix');p_uniforms.setOptional(_gl,object,'bindMatrixInverse');var skeleton=object.skeleton;if(skeleton){var bones=skeleton.bones;if(capabilities.floatVertexTextures){if(skeleton.boneTexture===undefined){// layout (1 matrix = 4 pixels)\n//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\nvar size=Math.sqrt(bones.length*4);// 4 pixels needed for 1 matrix\nsize=_Math.ceilPowerOfTwo(size);size=Math.max(size,4);var boneMatrices=new Float32Array(size*size*4);// 4 floats per RGBA pixel\nboneMatrices.set(skeleton.boneMatrices);// copy current values\nvar boneTexture=new DataTexture(boneMatrices,size,size,RGBAFormat,FloatType);boneTexture.needsUpdate=true;skeleton.boneMatrices=boneMatrices;skeleton.boneTexture=boneTexture;skeleton.boneTextureSize=size;}p_uniforms.setValue(_gl,'boneTexture',skeleton.boneTexture);p_uniforms.setValue(_gl,'boneTextureSize',skeleton.boneTextureSize);}else{p_uniforms.setOptional(_gl,skeleton,'boneMatrices');}}}if(refreshMaterial){p_uniforms.setValue(_gl,'toneMappingExposure',_this.toneMappingExposure);p_uniforms.setValue(_gl,'toneMappingWhitePoint',_this.toneMappingWhitePoint);if(material.lights){// the current material requires lighting info\n// note: all lighting uniforms are always set correctly\n// they simply reference the renderer's state for their\n// values\n//\n// use the current material's .needsUpdate flags to set\n// the GL state when required\nmarkUniformsLightsNeedsUpdate(m_uniforms,refreshLights);}// refresh uniforms common to several materials\nif(fog&&material.fog){refreshUniformsFog(m_uniforms,fog);}if(material.isMeshBasicMaterial){refreshUniformsCommon(m_uniforms,material);}else if(material.isMeshLambertMaterial){refreshUniformsCommon(m_uniforms,material);refreshUniformsLambert(m_uniforms,material);}else if(material.isMeshPhongMaterial){refreshUniformsCommon(m_uniforms,material);if(material.isMeshToonMaterial){refreshUniformsToon(m_uniforms,material);}else{refreshUniformsPhong(m_uniforms,material);}}else if(material.isMeshStandardMaterial){refreshUniformsCommon(m_uniforms,material);if(material.isMeshPhysicalMaterial){refreshUniformsPhysical(m_uniforms,material);}else{refreshUniformsStandard(m_uniforms,material);}}else if(material.isMeshMatcapMaterial){refreshUniformsCommon(m_uniforms,material);refreshUniformsMatcap(m_uniforms,material);}else if(material.isMeshDepthMaterial){refreshUniformsCommon(m_uniforms,material);refreshUniformsDepth(m_uniforms,material);}else if(material.isMeshDistanceMaterial){refreshUniformsCommon(m_uniforms,material);refreshUniformsDistance(m_uniforms,material);}else if(material.isMeshNormalMaterial){refreshUniformsCommon(m_uniforms,material);refreshUniformsNormal(m_uniforms,material);}else if(material.isLineBasicMaterial){refreshUniformsLine(m_uniforms,material);if(material.isLineDashedMaterial){refreshUniformsDash(m_uniforms,material);}}else if(material.isPointsMaterial){refreshUniformsPoints(m_uniforms,material);}else if(material.isSpriteMaterial){refreshUniformsSprites(m_uniforms,material);}else if(material.isShadowMaterial){m_uniforms.color.value=material.color;m_uniforms.opacity.value=material.opacity;}// RectAreaLight Texture\n// TODO (mrdoob): Find a nicer implementation\nif(m_uniforms.ltc_1!==undefined)m_uniforms.ltc_1.value=UniformsLib.LTC_1;if(m_uniforms.ltc_2!==undefined)m_uniforms.ltc_2.value=UniformsLib.LTC_2;WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,_this);}if(material.isShaderMaterial&&material.uniformsNeedUpdate===true){WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,_this);material.uniformsNeedUpdate=false;}if(material.isSpriteMaterial){p_uniforms.setValue(_gl,'center',object.center);}// common matrices\np_uniforms.setValue(_gl,'modelViewMatrix',object.modelViewMatrix);p_uniforms.setValue(_gl,'normalMatrix',object.normalMatrix);p_uniforms.setValue(_gl,'modelMatrix',object.matrixWorld);return program;}// Uniforms (refresh uniforms objects)\nfunction refreshUniformsCommon(uniforms,material){uniforms.opacity.value=material.opacity;if(material.color){uniforms.diffuse.value=material.color;}if(material.emissive){uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);}if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}if(material.specularMap){uniforms.specularMap.value=material.specularMap;}if(material.envMap){uniforms.envMap.value=material.envMap;// don't flip CubeTexture envMaps, flip everything else:\n//  WebGLRenderTargetCube will be flipped for backwards compatibility\n//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\nuniforms.flipEnvMap.value=material.envMap.isCubeTexture?-1:1;uniforms.reflectivity.value=material.reflectivity;uniforms.refractionRatio.value=material.refractionRatio;uniforms.maxMipLevel.value=properties.get(material.envMap).__maxMipLevel;}if(material.lightMap){uniforms.lightMap.value=material.lightMap;uniforms.lightMapIntensity.value=material.lightMapIntensity;}if(material.aoMap){uniforms.aoMap.value=material.aoMap;uniforms.aoMapIntensity.value=material.aoMapIntensity;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. specular map\n// 3. normal map\n// 4. bump map\n// 5. alpha map\n// 6. emissive map\nvar uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.specularMap){uvScaleMap=material.specularMap;}else if(material.displacementMap){uvScaleMap=material.displacementMap;}else if(material.normalMap){uvScaleMap=material.normalMap;}else if(material.bumpMap){uvScaleMap=material.bumpMap;}else if(material.roughnessMap){uvScaleMap=material.roughnessMap;}else if(material.metalnessMap){uvScaleMap=material.metalnessMap;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}else if(material.emissiveMap){uvScaleMap=material.emissiveMap;}if(uvScaleMap!==undefined){// backwards compatibility\nif(uvScaleMap.isWebGLRenderTarget){uvScaleMap=uvScaleMap.texture;}if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}}function refreshUniformsLine(uniforms,material){uniforms.diffuse.value=material.color;uniforms.opacity.value=material.opacity;}function refreshUniformsDash(uniforms,material){uniforms.dashSize.value=material.dashSize;uniforms.totalSize.value=material.dashSize+material.gapSize;uniforms.scale.value=material.scale;}function refreshUniformsPoints(uniforms,material){uniforms.diffuse.value=material.color;uniforms.opacity.value=material.opacity;uniforms.size.value=material.size*_pixelRatio;uniforms.scale.value=_height*0.5;uniforms.map.value=material.map;if(material.map!==null){if(material.map.matrixAutoUpdate===true){material.map.updateMatrix();}uniforms.uvTransform.value.copy(material.map.matrix);}}function refreshUniformsSprites(uniforms,material){uniforms.diffuse.value=material.color;uniforms.opacity.value=material.opacity;uniforms.rotation.value=material.rotation;uniforms.map.value=material.map;if(material.map!==null){if(material.map.matrixAutoUpdate===true){material.map.updateMatrix();}uniforms.uvTransform.value.copy(material.map.matrix);}}function refreshUniformsFog(uniforms,fog){uniforms.fogColor.value=fog.color;if(fog.isFog){uniforms.fogNear.value=fog.near;uniforms.fogFar.value=fog.far;}else if(fog.isFogExp2){uniforms.fogDensity.value=fog.density;}}function refreshUniformsLambert(uniforms,material){if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}}function refreshUniformsPhong(uniforms,material){uniforms.specular.value=material.specular;uniforms.shininess.value=Math.max(material.shininess,1e-4);// to prevent pow( 0.0, 0.0 )\nif(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsToon(uniforms,material){refreshUniformsPhong(uniforms,material);if(material.gradientMap){uniforms.gradientMap.value=material.gradientMap;}}function refreshUniformsStandard(uniforms,material){uniforms.roughness.value=material.roughness;uniforms.metalness.value=material.metalness;if(material.roughnessMap){uniforms.roughnessMap.value=material.roughnessMap;}if(material.metalnessMap){uniforms.metalnessMap.value=material.metalnessMap;}if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}if(material.envMap){//uniforms.envMap.value = material.envMap; // part of uniforms common\nuniforms.envMapIntensity.value=material.envMapIntensity;}}function refreshUniformsPhysical(uniforms,material){refreshUniformsStandard(uniforms,material);uniforms.reflectivity.value=material.reflectivity;// also part of uniforms common\nuniforms.clearCoat.value=material.clearCoat;uniforms.clearCoatRoughness.value=material.clearCoatRoughness;}function refreshUniformsMatcap(uniforms,material){if(material.matcap){uniforms.matcap.value=material.matcap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsDepth(uniforms,material){if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsDistance(uniforms,material){if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}uniforms.referencePosition.value.copy(material.referencePosition);uniforms.nearDistance.value=material.nearDistance;uniforms.farDistance.value=material.farDistance;}function refreshUniformsNormal(uniforms,material){if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}// If uniforms are marked as clean, they don't need to be loaded to the GPU.\nfunction markUniformsLightsNeedsUpdate(uniforms,value){uniforms.ambientLightColor.needsUpdate=value;uniforms.directionalLights.needsUpdate=value;uniforms.pointLights.needsUpdate=value;uniforms.spotLights.needsUpdate=value;uniforms.rectAreaLights.needsUpdate=value;uniforms.hemisphereLights.needsUpdate=value;}// Textures\nfunction allocTextureUnit(){var textureUnit=_usedTextureUnits;if(textureUnit>=capabilities.maxTextures){console.warn('THREE.WebGLRenderer: Trying to use '+textureUnit+' texture units while this GPU supports only '+capabilities.maxTextures);}_usedTextureUnits+=1;return textureUnit;}this.allocTextureUnit=allocTextureUnit;// this.setTexture2D = setTexture2D;\nthis.setTexture2D=function(){var warned=false;// backwards compatibility: peel texture.texture\nreturn function setTexture2D(texture,slot){if(texture&&texture.isWebGLRenderTarget){if(!warned){console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\");warned=true;}texture=texture.texture;}textures.setTexture2D(texture,slot);};}();this.setTexture3D=function(){// backwards compatibility: peel texture.texture\nreturn function setTexture3D(texture,slot){textures.setTexture3D(texture,slot);};}();this.setTexture=function(){var warned=false;return function setTexture(texture,slot){if(!warned){console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\");warned=true;}textures.setTexture2D(texture,slot);};}();this.setTextureCube=function(){var warned=false;return function setTextureCube(texture,slot){// backwards compatibility: peel texture.texture\nif(texture&&texture.isWebGLRenderTargetCube){if(!warned){console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\");warned=true;}texture=texture.texture;}// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n// TODO: unify these code paths\nif(texture&&texture.isCubeTexture||Array.isArray(texture.image)&&texture.image.length===6){// CompressedTexture can have Array in image :/\n// this function alone should take care of cube textures\ntextures.setTextureCube(texture,slot);}else{// assumed: texture property of THREE.WebGLRenderTargetCube\ntextures.setTextureCubeDynamic(texture,slot);}};}();//\nthis.setFramebuffer=function(value){_framebuffer=value;};this.getRenderTarget=function(){return _currentRenderTarget;};this.setRenderTarget=function(renderTarget){_currentRenderTarget=renderTarget;if(renderTarget&&properties.get(renderTarget).__webglFramebuffer===undefined){textures.setupRenderTarget(renderTarget);}var framebuffer=_framebuffer;var isCube=false;if(renderTarget){var __webglFramebuffer=properties.get(renderTarget).__webglFramebuffer;if(renderTarget.isWebGLRenderTargetCube){framebuffer=__webglFramebuffer[renderTarget.activeCubeFace];isCube=true;}else if(renderTarget.isWebGLMultisampleRenderTarget){framebuffer=properties.get(renderTarget).__webglMultisampledFramebuffer;}else{framebuffer=__webglFramebuffer;}_currentViewport.copy(renderTarget.viewport);_currentScissor.copy(renderTarget.scissor);_currentScissorTest=renderTarget.scissorTest;}else{_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio);_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio);_currentScissorTest=_scissorTest;}if(_currentFramebuffer!==framebuffer){_gl.bindFramebuffer(36160,framebuffer);_currentFramebuffer=framebuffer;}state.viewport(_currentViewport);state.scissor(_currentScissor);state.setScissorTest(_currentScissorTest);if(isCube){var textureProperties=properties.get(renderTarget.texture);_gl.framebufferTexture2D(36160,36064,34069+renderTarget.activeCubeFace,textureProperties.__webglTexture,renderTarget.activeMipMapLevel);}};this.readRenderTargetPixels=function(renderTarget,x,y,width,height,buffer){if(!(renderTarget&&renderTarget.isWebGLRenderTarget)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');return;}var framebuffer=properties.get(renderTarget).__webglFramebuffer;if(framebuffer){var restore=false;if(framebuffer!==_currentFramebuffer){_gl.bindFramebuffer(36160,framebuffer);restore=true;}try{var texture=renderTarget.texture;var textureFormat=texture.format;var textureType=texture.type;if(textureFormat!==RGBAFormat&&utils.convert(textureFormat)!==_gl.getParameter(35739)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');return;}if(textureType!==UnsignedByteType&&utils.convert(textureType)!==_gl.getParameter(35738)&&// IE11, Edge and Chrome Mac < 52 (#9513)\n!(textureType===FloatType&&(capabilities.isWebGL2||extensions.get('OES_texture_float')||extensions.get('WEBGL_color_buffer_float')))&&// Chrome Mac >= 52 and Firefox\n!(textureType===HalfFloatType&&(capabilities.isWebGL2?extensions.get('EXT_color_buffer_float'):extensions.get('EXT_color_buffer_half_float')))){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');return;}if(_gl.checkFramebufferStatus(36160)===36053){// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\nif(x>=0&&x<=renderTarget.width-width&&y>=0&&y<=renderTarget.height-height){_gl.readPixels(x,y,width,height,utils.convert(textureFormat),utils.convert(textureType),buffer);}}else{console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');}}finally{if(restore){_gl.bindFramebuffer(36160,_currentFramebuffer);}}}};this.copyFramebufferToTexture=function(position,texture,level){var width=texture.image.width;var height=texture.image.height;var glFormat=utils.convert(texture.format);this.setTexture2D(texture,0);_gl.copyTexImage2D(3553,level||0,glFormat,position.x,position.y,width,height,0);};this.copyTextureToTexture=function(position,srcTexture,dstTexture,level){var width=srcTexture.image.width;var height=srcTexture.image.height;var glFormat=utils.convert(dstTexture.format);var glType=utils.convert(dstTexture.type);this.setTexture2D(dstTexture,0);if(srcTexture.isDataTexture){_gl.texSubImage2D(3553,level||0,position.x,position.y,width,height,glFormat,glType,srcTexture.image.data);}else{_gl.texSubImage2D(3553,level||0,position.x,position.y,glFormat,glType,srcTexture.image);}};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */function FogExp2(color,density){this.name='';this.color=new Color(color);this.density=density!==undefined?density:0.00025;}FogExp2.prototype.isFogExp2=true;FogExp2.prototype.clone=function(){return new FogExp2(this.color,this.density);};FogExp2.prototype.toJSON=function()/* meta */{return{type:'FogExp2',color:this.color.getHex(),density:this.density};};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */function Fog(color,near,far){this.name='';this.color=new Color(color);this.near=near!==undefined?near:1;this.far=far!==undefined?far:1000;}Fog.prototype.isFog=true;Fog.prototype.clone=function(){return new Fog(this.color,this.near,this.far);};Fog.prototype.toJSON=function()/* meta */{return{type:'Fog',color:this.color.getHex(),near:this.near,far:this.far};};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function Scene(){Object3D.call(this);this.type='Scene';this.background=null;this.fog=null;this.overrideMaterial=null;this.autoUpdate=true;// checked by the renderer\n}Scene.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Scene,isScene:true,copy:function(source,recursive){Object3D.prototype.copy.call(this,source,recursive);if(source.background!==null)this.background=source.background.clone();if(source.fog!==null)this.fog=source.fog.clone();if(source.overrideMaterial!==null)this.overrideMaterial=source.overrideMaterial.clone();this.autoUpdate=source.autoUpdate;this.matrixAutoUpdate=source.matrixAutoUpdate;return this;},toJSON:function(meta){var data=Object3D.prototype.toJSON.call(this,meta);if(this.background!==null)data.object.background=this.background.toJSON(meta);if(this.fog!==null)data.object.fog=this.fog.toJSON();return data;},dispose:function(){this.dispatchEvent({type:'dispose'});}});/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */function InterleavedBuffer(array,stride){this.array=array;this.stride=stride;this.count=array!==undefined?array.length/stride:0;this.dynamic=false;this.updateRange={offset:0,count:-1};this.version=0;}Object.defineProperty(InterleavedBuffer.prototype,'needsUpdate',{set:function(value){if(value===true)this.version++;}});Object.assign(InterleavedBuffer.prototype,{isInterleavedBuffer:true,onUploadCallback:function(){},setArray:function(array){if(Array.isArray(array)){throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');}this.count=array!==undefined?array.length/this.stride:0;this.array=array;return this;},setDynamic:function(value){this.dynamic=value;return this;},copy:function(source){this.array=new source.array.constructor(source.array);this.count=source.count;this.stride=source.stride;this.dynamic=source.dynamic;return this;},copyAt:function(index1,attribute,index2){index1*=this.stride;index2*=attribute.stride;for(var i=0,l=this.stride;i<l;i++){this.array[index1+i]=attribute.array[index2+i];}return this;},set:function(value,offset){if(offset===undefined)offset=0;this.array.set(value,offset);return this;},clone:function(){return new this.constructor().copy(this);},onUpload:function(callback){this.onUploadCallback=callback;return this;}});/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */function InterleavedBufferAttribute(interleavedBuffer,itemSize,offset,normalized){this.data=interleavedBuffer;this.itemSize=itemSize;this.offset=offset;this.normalized=normalized===true;}Object.defineProperties(InterleavedBufferAttribute.prototype,{count:{get:function(){return this.data.count;}},array:{get:function(){return this.data.array;}}});Object.assign(InterleavedBufferAttribute.prototype,{isInterleavedBufferAttribute:true,setX:function(index,x){this.data.array[index*this.data.stride+this.offset]=x;return this;},setY:function(index,y){this.data.array[index*this.data.stride+this.offset+1]=y;return this;},setZ:function(index,z){this.data.array[index*this.data.stride+this.offset+2]=z;return this;},setW:function(index,w){this.data.array[index*this.data.stride+this.offset+3]=w;return this;},getX:function(index){return this.data.array[index*this.data.stride+this.offset];},getY:function(index){return this.data.array[index*this.data.stride+this.offset+1];},getZ:function(index){return this.data.array[index*this.data.stride+this.offset+2];},getW:function(index){return this.data.array[index*this.data.stride+this.offset+3];},setXY:function(index,x,y){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;return this;},setXYZ:function(index,x,y,z){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;return this;},setXYZW:function(index,x,y,z,w){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;this.data.array[index+3]=w;return this;}});/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *  rotation: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */function SpriteMaterial(parameters){Material.call(this);this.type='SpriteMaterial';this.color=new Color(0xffffff);this.map=null;this.rotation=0;this.sizeAttenuation=true;this.lights=false;this.transparent=true;this.setValues(parameters);}SpriteMaterial.prototype=Object.create(Material.prototype);SpriteMaterial.prototype.constructor=SpriteMaterial;SpriteMaterial.prototype.isSpriteMaterial=true;SpriteMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.rotation=source.rotation;this.sizeAttenuation=source.sizeAttenuation;return this;};/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */var geometry;function Sprite(material){Object3D.call(this);this.type='Sprite';if(geometry===undefined){geometry=new BufferGeometry();var float32Array=new Float32Array([-0.5,-0.5,0,0,0,0.5,-0.5,0,1,0,0.5,0.5,0,1,1,-0.5,0.5,0,0,1]);var interleavedBuffer=new InterleavedBuffer(float32Array,5);geometry.setIndex([0,1,2,0,2,3]);geometry.addAttribute('position',new InterleavedBufferAttribute(interleavedBuffer,3,0,false));geometry.addAttribute('uv',new InterleavedBufferAttribute(interleavedBuffer,2,3,false));}this.geometry=geometry;this.material=material!==undefined?material:new SpriteMaterial();this.center=new Vector2(0.5,0.5);}Sprite.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Sprite,isSprite:true,raycast:function(){var intersectPoint=new Vector3();var worldScale=new Vector3();var mvPosition=new Vector3();var alignedPosition=new Vector2();var rotatedPosition=new Vector2();var viewWorldMatrix=new Matrix4();var vA=new Vector3();var vB=new Vector3();var vC=new Vector3();var uvA=new Vector2();var uvB=new Vector2();var uvC=new Vector2();function transformVertex(vertexPosition,mvPosition,center,scale,sin,cos){// compute position in camera space\nalignedPosition.subVectors(vertexPosition,center).addScalar(0.5).multiply(scale);// to check if rotation is not zero\nif(sin!==undefined){rotatedPosition.x=cos*alignedPosition.x-sin*alignedPosition.y;rotatedPosition.y=sin*alignedPosition.x+cos*alignedPosition.y;}else{rotatedPosition.copy(alignedPosition);}vertexPosition.copy(mvPosition);vertexPosition.x+=rotatedPosition.x;vertexPosition.y+=rotatedPosition.y;// transform to world space\nvertexPosition.applyMatrix4(viewWorldMatrix);}return function raycast(raycaster,intersects){worldScale.setFromMatrixScale(this.matrixWorld);viewWorldMatrix.getInverse(this.modelViewMatrix).premultiply(this.matrixWorld);mvPosition.setFromMatrixPosition(this.modelViewMatrix);var rotation=this.material.rotation;var sin,cos;if(rotation!==0){cos=Math.cos(rotation);sin=Math.sin(rotation);}var center=this.center;transformVertex(vA.set(-0.5,-0.5,0),mvPosition,center,worldScale,sin,cos);transformVertex(vB.set(0.5,-0.5,0),mvPosition,center,worldScale,sin,cos);transformVertex(vC.set(0.5,0.5,0),mvPosition,center,worldScale,sin,cos);uvA.set(0,0);uvB.set(1,0);uvC.set(1,1);// check first triangle\nvar intersect=raycaster.ray.intersectTriangle(vA,vB,vC,false,intersectPoint);if(intersect===null){// check second triangle\ntransformVertex(vB.set(-0.5,0.5,0),mvPosition,center,worldScale,sin,cos);uvB.set(0,1);intersect=raycaster.ray.intersectTriangle(vA,vC,vB,false,intersectPoint);if(intersect===null){return;}}var distance=raycaster.ray.origin.distanceTo(intersectPoint);if(distance<raycaster.near||distance>raycaster.far)return;intersects.push({distance:distance,point:intersectPoint.clone(),uv:Triangle.getUV(intersectPoint,vA,vB,vC,uvA,uvB,uvC,new Vector2()),face:null,object:this});};}(),clone:function(){return new this.constructor(this.material).copy(this);},copy:function(source){Object3D.prototype.copy.call(this,source);if(source.center!==undefined)this.center.copy(source.center);return this;}});/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */function LOD(){Object3D.call(this);this.type='LOD';Object.defineProperties(this,{levels:{enumerable:true,value:[]}});}LOD.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:LOD,copy:function(source){Object3D.prototype.copy.call(this,source,false);var levels=source.levels;for(var i=0,l=levels.length;i<l;i++){var level=levels[i];this.addLevel(level.object.clone(),level.distance);}return this;},addLevel:function(object,distance){if(distance===undefined)distance=0;distance=Math.abs(distance);var levels=this.levels;for(var l=0;l<levels.length;l++){if(distance<levels[l].distance){break;}}levels.splice(l,0,{distance:distance,object:object});this.add(object);},getObjectForDistance:function(distance){var levels=this.levels;for(var i=1,l=levels.length;i<l;i++){if(distance<levels[i].distance){break;}}return levels[i-1].object;},raycast:function(){var matrixPosition=new Vector3();return function raycast(raycaster,intersects){matrixPosition.setFromMatrixPosition(this.matrixWorld);var distance=raycaster.ray.origin.distanceTo(matrixPosition);this.getObjectForDistance(distance).raycast(raycaster,intersects);};}(),update:function(){var v1=new Vector3();var v2=new Vector3();return function update(camera){var levels=this.levels;if(levels.length>1){v1.setFromMatrixPosition(camera.matrixWorld);v2.setFromMatrixPosition(this.matrixWorld);var distance=v1.distanceTo(v2);levels[0].object.visible=true;for(var i=1,l=levels.length;i<l;i++){if(distance>=levels[i].distance){levels[i-1].object.visible=false;levels[i].object.visible=true;}else{break;}}for(;i<l;i++){levels[i].object.visible=false;}}};}(),toJSON:function(meta){var data=Object3D.prototype.toJSON.call(this,meta);data.object.levels=[];var levels=this.levels;for(var i=0,l=levels.length;i<l;i++){var level=levels[i];data.object.levels.push({object:level.object.uuid,distance:level.distance});}return data;}});/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */function SkinnedMesh(geometry,material){if(geometry&&geometry.isGeometry){console.error('THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}Mesh.call(this,geometry,material);this.type='SkinnedMesh';this.bindMode='attached';this.bindMatrix=new Matrix4();this.bindMatrixInverse=new Matrix4();}SkinnedMesh.prototype=Object.assign(Object.create(Mesh.prototype),{constructor:SkinnedMesh,isSkinnedMesh:true,bind:function(skeleton,bindMatrix){this.skeleton=skeleton;if(bindMatrix===undefined){this.updateMatrixWorld(true);this.skeleton.calculateInverses();bindMatrix=this.matrixWorld;}this.bindMatrix.copy(bindMatrix);this.bindMatrixInverse.getInverse(bindMatrix);},pose:function(){this.skeleton.pose();},normalizeSkinWeights:function(){var vector=new Vector4();var skinWeight=this.geometry.attributes.skinWeight;for(var i=0,l=skinWeight.count;i<l;i++){vector.x=skinWeight.getX(i);vector.y=skinWeight.getY(i);vector.z=skinWeight.getZ(i);vector.w=skinWeight.getW(i);var scale=1.0/vector.manhattanLength();if(scale!==Infinity){vector.multiplyScalar(scale);}else{vector.set(1,0,0,0);// do something reasonable\n}skinWeight.setXYZW(i,vector.x,vector.y,vector.z,vector.w);}},updateMatrixWorld:function(force){Mesh.prototype.updateMatrixWorld.call(this,force);if(this.bindMode==='attached'){this.bindMatrixInverse.getInverse(this.matrixWorld);}else if(this.bindMode==='detached'){this.bindMatrixInverse.getInverse(this.bindMatrix);}else{console.warn('THREE.SkinnedMesh: Unrecognized bindMode: '+this.bindMode);}},clone:function(){return new this.constructor(this.geometry,this.material).copy(this);}});/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */function Skeleton(bones,boneInverses){// copy the bone array\nbones=bones||[];this.bones=bones.slice(0);this.boneMatrices=new Float32Array(this.bones.length*16);// use the supplied bone inverses or calculate the inverses\nif(boneInverses===undefined){this.calculateInverses();}else{if(this.bones.length===boneInverses.length){this.boneInverses=boneInverses.slice(0);}else{console.warn('THREE.Skeleton boneInverses is the wrong length.');this.boneInverses=[];for(var i=0,il=this.bones.length;i<il;i++){this.boneInverses.push(new Matrix4());}}}}Object.assign(Skeleton.prototype,{calculateInverses:function(){this.boneInverses=[];for(var i=0,il=this.bones.length;i<il;i++){var inverse=new Matrix4();if(this.bones[i]){inverse.getInverse(this.bones[i].matrixWorld);}this.boneInverses.push(inverse);}},pose:function(){var bone,i,il;// recover the bind-time world matrices\nfor(i=0,il=this.bones.length;i<il;i++){bone=this.bones[i];if(bone){bone.matrixWorld.getInverse(this.boneInverses[i]);}}// compute the local matrices, positions, rotations and scales\nfor(i=0,il=this.bones.length;i<il;i++){bone=this.bones[i];if(bone){if(bone.parent&&bone.parent.isBone){bone.matrix.getInverse(bone.parent.matrixWorld);bone.matrix.multiply(bone.matrixWorld);}else{bone.matrix.copy(bone.matrixWorld);}bone.matrix.decompose(bone.position,bone.quaternion,bone.scale);}}},update:function(){var offsetMatrix=new Matrix4();var identityMatrix=new Matrix4();return function update(){var bones=this.bones;var boneInverses=this.boneInverses;var boneMatrices=this.boneMatrices;var boneTexture=this.boneTexture;// flatten bone matrices to array\nfor(var i=0,il=bones.length;i<il;i++){// compute the offset between the current and the original transform\nvar matrix=bones[i]?bones[i].matrixWorld:identityMatrix;offsetMatrix.multiplyMatrices(matrix,boneInverses[i]);offsetMatrix.toArray(boneMatrices,i*16);}if(boneTexture!==undefined){boneTexture.needsUpdate=true;}};}(),clone:function(){return new Skeleton(this.bones,this.boneInverses);},getBoneByName:function(name){for(var i=0,il=this.bones.length;i<il;i++){var bone=this.bones[i];if(bone.name===name){return bone;}}return undefined;}});/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */function Bone(){Object3D.call(this);this.type='Bone';}Bone.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Bone,isBone:true});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */function LineBasicMaterial(parameters){Material.call(this);this.type='LineBasicMaterial';this.color=new Color(0xffffff);this.linewidth=1;this.linecap='round';this.linejoin='round';this.lights=false;this.setValues(parameters);}LineBasicMaterial.prototype=Object.create(Material.prototype);LineBasicMaterial.prototype.constructor=LineBasicMaterial;LineBasicMaterial.prototype.isLineBasicMaterial=true;LineBasicMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.linewidth=source.linewidth;this.linecap=source.linecap;this.linejoin=source.linejoin;return this;};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function Line(geometry,material,mode){if(mode===1){console.error('THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.');}Object3D.call(this);this.type='Line';this.geometry=geometry!==undefined?geometry:new BufferGeometry();this.material=material!==undefined?material:new LineBasicMaterial({color:Math.random()*0xffffff});}Line.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Line,isLine:true,computeLineDistances:function(){var start=new Vector3();var end=new Vector3();return function computeLineDistances(){var geometry=this.geometry;if(geometry.isBufferGeometry){// we assume non-indexed geometry\nif(geometry.index===null){var positionAttribute=geometry.attributes.position;var lineDistances=[0];for(var i=1,l=positionAttribute.count;i<l;i++){start.fromBufferAttribute(positionAttribute,i-1);end.fromBufferAttribute(positionAttribute,i);lineDistances[i]=lineDistances[i-1];lineDistances[i]+=start.distanceTo(end);}geometry.addAttribute('lineDistance',new Float32BufferAttribute(lineDistances,1));}else{console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}}else if(geometry.isGeometry){var vertices=geometry.vertices;var lineDistances=geometry.lineDistances;lineDistances[0]=0;for(var i=1,l=vertices.length;i<l;i++){lineDistances[i]=lineDistances[i-1];lineDistances[i]+=vertices[i-1].distanceTo(vertices[i]);}}return this;};}(),raycast:function(){var inverseMatrix=new Matrix4();var ray=new Ray();var sphere=new Sphere();return function raycast(raycaster,intersects){var precision=raycaster.linePrecision;var geometry=this.geometry;var matrixWorld=this.matrixWorld;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();sphere.copy(geometry.boundingSphere);sphere.applyMatrix4(matrixWorld);sphere.radius+=precision;if(raycaster.ray.intersectsSphere(sphere)===false)return;//\ninverseMatrix.getInverse(matrixWorld);ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);var localPrecision=precision/((this.scale.x+this.scale.y+this.scale.z)/3);var localPrecisionSq=localPrecision*localPrecision;var vStart=new Vector3();var vEnd=new Vector3();var interSegment=new Vector3();var interRay=new Vector3();var step=this&&this.isLineSegments?2:1;if(geometry.isBufferGeometry){var index=geometry.index;var attributes=geometry.attributes;var positions=attributes.position.array;if(index!==null){var indices=index.array;for(var i=0,l=indices.length-1;i<l;i+=step){var a=indices[i];var b=indices[i+1];vStart.fromArray(positions,a*3);vEnd.fromArray(positions,b*3);var distSq=ray.distanceSqToSegment(vStart,vEnd,interRay,interSegment);if(distSq>localPrecisionSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation\nvar distance=raycaster.ray.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,// What do we want? intersection point on the ray or on the segment??\n// point: raycaster.ray.at( distance ),\npoint:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this});}}else{for(var i=0,l=positions.length/3-1;i<l;i+=step){vStart.fromArray(positions,3*i);vEnd.fromArray(positions,3*i+3);var distSq=ray.distanceSqToSegment(vStart,vEnd,interRay,interSegment);if(distSq>localPrecisionSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation\nvar distance=raycaster.ray.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,// What do we want? intersection point on the ray or on the segment??\n// point: raycaster.ray.at( distance ),\npoint:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this});}}}else if(geometry.isGeometry){var vertices=geometry.vertices;var nbVertices=vertices.length;for(var i=0;i<nbVertices-1;i+=step){var distSq=ray.distanceSqToSegment(vertices[i],vertices[i+1],interRay,interSegment);if(distSq>localPrecisionSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation\nvar distance=raycaster.ray.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,// What do we want? intersection point on the ray or on the segment??\n// point: raycaster.ray.at( distance ),\npoint:interSegment.clone().applyMatrix4(this.matrixWorld),index:i,face:null,faceIndex:null,object:this});}}};}(),copy:function(source){Object3D.prototype.copy.call(this,source);this.geometry.copy(source.geometry);this.material.copy(source.material);return this;},clone:function(){return new this.constructor().copy(this);}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function LineSegments(geometry,material){Line.call(this,geometry,material);this.type='LineSegments';}LineSegments.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineSegments,isLineSegments:true,computeLineDistances:function(){var start=new Vector3();var end=new Vector3();return function computeLineDistances(){var geometry=this.geometry;if(geometry.isBufferGeometry){// we assume non-indexed geometry\nif(geometry.index===null){var positionAttribute=geometry.attributes.position;var lineDistances=[];for(var i=0,l=positionAttribute.count;i<l;i+=2){start.fromBufferAttribute(positionAttribute,i);end.fromBufferAttribute(positionAttribute,i+1);lineDistances[i]=i===0?0:lineDistances[i-1];lineDistances[i+1]=lineDistances[i]+start.distanceTo(end);}geometry.addAttribute('lineDistance',new Float32BufferAttribute(lineDistances,1));}else{console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}}else if(geometry.isGeometry){var vertices=geometry.vertices;var lineDistances=geometry.lineDistances;for(var i=0,l=vertices.length;i<l;i+=2){start.copy(vertices[i]);end.copy(vertices[i+1]);lineDistances[i]=i===0?0:lineDistances[i-1];lineDistances[i+1]=lineDistances[i]+start.distanceTo(end);}}return this;};}()});/**\n\t * @author mgreter / http://github.com/mgreter\n\t */function LineLoop(geometry,material){Line.call(this,geometry,material);this.type='LineLoop';}LineLoop.prototype=Object.assign(Object.create(Line.prototype),{constructor:LineLoop,isLineLoop:true});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t *\n\t *  morphTargets: <bool>\n\t * }\n\t */function PointsMaterial(parameters){Material.call(this);this.type='PointsMaterial';this.color=new Color(0xffffff);this.map=null;this.size=1;this.sizeAttenuation=true;this.morphTargets=false;this.lights=false;this.setValues(parameters);}PointsMaterial.prototype=Object.create(Material.prototype);PointsMaterial.prototype.constructor=PointsMaterial;PointsMaterial.prototype.isPointsMaterial=true;PointsMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.size=source.size;this.sizeAttenuation=source.sizeAttenuation;this.morphTargets=source.morphTargets;return this;};/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */function Points(geometry,material){Object3D.call(this);this.type='Points';this.geometry=geometry!==undefined?geometry:new BufferGeometry();this.material=material!==undefined?material:new PointsMaterial({color:Math.random()*0xffffff});}Points.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Points,isPoints:true,raycast:function(){var inverseMatrix=new Matrix4();var ray=new Ray();var sphere=new Sphere();return function raycast(raycaster,intersects){var object=this;var geometry=this.geometry;var matrixWorld=this.matrixWorld;var threshold=raycaster.params.Points.threshold;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();sphere.copy(geometry.boundingSphere);sphere.applyMatrix4(matrixWorld);sphere.radius+=threshold;if(raycaster.ray.intersectsSphere(sphere)===false)return;//\ninverseMatrix.getInverse(matrixWorld);ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);var localThreshold=threshold/((this.scale.x+this.scale.y+this.scale.z)/3);var localThresholdSq=localThreshold*localThreshold;var position=new Vector3();var intersectPoint=new Vector3();function testPoint(point,index){var rayPointDistanceSq=ray.distanceSqToPoint(point);if(rayPointDistanceSq<localThresholdSq){ray.closestPointToPoint(point,intersectPoint);intersectPoint.applyMatrix4(matrixWorld);var distance=raycaster.ray.origin.distanceTo(intersectPoint);if(distance<raycaster.near||distance>raycaster.far)return;intersects.push({distance:distance,distanceToRay:Math.sqrt(rayPointDistanceSq),point:intersectPoint.clone(),index:index,face:null,object:object});}}if(geometry.isBufferGeometry){var index=geometry.index;var attributes=geometry.attributes;var positions=attributes.position.array;if(index!==null){var indices=index.array;for(var i=0,il=indices.length;i<il;i++){var a=indices[i];position.fromArray(positions,a*3);testPoint(position,a);}}else{for(var i=0,l=positions.length/3;i<l;i++){position.fromArray(positions,i*3);testPoint(position,i);}}}else{var vertices=geometry.vertices;for(var i=0,l=vertices.length;i<l;i++){testPoint(vertices[i],i);}}};}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this);}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function VideoTexture(video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){Texture.call(this,video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.format=format!==undefined?format:RGBFormat;this.minFilter=minFilter!==undefined?minFilter:LinearFilter;this.magFilter=magFilter!==undefined?magFilter:LinearFilter;this.generateMipmaps=false;}VideoTexture.prototype=Object.assign(Object.create(Texture.prototype),{constructor:VideoTexture,isVideoTexture:true,update:function(){var video=this.image;if(video.readyState>=video.HAVE_CURRENT_DATA){this.needsUpdate=true;}}});/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */function CompressedTexture(mipmaps,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);this.image={width:width,height:height};this.mipmaps=mipmaps;// no flipping for cube textures\n// (also flipping doesn't work for compressed textures )\nthis.flipY=false;// can't generate mipmaps for compressed textures\n// mips must be embedded in DDS files\nthis.generateMipmaps=false;}CompressedTexture.prototype=Object.create(Texture.prototype);CompressedTexture.prototype.constructor=CompressedTexture;CompressedTexture.prototype.isCompressedTexture=true;/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function CanvasTexture(canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){Texture.call(this,canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.needsUpdate=true;}CanvasTexture.prototype=Object.create(Texture.prototype);CanvasTexture.prototype.constructor=CanvasTexture;CanvasTexture.prototype.isCanvasTexture=true;/**\n\t * @author Matt DesLauriers / @mattdesl\n\t * @author atix / arthursilber.de\n\t */function DepthTexture(width,height,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,format){format=format!==undefined?format:DepthFormat;if(format!==DepthFormat&&format!==DepthStencilFormat){throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');}if(type===undefined&&format===DepthFormat)type=UnsignedShortType;if(type===undefined&&format===DepthStencilFormat)type=UnsignedInt248Type;Texture.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);this.image={width:width,height:height};this.magFilter=magFilter!==undefined?magFilter:NearestFilter;this.minFilter=minFilter!==undefined?minFilter:NearestFilter;this.flipY=false;this.generateMipmaps=false;}DepthTexture.prototype=Object.create(Texture.prototype);DepthTexture.prototype.constructor=DepthTexture;DepthTexture.prototype.isDepthTexture=true;/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */function WireframeGeometry(geometry){BufferGeometry.call(this);this.type='WireframeGeometry';// buffer\nvar vertices=[];// helper variables\nvar i,j,l,o,ol;var edge=[0,0],edges={},e,edge1,edge2;var key,keys=['a','b','c'];var vertex;// different logic for Geometry and BufferGeometry\nif(geometry&&geometry.isGeometry){// create a data structure that contains all edges without duplicates\nvar faces=geometry.faces;for(i=0,l=faces.length;i<l;i++){var face=faces[i];for(j=0;j<3;j++){edge1=face[keys[j]];edge2=face[keys[(j+1)%3]];edge[0]=Math.min(edge1,edge2);// sorting prevents duplicates\nedge[1]=Math.max(edge1,edge2);key=edge[0]+','+edge[1];if(edges[key]===undefined){edges[key]={index1:edge[0],index2:edge[1]};}}}// generate vertices\nfor(key in edges){e=edges[key];vertex=geometry.vertices[e.index1];vertices.push(vertex.x,vertex.y,vertex.z);vertex=geometry.vertices[e.index2];vertices.push(vertex.x,vertex.y,vertex.z);}}else if(geometry&&geometry.isBufferGeometry){var position,indices,groups;var group,start,count;var index1,index2;vertex=new Vector3();if(geometry.index!==null){// indexed BufferGeometry\nposition=geometry.attributes.position;indices=geometry.index;groups=geometry.groups;if(groups.length===0){groups=[{start:0,count:indices.count,materialIndex:0}];}// create a data structure that contains all eges without duplicates\nfor(o=0,ol=groups.length;o<ol;++o){group=groups[o];start=group.start;count=group.count;for(i=start,l=start+count;i<l;i+=3){for(j=0;j<3;j++){edge1=indices.getX(i+j);edge2=indices.getX(i+(j+1)%3);edge[0]=Math.min(edge1,edge2);// sorting prevents duplicates\nedge[1]=Math.max(edge1,edge2);key=edge[0]+','+edge[1];if(edges[key]===undefined){edges[key]={index1:edge[0],index2:edge[1]};}}}}// generate vertices\nfor(key in edges){e=edges[key];vertex.fromBufferAttribute(position,e.index1);vertices.push(vertex.x,vertex.y,vertex.z);vertex.fromBufferAttribute(position,e.index2);vertices.push(vertex.x,vertex.y,vertex.z);}}else{// non-indexed BufferGeometry\nposition=geometry.attributes.position;for(i=0,l=position.count/3;i<l;i++){for(j=0;j<3;j++){// three edges per triangle, an edge is represented as (index1, index2)\n// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\nindex1=3*i+j;vertex.fromBufferAttribute(position,index1);vertices.push(vertex.x,vertex.y,vertex.z);index2=3*i+(j+1)%3;vertex.fromBufferAttribute(position,index2);vertices.push(vertex.x,vertex.y,vertex.z);}}}}// build geometry\nthis.addAttribute('position',new Float32BufferAttribute(vertices,3));}WireframeGeometry.prototype=Object.create(BufferGeometry.prototype);WireframeGeometry.prototype.constructor=WireframeGeometry;/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t */ // ParametricGeometry\nfunction ParametricGeometry(func,slices,stacks){Geometry.call(this);this.type='ParametricGeometry';this.parameters={func:func,slices:slices,stacks:stacks};this.fromBufferGeometry(new ParametricBufferGeometry(func,slices,stacks));this.mergeVertices();}ParametricGeometry.prototype=Object.create(Geometry.prototype);ParametricGeometry.prototype.constructor=ParametricGeometry;// ParametricBufferGeometry\nfunction ParametricBufferGeometry(func,slices,stacks){BufferGeometry.call(this);this.type='ParametricBufferGeometry';this.parameters={func:func,slices:slices,stacks:stacks};// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];var EPS=0.00001;var normal=new Vector3();var p0=new Vector3(),p1=new Vector3();var pu=new Vector3(),pv=new Vector3();var i,j;if(func.length<3){console.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');}// generate vertices, normals and uvs\nvar sliceCount=slices+1;for(i=0;i<=stacks;i++){var v=i/stacks;for(j=0;j<=slices;j++){var u=j/slices;// vertex\nfunc(u,v,p0);vertices.push(p0.x,p0.y,p0.z);// normal\n// approximate tangent vectors via finite differences\nif(u-EPS>=0){func(u-EPS,v,p1);pu.subVectors(p0,p1);}else{func(u+EPS,v,p1);pu.subVectors(p1,p0);}if(v-EPS>=0){func(u,v-EPS,p1);pv.subVectors(p0,p1);}else{func(u,v+EPS,p1);pv.subVectors(p1,p0);}// cross product of tangent vectors returns surface normal\nnormal.crossVectors(pu,pv).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u,v);}}// generate indices\nfor(i=0;i<stacks;i++){for(j=0;j<slices;j++){var a=i*sliceCount+j;var b=i*sliceCount+j+1;var c=(i+1)*sliceCount+j+1;var d=(i+1)*sliceCount+j;// faces one and two\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.addAttribute('position',new Float32BufferAttribute(vertices,3));this.addAttribute('normal',new Float32BufferAttribute(normals,3));this.addAttribute('uv',new Float32BufferAttribute(uvs,2));}ParametricBufferGeometry.prototype=Object.create(BufferGeometry.prototype);ParametricBufferGeometry.prototype.constructor=ParametricBufferGeometry;/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */ // PolyhedronGeometry\nfunction PolyhedronGeometry(vertices,indices,radius,detail){Geometry.call(this);this.type='PolyhedronGeometry';this.parameters={vertices:vertices,indices:indices,radius:radius,detail:detail};this.fromBufferGeometry(new PolyhedronBufferGeometry(vertices,indices,radius,detail));this.mergeVertices();}PolyhedronGeometry.prototype=Object.create(Geometry.prototype);PolyhedronGeometry.prototype.constructor=PolyhedronGeometry;// PolyhedronBufferGeometry\nfunction PolyhedronBufferGeometry(vertices,indices,radius,detail){BufferGeometry.call(this);this.type='PolyhedronBufferGeometry';this.parameters={vertices:vertices,indices:indices,radius:radius,detail:detail};radius=radius||1;detail=detail||0;// default buffer data\nvar vertexBuffer=[];var uvBuffer=[];// the subdivision creates the vertex buffer data\nsubdivide(detail);// all vertices should lie on a conceptual sphere with a given radius\nappplyRadius(radius);// finally, create the uv data\ngenerateUVs();// build non-indexed geometry\nthis.addAttribute('position',new Float32BufferAttribute(vertexBuffer,3));this.addAttribute('normal',new Float32BufferAttribute(vertexBuffer.slice(),3));this.addAttribute('uv',new Float32BufferAttribute(uvBuffer,2));if(detail===0){this.computeVertexNormals();// flat normals\n}else{this.normalizeNormals();// smooth normals\n}// helper functions\nfunction subdivide(detail){var a=new Vector3();var b=new Vector3();var c=new Vector3();// iterate over all faces and apply a subdivison with the given detail value\nfor(var i=0;i<indices.length;i+=3){// get the vertices of the face\ngetVertexByIndex(indices[i+0],a);getVertexByIndex(indices[i+1],b);getVertexByIndex(indices[i+2],c);// perform subdivision\nsubdivideFace(a,b,c,detail);}}function subdivideFace(a,b,c,detail){var cols=Math.pow(2,detail);// we use this multidimensional array as a data structure for creating the subdivision\nvar v=[];var i,j;// construct all of the vertices for this subdivision\nfor(i=0;i<=cols;i++){v[i]=[];var aj=a.clone().lerp(c,i/cols);var bj=b.clone().lerp(c,i/cols);var rows=cols-i;for(j=0;j<=rows;j++){if(j===0&&i===cols){v[i][j]=aj;}else{v[i][j]=aj.clone().lerp(bj,j/rows);}}}// construct all of the faces\nfor(i=0;i<cols;i++){for(j=0;j<2*(cols-i)-1;j++){var k=Math.floor(j/2);if(j%2===0){pushVertex(v[i][k+1]);pushVertex(v[i+1][k]);pushVertex(v[i][k]);}else{pushVertex(v[i][k+1]);pushVertex(v[i+1][k+1]);pushVertex(v[i+1][k]);}}}}function appplyRadius(radius){var vertex=new Vector3();// iterate over the entire buffer and apply the radius to each vertex\nfor(var i=0;i<vertexBuffer.length;i+=3){vertex.x=vertexBuffer[i+0];vertex.y=vertexBuffer[i+1];vertex.z=vertexBuffer[i+2];vertex.normalize().multiplyScalar(radius);vertexBuffer[i+0]=vertex.x;vertexBuffer[i+1]=vertex.y;vertexBuffer[i+2]=vertex.z;}}function generateUVs(){var vertex=new Vector3();for(var i=0;i<vertexBuffer.length;i+=3){vertex.x=vertexBuffer[i+0];vertex.y=vertexBuffer[i+1];vertex.z=vertexBuffer[i+2];var u=azimuth(vertex)/2/Math.PI+0.5;var v=inclination(vertex)/Math.PI+0.5;uvBuffer.push(u,1-v);}correctUVs();correctSeam();}function correctSeam(){// handle case when face straddles the seam, see #3269\nfor(var i=0;i<uvBuffer.length;i+=6){// uv data of a single face\nvar x0=uvBuffer[i+0];var x1=uvBuffer[i+2];var x2=uvBuffer[i+4];var max=Math.max(x0,x1,x2);var min=Math.min(x0,x1,x2);// 0.9 is somewhat arbitrary\nif(max>0.9&&min<0.1){if(x0<0.2)uvBuffer[i+0]+=1;if(x1<0.2)uvBuffer[i+2]+=1;if(x2<0.2)uvBuffer[i+4]+=1;}}}function pushVertex(vertex){vertexBuffer.push(vertex.x,vertex.y,vertex.z);}function getVertexByIndex(index,vertex){var stride=index*3;vertex.x=vertices[stride+0];vertex.y=vertices[stride+1];vertex.z=vertices[stride+2];}function correctUVs(){var a=new Vector3();var b=new Vector3();var c=new Vector3();var centroid=new Vector3();var uvA=new Vector2();var uvB=new Vector2();var uvC=new Vector2();for(var i=0,j=0;i<vertexBuffer.length;i+=9,j+=6){a.set(vertexBuffer[i+0],vertexBuffer[i+1],vertexBuffer[i+2]);b.set(vertexBuffer[i+3],vertexBuffer[i+4],vertexBuffer[i+5]);c.set(vertexBuffer[i+6],vertexBuffer[i+7],vertexBuffer[i+8]);uvA.set(uvBuffer[j+0],uvBuffer[j+1]);uvB.set(uvBuffer[j+2],uvBuffer[j+3]);uvC.set(uvBuffer[j+4],uvBuffer[j+5]);centroid.copy(a).add(b).add(c).divideScalar(3);var azi=azimuth(centroid);correctUV(uvA,j+0,a,azi);correctUV(uvB,j+2,b,azi);correctUV(uvC,j+4,c,azi);}}function correctUV(uv,stride,vector,azimuth){if(azimuth<0&&uv.x===1){uvBuffer[stride]=uv.x-1;}if(vector.x===0&&vector.z===0){uvBuffer[stride]=azimuth/2/Math.PI+0.5;}}// Angle around the Y axis, counter-clockwise when looking from above.\nfunction azimuth(vector){return Math.atan2(vector.z,-vector.x);}// Angle above the XZ plane.\nfunction inclination(vector){return Math.atan2(-vector.y,Math.sqrt(vector.x*vector.x+vector.z*vector.z));}}PolyhedronBufferGeometry.prototype=Object.create(BufferGeometry.prototype);PolyhedronBufferGeometry.prototype.constructor=PolyhedronBufferGeometry;/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */ // TetrahedronGeometry\nfunction TetrahedronGeometry(radius,detail){Geometry.call(this);this.type='TetrahedronGeometry';this.parameters={radius:radius,detail:detail};this.fromBufferGeometry(new TetrahedronBufferGeometry(radius,detail));this.mergeVertices();}TetrahedronGeometry.prototype=Object.create(Geometry.prototype);TetrahedronGeometry.prototype.constructor=TetrahedronGeometry;// TetrahedronBufferGeometry\nfunction TetrahedronBufferGeometry(radius,detail){var vertices=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1];var indices=[2,1,0,0,3,2,1,3,0,2,3,1];PolyhedronBufferGeometry.call(this,vertices,indices,radius,detail);this.type='TetrahedronBufferGeometry';this.parameters={radius:radius,detail:detail};}TetrahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype);TetrahedronBufferGeometry.prototype.constructor=TetrahedronBufferGeometry;/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */ // OctahedronGeometry\nfunction OctahedronGeometry(radius,detail){Geometry.call(this);this.type='OctahedronGeometry';this.parameters={radius:radius,detail:detail};this.fromBufferGeometry(new OctahedronBufferGeometry(radius,detail));this.mergeVertices();}OctahedronGeometry.prototype=Object.create(Geometry.prototype);OctahedronGeometry.prototype.constructor=OctahedronGeometry;// OctahedronBufferGeometry\nfunction OctahedronBufferGeometry(radius,detail){var vertices=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1];var indices=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];PolyhedronBufferGeometry.call(this,vertices,indices,radius,detail);this.type='OctahedronBufferGeometry';this.parameters={radius:radius,detail:detail};}OctahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype);OctahedronBufferGeometry.prototype.constructor=OctahedronBufferGeometry;/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */ // IcosahedronGeometry\nfunction IcosahedronGeometry(radius,detail){Geometry.call(this);this.type='IcosahedronGeometry';this.parameters={radius:radius,detail:detail};this.fromBufferGeometry(new IcosahedronBufferGeometry(radius,detail));this.mergeVertices();}IcosahedronGeometry.prototype=Object.create(Geometry.prototype);IcosahedronGeometry.prototype.constructor=IcosahedronGeometry;// IcosahedronBufferGeometry\nfunction IcosahedronBufferGeometry(radius,detail){var t=(1+Math.sqrt(5))/2;var vertices=[-1,t,0,1,t,0,-1,-t,0,1,-t,0,0,-1,t,0,1,t,0,-1,-t,0,1,-t,t,0,-1,t,0,1,-t,0,-1,-t,0,1];var indices=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];PolyhedronBufferGeometry.call(this,vertices,indices,radius,detail);this.type='IcosahedronBufferGeometry';this.parameters={radius:radius,detail:detail};}IcosahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype);IcosahedronBufferGeometry.prototype.constructor=IcosahedronBufferGeometry;/**\n\t * @author Abe Pazos / https://hamoid.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */ // DodecahedronGeometry\nfunction DodecahedronGeometry(radius,detail){Geometry.call(this);this.type='DodecahedronGeometry';this.parameters={radius:radius,detail:detail};this.fromBufferGeometry(new DodecahedronBufferGeometry(radius,detail));this.mergeVertices();}DodecahedronGeometry.prototype=Object.create(Geometry.prototype);DodecahedronGeometry.prototype.constructor=DodecahedronGeometry;// DodecahedronBufferGeometry\nfunction DodecahedronBufferGeometry(radius,detail){var t=(1+Math.sqrt(5))/2;var r=1/t;var vertices=[// (±1, ±1, ±1)\n-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,// (0, ±1/φ, ±φ)\n0,-r,-t,0,-r,t,0,r,-t,0,r,t,// (±1/φ, ±φ, 0)\n-r,-t,0,-r,t,0,r,-t,0,r,t,0,// (±φ, 0, ±1/φ)\n-t,0,-r,t,0,-r,-t,0,r,t,0,r];var indices=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];PolyhedronBufferGeometry.call(this,vertices,indices,radius,detail);this.type='DodecahedronBufferGeometry';this.parameters={radius:radius,detail:detail};}DodecahedronBufferGeometry.prototype=Object.create(PolyhedronBufferGeometry.prototype);DodecahedronBufferGeometry.prototype.constructor=DodecahedronBufferGeometry;/**\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t */ // TubeGeometry\nfunction TubeGeometry(path,tubularSegments,radius,radialSegments,closed,taper){Geometry.call(this);this.type='TubeGeometry';this.parameters={path:path,tubularSegments:tubularSegments,radius:radius,radialSegments:radialSegments,closed:closed};if(taper!==undefined)console.warn('THREE.TubeGeometry: taper has been removed.');var bufferGeometry=new TubeBufferGeometry(path,tubularSegments,radius,radialSegments,closed);// expose internals\nthis.tangents=bufferGeometry.tangents;this.normals=bufferGeometry.normals;this.binormals=bufferGeometry.binormals;// create geometry\nthis.fromBufferGeometry(bufferGeometry);this.mergeVertices();}TubeGeometry.prototype=Object.create(Geometry.prototype);TubeGeometry.prototype.constructor=TubeGeometry;// TubeBufferGeometry\nfunction TubeBufferGeometry(path,tubularSegments,radius,radialSegments,closed){BufferGeometry.call(this);this.type='TubeBufferGeometry';this.parameters={path:path,tubularSegments:tubularSegments,radius:radius,radialSegments:radialSegments,closed:closed};tubularSegments=tubularSegments||64;radius=radius||1;radialSegments=radialSegments||8;closed=closed||false;var frames=path.computeFrenetFrames(tubularSegments,closed);// expose internals\nthis.tangents=frames.tangents;this.normals=frames.normals;this.binormals=frames.binormals;// helper variables\nvar vertex=new Vector3();var normal=new Vector3();var uv=new Vector2();var P=new Vector3();var i,j;// buffer\nvar vertices=[];var normals=[];var uvs=[];var indices=[];// create buffer data\ngenerateBufferData();// build geometry\nthis.setIndex(indices);this.addAttribute('position',new Float32BufferAttribute(vertices,3));this.addAttribute('normal',new Float32BufferAttribute(normals,3));this.addAttribute('uv',new Float32BufferAttribute(uvs,2));// functions\nfunction generateBufferData(){for(i=0;i<tubularSegments;i++){generateSegment(i);}// if the geometry is not closed, generate the last row of vertices and normals\n// at the regular position on the given path\n//\n// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\ngenerateSegment(closed===false?tubularSegments:0);// uvs are generated in a separate function.\n// this makes it easy compute correct values for closed geometries\ngenerateUVs();// finally create faces\ngenerateIndices();}function generateSegment(i){// we use getPointAt to sample evenly distributed points from the given path\nP=path.getPointAt(i/tubularSegments,P);// retrieve corresponding normal and binormal\nvar N=frames.normals[i];var B=frames.binormals[i];// generate normals and vertices for the current segment\nfor(j=0;j<=radialSegments;j++){var v=j/radialSegments*Math.PI*2;var sin=Math.sin(v);var cos=-Math.cos(v);// normal\nnormal.x=cos*N.x+sin*B.x;normal.y=cos*N.y+sin*B.y;normal.z=cos*N.z+sin*B.z;normal.normalize();normals.push(normal.x,normal.y,normal.z);// vertex\nvertex.x=P.x+radius*normal.x;vertex.y=P.y+radius*normal.y;vertex.z=P.z+radius*normal.z;vertices.push(vertex.x,vertex.y,vertex.z);}}function generateIndices(){for(j=1;j<=tubularSegments;j++){for(i=1;i<=radialSegments;i++){var a=(radialSegments+1)*(j-1)+(i-1);var b=(radialSegments+1)*j+(i-1);var c=(radialSegments+1)*j+i;var d=(radialSegments+1)*(j-1)+i;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}}function generateUVs(){for(i=0;i<=tubularSegments;i++){for(j=0;j<=radialSegments;j++){uv.x=i/tubularSegments;uv.y=j/radialSegments;uvs.push(uv.x,uv.y);}}}}TubeBufferGeometry.prototype=Object.create(BufferGeometry.prototype);TubeBufferGeometry.prototype.constructor=TubeBufferGeometry;/**\n\t * @author oosmoxiecode\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * based on http://www.blackpawn.com/texts/pqtorus/\n\t */ // TorusKnotGeometry\nfunction TorusKnotGeometry(radius,tube,tubularSegments,radialSegments,p,q,heightScale){Geometry.call(this);this.type='TorusKnotGeometry';this.parameters={radius:radius,tube:tube,tubularSegments:tubularSegments,radialSegments:radialSegments,p:p,q:q};if(heightScale!==undefined)console.warn('THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.');this.fromBufferGeometry(new TorusKnotBufferGeometry(radius,tube,tubularSegments,radialSegments,p,q));this.mergeVertices();}TorusKnotGeometry.prototype=Object.create(Geometry.prototype);TorusKnotGeometry.prototype.constructor=TorusKnotGeometry;// TorusKnotBufferGeometry\nfunction TorusKnotBufferGeometry(radius,tube,tubularSegments,radialSegments,p,q){BufferGeometry.call(this);this.type='TorusKnotBufferGeometry';this.parameters={radius:radius,tube:tube,tubularSegments:tubularSegments,radialSegments:radialSegments,p:p,q:q};radius=radius||1;tube=tube||0.4;tubularSegments=Math.floor(tubularSegments)||64;radialSegments=Math.floor(radialSegments)||8;p=p||2;q=q||3;// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables\nvar i,j;var vertex=new Vector3();var normal=new Vector3();var P1=new Vector3();var P2=new Vector3();var B=new Vector3();var T=new Vector3();var N=new Vector3();// generate vertices, normals and uvs\nfor(i=0;i<=tubularSegments;++i){// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\nvar u=i/tubularSegments*p*Math.PI*2;// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\ncalculatePositionOnCurve(u,p,q,radius,P1);calculatePositionOnCurve(u+0.01,p,q,radius,P2);// calculate orthonormal basis\nT.subVectors(P2,P1);N.addVectors(P2,P1);B.crossVectors(T,N);N.crossVectors(B,T);// normalize B, N. T can be ignored, we don't use it\nB.normalize();N.normalize();for(j=0;j<=radialSegments;++j){// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\nvar v=j/radialSegments*Math.PI*2;var cx=-tube*Math.cos(v);var cy=tube*Math.sin(v);// now calculate the final vertex position.\n// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\nvertex.x=P1.x+(cx*N.x+cy*B.x);vertex.y=P1.y+(cx*N.y+cy*B.y);vertex.z=P1.z+(cx*N.z+cy*B.z);vertices.push(vertex.x,vertex.y,vertex.z);// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\nnormal.subVectors(vertex,P1).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(i/tubularSegments);uvs.push(j/radialSegments);}}// generate indices\nfor(j=1;j<=tubularSegments;j++){for(i=1;i<=radialSegments;i++){// indices\nvar a=(radialSegments+1)*(j-1)+(i-1);var b=(radialSegments+1)*j+(i-1);var c=(radialSegments+1)*j+i;var d=(radialSegments+1)*(j-1)+i;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.addAttribute('position',new Float32BufferAttribute(vertices,3));this.addAttribute('normal',new Float32BufferAttribute(normals,3));this.addAttribute('uv',new Float32BufferAttribute(uvs,2));// this function calculates the current position on the torus curve\nfunction calculatePositionOnCurve(u,p,q,radius,position){var cu=Math.cos(u);var su=Math.sin(u);var quOverP=q/p*u;var cs=Math.cos(quOverP);position.x=radius*(2+cs)*0.5*cu;position.y=radius*(2+cs)*su*0.5;position.z=radius*Math.sin(quOverP)*0.5;}}TorusKnotBufferGeometry.prototype=Object.create(BufferGeometry.prototype);TorusKnotBufferGeometry.prototype.constructor=TorusKnotBufferGeometry;/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */ // TorusGeometry\nfunction TorusGeometry(radius,tube,radialSegments,tubularSegments,arc){Geometry.call(this);this.type='TorusGeometry';this.parameters={radius:radius,tube:tube,radialSegments:radialSegments,tubularSegments:tubularSegments,arc:arc};this.fromBufferGeometry(new TorusBufferGeometry(radius,tube,radialSegments,tubularSegments,arc));this.mergeVertices();}TorusGeometry.prototype=Object.create(Geometry.prototype);TorusGeometry.prototype.constructor=TorusGeometry;// TorusBufferGeometry\nfunction TorusBufferGeometry(radius,tube,radialSegments,tubularSegments,arc){BufferGeometry.call(this);this.type='TorusBufferGeometry';this.parameters={radius:radius,tube:tube,radialSegments:radialSegments,tubularSegments:tubularSegments,arc:arc};radius=radius||1;tube=tube||0.4;radialSegments=Math.floor(radialSegments)||8;tubularSegments=Math.floor(tubularSegments)||6;arc=arc||Math.PI*2;// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables\nvar center=new Vector3();var vertex=new Vector3();var normal=new Vector3();var j,i;// generate vertices, normals and uvs\nfor(j=0;j<=radialSegments;j++){for(i=0;i<=tubularSegments;i++){var u=i/tubularSegments*arc;var v=j/radialSegments*Math.PI*2;// vertex\nvertex.x=(radius+tube*Math.cos(v))*Math.cos(u);vertex.y=(radius+tube*Math.cos(v))*Math.sin(u);vertex.z=tube*Math.sin(v);vertices.push(vertex.x,vertex.y,vertex.z);// normal\ncenter.x=radius*Math.cos(u);center.y=radius*Math.sin(u);normal.subVectors(vertex,center).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(i/tubularSegments);uvs.push(j/radialSegments);}}// generate indices\nfor(j=1;j<=radialSegments;j++){for(i=1;i<=tubularSegments;i++){// indices\nvar a=(tubularSegments+1)*j+i-1;var b=(tubularSegments+1)*(j-1)+i-1;var c=(tubularSegments+1)*(j-1)+i;var d=(tubularSegments+1)*j+i;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.addAttribute('position',new Float32BufferAttribute(vertices,3));this.addAttribute('normal',new Float32BufferAttribute(normals,3));this.addAttribute('uv',new Float32BufferAttribute(uvs,2));}TorusBufferGeometry.prototype=Object.create(BufferGeometry.prototype);TorusBufferGeometry.prototype.constructor=TorusBufferGeometry;/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * Port from https://github.com/mapbox/earcut (v2.1.2)\n\t */var Earcut={triangulate:function(data,holeIndices,dim){dim=dim||2;var hasHoles=holeIndices&&holeIndices.length,outerLen=hasHoles?holeIndices[0]*dim:data.length,outerNode=linkedList(data,0,outerLen,dim,true),triangles=[];if(!outerNode)return triangles;var minX,minY,maxX,maxY,x,y,invSize;if(hasHoles)outerNode=eliminateHoles(data,holeIndices,outerNode,dim);// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\nif(data.length>80*dim){minX=maxX=data[0];minY=maxY=data[1];for(var i=dim;i<outerLen;i+=dim){x=data[i];y=data[i+1];if(x<minX)minX=x;if(y<minY)minY=y;if(x>maxX)maxX=x;if(y>maxY)maxY=y;}// minX, minY and invSize are later used to transform coords into integers for z-order calculation\ninvSize=Math.max(maxX-minX,maxY-minY);invSize=invSize!==0?1/invSize:0;}earcutLinked(outerNode,triangles,dim,minX,minY,invSize);return triangles;}};// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data,start,end,dim,clockwise){var i,last;if(clockwise===signedArea(data,start,end,dim)>0){for(i=start;i<end;i+=dim)last=insertNode(i,data[i],data[i+1],last);}else{for(i=end-dim;i>=start;i-=dim)last=insertNode(i,data[i],data[i+1],last);}if(last&&equals(last,last.next)){removeNode(last);last=last.next;}return last;}// eliminate colinear or duplicate points\nfunction filterPoints(start,end){if(!start)return start;if(!end)end=start;var p=start,again;do{again=false;if(!p.steiner&&(equals(p,p.next)||area(p.prev,p,p.next)===0)){removeNode(p);p=end=p.prev;if(p===p.next)break;again=true;}else{p=p.next;}}while(again||p!==end);return end;}// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear,triangles,dim,minX,minY,invSize,pass){if(!ear)return;// interlink polygon nodes in z-order\nif(!pass&&invSize)indexCurve(ear,minX,minY,invSize);var stop=ear,prev,next;// iterate through ears, slicing them one by one\nwhile(ear.prev!==ear.next){prev=ear.prev;next=ear.next;if(invSize?isEarHashed(ear,minX,minY,invSize):isEar(ear)){// cut off the triangle\ntriangles.push(prev.i/dim);triangles.push(ear.i/dim);triangles.push(next.i/dim);removeNode(ear);// skipping the next vertice leads to less sliver triangles\near=next.next;stop=next.next;continue;}ear=next;// if we looped through the whole remaining polygon and can't find any more ears\nif(ear===stop){// try filtering points and slicing again\nif(!pass){earcutLinked(filterPoints(ear),triangles,dim,minX,minY,invSize,1);// if this didn't work, try curing all small self-intersections locally\n}else if(pass===1){ear=cureLocalIntersections(ear,triangles,dim);earcutLinked(ear,triangles,dim,minX,minY,invSize,2);// as a last resort, try splitting the remaining polygon into two\n}else if(pass===2){splitEarcut(ear,triangles,dim,minX,minY,invSize);}break;}}}// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear){var a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return false;// reflex, can't be an ear\n// now make sure we don't have other points inside the potential ear\nvar p=ear.next.next;while(p!==ear.prev){if(pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0){return false;}p=p.next;}return true;}function isEarHashed(ear,minX,minY,invSize){var a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return false;// reflex, can't be an ear\n// triangle bbox; min & max are calculated like this for speed\nvar minTX=a.x<b.x?a.x<c.x?a.x:c.x:b.x<c.x?b.x:c.x,minTY=a.y<b.y?a.y<c.y?a.y:c.y:b.y<c.y?b.y:c.y,maxTX=a.x>b.x?a.x>c.x?a.x:c.x:b.x>c.x?b.x:c.x,maxTY=a.y>b.y?a.y>c.y?a.y:c.y:b.y>c.y?b.y:c.y;// z-order range for the current triangle bbox;\nvar minZ=zOrder(minTX,minTY,minX,minY,invSize),maxZ=zOrder(maxTX,maxTY,minX,minY,invSize);// first look for points inside the triangle in increasing z-order\nvar p=ear.nextZ;while(p&&p.z<=maxZ){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.nextZ;}// then look for points in decreasing z-order\np=ear.prevZ;while(p&&p.z>=minZ){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.prevZ;}return true;}// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start,triangles,dim){var p=start;do{var a=p.prev,b=p.next.next;if(!equals(a,b)&&intersects(a,p,p.next,b)&&locallyInside(a,b)&&locallyInside(b,a)){triangles.push(a.i/dim);triangles.push(p.i/dim);triangles.push(b.i/dim);// remove two nodes involved\nremoveNode(p);removeNode(p.next);p=start=b;}p=p.next;}while(p!==start);return p;}// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start,triangles,dim,minX,minY,invSize){// look for a valid diagonal that divides the polygon into two\nvar a=start;do{var b=a.next.next;while(b!==a.prev){if(a.i!==b.i&&isValidDiagonal(a,b)){// split the polygon in two by the diagonal\nvar c=splitPolygon(a,b);// filter colinear points around the cuts\na=filterPoints(a,a.next);c=filterPoints(c,c.next);// run earcut on each half\nearcutLinked(a,triangles,dim,minX,minY,invSize);earcutLinked(c,triangles,dim,minX,minY,invSize);return;}b=b.next;}a=a.next;}while(a!==start);}// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data,holeIndices,outerNode,dim){var queue=[],i,len,start,end,list;for(i=0,len=holeIndices.length;i<len;i++){start=holeIndices[i]*dim;end=i<len-1?holeIndices[i+1]*dim:data.length;list=linkedList(data,start,end,dim,false);if(list===list.next)list.steiner=true;queue.push(getLeftmost(list));}queue.sort(compareX);// process holes from left to right\nfor(i=0;i<queue.length;i++){eliminateHole(queue[i],outerNode);outerNode=filterPoints(outerNode,outerNode.next);}return outerNode;}function compareX(a,b){return a.x-b.x;}// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole,outerNode){outerNode=findHoleBridge(hole,outerNode);if(outerNode){var b=splitPolygon(outerNode,hole);filterPoints(b,b.next);}}// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole,outerNode){var p=outerNode,hx=hole.x,hy=hole.y,qx=-Infinity,m;// find a segment intersected by a ray from the hole's leftmost point to the left;\n// segment's endpoint with lesser x will be potential connection point\ndo{if(hy<=p.y&&hy>=p.next.y&&p.next.y!==p.y){var x=p.x+(hy-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(x<=hx&&x>qx){qx=x;if(x===hx){if(hy===p.y)return p;if(hy===p.next.y)return p.next;}m=p.x<p.next.x?p:p.next;}}p=p.next;}while(p!==outerNode);if(!m)return null;if(hx===qx)return m.prev;// hole touches outer segment; pick lower endpoint\n// look for points inside the triangle of hole point, segment intersection and endpoint;\n// if there are no points found, we have a valid connection;\n// otherwise choose the point of the minimum angle with the ray as connection point\nvar stop=m,mx=m.x,my=m.y,tanMin=Infinity,tan;p=m.next;while(p!==stop){if(hx>=p.x&&p.x>=mx&&hx!==p.x&&pointInTriangle(hy<my?hx:qx,hy,mx,my,hy<my?qx:hx,hy,p.x,p.y)){tan=Math.abs(hy-p.y)/(hx-p.x);// tangential\nif((tan<tanMin||tan===tanMin&&p.x>m.x)&&locallyInside(p,hole)){m=p;tanMin=tan;}}p=p.next;}return m;}// interlink polygon nodes in z-order\nfunction indexCurve(start,minX,minY,invSize){var p=start;do{if(p.z===null)p.z=zOrder(p.x,p.y,minX,minY,invSize);p.prevZ=p.prev;p.nextZ=p.next;p=p.next;}while(p!==start);p.prevZ.nextZ=null;p.prevZ=null;sortLinked(p);}// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list){var i,p,q,e,tail,numMerges,pSize,qSize,inSize=1;do{p=list;list=null;tail=null;numMerges=0;while(p){numMerges++;q=p;pSize=0;for(i=0;i<inSize;i++){pSize++;q=q.nextZ;if(!q)break;}qSize=inSize;while(pSize>0||qSize>0&&q){if(pSize!==0&&(qSize===0||!q||p.z<=q.z)){e=p;p=p.nextZ;pSize--;}else{e=q;q=q.nextZ;qSize--;}if(tail)tail.nextZ=e;else list=e;e.prevZ=tail;tail=e;}p=q;}tail.nextZ=null;inSize*=2;}while(numMerges>1);return list;}// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x,y,minX,minY,invSize){// coords are transformed into non-negative 15-bit integer range\nx=32767*(x-minX)*invSize;y=32767*(y-minY)*invSize;x=(x|x<<8)&0x00FF00FF;x=(x|x<<4)&0x0F0F0F0F;x=(x|x<<2)&0x33333333;x=(x|x<<1)&0x55555555;y=(y|y<<8)&0x00FF00FF;y=(y|y<<4)&0x0F0F0F0F;y=(y|y<<2)&0x33333333;y=(y|y<<1)&0x55555555;return x|y<<1;}// find the leftmost node of a polygon ring\nfunction getLeftmost(start){var p=start,leftmost=start;do{if(p.x<leftmost.x)leftmost=p;p=p.next;}while(p!==start);return leftmost;}// check if a point lies within a convex triangle\nfunction pointInTriangle(ax,ay,bx,by,cx,cy,px,py){return(cx-px)*(ay-py)-(ax-px)*(cy-py)>=0&&(ax-px)*(by-py)-(bx-px)*(ay-py)>=0&&(bx-px)*(cy-py)-(cx-px)*(by-py)>=0;}// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!intersectsPolygon(a,b)&&locallyInside(a,b)&&locallyInside(b,a)&&middleInside(a,b);}// signed area of a triangle\nfunction area(p,q,r){return(q.y-p.y)*(r.x-q.x)-(q.x-p.x)*(r.y-q.y);}// check if two points are equal\nfunction equals(p1,p2){return p1.x===p2.x&&p1.y===p2.y;}// check if two segments intersect\nfunction intersects(p1,q1,p2,q2){if(equals(p1,q1)&&equals(p2,q2)||equals(p1,q2)&&equals(p2,q1))return true;return area(p1,q1,p2)>0!==area(p1,q1,q2)>0&&area(p2,q2,p1)>0!==area(p2,q2,q1)>0;}// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a,b){var p=a;do{if(p.i!==a.i&&p.next.i!==a.i&&p.i!==b.i&&p.next.i!==b.i&&intersects(p,p.next,a,b)){return true;}p=p.next;}while(p!==a);return false;}// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a,b){return area(a.prev,a,a.next)<0?area(a,b,a.next)>=0&&area(a,a.prev,b)>=0:area(a,b,a.prev)<0||area(a,a.next,b)<0;}// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a,b){var p=a,inside=false,px=(a.x+b.x)/2,py=(a.y+b.y)/2;do{if(p.y>py!==p.next.y>py&&p.next.y!==p.y&&px<(p.next.x-p.x)*(py-p.y)/(p.next.y-p.y)+p.x){inside=!inside;}p=p.next;}while(p!==a);return inside;}// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a,b){var a2=new Node(a.i,a.x,a.y),b2=new Node(b.i,b.x,b.y),an=a.next,bp=b.prev;a.next=b;b.prev=a;a2.next=an;an.prev=a2;b2.next=a2;a2.prev=b2;bp.next=b2;b2.prev=bp;return b2;}// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i,x,y,last){var p=new Node(i,x,y);if(!last){p.prev=p;p.next=p;}else{p.next=last.next;p.prev=last;last.next.prev=p;last.next=p;}return p;}function removeNode(p){p.next.prev=p.prev;p.prev.next=p.next;if(p.prevZ)p.prevZ.nextZ=p.nextZ;if(p.nextZ)p.nextZ.prevZ=p.prevZ;}function Node(i,x,y){// vertice index in coordinates array\nthis.i=i;// vertex coordinates\nthis.x=x;this.y=y;// previous and next vertice nodes in a polygon ring\nthis.prev=null;this.next=null;// z-order curve value\nthis.z=null;// previous and next nodes in z-order\nthis.prevZ=null;this.nextZ=null;// indicates whether this is a steiner point\nthis.steiner=false;}function signedArea(data,start,end,dim){var sum=0;for(var i=start,j=end-dim;i<end;i+=dim){sum+=(data[j]-data[i])*(data[i+1]+data[j+1]);j=i;}return sum;}/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */var ShapeUtils={// calculate area of the contour polygon\narea:function(contour){var n=contour.length;var a=0.0;for(var p=n-1,q=0;q<n;p=q++){a+=contour[p].x*contour[q].y-contour[q].x*contour[p].y;}return a*0.5;},isClockWise:function(pts){return ShapeUtils.area(pts)<0;},triangulateShape:function(contour,holes){var vertices=[];// flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\nvar holeIndices=[];// array of hole indices\nvar faces=[];// final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\nremoveDupEndPts(contour);addContour(vertices,contour);//\nvar holeIndex=contour.length;holes.forEach(removeDupEndPts);for(var i=0;i<holes.length;i++){holeIndices.push(holeIndex);holeIndex+=holes[i].length;addContour(vertices,holes[i]);}//\nvar triangles=Earcut.triangulate(vertices,holeIndices);//\nfor(var i=0;i<triangles.length;i+=3){faces.push(triangles.slice(i,i+3));}return faces;}};function removeDupEndPts(points){var l=points.length;if(l>2&&points[l-1].equals(points[0])){points.pop();}}function addContour(vertices,contour){for(var i=0;i<contour.length;i++){vertices.push(contour[i].x);vertices.push(contour[i].y);}}/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  depth: <float>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline is bevel\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\n\t *\n\t *  UVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */ // ExtrudeGeometry\nfunction ExtrudeGeometry(shapes,options){Geometry.call(this);this.type='ExtrudeGeometry';this.parameters={shapes:shapes,options:options};this.fromBufferGeometry(new ExtrudeBufferGeometry(shapes,options));this.mergeVertices();}ExtrudeGeometry.prototype=Object.create(Geometry.prototype);ExtrudeGeometry.prototype.constructor=ExtrudeGeometry;ExtrudeGeometry.prototype.toJSON=function(){var data=Geometry.prototype.toJSON.call(this);var shapes=this.parameters.shapes;var options=this.parameters.options;return toJSON(shapes,options,data);};// ExtrudeBufferGeometry\nfunction ExtrudeBufferGeometry(shapes,options){BufferGeometry.call(this);this.type='ExtrudeBufferGeometry';this.parameters={shapes:shapes,options:options};shapes=Array.isArray(shapes)?shapes:[shapes];var scope=this;var verticesArray=[];var uvArray=[];for(var i=0,l=shapes.length;i<l;i++){var shape=shapes[i];addShape(shape);}// build geometry\nthis.addAttribute('position',new Float32BufferAttribute(verticesArray,3));this.addAttribute('uv',new Float32BufferAttribute(uvArray,2));this.computeVertexNormals();// functions\nfunction addShape(shape){var placeholder=[];// options\nvar curveSegments=options.curveSegments!==undefined?options.curveSegments:12;var steps=options.steps!==undefined?options.steps:1;var depth=options.depth!==undefined?options.depth:100;var bevelEnabled=options.bevelEnabled!==undefined?options.bevelEnabled:true;var bevelThickness=options.bevelThickness!==undefined?options.bevelThickness:6;var bevelSize=options.bevelSize!==undefined?options.bevelSize:bevelThickness-2;var bevelSegments=options.bevelSegments!==undefined?options.bevelSegments:3;var extrudePath=options.extrudePath;var uvgen=options.UVGenerator!==undefined?options.UVGenerator:WorldUVGenerator;// deprecated options\nif(options.amount!==undefined){console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');depth=options.amount;}//\nvar extrudePts,extrudeByPath=false;var splineTube,binormal,normal,position2;if(extrudePath){extrudePts=extrudePath.getSpacedPoints(steps);extrudeByPath=true;bevelEnabled=false;// bevels not supported for path extrusion\n// SETUP TNB variables\n// TODO1 - have a .isClosed in spline?\nsplineTube=extrudePath.computeFrenetFrames(steps,false);// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\nbinormal=new Vector3();normal=new Vector3();position2=new Vector3();}// Safeguards if bevels are not enabled\nif(!bevelEnabled){bevelSegments=0;bevelThickness=0;bevelSize=0;}// Variables initialization\nvar ahole,h,hl;// looping of holes\nvar shapePoints=shape.extractPoints(curveSegments);var vertices=shapePoints.shape;var holes=shapePoints.holes;var reverse=!ShapeUtils.isClockWise(vertices);if(reverse){vertices=vertices.reverse();// Maybe we should also check if holes are in the opposite direction, just to be safe ...\nfor(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];if(ShapeUtils.isClockWise(ahole)){holes[h]=ahole.reverse();}}}var faces=ShapeUtils.triangulateShape(vertices,holes);/* Vertices */var contour=vertices;// vertices has all points but contour has only points of circumference\nfor(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];vertices=vertices.concat(ahole);}function scalePt2(pt,vec,size){if(!vec)console.error(\"THREE.ExtrudeGeometry: vec does not exist\");return vec.clone().multiplyScalar(size).add(pt);}var b,bs,t,z,vert,vlen=vertices.length,face,flen=faces.length;// Find directions for point movement\nfunction getBevelVec(inPt,inPrev,inNext){// computes for inPt the corresponding point inPt' on a new contour\n//   shifted by 1 unit (length of normalized vector) to the left\n// if we walk along contour clockwise, this new contour is outside the old one\n//\n// inPt' is the intersection of the two lines parallel to the two\n//  adjacent edges of inPt at a distance of 1 unit on the left side.\nvar v_trans_x,v_trans_y,shrink_by;// resulting translation vector for inPt\n// good reading for geometry algorithms (here: line-line intersection)\n// http://geomalgorithms.com/a05-_intersect-1.html\nvar v_prev_x=inPt.x-inPrev.x,v_prev_y=inPt.y-inPrev.y;var v_next_x=inNext.x-inPt.x,v_next_y=inNext.y-inPt.y;var v_prev_lensq=v_prev_x*v_prev_x+v_prev_y*v_prev_y;// check for collinear edges\nvar collinear0=v_prev_x*v_next_y-v_prev_y*v_next_x;if(Math.abs(collinear0)>Number.EPSILON){// not collinear\n// length of vectors for normalizing\nvar v_prev_len=Math.sqrt(v_prev_lensq);var v_next_len=Math.sqrt(v_next_x*v_next_x+v_next_y*v_next_y);// shift adjacent points by unit vectors to the left\nvar ptPrevShift_x=inPrev.x-v_prev_y/v_prev_len;var ptPrevShift_y=inPrev.y+v_prev_x/v_prev_len;var ptNextShift_x=inNext.x-v_next_y/v_next_len;var ptNextShift_y=inNext.y+v_next_x/v_next_len;// scaling factor for v_prev to intersection point\nvar sf=((ptNextShift_x-ptPrevShift_x)*v_next_y-(ptNextShift_y-ptPrevShift_y)*v_next_x)/(v_prev_x*v_next_y-v_prev_y*v_next_x);// vector from inPt to intersection point\nv_trans_x=ptPrevShift_x+v_prev_x*sf-inPt.x;v_trans_y=ptPrevShift_y+v_prev_y*sf-inPt.y;// Don't normalize!, otherwise sharp corners become ugly\n//  but prevent crazy spikes\nvar v_trans_lensq=v_trans_x*v_trans_x+v_trans_y*v_trans_y;if(v_trans_lensq<=2){return new Vector2(v_trans_x,v_trans_y);}else{shrink_by=Math.sqrt(v_trans_lensq/2);}}else{// handle special case of collinear edges\nvar direction_eq=false;// assumes: opposite\nif(v_prev_x>Number.EPSILON){if(v_next_x>Number.EPSILON){direction_eq=true;}}else{if(v_prev_x<-Number.EPSILON){if(v_next_x<-Number.EPSILON){direction_eq=true;}}else{if(Math.sign(v_prev_y)===Math.sign(v_next_y)){direction_eq=true;}}}if(direction_eq){// console.log(\"Warning: lines are a straight sequence\");\nv_trans_x=-v_prev_y;v_trans_y=v_prev_x;shrink_by=Math.sqrt(v_prev_lensq);}else{// console.log(\"Warning: lines are a straight spike\");\nv_trans_x=v_prev_x;v_trans_y=v_prev_y;shrink_by=Math.sqrt(v_prev_lensq/2);}}return new Vector2(v_trans_x/shrink_by,v_trans_y/shrink_by);}var contourMovements=[];for(var i=0,il=contour.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;//  (j)---(i)---(k)\n// console.log('i,j,k', i, j , k)\ncontourMovements[i]=getBevelVec(contour[i],contour[j],contour[k]);}var holesMovements=[],oneHoleMovements,verticesMovements=contourMovements.concat();for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];oneHoleMovements=[];for(i=0,il=ahole.length,j=il-1,k=i+1;i<il;i++,j++,k++){if(j===il)j=0;if(k===il)k=0;//  (j)---(i)---(k)\noneHoleMovements[i]=getBevelVec(ahole[i],ahole[j],ahole[k]);}holesMovements.push(oneHoleMovements);verticesMovements=verticesMovements.concat(oneHoleMovements);}// Loop bevelSegments, 1 for the front, 1 for the back\nfor(b=0;b<bevelSegments;b++){//for ( b = bevelSegments; b > 0; b -- ) {\nt=b/bevelSegments;z=bevelThickness*Math.cos(t*Math.PI/2);bs=bevelSize*Math.sin(t*Math.PI/2);// contract shape\nfor(i=0,il=contour.length;i<il;i++){vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,-z);}// expand holes\nfor(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];oneHoleMovements=holesMovements[h];for(i=0,il=ahole.length;i<il;i++){vert=scalePt2(ahole[i],oneHoleMovements[i],bs);v(vert.x,vert.y,-z);}}}bs=bevelSize;// Back facing vertices\nfor(i=0;i<vlen;i++){vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,0);}else{// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\nnormal.copy(splineTube.normals[0]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);position2.copy(extrudePts[0]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}// Add stepped vertices...\n// Including front facing vertices\nvar s;for(s=1;s<=steps;s++){for(i=0;i<vlen;i++){vert=bevelEnabled?scalePt2(vertices[i],verticesMovements[i],bs):vertices[i];if(!extrudeByPath){v(vert.x,vert.y,depth/steps*s);}else{// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\nnormal.copy(splineTube.normals[s]).multiplyScalar(vert.x);binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);position2.copy(extrudePts[s]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}}// Add bevel segments planes\n//for ( b = 1; b <= bevelSegments; b ++ ) {\nfor(b=bevelSegments-1;b>=0;b--){t=b/bevelSegments;z=bevelThickness*Math.cos(t*Math.PI/2);bs=bevelSize*Math.sin(t*Math.PI/2);// contract shape\nfor(i=0,il=contour.length;i<il;i++){vert=scalePt2(contour[i],contourMovements[i],bs);v(vert.x,vert.y,depth+z);}// expand holes\nfor(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];oneHoleMovements=holesMovements[h];for(i=0,il=ahole.length;i<il;i++){vert=scalePt2(ahole[i],oneHoleMovements[i],bs);if(!extrudeByPath){v(vert.x,vert.y,depth+z);}else{v(vert.x,vert.y+extrudePts[steps-1].y,extrudePts[steps-1].x+z);}}}}/* Faces */ // Top and bottom faces\nbuildLidFaces();// Sides faces\nbuildSideFaces();/////  Internal functions\nfunction buildLidFaces(){var start=verticesArray.length/3;if(bevelEnabled){var layer=0;// steps + 1\nvar offset=vlen*layer;// Bottom faces\nfor(i=0;i<flen;i++){face=faces[i];f3(face[2]+offset,face[1]+offset,face[0]+offset);}layer=steps+bevelSegments*2;offset=vlen*layer;// Top faces\nfor(i=0;i<flen;i++){face=faces[i];f3(face[0]+offset,face[1]+offset,face[2]+offset);}}else{// Bottom faces\nfor(i=0;i<flen;i++){face=faces[i];f3(face[2],face[1],face[0]);}// Top faces\nfor(i=0;i<flen;i++){face=faces[i];f3(face[0]+vlen*steps,face[1]+vlen*steps,face[2]+vlen*steps);}}scope.addGroup(start,verticesArray.length/3-start,0);}// Create faces for the z-sides of the shape\nfunction buildSideFaces(){var start=verticesArray.length/3;var layeroffset=0;sidewalls(contour,layeroffset);layeroffset+=contour.length;for(h=0,hl=holes.length;h<hl;h++){ahole=holes[h];sidewalls(ahole,layeroffset);//, true\nlayeroffset+=ahole.length;}scope.addGroup(start,verticesArray.length/3-start,1);}function sidewalls(contour,layeroffset){var j,k;i=contour.length;while(--i>=0){j=i;k=i-1;if(k<0)k=contour.length-1;//console.log('b', i,j, i-1, k,vertices.length);\nvar s=0,sl=steps+bevelSegments*2;for(s=0;s<sl;s++){var slen1=vlen*s;var slen2=vlen*(s+1);var a=layeroffset+j+slen1,b=layeroffset+k+slen1,c=layeroffset+k+slen2,d=layeroffset+j+slen2;f4(a,b,c,d);}}}function v(x,y,z){placeholder.push(x);placeholder.push(y);placeholder.push(z);}function f3(a,b,c){addVertex(a);addVertex(b);addVertex(c);var nextIndex=verticesArray.length/3;var uvs=uvgen.generateTopUV(scope,verticesArray,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]);addUV(uvs[1]);addUV(uvs[2]);}function f4(a,b,c,d){addVertex(a);addVertex(b);addVertex(d);addVertex(b);addVertex(c);addVertex(d);var nextIndex=verticesArray.length/3;var uvs=uvgen.generateSideWallUV(scope,verticesArray,nextIndex-6,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]);addUV(uvs[1]);addUV(uvs[3]);addUV(uvs[1]);addUV(uvs[2]);addUV(uvs[3]);}function addVertex(index){verticesArray.push(placeholder[index*3+0]);verticesArray.push(placeholder[index*3+1]);verticesArray.push(placeholder[index*3+2]);}function addUV(vector2){uvArray.push(vector2.x);uvArray.push(vector2.y);}}}ExtrudeBufferGeometry.prototype=Object.create(BufferGeometry.prototype);ExtrudeBufferGeometry.prototype.constructor=ExtrudeBufferGeometry;ExtrudeBufferGeometry.prototype.toJSON=function(){var data=BufferGeometry.prototype.toJSON.call(this);var shapes=this.parameters.shapes;var options=this.parameters.options;return toJSON(shapes,options,data);};//\nvar WorldUVGenerator={generateTopUV:function(geometry,vertices,indexA,indexB,indexC){var a_x=vertices[indexA*3];var a_y=vertices[indexA*3+1];var b_x=vertices[indexB*3];var b_y=vertices[indexB*3+1];var c_x=vertices[indexC*3];var c_y=vertices[indexC*3+1];return[new Vector2(a_x,a_y),new Vector2(b_x,b_y),new Vector2(c_x,c_y)];},generateSideWallUV:function(geometry,vertices,indexA,indexB,indexC,indexD){var a_x=vertices[indexA*3];var a_y=vertices[indexA*3+1];var a_z=vertices[indexA*3+2];var b_x=vertices[indexB*3];var b_y=vertices[indexB*3+1];var b_z=vertices[indexB*3+2];var c_x=vertices[indexC*3];var c_y=vertices[indexC*3+1];var c_z=vertices[indexC*3+2];var d_x=vertices[indexD*3];var d_y=vertices[indexD*3+1];var d_z=vertices[indexD*3+2];if(Math.abs(a_y-b_y)<0.01){return[new Vector2(a_x,1-a_z),new Vector2(b_x,1-b_z),new Vector2(c_x,1-c_z),new Vector2(d_x,1-d_z)];}else{return[new Vector2(a_y,1-a_z),new Vector2(b_y,1-b_z),new Vector2(c_y,1-c_z),new Vector2(d_y,1-d_z)];}}};function toJSON(shapes,options,data){//\ndata.shapes=[];if(Array.isArray(shapes)){for(var i=0,l=shapes.length;i<l;i++){var shape=shapes[i];data.shapes.push(shape.uuid);}}else{data.shapes.push(shapes.uuid);}//\nif(options.extrudePath!==undefined)data.options.extrudePath=options.extrudePath.toJSON();return data;}/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float> // how far from text outline is bevel\n\t * }\n\t */ // TextGeometry\nfunction TextGeometry(text,parameters){Geometry.call(this);this.type='TextGeometry';this.parameters={text:text,parameters:parameters};this.fromBufferGeometry(new TextBufferGeometry(text,parameters));this.mergeVertices();}TextGeometry.prototype=Object.create(Geometry.prototype);TextGeometry.prototype.constructor=TextGeometry;// TextBufferGeometry\nfunction TextBufferGeometry(text,parameters){parameters=parameters||{};var font=parameters.font;if(!(font&&font.isFont)){console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');return new Geometry();}var shapes=font.generateShapes(text,parameters.size);// translate parameters to ExtrudeGeometry API\nparameters.depth=parameters.height!==undefined?parameters.height:50;// defaults\nif(parameters.bevelThickness===undefined)parameters.bevelThickness=10;if(parameters.bevelSize===undefined)parameters.bevelSize=8;if(parameters.bevelEnabled===undefined)parameters.bevelEnabled=false;ExtrudeBufferGeometry.call(this,shapes,parameters);this.type='TextBufferGeometry';}TextBufferGeometry.prototype=Object.create(ExtrudeBufferGeometry.prototype);TextBufferGeometry.prototype.constructor=TextBufferGeometry;/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */ // SphereGeometry\nfunction SphereGeometry(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength){Geometry.call(this);this.type='SphereGeometry';this.parameters={radius:radius,widthSegments:widthSegments,heightSegments:heightSegments,phiStart:phiStart,phiLength:phiLength,thetaStart:thetaStart,thetaLength:thetaLength};this.fromBufferGeometry(new SphereBufferGeometry(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength));this.mergeVertices();}SphereGeometry.prototype=Object.create(Geometry.prototype);SphereGeometry.prototype.constructor=SphereGeometry;// SphereBufferGeometry\nfunction SphereBufferGeometry(radius,widthSegments,heightSegments,phiStart,phiLength,thetaStart,thetaLength){BufferGeometry.call(this);this.type='SphereBufferGeometry';this.parameters={radius:radius,widthSegments:widthSegments,heightSegments:heightSegments,phiStart:phiStart,phiLength:phiLength,thetaStart:thetaStart,thetaLength:thetaLength};radius=radius||1;widthSegments=Math.max(3,Math.floor(widthSegments)||8);heightSegments=Math.max(2,Math.floor(heightSegments)||6);phiStart=phiStart!==undefined?phiStart:0;phiLength=phiLength!==undefined?phiLength:Math.PI*2;thetaStart=thetaStart!==undefined?thetaStart:0;thetaLength=thetaLength!==undefined?thetaLength:Math.PI;var thetaEnd=thetaStart+thetaLength;var ix,iy;var index=0;var grid=[];var vertex=new Vector3();var normal=new Vector3();// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// generate vertices, normals and uvs\nfor(iy=0;iy<=heightSegments;iy++){var verticesRow=[];var v=iy/heightSegments;for(ix=0;ix<=widthSegments;ix++){var u=ix/widthSegments;// vertex\nvertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertex.y=radius*Math.cos(thetaStart+v*thetaLength);vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormal.set(vertex.x,vertex.y,vertex.z).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u,1-v);verticesRow.push(index++);}grid.push(verticesRow);}// indices\nfor(iy=0;iy<heightSegments;iy++){for(ix=0;ix<widthSegments;ix++){var a=grid[iy][ix+1];var b=grid[iy][ix];var c=grid[iy+1][ix];var d=grid[iy+1][ix+1];if(iy!==0||thetaStart>0)indices.push(a,b,d);if(iy!==heightSegments-1||thetaEnd<Math.PI)indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.addAttribute('position',new Float32BufferAttribute(vertices,3));this.addAttribute('normal',new Float32BufferAttribute(normals,3));this.addAttribute('uv',new Float32BufferAttribute(uvs,2));}SphereBufferGeometry.prototype=Object.create(BufferGeometry.prototype);SphereBufferGeometry.prototype.constructor=SphereBufferGeometry;/**\n\t * @author Kaleb Murphy\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */ // RingGeometry\nfunction RingGeometry(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength){Geometry.call(this);this.type='RingGeometry';this.parameters={innerRadius:innerRadius,outerRadius:outerRadius,thetaSegments:thetaSegments,phiSegments:phiSegments,thetaStart:thetaStart,thetaLength:thetaLength};this.fromBufferGeometry(new RingBufferGeometry(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength));this.mergeVertices();}RingGeometry.prototype=Object.create(Geometry.prototype);RingGeometry.prototype.constructor=RingGeometry;// RingBufferGeometry\nfunction RingBufferGeometry(innerRadius,outerRadius,thetaSegments,phiSegments,thetaStart,thetaLength){BufferGeometry.call(this);this.type='RingBufferGeometry';this.parameters={innerRadius:innerRadius,outerRadius:outerRadius,thetaSegments:thetaSegments,phiSegments:phiSegments,thetaStart:thetaStart,thetaLength:thetaLength};innerRadius=innerRadius||0.5;outerRadius=outerRadius||1;thetaStart=thetaStart!==undefined?thetaStart:0;thetaLength=thetaLength!==undefined?thetaLength:Math.PI*2;thetaSegments=thetaSegments!==undefined?Math.max(3,thetaSegments):8;phiSegments=phiSegments!==undefined?Math.max(1,phiSegments):1;// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// some helper variables\nvar segment;var radius=innerRadius;var radiusStep=(outerRadius-innerRadius)/phiSegments;var vertex=new Vector3();var uv=new Vector2();var j,i;// generate vertices, normals and uvs\nfor(j=0;j<=phiSegments;j++){for(i=0;i<=thetaSegments;i++){// values are generate from the inside of the ring to the outside\nsegment=thetaStart+i/thetaSegments*thetaLength;// vertex\nvertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,0,1);// uv\nuv.x=(vertex.x/outerRadius+1)/2;uv.y=(vertex.y/outerRadius+1)/2;uvs.push(uv.x,uv.y);}// increase the radius for next row of vertices\nradius+=radiusStep;}// indices\nfor(j=0;j<phiSegments;j++){var thetaSegmentLevel=j*(thetaSegments+1);for(i=0;i<thetaSegments;i++){segment=i+thetaSegmentLevel;var a=segment;var b=segment+thetaSegments+1;var c=segment+thetaSegments+2;var d=segment+1;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.addAttribute('position',new Float32BufferAttribute(vertices,3));this.addAttribute('normal',new Float32BufferAttribute(normals,3));this.addAttribute('uv',new Float32BufferAttribute(uvs,2));}RingBufferGeometry.prototype=Object.create(BufferGeometry.prototype);RingBufferGeometry.prototype.constructor=RingBufferGeometry;/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */ // LatheGeometry\nfunction LatheGeometry(points,segments,phiStart,phiLength){Geometry.call(this);this.type='LatheGeometry';this.parameters={points:points,segments:segments,phiStart:phiStart,phiLength:phiLength};this.fromBufferGeometry(new LatheBufferGeometry(points,segments,phiStart,phiLength));this.mergeVertices();}LatheGeometry.prototype=Object.create(Geometry.prototype);LatheGeometry.prototype.constructor=LatheGeometry;// LatheBufferGeometry\nfunction LatheBufferGeometry(points,segments,phiStart,phiLength){BufferGeometry.call(this);this.type='LatheBufferGeometry';this.parameters={points:points,segments:segments,phiStart:phiStart,phiLength:phiLength};segments=Math.floor(segments)||12;phiStart=phiStart||0;phiLength=phiLength||Math.PI*2;// clamp phiLength so it's in range of [ 0, 2PI ]\nphiLength=_Math.clamp(phiLength,0,Math.PI*2);// buffers\nvar indices=[];var vertices=[];var uvs=[];// helper variables\nvar base;var inverseSegments=1.0/segments;var vertex=new Vector3();var uv=new Vector2();var i,j;// generate vertices and uvs\nfor(i=0;i<=segments;i++){var phi=phiStart+i*inverseSegments*phiLength;var sin=Math.sin(phi);var cos=Math.cos(phi);for(j=0;j<=points.length-1;j++){// vertex\nvertex.x=points[j].x*sin;vertex.y=points[j].y;vertex.z=points[j].x*cos;vertices.push(vertex.x,vertex.y,vertex.z);// uv\nuv.x=i/segments;uv.y=j/(points.length-1);uvs.push(uv.x,uv.y);}}// indices\nfor(i=0;i<segments;i++){for(j=0;j<points.length-1;j++){base=j+i*points.length;var a=base;var b=base+points.length;var c=base+points.length+1;var d=base+1;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\nthis.setIndex(indices);this.addAttribute('position',new Float32BufferAttribute(vertices,3));this.addAttribute('uv',new Float32BufferAttribute(uvs,2));// generate normals\nthis.computeVertexNormals();// if the geometry is closed, we need to average the normals along the seam.\n// because the corresponding vertices are identical (but still have different UVs).\nif(phiLength===Math.PI*2){var normals=this.attributes.normal.array;var n1=new Vector3();var n2=new Vector3();var n=new Vector3();// this is the buffer offset for the last line of vertices\nbase=segments*points.length*3;for(i=0,j=0;i<points.length;i++,j+=3){// select the normal of the vertex in the first line\nn1.x=normals[j+0];n1.y=normals[j+1];n1.z=normals[j+2];// select the normal of the vertex in the last line\nn2.x=normals[base+j+0];n2.y=normals[base+j+1];n2.z=normals[base+j+2];// average normals\nn.addVectors(n1,n2).normalize();// assign the new values to both normals\nnormals[j+0]=normals[base+j+0]=n.x;normals[j+1]=normals[base+j+1]=n.y;normals[j+2]=normals[base+j+2]=n.z;}}}LatheBufferGeometry.prototype=Object.create(BufferGeometry.prototype);LatheBufferGeometry.prototype.constructor=LatheBufferGeometry;/**\n\t * @author jonobr1 / http://jonobr1.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */ // ShapeGeometry\nfunction ShapeGeometry(shapes,curveSegments){Geometry.call(this);this.type='ShapeGeometry';if(typeof curveSegments==='object'){console.warn('THREE.ShapeGeometry: Options parameter has been removed.');curveSegments=curveSegments.curveSegments;}this.parameters={shapes:shapes,curveSegments:curveSegments};this.fromBufferGeometry(new ShapeBufferGeometry(shapes,curveSegments));this.mergeVertices();}ShapeGeometry.prototype=Object.create(Geometry.prototype);ShapeGeometry.prototype.constructor=ShapeGeometry;ShapeGeometry.prototype.toJSON=function(){var data=Geometry.prototype.toJSON.call(this);var shapes=this.parameters.shapes;return toJSON$1(shapes,data);};// ShapeBufferGeometry\nfunction ShapeBufferGeometry(shapes,curveSegments){BufferGeometry.call(this);this.type='ShapeBufferGeometry';this.parameters={shapes:shapes,curveSegments:curveSegments};curveSegments=curveSegments||12;// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables\nvar groupStart=0;var groupCount=0;// allow single and array values for \"shapes\" parameter\nif(Array.isArray(shapes)===false){addShape(shapes);}else{for(var i=0;i<shapes.length;i++){addShape(shapes[i]);this.addGroup(groupStart,groupCount,i);// enables MultiMaterial support\ngroupStart+=groupCount;groupCount=0;}}// build geometry\nthis.setIndex(indices);this.addAttribute('position',new Float32BufferAttribute(vertices,3));this.addAttribute('normal',new Float32BufferAttribute(normals,3));this.addAttribute('uv',new Float32BufferAttribute(uvs,2));// helper functions\nfunction addShape(shape){var i,l,shapeHole;var indexOffset=vertices.length/3;var points=shape.extractPoints(curveSegments);var shapeVertices=points.shape;var shapeHoles=points.holes;// check direction of vertices\nif(ShapeUtils.isClockWise(shapeVertices)===false){shapeVertices=shapeVertices.reverse();}for(i=0,l=shapeHoles.length;i<l;i++){shapeHole=shapeHoles[i];if(ShapeUtils.isClockWise(shapeHole)===true){shapeHoles[i]=shapeHole.reverse();}}var faces=ShapeUtils.triangulateShape(shapeVertices,shapeHoles);// join vertices of inner and outer paths to a single array\nfor(i=0,l=shapeHoles.length;i<l;i++){shapeHole=shapeHoles[i];shapeVertices=shapeVertices.concat(shapeHole);}// vertices, normals, uvs\nfor(i=0,l=shapeVertices.length;i<l;i++){var vertex=shapeVertices[i];vertices.push(vertex.x,vertex.y,0);normals.push(0,0,1);uvs.push(vertex.x,vertex.y);// world uvs\n}// incides\nfor(i=0,l=faces.length;i<l;i++){var face=faces[i];var a=face[0]+indexOffset;var b=face[1]+indexOffset;var c=face[2]+indexOffset;indices.push(a,b,c);groupCount+=3;}}}ShapeBufferGeometry.prototype=Object.create(BufferGeometry.prototype);ShapeBufferGeometry.prototype.constructor=ShapeBufferGeometry;ShapeBufferGeometry.prototype.toJSON=function(){var data=BufferGeometry.prototype.toJSON.call(this);var shapes=this.parameters.shapes;return toJSON$1(shapes,data);};//\nfunction toJSON$1(shapes,data){data.shapes=[];if(Array.isArray(shapes)){for(var i=0,l=shapes.length;i<l;i++){var shape=shapes[i];data.shapes.push(shape.uuid);}}else{data.shapes.push(shapes.uuid);}return data;}/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */function EdgesGeometry(geometry,thresholdAngle){BufferGeometry.call(this);this.type='EdgesGeometry';this.parameters={thresholdAngle:thresholdAngle};thresholdAngle=thresholdAngle!==undefined?thresholdAngle:1;// buffer\nvar vertices=[];// helper variables\nvar thresholdDot=Math.cos(_Math.DEG2RAD*thresholdAngle);var edge=[0,0],edges={},edge1,edge2;var key,keys=['a','b','c'];// prepare source geometry\nvar geometry2;if(geometry.isBufferGeometry){geometry2=new Geometry();geometry2.fromBufferGeometry(geometry);}else{geometry2=geometry.clone();}geometry2.mergeVertices();geometry2.computeFaceNormals();var sourceVertices=geometry2.vertices;var faces=geometry2.faces;// now create a data structure where each entry represents an edge with its adjoining faces\nfor(var i=0,l=faces.length;i<l;i++){var face=faces[i];for(var j=0;j<3;j++){edge1=face[keys[j]];edge2=face[keys[(j+1)%3]];edge[0]=Math.min(edge1,edge2);edge[1]=Math.max(edge1,edge2);key=edge[0]+','+edge[1];if(edges[key]===undefined){edges[key]={index1:edge[0],index2:edge[1],face1:i,face2:undefined};}else{edges[key].face2=i;}}}// generate vertices\nfor(key in edges){var e=edges[key];// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\nif(e.face2===undefined||faces[e.face1].normal.dot(faces[e.face2].normal)<=thresholdDot){var vertex=sourceVertices[e.index1];vertices.push(vertex.x,vertex.y,vertex.z);vertex=sourceVertices[e.index2];vertices.push(vertex.x,vertex.y,vertex.z);}}// build geometry\nthis.addAttribute('position',new Float32BufferAttribute(vertices,3));}EdgesGeometry.prototype=Object.create(BufferGeometry.prototype);EdgesGeometry.prototype.constructor=EdgesGeometry;/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */ // CylinderGeometry\nfunction CylinderGeometry(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){Geometry.call(this);this.type='CylinderGeometry';this.parameters={radiusTop:radiusTop,radiusBottom:radiusBottom,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};this.fromBufferGeometry(new CylinderBufferGeometry(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength));this.mergeVertices();}CylinderGeometry.prototype=Object.create(Geometry.prototype);CylinderGeometry.prototype.constructor=CylinderGeometry;// CylinderBufferGeometry\nfunction CylinderBufferGeometry(radiusTop,radiusBottom,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){BufferGeometry.call(this);this.type='CylinderBufferGeometry';this.parameters={radiusTop:radiusTop,radiusBottom:radiusBottom,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};var scope=this;radiusTop=radiusTop!==undefined?radiusTop:1;radiusBottom=radiusBottom!==undefined?radiusBottom:1;height=height||1;radialSegments=Math.floor(radialSegments)||8;heightSegments=Math.floor(heightSegments)||1;openEnded=openEnded!==undefined?openEnded:false;thetaStart=thetaStart!==undefined?thetaStart:0.0;thetaLength=thetaLength!==undefined?thetaLength:Math.PI*2;// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables\nvar index=0;var indexArray=[];var halfHeight=height/2;var groupStart=0;// generate geometry\ngenerateTorso();if(openEnded===false){if(radiusTop>0)generateCap(true);if(radiusBottom>0)generateCap(false);}// build geometry\nthis.setIndex(indices);this.addAttribute('position',new Float32BufferAttribute(vertices,3));this.addAttribute('normal',new Float32BufferAttribute(normals,3));this.addAttribute('uv',new Float32BufferAttribute(uvs,2));function generateTorso(){var x,y;var normal=new Vector3();var vertex=new Vector3();var groupCount=0;// this will be used to calculate the normal\nvar slope=(radiusBottom-radiusTop)/height;// generate vertices, normals and uvs\nfor(y=0;y<=heightSegments;y++){var indexRow=[];var v=y/heightSegments;// calculate the radius of the current row\nvar radius=v*(radiusBottom-radiusTop)+radiusTop;for(x=0;x<=radialSegments;x++){var u=x/radialSegments;var theta=u*thetaLength+thetaStart;var sinTheta=Math.sin(theta);var cosTheta=Math.cos(theta);// vertex\nvertex.x=radius*sinTheta;vertex.y=-v*height+halfHeight;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormal.set(sinTheta,slope,cosTheta).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u,1-v);// save index of vertex in respective row\nindexRow.push(index++);}// now save vertices of the row in our index array\nindexArray.push(indexRow);}// generate indices\nfor(x=0;x<radialSegments;x++){for(y=0;y<heightSegments;y++){// we use the index array to access the correct indices\nvar a=indexArray[y][x];var b=indexArray[y+1][x];var c=indexArray[y+1][x+1];var d=indexArray[y][x+1];// faces\nindices.push(a,b,d);indices.push(b,c,d);// update group counter\ngroupCount+=6;}}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,0);// calculate new start value for groups\ngroupStart+=groupCount;}function generateCap(top){var x,centerIndexStart,centerIndexEnd;var uv=new Vector2();var vertex=new Vector3();var groupCount=0;var radius=top===true?radiusTop:radiusBottom;var sign=top===true?1:-1;// save the index of the first center vertex\ncenterIndexStart=index;// first we generate the center vertex data of the cap.\n// because the geometry needs one set of uvs per face,\n// we must generate a center vertex per face/segment\nfor(x=1;x<=radialSegments;x++){// vertex\nvertices.push(0,halfHeight*sign,0);// normal\nnormals.push(0,sign,0);// uv\nuvs.push(0.5,0.5);// increase index\nindex++;}// save the index of the last center vertex\ncenterIndexEnd=index;// now we generate the surrounding vertices, normals and uvs\nfor(x=0;x<=radialSegments;x++){var u=x/radialSegments;var theta=u*thetaLength+thetaStart;var cosTheta=Math.cos(theta);var sinTheta=Math.sin(theta);// vertex\nvertex.x=radius*sinTheta;vertex.y=halfHeight*sign;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,sign,0);// uv\nuv.x=cosTheta*0.5+0.5;uv.y=sinTheta*0.5*sign+0.5;uvs.push(uv.x,uv.y);// increase index\nindex++;}// generate indices\nfor(x=0;x<radialSegments;x++){var c=centerIndexStart+x;var i=centerIndexEnd+x;if(top===true){// face top\nindices.push(i,i+1,c);}else{// face bottom\nindices.push(i+1,i,c);}groupCount+=3;}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,top===true?1:2);// calculate new start value for groups\ngroupStart+=groupCount;}}CylinderBufferGeometry.prototype=Object.create(BufferGeometry.prototype);CylinderBufferGeometry.prototype.constructor=CylinderBufferGeometry;/**\n\t * @author abelnation / http://github.com/abelnation\n\t */ // ConeGeometry\nfunction ConeGeometry(radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){CylinderGeometry.call(this,0,radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength);this.type='ConeGeometry';this.parameters={radius:radius,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};}ConeGeometry.prototype=Object.create(CylinderGeometry.prototype);ConeGeometry.prototype.constructor=ConeGeometry;// ConeBufferGeometry\nfunction ConeBufferGeometry(radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength){CylinderBufferGeometry.call(this,0,radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength);this.type='ConeBufferGeometry';this.parameters={radius:radius,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};}ConeBufferGeometry.prototype=Object.create(CylinderBufferGeometry.prototype);ConeBufferGeometry.prototype.constructor=ConeBufferGeometry;/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author hughes\n\t */ // CircleGeometry\nfunction CircleGeometry(radius,segments,thetaStart,thetaLength){Geometry.call(this);this.type='CircleGeometry';this.parameters={radius:radius,segments:segments,thetaStart:thetaStart,thetaLength:thetaLength};this.fromBufferGeometry(new CircleBufferGeometry(radius,segments,thetaStart,thetaLength));this.mergeVertices();}CircleGeometry.prototype=Object.create(Geometry.prototype);CircleGeometry.prototype.constructor=CircleGeometry;// CircleBufferGeometry\nfunction CircleBufferGeometry(radius,segments,thetaStart,thetaLength){BufferGeometry.call(this);this.type='CircleBufferGeometry';this.parameters={radius:radius,segments:segments,thetaStart:thetaStart,thetaLength:thetaLength};radius=radius||1;segments=segments!==undefined?Math.max(3,segments):8;thetaStart=thetaStart!==undefined?thetaStart:0;thetaLength=thetaLength!==undefined?thetaLength:Math.PI*2;// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables\nvar i,s;var vertex=new Vector3();var uv=new Vector2();// center point\nvertices.push(0,0,0);normals.push(0,0,1);uvs.push(0.5,0.5);for(s=0,i=3;s<=segments;s++,i+=3){var segment=thetaStart+s/segments*thetaLength;// vertex\nvertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,0,1);// uvs\nuv.x=(vertices[i]/radius+1)/2;uv.y=(vertices[i+1]/radius+1)/2;uvs.push(uv.x,uv.y);}// indices\nfor(i=1;i<=segments;i++){indices.push(i,i+1,0);}// build geometry\nthis.setIndex(indices);this.addAttribute('position',new Float32BufferAttribute(vertices,3));this.addAttribute('normal',new Float32BufferAttribute(normals,3));this.addAttribute('uv',new Float32BufferAttribute(uvs,2));}CircleBufferGeometry.prototype=Object.create(BufferGeometry.prototype);CircleBufferGeometry.prototype.constructor=CircleBufferGeometry;var Geometries=/*#__PURE__*/Object.freeze({WireframeGeometry:WireframeGeometry,ParametricGeometry:ParametricGeometry,ParametricBufferGeometry:ParametricBufferGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronBufferGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronBufferGeometry,IcosahedronGeometry:IcosahedronGeometry,IcosahedronBufferGeometry:IcosahedronBufferGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronBufferGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronBufferGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeBufferGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusKnotBufferGeometry:TorusKnotBufferGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusBufferGeometry,TextGeometry:TextGeometry,TextBufferGeometry:TextBufferGeometry,SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereBufferGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingBufferGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneBufferGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheBufferGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeBufferGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeBufferGeometry,EdgesGeometry:EdgesGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeBufferGeometry,CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderBufferGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleBufferGeometry,BoxGeometry:BoxGeometry,BoxBufferGeometry:BoxBufferGeometry});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  color: <THREE.Color>\n\t * }\n\t */function ShadowMaterial(parameters){Material.call(this);this.type='ShadowMaterial';this.color=new Color(0x000000);this.transparent=true;this.setValues(parameters);}ShadowMaterial.prototype=Object.create(Material.prototype);ShadowMaterial.prototype.constructor=ShadowMaterial;ShadowMaterial.prototype.isShadowMaterial=true;ShadowMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);return this;};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function RawShaderMaterial(parameters){ShaderMaterial.call(this,parameters);this.type='RawShaderMaterial';}RawShaderMaterial.prototype=Object.create(ShaderMaterial.prototype);RawShaderMaterial.prototype.constructor=RawShaderMaterial;RawShaderMaterial.prototype.isRawShaderMaterial=true;/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */function MeshStandardMaterial(parameters){Material.call(this);this.defines={'STANDARD':''};this.type='MeshStandardMaterial';this.color=new Color(0xffffff);// diffuse\nthis.roughness=0.5;this.metalness=0.5;this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.roughnessMap=null;this.metalnessMap=null;this.alphaMap=null;this.envMap=null;this.envMapIntensity=1.0;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}MeshStandardMaterial.prototype=Object.create(Material.prototype);MeshStandardMaterial.prototype.constructor=MeshStandardMaterial;MeshStandardMaterial.prototype.isMeshStandardMaterial=true;MeshStandardMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.defines={'STANDARD':''};this.color.copy(source.color);this.roughness=source.roughness;this.metalness=source.metalness;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.roughnessMap=source.roughnessMap;this.metalnessMap=source.metalnessMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.envMapIntensity=source.envMapIntensity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;};/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  reflectivity: <float>\n\t *  clearCoat: <float>\n\t *  clearCoatRoughness: <float>\n\t * }\n\t */function MeshPhysicalMaterial(parameters){MeshStandardMaterial.call(this);this.defines={'PHYSICAL':''};this.type='MeshPhysicalMaterial';this.reflectivity=0.5;// maps to F0 = 0.04\nthis.clearCoat=0.0;this.clearCoatRoughness=0.0;this.setValues(parameters);}MeshPhysicalMaterial.prototype=Object.create(MeshStandardMaterial.prototype);MeshPhysicalMaterial.prototype.constructor=MeshPhysicalMaterial;MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=true;MeshPhysicalMaterial.prototype.copy=function(source){MeshStandardMaterial.prototype.copy.call(this,source);this.defines={'PHYSICAL':''};this.reflectivity=source.reflectivity;this.clearCoat=source.clearCoat;this.clearCoatRoughness=source.clearCoatRoughness;return this;};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */function MeshPhongMaterial(parameters){Material.call(this);this.type='MeshPhongMaterial';this.color=new Color(0xffffff);// diffuse\nthis.specular=new Color(0x111111);this.shininess=30;this.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}MeshPhongMaterial.prototype=Object.create(Material.prototype);MeshPhongMaterial.prototype.constructor=MeshPhongMaterial;MeshPhongMaterial.prototype.isMeshPhongMaterial=true;MeshPhongMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.specular.copy(source.specular);this.shininess=source.shininess;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;};/**\n\t * @author takahirox / http://github.com/takahirox\n\t *\n\t * parameters = {\n\t *  gradientMap: new THREE.Texture( <Image> )\n\t * }\n\t */function MeshToonMaterial(parameters){MeshPhongMaterial.call(this);this.defines={'TOON':''};this.type='MeshToonMaterial';this.gradientMap=null;this.setValues(parameters);}MeshToonMaterial.prototype=Object.create(MeshPhongMaterial.prototype);MeshToonMaterial.prototype.constructor=MeshToonMaterial;MeshToonMaterial.prototype.isMeshToonMaterial=true;MeshToonMaterial.prototype.copy=function(source){MeshPhongMaterial.prototype.copy.call(this,source);this.gradientMap=source.gradientMap;return this;};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */function MeshNormalMaterial(parameters){Material.call(this);this.type='MeshNormalMaterial';this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=false;this.wireframeLinewidth=1;this.fog=false;this.lights=false;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}MeshNormalMaterial.prototype=Object.create(Material.prototype);MeshNormalMaterial.prototype.constructor=MeshNormalMaterial;MeshNormalMaterial.prototype.isMeshNormalMaterial=true;MeshNormalMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */function MeshLambertMaterial(parameters){Material.call(this);this.type='MeshLambertMaterial';this.color=new Color(0xffffff);// diffuse\nthis.map=null;this.lightMap=null;this.lightMapIntensity=1.0;this.aoMap=null;this.aoMapIntensity=1.0;this.emissive=new Color(0x000000);this.emissiveIntensity=1.0;this.emissiveMap=null;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinecap='round';this.wireframeLinejoin='round';this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.setValues(parameters);}MeshLambertMaterial.prototype=Object.create(Material.prototype);MeshLambertMaterial.prototype.constructor=MeshLambertMaterial;MeshLambertMaterial.prototype.isMeshLambertMaterial=true;MeshLambertMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;};/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  matcap: new THREE.Texture( <Image> ),\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */function MeshMatcapMaterial(parameters){Material.call(this);this.defines={'MATCAP':''};this.type='MeshMatcapMaterial';this.color=new Color(0xffffff);// diffuse\nthis.matcap=null;this.map=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=TangentSpaceNormalMap;this.normalScale=new Vector2(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.skinning=false;this.morphTargets=false;this.morphNormals=false;this.lights=false;this.setValues(parameters);}MeshMatcapMaterial.prototype=Object.create(Material.prototype);MeshMatcapMaterial.prototype.constructor=MeshMatcapMaterial;MeshMatcapMaterial.prototype.isMeshMatcapMaterial=true;MeshMatcapMaterial.prototype.copy=function(source){Material.prototype.copy.call(this,source);this.defines={'MATCAP':''};this.color.copy(source.color);this.matcap=source.matcap;this.map=source.map;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.skinning=source.skinning;this.morphTargets=source.morphTargets;this.morphNormals=source.morphNormals;return this;};/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */function LineDashedMaterial(parameters){LineBasicMaterial.call(this);this.type='LineDashedMaterial';this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(parameters);}LineDashedMaterial.prototype=Object.create(LineBasicMaterial.prototype);LineDashedMaterial.prototype.constructor=LineDashedMaterial;LineDashedMaterial.prototype.isLineDashedMaterial=true;LineDashedMaterial.prototype.copy=function(source){LineBasicMaterial.prototype.copy.call(this,source);this.scale=source.scale;this.dashSize=source.dashSize;this.gapSize=source.gapSize;return this;};var Materials=/*#__PURE__*/Object.freeze({ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material});/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */var AnimationUtils={// same as Array.prototype.slice, but also works on typed arrays\narraySlice:function(array,from,to){if(AnimationUtils.isTypedArray(array)){// in ios9 array.subarray(from, undefined) will return empty array\n// but array.subarray(from) or array.subarray(from, len) is correct\nreturn new array.constructor(array.subarray(from,to!==undefined?to:array.length));}return array.slice(from,to);},// converts an array to a specific type\nconvertArray:function(array,type,forceClone){if(!array||// let 'undefined' and 'null' pass\n!forceClone&&array.constructor===type)return array;if(typeof type.BYTES_PER_ELEMENT==='number'){return new type(array);// create typed array\n}return Array.prototype.slice.call(array);// create Array\n},isTypedArray:function(object){return ArrayBuffer.isView(object)&&!(object instanceof DataView);},// returns an array by which times and values can be sorted\ngetKeyframeOrder:function(times){function compareTime(i,j){return times[i]-times[j];}var n=times.length;var result=new Array(n);for(var i=0;i!==n;++i)result[i]=i;result.sort(compareTime);return result;},// uses the array previously returned by 'getKeyframeOrder' to sort data\nsortedArray:function(values,stride,order){var nValues=values.length;var result=new values.constructor(nValues);for(var i=0,dstOffset=0;dstOffset!==nValues;++i){var srcOffset=order[i]*stride;for(var j=0;j!==stride;++j){result[dstOffset++]=values[srcOffset+j];}}return result;},// function for parsing AOS keyframe formats\nflattenJSON:function(jsonKeys,times,values,valuePropertyName){var i=1,key=jsonKeys[0];while(key!==undefined&&key[valuePropertyName]===undefined){key=jsonKeys[i++];}if(key===undefined)return;// no data\nvar value=key[valuePropertyName];if(value===undefined)return;// no data\nif(Array.isArray(value)){do{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);values.push.apply(values,value);// push all elements\n}key=jsonKeys[i++];}while(key!==undefined);}else if(value.toArray!==undefined){// ...assume THREE.Math-ish\ndo{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);value.toArray(values,values.length);}key=jsonKeys[i++];}while(key!==undefined);}else{// otherwise push as-is\ndo{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);values.push(value);}key=jsonKeys[i++];}while(key!==undefined);}}};/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */function Interpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){this.parameterPositions=parameterPositions;this._cachedIndex=0;this.resultBuffer=resultBuffer!==undefined?resultBuffer:new sampleValues.constructor(sampleSize);this.sampleValues=sampleValues;this.valueSize=sampleSize;}Object.assign(Interpolant.prototype,{evaluate:function(t){var pp=this.parameterPositions,i1=this._cachedIndex,t1=pp[i1],t0=pp[i1-1];validate_interval:{seek:{var right;linear_scan:{//- See http://jsperf.com/comparison-to-undefined/3\n//- slower code:\n//-\n//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\nforward_scan:if(!(t<t1)){for(var giveUpAt=i1+2;;){if(t1===undefined){if(t<t0)break forward_scan;// after end\ni1=pp.length;this._cachedIndex=i1;return this.afterEnd_(i1-1,t,t0);}if(i1===giveUpAt)break;// this loop\nt0=t1;t1=pp[++i1];if(t<t1){// we have arrived at the sought interval\nbreak seek;}}// prepare binary search on the right side of the index\nright=pp.length;break linear_scan;}//- slower code:\n//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\nif(!(t>=t0)){// looping?\nvar t1global=pp[1];if(t<t1global){i1=2;// + 1, using the scan for the details\nt0=t1global;}// linear reverse scan\nfor(var giveUpAt=i1-2;;){if(t0===undefined){// before start\nthis._cachedIndex=0;return this.beforeStart_(0,t,t1);}if(i1===giveUpAt)break;// this loop\nt1=t0;t0=pp[--i1-1];if(t>=t0){// we have arrived at the sought interval\nbreak seek;}}// prepare binary search on the left side of the index\nright=i1;i1=0;break linear_scan;}// the interval is valid\nbreak validate_interval;}// linear scan\n// binary search\nwhile(i1<right){var mid=i1+right>>>1;if(t<pp[mid]){right=mid;}else{i1=mid+1;}}t1=pp[i1];t0=pp[i1-1];// check boundary cases, again\nif(t0===undefined){this._cachedIndex=0;return this.beforeStart_(0,t,t1);}if(t1===undefined){i1=pp.length;this._cachedIndex=i1;return this.afterEnd_(i1-1,t0,t);}}// seek\nthis._cachedIndex=i1;this.intervalChanged_(i1,t0,t1);}// validate_interval\nreturn this.interpolate_(i1,t0,t,t1);},settings:null,// optional, subclass-specific settings structure\n// Note: The indirection allows central control of many interpolants.\n// --- Protected interface\nDefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_;},copySampleValue_:function(index){// copies a sample value to the result buffer\nvar result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset=index*stride;for(var i=0;i!==stride;++i){result[i]=values[offset+i];}return result;},// Template methods for derived classes:\ninterpolate_:function()/* i1, t0, t, t1 */{throw new Error('call to abstract method');// implementations shall return this.resultBuffer\n},intervalChanged_:function()/* i1, t0, t1 */{// empty\n}});//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign(Interpolant.prototype,{//( 0, t, t0 ), returns this.resultBuffer\nbeforeStart_:Interpolant.prototype.copySampleValue_,//( N-1, tN-1, t ), returns this.resultBuffer\nafterEnd_:Interpolant.prototype.copySampleValue_});/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */function CubicInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);this._weightPrev=-0;this._offsetPrev=-0;this._weightNext=-0;this._offsetNext=-0;}CubicInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:CubicInterpolant,DefaultSettings_:{endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding},intervalChanged_:function(i1,t0,t1){var pp=this.parameterPositions,iPrev=i1-2,iNext=i1+1,tPrev=pp[iPrev],tNext=pp[iNext];if(tPrev===undefined){switch(this.getSettings_().endingStart){case ZeroSlopeEnding:// f'(t0) = 0\niPrev=i1;tPrev=2*t0-t1;break;case WrapAroundEnding:// use the other end of the curve\niPrev=pp.length-2;tPrev=t0+pp[iPrev]-pp[iPrev+1];break;default:// ZeroCurvatureEnding\n// f''(t0) = 0 a.k.a. Natural Spline\niPrev=i1;tPrev=t1;}}if(tNext===undefined){switch(this.getSettings_().endingEnd){case ZeroSlopeEnding:// f'(tN) = 0\niNext=i1;tNext=2*t1-t0;break;case WrapAroundEnding:// use the other end of the curve\niNext=1;tNext=t1+pp[1]-pp[0];break;default:// ZeroCurvatureEnding\n// f''(tN) = 0, a.k.a. Natural Spline\niNext=i1-1;tNext=t0;}}var halfDt=(t1-t0)*0.5,stride=this.valueSize;this._weightPrev=halfDt/(t0-tPrev);this._weightNext=halfDt/(tNext-t1);this._offsetPrev=iPrev*stride;this._offsetNext=iNext*stride;},interpolate_:function(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,o1=i1*stride,o0=o1-stride,oP=this._offsetPrev,oN=this._offsetNext,wP=this._weightPrev,wN=this._weightNext,p=(t-t0)/(t1-t0),pp=p*p,ppp=pp*p;// evaluate polynomials\nvar sP=-wP*ppp+2*wP*pp-wP*p;var s0=(1+wP)*ppp+(-1.5-2*wP)*pp+(-0.5+wP)*p+1;var s1=(-1-wN)*ppp+(1.5+wN)*pp+0.5*p;var sN=wN*ppp-wN*pp;// combine data linearly\nfor(var i=0;i!==stride;++i){result[i]=sP*values[oP+i]+s0*values[o0+i]+s1*values[o1+i]+sN*values[oN+i];}return result;}});/**\n\t * @author tschw\n\t */function LinearInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}LinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:LinearInterpolant,interpolate_:function(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset1=i1*stride,offset0=offset1-stride,weight1=(t-t0)/(t1-t0),weight0=1-weight1;for(var i=0;i!==stride;++i){result[i]=values[offset0+i]*weight0+values[offset1+i]*weight1;}return result;}});/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */function DiscreteInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}DiscreteInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:DiscreteInterpolant,interpolate_:function(i1/*, t0, t, t1 */){return this.copySampleValue_(i1-1);}});/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */function KeyframeTrack(name,times,values,interpolation){if(name===undefined)throw new Error('THREE.KeyframeTrack: track name is undefined');if(times===undefined||times.length===0)throw new Error('THREE.KeyframeTrack: no keyframes in track named '+name);this.name=name;this.times=AnimationUtils.convertArray(times,this.TimeBufferType);this.values=AnimationUtils.convertArray(values,this.ValueBufferType);this.setInterpolation(interpolation||this.DefaultInterpolation);}// Static methods\nObject.assign(KeyframeTrack,{// Serialization (in static context, because of constructor invocation\n// and automatic invocation of .toJSON):\ntoJSON:function(track){var trackType=track.constructor;var json;// derived classes can define a static toJSON method\nif(trackType.toJSON!==undefined){json=trackType.toJSON(track);}else{// by default, we assume the data can be serialized as-is\njson={'name':track.name,'times':AnimationUtils.convertArray(track.times,Array),'values':AnimationUtils.convertArray(track.values,Array)};var interpolation=track.getInterpolation();if(interpolation!==track.DefaultInterpolation){json.interpolation=interpolation;}}json.type=track.ValueTypeName;// mandatory\nreturn json;}});Object.assign(KeyframeTrack.prototype,{constructor:KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:InterpolateLinear,InterpolantFactoryMethodDiscrete:function(result){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),result);},InterpolantFactoryMethodLinear:function(result){return new LinearInterpolant(this.times,this.values,this.getValueSize(),result);},InterpolantFactoryMethodSmooth:function(result){return new CubicInterpolant(this.times,this.values,this.getValueSize(),result);},setInterpolation:function(interpolation){var factoryMethod;switch(interpolation){case InterpolateDiscrete:factoryMethod=this.InterpolantFactoryMethodDiscrete;break;case InterpolateLinear:factoryMethod=this.InterpolantFactoryMethodLinear;break;case InterpolateSmooth:factoryMethod=this.InterpolantFactoryMethodSmooth;break;}if(factoryMethod===undefined){var message=\"unsupported interpolation for \"+this.ValueTypeName+\" keyframe track named \"+this.name;if(this.createInterpolant===undefined){// fall back to default, unless the default itself is messed up\nif(interpolation!==this.DefaultInterpolation){this.setInterpolation(this.DefaultInterpolation);}else{throw new Error(message);// fatal, in this case\n}}console.warn('THREE.KeyframeTrack:',message);return this;}this.createInterpolant=factoryMethod;return this;},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth;}},getValueSize:function(){return this.values.length/this.times.length;},// move all keyframes either forwards or backwards in time\nshift:function(timeOffset){if(timeOffset!==0.0){var times=this.times;for(var i=0,n=times.length;i!==n;++i){times[i]+=timeOffset;}}return this;},// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\nscale:function(timeScale){if(timeScale!==1.0){var times=this.times;for(var i=0,n=times.length;i!==n;++i){times[i]*=timeScale;}}return this;},// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\ntrim:function(startTime,endTime){var times=this.times,nKeys=times.length,from=0,to=nKeys-1;while(from!==nKeys&&times[from]<startTime){++from;}while(to!==-1&&times[to]>endTime){--to;}++to;// inclusive -> exclusive bound\nif(from!==0||to!==nKeys){// empty tracks are forbidden, so keep at least one keyframe\nif(from>=to)to=Math.max(to,1),from=to-1;var stride=this.getValueSize();this.times=AnimationUtils.arraySlice(times,from,to);this.values=AnimationUtils.arraySlice(this.values,from*stride,to*stride);}return this;},// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\nvalidate:function(){var valid=true;var valueSize=this.getValueSize();if(valueSize-Math.floor(valueSize)!==0){console.error('THREE.KeyframeTrack: Invalid value size in track.',this);valid=false;}var times=this.times,values=this.values,nKeys=times.length;if(nKeys===0){console.error('THREE.KeyframeTrack: Track is empty.',this);valid=false;}var prevTime=null;for(var i=0;i!==nKeys;i++){var currTime=times[i];if(typeof currTime==='number'&&isNaN(currTime)){console.error('THREE.KeyframeTrack: Time is not a valid number.',this,i,currTime);valid=false;break;}if(prevTime!==null&&prevTime>currTime){console.error('THREE.KeyframeTrack: Out of order keys.',this,i,currTime,prevTime);valid=false;break;}prevTime=currTime;}if(values!==undefined){if(AnimationUtils.isTypedArray(values)){for(var i=0,n=values.length;i!==n;++i){var value=values[i];if(isNaN(value)){console.error('THREE.KeyframeTrack: Value is not a valid number.',this,i,value);valid=false;break;}}}}return valid;},// removes equivalent sequential keys as common in morph target sequences\n// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\noptimize:function(){var times=this.times,values=this.values,stride=this.getValueSize(),smoothInterpolation=this.getInterpolation()===InterpolateSmooth,writeIndex=1,lastIndex=times.length-1;for(var i=1;i<lastIndex;++i){var keep=false;var time=times[i];var timeNext=times[i+1];// remove adjacent keyframes scheduled at the same time\nif(time!==timeNext&&(i!==1||time!==time[0])){if(!smoothInterpolation){// remove unnecessary keyframes same as their neighbors\nvar offset=i*stride,offsetP=offset-stride,offsetN=offset+stride;for(var j=0;j!==stride;++j){var value=values[offset+j];if(value!==values[offsetP+j]||value!==values[offsetN+j]){keep=true;break;}}}else{keep=true;}}// in-place compaction\nif(keep){if(i!==writeIndex){times[writeIndex]=times[i];var readOffset=i*stride,writeOffset=writeIndex*stride;for(var j=0;j!==stride;++j){values[writeOffset+j]=values[readOffset+j];}}++writeIndex;}}// flush last keyframe (compaction looks ahead)\nif(lastIndex>0){times[writeIndex]=times[lastIndex];for(var readOffset=lastIndex*stride,writeOffset=writeIndex*stride,j=0;j!==stride;++j){values[writeOffset+j]=values[readOffset+j];}++writeIndex;}if(writeIndex!==times.length){this.times=AnimationUtils.arraySlice(times,0,writeIndex);this.values=AnimationUtils.arraySlice(values,0,writeIndex*stride);}return this;},clone:function(){var times=AnimationUtils.arraySlice(this.times,0);var values=AnimationUtils.arraySlice(this.values,0);var TypedKeyframeTrack=this.constructor;var track=new TypedKeyframeTrack(this.name,times,values);// Interpolant argument to constructor is not saved, so copy the factory method directly.\ntrack.createInterpolant=this.createInterpolant;return track;}});/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */function BooleanKeyframeTrack(name,times,values){KeyframeTrack.call(this,name,times,values);}BooleanKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:BooleanKeyframeTrack,ValueTypeName:'bool',ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined// Note: Actually this track could have a optimized / compressed\n// representation of a single value and a custom interpolant that\n// computes \"firstValue ^ isOdd( index )\".\n});/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */function ColorKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation);}ColorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:ColorKeyframeTrack,ValueTypeName:'color'// ValueBufferType is inherited\n// DefaultInterpolation is inherited\n// Note: Very basic implementation and nothing special yet.\n// However, this is the place for color space parameterization.\n});/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */function NumberKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation);}NumberKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:NumberKeyframeTrack,ValueTypeName:'number'// ValueBufferType is inherited\n// DefaultInterpolation is inherited\n});/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */function QuaternionLinearInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}QuaternionLinearInterpolant.prototype=Object.assign(Object.create(Interpolant.prototype),{constructor:QuaternionLinearInterpolant,interpolate_:function(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset=i1*stride,alpha=(t-t0)/(t1-t0);for(var end=offset+stride;offset!==end;offset+=4){Quaternion.slerpFlat(result,0,values,offset-stride,values,offset,alpha);}return result;}});/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */function QuaternionKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation);}QuaternionKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:QuaternionKeyframeTrack,ValueTypeName:'quaternion',// ValueBufferType is inherited\nDefaultInterpolation:InterpolateLinear,InterpolantFactoryMethodLinear:function(result){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),result);},InterpolantFactoryMethodSmooth:undefined// not yet implemented\n});/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */function StringKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation);}StringKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:StringKeyframeTrack,ValueTypeName:'string',ValueBufferType:Array,DefaultInterpolation:InterpolateDiscrete,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined});/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */function VectorKeyframeTrack(name,times,values,interpolation){KeyframeTrack.call(this,name,times,values,interpolation);}VectorKeyframeTrack.prototype=Object.assign(Object.create(KeyframeTrack.prototype),{constructor:VectorKeyframeTrack,ValueTypeName:'vector'// ValueBufferType is inherited\n// DefaultInterpolation is inherited\n});/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */function AnimationClip(name,duration,tracks){this.name=name;this.tracks=tracks;this.duration=duration!==undefined?duration:-1;this.uuid=_Math.generateUUID();// this means it should figure out its duration by scanning the tracks\nif(this.duration<0){this.resetDuration();}}function getTrackTypeForValueTypeName(typeName){switch(typeName.toLowerCase()){case'scalar':case'double':case'float':case'number':case'integer':return NumberKeyframeTrack;case'vector':case'vector2':case'vector3':case'vector4':return VectorKeyframeTrack;case'color':return ColorKeyframeTrack;case'quaternion':return QuaternionKeyframeTrack;case'bool':case'boolean':return BooleanKeyframeTrack;case'string':return StringKeyframeTrack;}throw new Error('THREE.KeyframeTrack: Unsupported typeName: '+typeName);}function parseKeyframeTrack(json){if(json.type===undefined){throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');}var trackType=getTrackTypeForValueTypeName(json.type);if(json.times===undefined){var times=[],values=[];AnimationUtils.flattenJSON(json.keys,times,values,'value');json.times=times;json.values=values;}// derived classes can define a static parse method\nif(trackType.parse!==undefined){return trackType.parse(json);}else{// by default, we assume a constructor compatible with the base\nreturn new trackType(json.name,json.times,json.values,json.interpolation);}}Object.assign(AnimationClip,{parse:function(json){var tracks=[],jsonTracks=json.tracks,frameTime=1.0/(json.fps||1.0);for(var i=0,n=jsonTracks.length;i!==n;++i){tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));}return new AnimationClip(json.name,json.duration,tracks);},toJSON:function(clip){var tracks=[],clipTracks=clip.tracks;var json={'name':clip.name,'duration':clip.duration,'tracks':tracks,'uuid':clip.uuid};for(var i=0,n=clipTracks.length;i!==n;++i){tracks.push(KeyframeTrack.toJSON(clipTracks[i]));}return json;},CreateFromMorphTargetSequence:function(name,morphTargetSequence,fps,noLoop){var numMorphTargets=morphTargetSequence.length;var tracks=[];for(var i=0;i<numMorphTargets;i++){var times=[];var values=[];times.push((i+numMorphTargets-1)%numMorphTargets,i,(i+1)%numMorphTargets);values.push(0,1,0);var order=AnimationUtils.getKeyframeOrder(times);times=AnimationUtils.sortedArray(times,1,order);values=AnimationUtils.sortedArray(values,1,order);// if there is a key at the first frame, duplicate it as the\n// last frame as well for perfect loop.\nif(!noLoop&&times[0]===0){times.push(numMorphTargets);values.push(values[0]);}tracks.push(new NumberKeyframeTrack('.morphTargetInfluences['+morphTargetSequence[i].name+']',times,values).scale(1.0/fps));}return new AnimationClip(name,-1,tracks);},findByName:function(objectOrClipArray,name){var clipArray=objectOrClipArray;if(!Array.isArray(objectOrClipArray)){var o=objectOrClipArray;clipArray=o.geometry&&o.geometry.animations||o.animations;}for(var i=0;i<clipArray.length;i++){if(clipArray[i].name===name){return clipArray[i];}}return null;},CreateClipsFromMorphTargetSequences:function(morphTargets,fps,noLoop){var animationToMorphTargets={};// tested with https://regex101.com/ on trick sequences\n// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\nvar pattern=/^([\\w-]*?)([\\d]+)$/;// sort morph target names into animation groups based\n// patterns like Walk_001, Walk_002, Run_001, Run_002\nfor(var i=0,il=morphTargets.length;i<il;i++){var morphTarget=morphTargets[i];var parts=morphTarget.name.match(pattern);if(parts&&parts.length>1){var name=parts[1];var animationMorphTargets=animationToMorphTargets[name];if(!animationMorphTargets){animationToMorphTargets[name]=animationMorphTargets=[];}animationMorphTargets.push(morphTarget);}}var clips=[];for(var name in animationToMorphTargets){clips.push(AnimationClip.CreateFromMorphTargetSequence(name,animationToMorphTargets[name],fps,noLoop));}return clips;},// parse the animation.hierarchy format\nparseAnimation:function(animation,bones){if(!animation){console.error('THREE.AnimationClip: No animation in JSONLoader data.');return null;}var addNonemptyTrack=function(trackType,trackName,animationKeys,propertyName,destTracks){// only return track if there are actually keys.\nif(animationKeys.length!==0){var times=[];var values=[];AnimationUtils.flattenJSON(animationKeys,times,values,propertyName);// empty keys are filtered out, so check again\nif(times.length!==0){destTracks.push(new trackType(trackName,times,values));}}};var tracks=[];var clipName=animation.name||'default';// automatic length determination in AnimationClip.\nvar duration=animation.length||-1;var fps=animation.fps||30;var hierarchyTracks=animation.hierarchy||[];for(var h=0;h<hierarchyTracks.length;h++){var animationKeys=hierarchyTracks[h].keys;// skip empty tracks\nif(!animationKeys||animationKeys.length===0)continue;// process morph targets\nif(animationKeys[0].morphTargets){// figure out all morph targets used in this track\nvar morphTargetNames={};for(var k=0;k<animationKeys.length;k++){if(animationKeys[k].morphTargets){for(var m=0;m<animationKeys[k].morphTargets.length;m++){morphTargetNames[animationKeys[k].morphTargets[m]]=-1;}}}// create a track for each morph target with all zero\n// morphTargetInfluences except for the keys in which\n// the morphTarget is named.\nfor(var morphTargetName in morphTargetNames){var times=[];var values=[];for(var m=0;m!==animationKeys[k].morphTargets.length;++m){var animationKey=animationKeys[k];times.push(animationKey.time);values.push(animationKey.morphTarget===morphTargetName?1:0);}tracks.push(new NumberKeyframeTrack('.morphTargetInfluence['+morphTargetName+']',times,values));}duration=morphTargetNames.length*(fps||1.0);}else{// ...assume skeletal animation\nvar boneName='.bones['+bones[h].name+']';addNonemptyTrack(VectorKeyframeTrack,boneName+'.position',animationKeys,'pos',tracks);addNonemptyTrack(QuaternionKeyframeTrack,boneName+'.quaternion',animationKeys,'rot',tracks);addNonemptyTrack(VectorKeyframeTrack,boneName+'.scale',animationKeys,'scl',tracks);}}if(tracks.length===0){return null;}var clip=new AnimationClip(clipName,duration,tracks);return clip;}});Object.assign(AnimationClip.prototype,{resetDuration:function(){var tracks=this.tracks,duration=0;for(var i=0,n=tracks.length;i!==n;++i){var track=this.tracks[i];duration=Math.max(duration,track.times[track.times.length-1]);}this.duration=duration;return this;},trim:function(){for(var i=0;i<this.tracks.length;i++){this.tracks[i].trim(0,this.duration);}return this;},validate:function(){var valid=true;for(var i=0;i<this.tracks.length;i++){valid=valid&&this.tracks[i].validate();}return valid;},optimize:function(){for(var i=0;i<this.tracks.length;i++){this.tracks[i].optimize();}return this;},clone:function(){var tracks=[];for(var i=0;i<this.tracks.length;i++){tracks.push(this.tracks[i].clone());}return new AnimationClip(this.name,this.duration,tracks);}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */var Cache={enabled:false,files:{},add:function(key,file){if(this.enabled===false)return;// console.log( 'THREE.Cache', 'Adding key:', key );\nthis.files[key]=file;},get:function(key){if(this.enabled===false)return;// console.log( 'THREE.Cache', 'Checking key:', key );\nreturn this.files[key];},remove:function(key){delete this.files[key];},clear:function(){this.files={};}};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function LoadingManager(onLoad,onProgress,onError){var scope=this;var isLoading=false;var itemsLoaded=0;var itemsTotal=0;var urlModifier=undefined;// Refer to #5689 for the reason why we don't set .onStart\n// in the constructor\nthis.onStart=undefined;this.onLoad=onLoad;this.onProgress=onProgress;this.onError=onError;this.itemStart=function(url){itemsTotal++;if(isLoading===false){if(scope.onStart!==undefined){scope.onStart(url,itemsLoaded,itemsTotal);}}isLoading=true;};this.itemEnd=function(url){itemsLoaded++;if(scope.onProgress!==undefined){scope.onProgress(url,itemsLoaded,itemsTotal);}if(itemsLoaded===itemsTotal){isLoading=false;if(scope.onLoad!==undefined){scope.onLoad();}}};this.itemError=function(url){if(scope.onError!==undefined){scope.onError(url);}};this.resolveURL=function(url){if(urlModifier){return urlModifier(url);}return url;};this.setURLModifier=function(transform){urlModifier=transform;return this;};}var DefaultLoadingManager=new LoadingManager();/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */var loading={};function FileLoader(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;}Object.assign(FileLoader.prototype,{load:function(url,onLoad,onProgress,onError){if(url===undefined)url='';if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);var scope=this;var cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}// Check if request is duplicate\nif(loading[url]!==undefined){loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});return;}// Check for data: URI\nvar dataUriRegex=/^data:(.*?)(;base64)?,(.*)$/;var dataUriRegexResult=url.match(dataUriRegex);// Safari can not handle Data URIs through XMLHttpRequest so process manually\nif(dataUriRegexResult){var mimeType=dataUriRegexResult[1];var isBase64=!!dataUriRegexResult[2];var data=dataUriRegexResult[3];data=decodeURIComponent(data);if(isBase64)data=atob(data);try{var response;var responseType=(this.responseType||'').toLowerCase();switch(responseType){case'arraybuffer':case'blob':var view=new Uint8Array(data.length);for(var i=0;i<data.length;i++){view[i]=data.charCodeAt(i);}if(responseType==='blob'){response=new Blob([view.buffer],{type:mimeType});}else{response=view.buffer;}break;case'document':var parser=new DOMParser();response=parser.parseFromString(data,mimeType);break;case'json':response=JSON.parse(data);break;default:// 'text' or other\nresponse=data;break;}// Wait for next browser tick like standard XMLHttpRequest event dispatching does\nsetTimeout(function(){if(onLoad)onLoad(response);scope.manager.itemEnd(url);},0);}catch(error){// Wait for next browser tick like standard XMLHttpRequest event dispatching does\nsetTimeout(function(){if(onError)onError(error);scope.manager.itemError(url);scope.manager.itemEnd(url);},0);}}else{// Initialise array for duplicate requests\nloading[url]=[];loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});var request=new XMLHttpRequest();request.open('GET',url,true);request.addEventListener('load',function(event){var response=this.response;Cache.add(url,response);var callbacks=loading[url];delete loading[url];if(this.status===200||this.status===0){// Some browsers return HTTP Status 0 when using non-http protocol\n// e.g. 'file://' or 'data://'. Handle as success.\nif(this.status===0)console.warn('THREE.FileLoader: HTTP Status 0 received.');for(var i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];if(callback.onLoad)callback.onLoad(response);}scope.manager.itemEnd(url);}else{for(var i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);}},false);request.addEventListener('progress',function(event){var callbacks=loading[url];for(var i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];if(callback.onProgress)callback.onProgress(event);}},false);request.addEventListener('error',function(event){var callbacks=loading[url];delete loading[url];for(var i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);},false);request.addEventListener('abort',function(event){var callbacks=loading[url];delete loading[url];for(var i=0,il=callbacks.length;i<il;i++){var callback=callbacks[i];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);},false);if(this.responseType!==undefined)request.responseType=this.responseType;if(this.withCredentials!==undefined)request.withCredentials=this.withCredentials;if(request.overrideMimeType)request.overrideMimeType(this.mimeType!==undefined?this.mimeType:'text/plain');for(var header in this.requestHeader){request.setRequestHeader(header,this.requestHeader[header]);}request.send(null);}scope.manager.itemStart(url);return request;},setPath:function(value){this.path=value;return this;},setResponseType:function(value){this.responseType=value;return this;},setWithCredentials:function(value){this.withCredentials=value;return this;},setMimeType:function(value){this.mimeType=value;return this;},setRequestHeader:function(value){this.requestHeader=value;return this;}});/**\n\t * @author bhouston / http://clara.io/\n\t */function AnimationLoader(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;}Object.assign(AnimationLoader.prototype,{load:function(url,onLoad,onProgress,onError){var scope=this;var loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)));},onProgress,onError);},parse:function(json,onLoad){var animations=[];for(var i=0;i<json.length;i++){var clip=AnimationClip.parse(json[i]);animations.push(clip);}onLoad(animations);},setPath:function(value){this.path=value;return this;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t */function CompressedTextureLoader(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;// override in sub classes\nthis._parser=null;}Object.assign(CompressedTextureLoader.prototype,{load:function(url,onLoad,onProgress,onError){var scope=this;var images=[];var texture=new CompressedTexture();texture.image=images;var loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setResponseType('arraybuffer');function loadTexture(i){loader.load(url[i],function(buffer){var texDatas=scope._parser(buffer,true);images[i]={width:texDatas.width,height:texDatas.height,format:texDatas.format,mipmaps:texDatas.mipmaps};loaded+=1;if(loaded===6){if(texDatas.mipmapCount===1)texture.minFilter=LinearFilter;texture.format=texDatas.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);}},onProgress,onError);}if(Array.isArray(url)){var loaded=0;for(var i=0,il=url.length;i<il;++i){loadTexture(i);}}else{// compressed cubemap texture stored in a single DDS file\nloader.load(url,function(buffer){var texDatas=scope._parser(buffer,true);if(texDatas.isCubemap){var faces=texDatas.mipmaps.length/texDatas.mipmapCount;for(var f=0;f<faces;f++){images[f]={mipmaps:[]};for(var i=0;i<texDatas.mipmapCount;i++){images[f].mipmaps.push(texDatas.mipmaps[f*texDatas.mipmapCount+i]);images[f].format=texDatas.format;images[f].width=texDatas.width;images[f].height=texDatas.height;}}}else{texture.image.width=texDatas.width;texture.image.height=texDatas.height;texture.mipmaps=texDatas.mipmaps;}if(texDatas.mipmapCount===1){texture.minFilter=LinearFilter;}texture.format=texDatas.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);},onProgress,onError);}return texture;},setPath:function(value){this.path=value;return this;}});/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t */function DataTextureLoader(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;// override in sub classes\nthis._parser=null;}Object.assign(DataTextureLoader.prototype,{load:function(url,onLoad,onProgress,onError){var scope=this;var texture=new DataTexture();var loader=new FileLoader(this.manager);loader.setResponseType('arraybuffer');loader.setPath(this.path);loader.load(url,function(buffer){var texData=scope._parser(buffer);if(!texData)return;if(texData.image!==undefined){texture.image=texData.image;}else if(texData.data!==undefined){texture.image.width=texData.width;texture.image.height=texData.height;texture.image.data=texData.data;}texture.wrapS=texData.wrapS!==undefined?texData.wrapS:ClampToEdgeWrapping;texture.wrapT=texData.wrapT!==undefined?texData.wrapT:ClampToEdgeWrapping;texture.magFilter=texData.magFilter!==undefined?texData.magFilter:LinearFilter;texture.minFilter=texData.minFilter!==undefined?texData.minFilter:LinearMipMapLinearFilter;texture.anisotropy=texData.anisotropy!==undefined?texData.anisotropy:1;if(texData.format!==undefined){texture.format=texData.format;}if(texData.type!==undefined){texture.type=texData.type;}if(texData.mipmaps!==undefined){texture.mipmaps=texData.mipmaps;}if(texData.mipmapCount===1){texture.minFilter=LinearFilter;}texture.needsUpdate=true;if(onLoad)onLoad(texture,texData);},onProgress,onError);return texture;},setPath:function(value){this.path=value;return this;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function ImageLoader(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;}Object.assign(ImageLoader.prototype,{crossOrigin:'anonymous',load:function(url,onLoad,onProgress,onError){if(url===undefined)url='';if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);var scope=this;var cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}var image=document.createElementNS('http://www.w3.org/1999/xhtml','img');function onImageLoad(){image.removeEventListener('load',onImageLoad,false);image.removeEventListener('error',onImageError,false);Cache.add(url,this);if(onLoad)onLoad(this);scope.manager.itemEnd(url);}function onImageError(event){image.removeEventListener('load',onImageLoad,false);image.removeEventListener('error',onImageError,false);if(onError)onError(event);scope.manager.itemError(url);scope.manager.itemEnd(url);}image.addEventListener('load',onImageLoad,false);image.addEventListener('error',onImageError,false);if(url.substr(0,5)!=='data:'){if(this.crossOrigin!==undefined)image.crossOrigin=this.crossOrigin;}scope.manager.itemStart(url);image.src=url;return image;},setCrossOrigin:function(value){this.crossOrigin=value;return this;},setPath:function(value){this.path=value;return this;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function CubeTextureLoader(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;}Object.assign(CubeTextureLoader.prototype,{crossOrigin:'anonymous',load:function(urls,onLoad,onProgress,onError){var texture=new CubeTexture();var loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);var loaded=0;function loadTexture(i){loader.load(urls[i],function(image){texture.images[i]=image;loaded++;if(loaded===6){texture.needsUpdate=true;if(onLoad)onLoad(texture);}},undefined,onError);}for(var i=0;i<urls.length;++i){loadTexture(i);}return texture;},setCrossOrigin:function(value){this.crossOrigin=value;return this;},setPath:function(value){this.path=value;return this;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function TextureLoader(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;}Object.assign(TextureLoader.prototype,{crossOrigin:'anonymous',load:function(url,onLoad,onProgress,onError){var texture=new Texture();var loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);loader.load(url,function(image){texture.image=image;// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\nvar isJPEG=url.search(/\\.jpe?g($|\\?)/i)>0||url.search(/^data\\:image\\/jpeg/)===0;texture.format=isJPEG?RGBFormat:RGBAFormat;texture.needsUpdate=true;if(onLoad!==undefined){onLoad(texture);}},onProgress,onError);return texture;},setCrossOrigin:function(value){this.crossOrigin=value;return this;},setPath:function(value){this.path=value;return this;}});/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of curve methods:\n\t * .getPoint( t, optionalTarget ), .getTangent( t )\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/ /**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/function Curve(){this.type='Curve';this.arcLengthDivisions=200;}Object.assign(Curve.prototype,{// Virtual base class method to overwrite and implement in subclasses\n//\t- t [0 .. 1]\ngetPoint:function()/* t, optionalTarget */{console.warn('THREE.Curve: .getPoint() not implemented.');return null;},// Get point at relative position in curve according to arc length\n// - u [0 .. 1]\ngetPointAt:function(u,optionalTarget){var t=this.getUtoTmapping(u);return this.getPoint(t,optionalTarget);},// Get sequence of points using getPoint( t )\ngetPoints:function(divisions){if(divisions===undefined)divisions=5;var points=[];for(var d=0;d<=divisions;d++){points.push(this.getPoint(d/divisions));}return points;},// Get sequence of points using getPointAt( u )\ngetSpacedPoints:function(divisions){if(divisions===undefined)divisions=5;var points=[];for(var d=0;d<=divisions;d++){points.push(this.getPointAt(d/divisions));}return points;},// Get total curve arc length\ngetLength:function(){var lengths=this.getLengths();return lengths[lengths.length-1];},// Get list of cumulative segment lengths\ngetLengths:function(divisions){if(divisions===undefined)divisions=this.arcLengthDivisions;if(this.cacheArcLengths&&this.cacheArcLengths.length===divisions+1&&!this.needsUpdate){return this.cacheArcLengths;}this.needsUpdate=false;var cache=[];var current,last=this.getPoint(0);var p,sum=0;cache.push(0);for(p=1;p<=divisions;p++){current=this.getPoint(p/divisions);sum+=current.distanceTo(last);cache.push(sum);last=current;}this.cacheArcLengths=cache;return cache;// { sums: cache, sum: sum }; Sum is in the last element.\n},updateArcLengths:function(){this.needsUpdate=true;this.getLengths();},// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\ngetUtoTmapping:function(u,distance){var arcLengths=this.getLengths();var i=0,il=arcLengths.length;var targetArcLength;// The targeted u distance value to get\nif(distance){targetArcLength=distance;}else{targetArcLength=u*arcLengths[il-1];}// binary search for the index with largest value smaller than target u distance\nvar low=0,high=il-1,comparison;while(low<=high){i=Math.floor(low+(high-low)/2);// less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\ncomparison=arcLengths[i]-targetArcLength;if(comparison<0){low=i+1;}else if(comparison>0){high=i-1;}else{high=i;break;// DONE\n}}i=high;if(arcLengths[i]===targetArcLength){return i/(il-1);}// we could get finer grain at lengths, or use simple interpolation between two points\nvar lengthBefore=arcLengths[i];var lengthAfter=arcLengths[i+1];var segmentLength=lengthAfter-lengthBefore;// determine where we are between the 'before' and 'after' points\nvar segmentFraction=(targetArcLength-lengthBefore)/segmentLength;// add that fractional amount to t\nvar t=(i+segmentFraction)/(il-1);return t;},// Returns a unit vector tangent at t\n// In case any sub curve does not implement its tangent derivation,\n// 2 points a small delta apart will be used to find its gradient\n// which seems to give a reasonable approximation\ngetTangent:function(t){var delta=0.0001;var t1=t-delta;var t2=t+delta;// Capping in case of danger\nif(t1<0)t1=0;if(t2>1)t2=1;var pt1=this.getPoint(t1);var pt2=this.getPoint(t2);var vec=pt2.clone().sub(pt1);return vec.normalize();},getTangentAt:function(u){var t=this.getUtoTmapping(u);return this.getTangent(t);},computeFrenetFrames:function(segments,closed){// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\nvar normal=new Vector3();var tangents=[];var normals=[];var binormals=[];var vec=new Vector3();var mat=new Matrix4();var i,u,theta;// compute the tangent vectors for each segment on the curve\nfor(i=0;i<=segments;i++){u=i/segments;tangents[i]=this.getTangentAt(u);tangents[i].normalize();}// select an initial normal vector perpendicular to the first tangent vector,\n// and in the direction of the minimum tangent xyz component\nnormals[0]=new Vector3();binormals[0]=new Vector3();var min=Number.MAX_VALUE;var tx=Math.abs(tangents[0].x);var ty=Math.abs(tangents[0].y);var tz=Math.abs(tangents[0].z);if(tx<=min){min=tx;normal.set(1,0,0);}if(ty<=min){min=ty;normal.set(0,1,0);}if(tz<=min){normal.set(0,0,1);}vec.crossVectors(tangents[0],normal).normalize();normals[0].crossVectors(tangents[0],vec);binormals[0].crossVectors(tangents[0],normals[0]);// compute the slowly-varying normal and binormal vectors for each segment on the curve\nfor(i=1;i<=segments;i++){normals[i]=normals[i-1].clone();binormals[i]=binormals[i-1].clone();vec.crossVectors(tangents[i-1],tangents[i]);if(vec.length()>Number.EPSILON){vec.normalize();theta=Math.acos(_Math.clamp(tangents[i-1].dot(tangents[i]),-1,1));// clamp for floating pt errors\nnormals[i].applyMatrix4(mat.makeRotationAxis(vec,theta));}binormals[i].crossVectors(tangents[i],normals[i]);}// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\nif(closed===true){theta=Math.acos(_Math.clamp(normals[0].dot(normals[segments]),-1,1));theta/=segments;if(tangents[0].dot(vec.crossVectors(normals[0],normals[segments]))>0){theta=-theta;}for(i=1;i<=segments;i++){// twist a little...\nnormals[i].applyMatrix4(mat.makeRotationAxis(tangents[i],theta*i));binormals[i].crossVectors(tangents[i],normals[i]);}}return{tangents:tangents,normals:normals,binormals:binormals};},clone:function(){return new this.constructor().copy(this);},copy:function(source){this.arcLengthDivisions=source.arcLengthDivisions;return this;},toJSON:function(){var data={metadata:{version:4.5,type:'Curve',generator:'Curve.toJSON'}};data.arcLengthDivisions=this.arcLengthDivisions;data.type=this.type;return data;},fromJSON:function(json){this.arcLengthDivisions=json.arcLengthDivisions;return this;}});function EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){Curve.call(this);this.type='EllipseCurve';this.aX=aX||0;this.aY=aY||0;this.xRadius=xRadius||1;this.yRadius=yRadius||1;this.aStartAngle=aStartAngle||0;this.aEndAngle=aEndAngle||2*Math.PI;this.aClockwise=aClockwise||false;this.aRotation=aRotation||0;}EllipseCurve.prototype=Object.create(Curve.prototype);EllipseCurve.prototype.constructor=EllipseCurve;EllipseCurve.prototype.isEllipseCurve=true;EllipseCurve.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector2();var twoPi=Math.PI*2;var deltaAngle=this.aEndAngle-this.aStartAngle;var samePoints=Math.abs(deltaAngle)<Number.EPSILON;// ensures that deltaAngle is 0 .. 2 PI\nwhile(deltaAngle<0)deltaAngle+=twoPi;while(deltaAngle>twoPi)deltaAngle-=twoPi;if(deltaAngle<Number.EPSILON){if(samePoints){deltaAngle=0;}else{deltaAngle=twoPi;}}if(this.aClockwise===true&&!samePoints){if(deltaAngle===twoPi){deltaAngle=-twoPi;}else{deltaAngle=deltaAngle-twoPi;}}var angle=this.aStartAngle+t*deltaAngle;var x=this.aX+this.xRadius*Math.cos(angle);var y=this.aY+this.yRadius*Math.sin(angle);if(this.aRotation!==0){var cos=Math.cos(this.aRotation);var sin=Math.sin(this.aRotation);var tx=x-this.aX;var ty=y-this.aY;// Rotate the point about the center of the ellipse.\nx=tx*cos-ty*sin+this.aX;y=tx*sin+ty*cos+this.aY;}return point.set(x,y);};EllipseCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.aX=source.aX;this.aY=source.aY;this.xRadius=source.xRadius;this.yRadius=source.yRadius;this.aStartAngle=source.aStartAngle;this.aEndAngle=source.aEndAngle;this.aClockwise=source.aClockwise;this.aRotation=source.aRotation;return this;};EllipseCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.aX=this.aX;data.aY=this.aY;data.xRadius=this.xRadius;data.yRadius=this.yRadius;data.aStartAngle=this.aStartAngle;data.aEndAngle=this.aEndAngle;data.aClockwise=this.aClockwise;data.aRotation=this.aRotation;return data;};EllipseCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.aX=json.aX;this.aY=json.aY;this.xRadius=json.xRadius;this.yRadius=json.yRadius;this.aStartAngle=json.aStartAngle;this.aEndAngle=json.aEndAngle;this.aClockwise=json.aClockwise;this.aRotation=json.aRotation;return this;};function ArcCurve(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){EllipseCurve.call(this,aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);this.type='ArcCurve';}ArcCurve.prototype=Object.create(EllipseCurve.prototype);ArcCurve.prototype.constructor=ArcCurve;ArcCurve.prototype.isArcCurve=true;/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */ /*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/function CubicPoly(){var c0=0,c1=0,c2=0,c3=0;/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */function init(x0,x1,t0,t1){c0=x0;c1=t0;c2=-3*x0+3*x1-2*t0-t1;c3=2*x0-2*x1+t0+t1;}return{initCatmullRom:function(x0,x1,x2,x3,tension){init(x1,x2,tension*(x2-x0),tension*(x3-x1));},initNonuniformCatmullRom:function(x0,x1,x2,x3,dt0,dt1,dt2){// compute tangents when parameterized in [t1,t2]\nvar t1=(x1-x0)/dt0-(x2-x0)/(dt0+dt1)+(x2-x1)/dt1;var t2=(x2-x1)/dt1-(x3-x1)/(dt1+dt2)+(x3-x2)/dt2;// rescale tangents for parametrization in [0,1]\nt1*=dt1;t2*=dt1;init(x1,x2,t1,t2);},calc:function(t){var t2=t*t;var t3=t2*t;return c0+c1*t+c2*t2+c3*t3;}};}//\nvar tmp=new Vector3();var px=new CubicPoly(),py=new CubicPoly(),pz=new CubicPoly();function CatmullRomCurve3(points,closed,curveType,tension){Curve.call(this);this.type='CatmullRomCurve3';this.points=points||[];this.closed=closed||false;this.curveType=curveType||'centripetal';this.tension=tension||0.5;}CatmullRomCurve3.prototype=Object.create(Curve.prototype);CatmullRomCurve3.prototype.constructor=CatmullRomCurve3;CatmullRomCurve3.prototype.isCatmullRomCurve3=true;CatmullRomCurve3.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector3();var points=this.points;var l=points.length;var p=(l-(this.closed?0:1))*t;var intPoint=Math.floor(p);var weight=p-intPoint;if(this.closed){intPoint+=intPoint>0?0:(Math.floor(Math.abs(intPoint)/l)+1)*l;}else if(weight===0&&intPoint===l-1){intPoint=l-2;weight=1;}var p0,p1,p2,p3;// 4 points\nif(this.closed||intPoint>0){p0=points[(intPoint-1)%l];}else{// extrapolate first point\ntmp.subVectors(points[0],points[1]).add(points[0]);p0=tmp;}p1=points[intPoint%l];p2=points[(intPoint+1)%l];if(this.closed||intPoint+2<l){p3=points[(intPoint+2)%l];}else{// extrapolate last point\ntmp.subVectors(points[l-1],points[l-2]).add(points[l-1]);p3=tmp;}if(this.curveType==='centripetal'||this.curveType==='chordal'){// init Centripetal / Chordal Catmull-Rom\nvar pow=this.curveType==='chordal'?0.5:0.25;var dt0=Math.pow(p0.distanceToSquared(p1),pow);var dt1=Math.pow(p1.distanceToSquared(p2),pow);var dt2=Math.pow(p2.distanceToSquared(p3),pow);// safety check for repeated points\nif(dt1<1e-4)dt1=1.0;if(dt0<1e-4)dt0=dt1;if(dt2<1e-4)dt2=dt1;px.initNonuniformCatmullRom(p0.x,p1.x,p2.x,p3.x,dt0,dt1,dt2);py.initNonuniformCatmullRom(p0.y,p1.y,p2.y,p3.y,dt0,dt1,dt2);pz.initNonuniformCatmullRom(p0.z,p1.z,p2.z,p3.z,dt0,dt1,dt2);}else if(this.curveType==='catmullrom'){px.initCatmullRom(p0.x,p1.x,p2.x,p3.x,this.tension);py.initCatmullRom(p0.y,p1.y,p2.y,p3.y,this.tension);pz.initCatmullRom(p0.z,p1.z,p2.z,p3.z,this.tension);}point.set(px.calc(weight),py.calc(weight),pz.calc(weight));return point;};CatmullRomCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.points=[];for(var i=0,l=source.points.length;i<l;i++){var point=source.points[i];this.points.push(point.clone());}this.closed=source.closed;this.curveType=source.curveType;this.tension=source.tension;return this;};CatmullRomCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.points=[];for(var i=0,l=this.points.length;i<l;i++){var point=this.points[i];data.points.push(point.toArray());}data.closed=this.closed;data.curveType=this.curveType;data.tension=this.tension;return data;};CatmullRomCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.points=[];for(var i=0,l=json.points.length;i<l;i++){var point=json.points[i];this.points.push(new Vector3().fromArray(point));}this.closed=json.closed;this.curveType=json.curveType;this.tension=json.tension;return this;};/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */function CatmullRom(t,p0,p1,p2,p3){var v0=(p2-p0)*0.5;var v1=(p3-p1)*0.5;var t2=t*t;var t3=t*t2;return(2*p1-2*p2+v0+v1)*t3+(-3*p1+3*p2-2*v0-v1)*t2+v0*t+p1;}//\nfunction QuadraticBezierP0(t,p){var k=1-t;return k*k*p;}function QuadraticBezierP1(t,p){return 2*(1-t)*t*p;}function QuadraticBezierP2(t,p){return t*t*p;}function QuadraticBezier(t,p0,p1,p2){return QuadraticBezierP0(t,p0)+QuadraticBezierP1(t,p1)+QuadraticBezierP2(t,p2);}//\nfunction CubicBezierP0(t,p){var k=1-t;return k*k*k*p;}function CubicBezierP1(t,p){var k=1-t;return 3*k*k*t*p;}function CubicBezierP2(t,p){return 3*(1-t)*t*t*p;}function CubicBezierP3(t,p){return t*t*t*p;}function CubicBezier(t,p0,p1,p2,p3){return CubicBezierP0(t,p0)+CubicBezierP1(t,p1)+CubicBezierP2(t,p2)+CubicBezierP3(t,p3);}function CubicBezierCurve(v0,v1,v2,v3){Curve.call(this);this.type='CubicBezierCurve';this.v0=v0||new Vector2();this.v1=v1||new Vector2();this.v2=v2||new Vector2();this.v3=v3||new Vector2();}CubicBezierCurve.prototype=Object.create(Curve.prototype);CubicBezierCurve.prototype.constructor=CubicBezierCurve;CubicBezierCurve.prototype.isCubicBezierCurve=true;CubicBezierCurve.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector2();var v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y));return point;};CubicBezierCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this;};CubicBezierCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data;};CubicBezierCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this;};function CubicBezierCurve3(v0,v1,v2,v3){Curve.call(this);this.type='CubicBezierCurve3';this.v0=v0||new Vector3();this.v1=v1||new Vector3();this.v2=v2||new Vector3();this.v3=v3||new Vector3();}CubicBezierCurve3.prototype=Object.create(Curve.prototype);CubicBezierCurve3.prototype.constructor=CubicBezierCurve3;CubicBezierCurve3.prototype.isCubicBezierCurve3=true;CubicBezierCurve3.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector3();var v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y),CubicBezier(t,v0.z,v1.z,v2.z,v3.z));return point;};CubicBezierCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this;};CubicBezierCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data;};CubicBezierCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this;};function LineCurve(v1,v2){Curve.call(this);this.type='LineCurve';this.v1=v1||new Vector2();this.v2=v2||new Vector2();}LineCurve.prototype=Object.create(Curve.prototype);LineCurve.prototype.constructor=LineCurve;LineCurve.prototype.isLineCurve=true;LineCurve.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector2();if(t===1){point.copy(this.v2);}else{point.copy(this.v2).sub(this.v1);point.multiplyScalar(t).add(this.v1);}return point;};// Line curve is linear, so we can overwrite default getPointAt\nLineCurve.prototype.getPointAt=function(u,optionalTarget){return this.getPoint(u,optionalTarget);};LineCurve.prototype.getTangent=function()/* t */{var tangent=this.v2.clone().sub(this.v1);return tangent.normalize();};LineCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;};LineCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;};LineCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;};function LineCurve3(v1,v2){Curve.call(this);this.type='LineCurve3';this.v1=v1||new Vector3();this.v2=v2||new Vector3();}LineCurve3.prototype=Object.create(Curve.prototype);LineCurve3.prototype.constructor=LineCurve3;LineCurve3.prototype.isLineCurve3=true;LineCurve3.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector3();if(t===1){point.copy(this.v2);}else{point.copy(this.v2).sub(this.v1);point.multiplyScalar(t).add(this.v1);}return point;};// Line curve is linear, so we can overwrite default getPointAt\nLineCurve3.prototype.getPointAt=function(u,optionalTarget){return this.getPoint(u,optionalTarget);};LineCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;};LineCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;};LineCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;};function QuadraticBezierCurve(v0,v1,v2){Curve.call(this);this.type='QuadraticBezierCurve';this.v0=v0||new Vector2();this.v1=v1||new Vector2();this.v2=v2||new Vector2();}QuadraticBezierCurve.prototype=Object.create(Curve.prototype);QuadraticBezierCurve.prototype.constructor=QuadraticBezierCurve;QuadraticBezierCurve.prototype.isQuadraticBezierCurve=true;QuadraticBezierCurve.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector2();var v0=this.v0,v1=this.v1,v2=this.v2;point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y));return point;};QuadraticBezierCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;};QuadraticBezierCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;};QuadraticBezierCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;};function QuadraticBezierCurve3(v0,v1,v2){Curve.call(this);this.type='QuadraticBezierCurve3';this.v0=v0||new Vector3();this.v1=v1||new Vector3();this.v2=v2||new Vector3();}QuadraticBezierCurve3.prototype=Object.create(Curve.prototype);QuadraticBezierCurve3.prototype.constructor=QuadraticBezierCurve3;QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=true;QuadraticBezierCurve3.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector3();var v0=this.v0,v1=this.v1,v2=this.v2;point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y),QuadraticBezier(t,v0.z,v1.z,v2.z));return point;};QuadraticBezierCurve3.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;};QuadraticBezierCurve3.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;};QuadraticBezierCurve3.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;};function SplineCurve(points/* array of Vector2 */){Curve.call(this);this.type='SplineCurve';this.points=points||[];}SplineCurve.prototype=Object.create(Curve.prototype);SplineCurve.prototype.constructor=SplineCurve;SplineCurve.prototype.isSplineCurve=true;SplineCurve.prototype.getPoint=function(t,optionalTarget){var point=optionalTarget||new Vector2();var points=this.points;var p=(points.length-1)*t;var intPoint=Math.floor(p);var weight=p-intPoint;var p0=points[intPoint===0?intPoint:intPoint-1];var p1=points[intPoint];var p2=points[intPoint>points.length-2?points.length-1:intPoint+1];var p3=points[intPoint>points.length-3?points.length-1:intPoint+2];point.set(CatmullRom(weight,p0.x,p1.x,p2.x,p3.x),CatmullRom(weight,p0.y,p1.y,p2.y,p3.y));return point;};SplineCurve.prototype.copy=function(source){Curve.prototype.copy.call(this,source);this.points=[];for(var i=0,l=source.points.length;i<l;i++){var point=source.points[i];this.points.push(point.clone());}return this;};SplineCurve.prototype.toJSON=function(){var data=Curve.prototype.toJSON.call(this);data.points=[];for(var i=0,l=this.points.length;i<l;i++){var point=this.points[i];data.points.push(point.toArray());}return data;};SplineCurve.prototype.fromJSON=function(json){Curve.prototype.fromJSON.call(this,json);this.points=[];for(var i=0,l=json.points.length;i<l;i++){var point=json.points[i];this.points.push(new Vector2().fromArray(point));}return this;};var Curves=/*#__PURE__*/Object.freeze({ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve});/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/ /**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/function CurvePath(){Curve.call(this);this.type='CurvePath';this.curves=[];this.autoClose=false;// Automatically closes the path\n}CurvePath.prototype=Object.assign(Object.create(Curve.prototype),{constructor:CurvePath,add:function(curve){this.curves.push(curve);},closePath:function(){// Add a line curve if start and end of lines are not connected\nvar startPoint=this.curves[0].getPoint(0);var endPoint=this.curves[this.curves.length-1].getPoint(1);if(!startPoint.equals(endPoint)){this.curves.push(new LineCurve(endPoint,startPoint));}},// To get accurate point with reference to\n// entire path distance at time t,\n// following has to be done:\n// 1. Length of each sub path have to be known\n// 2. Locate and identify type of curve\n// 3. Get t for the curve\n// 4. Return curve.getPointAt(t')\ngetPoint:function(t){var d=t*this.getLength();var curveLengths=this.getCurveLengths();var i=0;// To think about boundaries points.\nwhile(i<curveLengths.length){if(curveLengths[i]>=d){var diff=curveLengths[i]-d;var curve=this.curves[i];var segmentLength=curve.getLength();var u=segmentLength===0?0:1-diff/segmentLength;return curve.getPointAt(u);}i++;}return null;// loop where sum != 0, sum > d , sum+1 <d\n},// We cannot use the default THREE.Curve getPoint() with getLength() because in\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n// getPoint() depends on getLength\ngetLength:function(){var lens=this.getCurveLengths();return lens[lens.length-1];},// cacheLengths must be recalculated.\nupdateArcLengths:function(){this.needsUpdate=true;this.cacheLengths=null;this.getCurveLengths();},// Compute lengths and cache them\n// We cannot overwrite getLengths() because UtoT mapping uses it.\ngetCurveLengths:function(){// We use cache values if curves and cache array are same length\nif(this.cacheLengths&&this.cacheLengths.length===this.curves.length){return this.cacheLengths;}// Get length of sub-curve\n// Push sums into cached array\nvar lengths=[],sums=0;for(var i=0,l=this.curves.length;i<l;i++){sums+=this.curves[i].getLength();lengths.push(sums);}this.cacheLengths=lengths;return lengths;},getSpacedPoints:function(divisions){if(divisions===undefined)divisions=40;var points=[];for(var i=0;i<=divisions;i++){points.push(this.getPoint(i/divisions));}if(this.autoClose){points.push(points[0]);}return points;},getPoints:function(divisions){divisions=divisions||12;var points=[],last;for(var i=0,curves=this.curves;i<curves.length;i++){var curve=curves[i];var resolution=curve&&curve.isEllipseCurve?divisions*2:curve&&(curve.isLineCurve||curve.isLineCurve3)?1:curve&&curve.isSplineCurve?divisions*curve.points.length:divisions;var pts=curve.getPoints(resolution);for(var j=0;j<pts.length;j++){var point=pts[j];if(last&&last.equals(point))continue;// ensures no consecutive points are duplicates\npoints.push(point);last=point;}}if(this.autoClose&&points.length>1&&!points[points.length-1].equals(points[0])){points.push(points[0]);}return points;},copy:function(source){Curve.prototype.copy.call(this,source);this.curves=[];for(var i=0,l=source.curves.length;i<l;i++){var curve=source.curves[i];this.curves.push(curve.clone());}this.autoClose=source.autoClose;return this;},toJSON:function(){var data=Curve.prototype.toJSON.call(this);data.autoClose=this.autoClose;data.curves=[];for(var i=0,l=this.curves.length;i<l;i++){var curve=this.curves[i];data.curves.push(curve.toJSON());}return data;},fromJSON:function(json){Curve.prototype.fromJSON.call(this,json);this.autoClose=json.autoClose;this.curves=[];for(var i=0,l=json.curves.length;i<l;i++){var curve=json.curves[i];this.curves.push(new Curves[curve.type]().fromJSON(curve));}return this;}});/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t **/function Path(points){CurvePath.call(this);this.type='Path';this.currentPoint=new Vector2();if(points){this.setFromPoints(points);}}Path.prototype=Object.assign(Object.create(CurvePath.prototype),{constructor:Path,setFromPoints:function(points){this.moveTo(points[0].x,points[0].y);for(var i=1,l=points.length;i<l;i++){this.lineTo(points[i].x,points[i].y);}},moveTo:function(x,y){this.currentPoint.set(x,y);// TODO consider referencing vectors instead of copying?\n},lineTo:function(x,y){var curve=new LineCurve(this.currentPoint.clone(),new Vector2(x,y));this.curves.push(curve);this.currentPoint.set(x,y);},quadraticCurveTo:function(aCPx,aCPy,aX,aY){var curve=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(aCPx,aCPy),new Vector2(aX,aY));this.curves.push(curve);this.currentPoint.set(aX,aY);},bezierCurveTo:function(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){var curve=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(aCP1x,aCP1y),new Vector2(aCP2x,aCP2y),new Vector2(aX,aY));this.curves.push(curve);this.currentPoint.set(aX,aY);},splineThru:function(pts/*Array of Vector*/){var npts=[this.currentPoint.clone()].concat(pts);var curve=new SplineCurve(npts);this.curves.push(curve);this.currentPoint.copy(pts[pts.length-1]);},arc:function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){var x0=this.currentPoint.x;var y0=this.currentPoint.y;this.absarc(aX+x0,aY+y0,aRadius,aStartAngle,aEndAngle,aClockwise);},absarc:function(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absellipse(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);},ellipse:function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){var x0=this.currentPoint.x;var y0=this.currentPoint.y;this.absellipse(aX+x0,aY+y0,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);},absellipse:function(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){var curve=new EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);if(this.curves.length>0){// if a previous curve is present, attempt to join\nvar firstPoint=curve.getPoint(0);if(!firstPoint.equals(this.currentPoint)){this.lineTo(firstPoint.x,firstPoint.y);}}this.curves.push(curve);var lastPoint=curve.getPoint(1);this.currentPoint.copy(lastPoint);},copy:function(source){CurvePath.prototype.copy.call(this,source);this.currentPoint.copy(source.currentPoint);return this;},toJSON:function(){var data=CurvePath.prototype.toJSON.call(this);data.currentPoint=this.currentPoint.toArray();return data;},fromJSON:function(json){CurvePath.prototype.fromJSON.call(this,json);this.currentPoint.fromArray(json.currentPoint);return this;}});/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/ // STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\nfunction Shape(points){Path.call(this,points);this.uuid=_Math.generateUUID();this.type='Shape';this.holes=[];}Shape.prototype=Object.assign(Object.create(Path.prototype),{constructor:Shape,getPointsHoles:function(divisions){var holesPts=[];for(var i=0,l=this.holes.length;i<l;i++){holesPts[i]=this.holes[i].getPoints(divisions);}return holesPts;},// get points of shape and holes (keypoints based on segments parameter)\nextractPoints:function(divisions){return{shape:this.getPoints(divisions),holes:this.getPointsHoles(divisions)};},copy:function(source){Path.prototype.copy.call(this,source);this.holes=[];for(var i=0,l=source.holes.length;i<l;i++){var hole=source.holes[i];this.holes.push(hole.clone());}return this;},toJSON:function(){var data=Path.prototype.toJSON.call(this);data.uuid=this.uuid;data.holes=[];for(var i=0,l=this.holes.length;i<l;i++){var hole=this.holes[i];data.holes.push(hole.toJSON());}return data;},fromJSON:function(json){Path.prototype.fromJSON.call(this,json);this.uuid=json.uuid;this.holes=[];for(var i=0,l=json.holes.length;i<l;i++){var hole=json.holes[i];this.holes.push(new Path().fromJSON(hole));}return this;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */function Light(color,intensity){Object3D.call(this);this.type='Light';this.color=new Color(color);this.intensity=intensity!==undefined?intensity:1;this.receiveShadow=undefined;}Light.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Light,isLight:true,copy:function(source){Object3D.prototype.copy.call(this,source);this.color.copy(source.color);this.intensity=source.intensity;return this;},toJSON:function(meta){var data=Object3D.prototype.toJSON.call(this,meta);data.object.color=this.color.getHex();data.object.intensity=this.intensity;if(this.groundColor!==undefined)data.object.groundColor=this.groundColor.getHex();if(this.distance!==undefined)data.object.distance=this.distance;if(this.angle!==undefined)data.object.angle=this.angle;if(this.decay!==undefined)data.object.decay=this.decay;if(this.penumbra!==undefined)data.object.penumbra=this.penumbra;if(this.shadow!==undefined)data.object.shadow=this.shadow.toJSON();return data;}});/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */function HemisphereLight(skyColor,groundColor,intensity){Light.call(this,skyColor,intensity);this.type='HemisphereLight';this.castShadow=undefined;this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.groundColor=new Color(groundColor);}HemisphereLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:HemisphereLight,isHemisphereLight:true,copy:function(source){Light.prototype.copy.call(this,source);this.groundColor.copy(source.groundColor);return this;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function LightShadow(camera){this.camera=camera;this.bias=0;this.radius=1;this.mapSize=new Vector2(512,512);this.map=null;this.matrix=new Matrix4();}Object.assign(LightShadow.prototype,{copy:function(source){this.camera=source.camera.clone();this.bias=source.bias;this.radius=source.radius;this.mapSize.copy(source.mapSize);return this;},clone:function(){return new this.constructor().copy(this);},toJSON:function(){var object={};if(this.bias!==0)object.bias=this.bias;if(this.radius!==1)object.radius=this.radius;if(this.mapSize.x!==512||this.mapSize.y!==512)object.mapSize=this.mapSize.toArray();object.camera=this.camera.toJSON(false).object;delete object.camera.matrix;return object;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function SpotLightShadow(){LightShadow.call(this,new PerspectiveCamera(50,1,0.5,500));}SpotLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:SpotLightShadow,isSpotLightShadow:true,update:function(light){var camera=this.camera;var fov=_Math.RAD2DEG*2*light.angle;var aspect=this.mapSize.width/this.mapSize.height;var far=light.distance||camera.far;if(fov!==camera.fov||aspect!==camera.aspect||far!==camera.far){camera.fov=fov;camera.aspect=aspect;camera.far=far;camera.updateProjectionMatrix();}}});/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */function SpotLight(color,intensity,distance,angle,penumbra,decay){Light.call(this,color,intensity);this.type='SpotLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D();Object.defineProperty(this,'power',{get:function(){// intensity = power per solid angle.\n// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nreturn this.intensity*Math.PI;},set:function(power){// intensity = power per solid angle.\n// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nthis.intensity=power/Math.PI;}});this.distance=distance!==undefined?distance:0;this.angle=angle!==undefined?angle:Math.PI/3;this.penumbra=penumbra!==undefined?penumbra:0;this.decay=decay!==undefined?decay:1;// for physically correct lights, should be 2.\nthis.shadow=new SpotLightShadow();}SpotLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:SpotLight,isSpotLight:true,copy:function(source){Light.prototype.copy.call(this,source);this.distance=source.distance;this.angle=source.angle;this.penumbra=source.penumbra;this.decay=source.decay;this.target=source.target.clone();this.shadow=source.shadow.clone();return this;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function PointLight(color,intensity,distance,decay){Light.call(this,color,intensity);this.type='PointLight';Object.defineProperty(this,'power',{get:function(){// intensity = power per solid angle.\n// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nreturn this.intensity*4*Math.PI;},set:function(power){// intensity = power per solid angle.\n// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\nthis.intensity=power/(4*Math.PI);}});this.distance=distance!==undefined?distance:0;this.decay=decay!==undefined?decay:1;// for physically correct lights, should be 2.\nthis.shadow=new LightShadow(new PerspectiveCamera(90,1,0.5,500));}PointLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:PointLight,isPointLight:true,copy:function(source){Light.prototype.copy.call(this,source);this.distance=source.distance;this.decay=source.decay;this.shadow=source.shadow.clone();return this;}});/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */function OrthographicCamera(left,right,top,bottom,near,far){Camera.call(this);this.type='OrthographicCamera';this.zoom=1;this.view=null;this.left=left!==undefined?left:-1;this.right=right!==undefined?right:1;this.top=top!==undefined?top:1;this.bottom=bottom!==undefined?bottom:-1;this.near=near!==undefined?near:0.1;this.far=far!==undefined?far:2000;this.updateProjectionMatrix();}OrthographicCamera.prototype=Object.assign(Object.create(Camera.prototype),{constructor:OrthographicCamera,isOrthographicCamera:true,copy:function(source,recursive){Camera.prototype.copy.call(this,source,recursive);this.left=source.left;this.right=source.right;this.top=source.top;this.bottom=source.bottom;this.near=source.near;this.far=source.far;this.zoom=source.zoom;this.view=source.view===null?null:Object.assign({},source.view);return this;},setViewOffset:function(fullWidth,fullHeight,x,y,width,height){if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1};}this.view.enabled=true;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix();},clearViewOffset:function(){if(this.view!==null){this.view.enabled=false;}this.updateProjectionMatrix();},updateProjectionMatrix:function(){var dx=(this.right-this.left)/(2*this.zoom);var dy=(this.top-this.bottom)/(2*this.zoom);var cx=(this.right+this.left)/2;var cy=(this.top+this.bottom)/2;var left=cx-dx;var right=cx+dx;var top=cy+dy;var bottom=cy-dy;if(this.view!==null&&this.view.enabled){var zoomW=this.zoom/(this.view.width/this.view.fullWidth);var zoomH=this.zoom/(this.view.height/this.view.fullHeight);var scaleW=(this.right-this.left)/this.view.width;var scaleH=(this.top-this.bottom)/this.view.height;left+=scaleW*(this.view.offsetX/zoomW);right=left+scaleW*(this.view.width/zoomW);top-=scaleH*(this.view.offsetY/zoomH);bottom=top-scaleH*(this.view.height/zoomH);}this.projectionMatrix.makeOrthographic(left,right,top,bottom,this.near,this.far);this.projectionMatrixInverse.getInverse(this.projectionMatrix);},toJSON:function(meta){var data=Object3D.prototype.toJSON.call(this,meta);data.object.zoom=this.zoom;data.object.left=this.left;data.object.right=this.right;data.object.top=this.top;data.object.bottom=this.bottom;data.object.near=this.near;data.object.far=this.far;if(this.view!==null)data.object.view=Object.assign({},this.view);return data;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function DirectionalLightShadow(){LightShadow.call(this,new OrthographicCamera(-5,5,5,-5,0.5,500));}DirectionalLightShadow.prototype=Object.assign(Object.create(LightShadow.prototype),{constructor:DirectionalLightShadow});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */function DirectionalLight(color,intensity){Light.call(this,color,intensity);this.type='DirectionalLight';this.position.copy(Object3D.DefaultUp);this.updateMatrix();this.target=new Object3D();this.shadow=new DirectionalLightShadow();}DirectionalLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:DirectionalLight,isDirectionalLight:true,copy:function(source){Light.prototype.copy.call(this,source);this.target=source.target.clone();this.shadow=source.shadow.clone();return this;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function AmbientLight(color,intensity){Light.call(this,color,intensity);this.type='AmbientLight';this.castShadow=undefined;}AmbientLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:AmbientLight,isAmbientLight:true});/**\n\t * @author abelnation / http://github.com/abelnation\n\t */function RectAreaLight(color,intensity,width,height){Light.call(this,color,intensity);this.type='RectAreaLight';this.width=width!==undefined?width:10;this.height=height!==undefined?height:10;}RectAreaLight.prototype=Object.assign(Object.create(Light.prototype),{constructor:RectAreaLight,isRectAreaLight:true,copy:function(source){Light.prototype.copy.call(this,source);this.width=source.width;this.height=source.height;return this;},toJSON:function(meta){var data=Light.prototype.toJSON.call(this,meta);data.object.width=this.width;data.object.height=this.height;return data;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function MaterialLoader(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;this.textures={};}Object.assign(MaterialLoader.prototype,{load:function(url,onLoad,onProgress,onError){var scope=this;var loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)));},onProgress,onError);},parse:function(json){var textures=this.textures;function getTexture(name){if(textures[name]===undefined){console.warn('THREE.MaterialLoader: Undefined texture',name);}return textures[name];}var material=new Materials[json.type]();if(json.uuid!==undefined)material.uuid=json.uuid;if(json.name!==undefined)material.name=json.name;if(json.color!==undefined)material.color.setHex(json.color);if(json.roughness!==undefined)material.roughness=json.roughness;if(json.metalness!==undefined)material.metalness=json.metalness;if(json.emissive!==undefined)material.emissive.setHex(json.emissive);if(json.specular!==undefined)material.specular.setHex(json.specular);if(json.shininess!==undefined)material.shininess=json.shininess;if(json.clearCoat!==undefined)material.clearCoat=json.clearCoat;if(json.clearCoatRoughness!==undefined)material.clearCoatRoughness=json.clearCoatRoughness;if(json.vertexColors!==undefined)material.vertexColors=json.vertexColors;if(json.fog!==undefined)material.fog=json.fog;if(json.flatShading!==undefined)material.flatShading=json.flatShading;if(json.blending!==undefined)material.blending=json.blending;if(json.combine!==undefined)material.combine=json.combine;if(json.side!==undefined)material.side=json.side;if(json.opacity!==undefined)material.opacity=json.opacity;if(json.transparent!==undefined)material.transparent=json.transparent;if(json.alphaTest!==undefined)material.alphaTest=json.alphaTest;if(json.depthTest!==undefined)material.depthTest=json.depthTest;if(json.depthWrite!==undefined)material.depthWrite=json.depthWrite;if(json.colorWrite!==undefined)material.colorWrite=json.colorWrite;if(json.wireframe!==undefined)material.wireframe=json.wireframe;if(json.wireframeLinewidth!==undefined)material.wireframeLinewidth=json.wireframeLinewidth;if(json.wireframeLinecap!==undefined)material.wireframeLinecap=json.wireframeLinecap;if(json.wireframeLinejoin!==undefined)material.wireframeLinejoin=json.wireframeLinejoin;if(json.rotation!==undefined)material.rotation=json.rotation;if(json.linewidth!==1)material.linewidth=json.linewidth;if(json.dashSize!==undefined)material.dashSize=json.dashSize;if(json.gapSize!==undefined)material.gapSize=json.gapSize;if(json.scale!==undefined)material.scale=json.scale;if(json.polygonOffset!==undefined)material.polygonOffset=json.polygonOffset;if(json.polygonOffsetFactor!==undefined)material.polygonOffsetFactor=json.polygonOffsetFactor;if(json.polygonOffsetUnits!==undefined)material.polygonOffsetUnits=json.polygonOffsetUnits;if(json.skinning!==undefined)material.skinning=json.skinning;if(json.morphTargets!==undefined)material.morphTargets=json.morphTargets;if(json.dithering!==undefined)material.dithering=json.dithering;if(json.visible!==undefined)material.visible=json.visible;if(json.userData!==undefined)material.userData=json.userData;// Shader Material\nif(json.uniforms!==undefined){for(var name in json.uniforms){var uniform=json.uniforms[name];material.uniforms[name]={};switch(uniform.type){case't':material.uniforms[name].value=getTexture(uniform.value);break;case'c':material.uniforms[name].value=new Color().setHex(uniform.value);break;case'v2':material.uniforms[name].value=new Vector2().fromArray(uniform.value);break;case'v3':material.uniforms[name].value=new Vector3().fromArray(uniform.value);break;case'v4':material.uniforms[name].value=new Vector4().fromArray(uniform.value);break;case'm3':material.uniforms[name].value=new Matrix3().fromArray(uniform.value);case'm4':material.uniforms[name].value=new Matrix4().fromArray(uniform.value);break;default:material.uniforms[name].value=uniform.value;}}}if(json.defines!==undefined)material.defines=json.defines;if(json.vertexShader!==undefined)material.vertexShader=json.vertexShader;if(json.fragmentShader!==undefined)material.fragmentShader=json.fragmentShader;if(json.extensions!==undefined){for(var key in json.extensions){material.extensions[key]=json.extensions[key];}}// Deprecated\nif(json.shading!==undefined)material.flatShading=json.shading===1;// THREE.FlatShading\n// for PointsMaterial\nif(json.size!==undefined)material.size=json.size;if(json.sizeAttenuation!==undefined)material.sizeAttenuation=json.sizeAttenuation;// maps\nif(json.map!==undefined)material.map=getTexture(json.map);if(json.alphaMap!==undefined){material.alphaMap=getTexture(json.alphaMap);material.transparent=true;}if(json.bumpMap!==undefined)material.bumpMap=getTexture(json.bumpMap);if(json.bumpScale!==undefined)material.bumpScale=json.bumpScale;if(json.normalMap!==undefined)material.normalMap=getTexture(json.normalMap);if(json.normalMapType!==undefined)material.normalMapType=json.normalMapType;if(json.normalScale!==undefined){var normalScale=json.normalScale;if(Array.isArray(normalScale)===false){// Blender exporter used to export a scalar. See #7459\nnormalScale=[normalScale,normalScale];}material.normalScale=new Vector2().fromArray(normalScale);}if(json.displacementMap!==undefined)material.displacementMap=getTexture(json.displacementMap);if(json.displacementScale!==undefined)material.displacementScale=json.displacementScale;if(json.displacementBias!==undefined)material.displacementBias=json.displacementBias;if(json.roughnessMap!==undefined)material.roughnessMap=getTexture(json.roughnessMap);if(json.metalnessMap!==undefined)material.metalnessMap=getTexture(json.metalnessMap);if(json.emissiveMap!==undefined)material.emissiveMap=getTexture(json.emissiveMap);if(json.emissiveIntensity!==undefined)material.emissiveIntensity=json.emissiveIntensity;if(json.specularMap!==undefined)material.specularMap=getTexture(json.specularMap);if(json.envMap!==undefined)material.envMap=getTexture(json.envMap);if(json.envMapIntensity!==undefined)material.envMapIntensity=json.envMapIntensity;if(json.reflectivity!==undefined)material.reflectivity=json.reflectivity;if(json.lightMap!==undefined)material.lightMap=getTexture(json.lightMap);if(json.lightMapIntensity!==undefined)material.lightMapIntensity=json.lightMapIntensity;if(json.aoMap!==undefined)material.aoMap=getTexture(json.aoMap);if(json.aoMapIntensity!==undefined)material.aoMapIntensity=json.aoMapIntensity;if(json.gradientMap!==undefined)material.gradientMap=getTexture(json.gradientMap);return material;},setPath:function(value){this.path=value;return this;},setTextures:function(value){this.textures=value;return this;}});/**\n\t * @author Don McCurdy / https://www.donmccurdy.com\n\t */var LoaderUtils={decodeText:function(array){if(typeof TextDecoder!=='undefined'){return new TextDecoder().decode(array);}// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n// throws a \"maximum call stack size exceeded\" error for large arrays.\nvar s='';for(var i=0,il=array.length;i<il;i++){// Implicitly assumes little-endian.\ns+=String.fromCharCode(array[i]);}// Merges multi-byte utf-8 characters.\nreturn decodeURIComponent(escape(s));},extractUrlBase:function(url){var index=url.lastIndexOf('/');if(index===-1)return'./';return url.substr(0,index+1);}};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function BufferGeometryLoader(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;}Object.assign(BufferGeometryLoader.prototype,{load:function(url,onLoad,onProgress,onError){var scope=this;var loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.load(url,function(text){onLoad(scope.parse(JSON.parse(text)));},onProgress,onError);},parse:function(json){var geometry=new BufferGeometry();var index=json.data.index;if(index!==undefined){var typedArray=new TYPED_ARRAYS[index.type](index.array);geometry.setIndex(new BufferAttribute(typedArray,1));}var attributes=json.data.attributes;for(var key in attributes){var attribute=attributes[key];var typedArray=new TYPED_ARRAYS[attribute.type](attribute.array);geometry.addAttribute(key,new BufferAttribute(typedArray,attribute.itemSize,attribute.normalized));}var groups=json.data.groups||json.data.drawcalls||json.data.offsets;if(groups!==undefined){for(var i=0,n=groups.length;i!==n;++i){var group=groups[i];geometry.addGroup(group.start,group.count,group.materialIndex);}}var boundingSphere=json.data.boundingSphere;if(boundingSphere!==undefined){var center=new Vector3();if(boundingSphere.center!==undefined){center.fromArray(boundingSphere.center);}geometry.boundingSphere=new Sphere(center,boundingSphere.radius);}if(json.name)geometry.name=json.name;if(json.userData)geometry.userData=json.userData;return geometry;},setPath:function(value){this.path=value;return this;}});var TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,// Workaround for IE11 pre KB2929437. See #11440\nUint8ClampedArray:typeof Uint8ClampedArray!=='undefined'?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function ObjectLoader(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;this.resourcePath='';}Object.assign(ObjectLoader.prototype,{crossOrigin:'anonymous',load:function(url,onLoad,onProgress,onError){var scope=this;var path=this.path===undefined?LoaderUtils.extractUrlBase(url):this.path;this.resourcePath=this.resourcePath||path;var loader=new FileLoader(scope.manager);loader.setPath(this.path);loader.load(url,function(text){var json=null;try{json=JSON.parse(text);}catch(error){if(onError!==undefined)onError(error);console.error('THREE:ObjectLoader: Can\\'t parse '+url+'.',error.message);return;}var metadata=json.metadata;if(metadata===undefined||metadata.type===undefined||metadata.type.toLowerCase()==='geometry'){console.error('THREE.ObjectLoader: Can\\'t load '+url);return;}scope.parse(json,onLoad);},onProgress,onError);},setPath:function(value){this.path=value;return this;},setResourcePath:function(value){this.resourcePath=value;return this;},setCrossOrigin:function(value){this.crossOrigin=value;return this;},parse:function(json,onLoad){var shapes=this.parseShape(json.shapes);var geometries=this.parseGeometries(json.geometries,shapes);var images=this.parseImages(json.images,function(){if(onLoad!==undefined)onLoad(object);});var textures=this.parseTextures(json.textures,images);var materials=this.parseMaterials(json.materials,textures);var object=this.parseObject(json.object,geometries,materials);if(json.animations){object.animations=this.parseAnimations(json.animations);}if(json.images===undefined||json.images.length===0){if(onLoad!==undefined)onLoad(object);}return object;},parseShape:function(json){var shapes={};if(json!==undefined){for(var i=0,l=json.length;i<l;i++){var shape=new Shape().fromJSON(json[i]);shapes[shape.uuid]=shape;}}return shapes;},parseGeometries:function(json,shapes){var geometries={};if(json!==undefined){var bufferGeometryLoader=new BufferGeometryLoader();for(var i=0,l=json.length;i<l;i++){var geometry;var data=json[i];switch(data.type){case'PlaneGeometry':case'PlaneBufferGeometry':geometry=new Geometries[data.type](data.width,data.height,data.widthSegments,data.heightSegments);break;case'BoxGeometry':case'BoxBufferGeometry':case'CubeGeometry':// backwards compatible\ngeometry=new Geometries[data.type](data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments);break;case'CircleGeometry':case'CircleBufferGeometry':geometry=new Geometries[data.type](data.radius,data.segments,data.thetaStart,data.thetaLength);break;case'CylinderGeometry':case'CylinderBufferGeometry':geometry=new Geometries[data.type](data.radiusTop,data.radiusBottom,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case'ConeGeometry':case'ConeBufferGeometry':geometry=new Geometries[data.type](data.radius,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);break;case'SphereGeometry':case'SphereBufferGeometry':geometry=new Geometries[data.type](data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength);break;case'DodecahedronGeometry':case'DodecahedronBufferGeometry':case'IcosahedronGeometry':case'IcosahedronBufferGeometry':case'OctahedronGeometry':case'OctahedronBufferGeometry':case'TetrahedronGeometry':case'TetrahedronBufferGeometry':geometry=new Geometries[data.type](data.radius,data.detail);break;case'RingGeometry':case'RingBufferGeometry':geometry=new Geometries[data.type](data.innerRadius,data.outerRadius,data.thetaSegments,data.phiSegments,data.thetaStart,data.thetaLength);break;case'TorusGeometry':case'TorusBufferGeometry':geometry=new Geometries[data.type](data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc);break;case'TorusKnotGeometry':case'TorusKnotBufferGeometry':geometry=new Geometries[data.type](data.radius,data.tube,data.tubularSegments,data.radialSegments,data.p,data.q);break;case'LatheGeometry':case'LatheBufferGeometry':geometry=new Geometries[data.type](data.points,data.segments,data.phiStart,data.phiLength);break;case'PolyhedronGeometry':case'PolyhedronBufferGeometry':geometry=new Geometries[data.type](data.vertices,data.indices,data.radius,data.details);break;case'ShapeGeometry':case'ShapeBufferGeometry':var geometryShapes=[];for(var j=0,jl=data.shapes.length;j<jl;j++){var shape=shapes[data.shapes[j]];geometryShapes.push(shape);}geometry=new Geometries[data.type](geometryShapes,data.curveSegments);break;case'ExtrudeGeometry':case'ExtrudeBufferGeometry':var geometryShapes=[];for(var j=0,jl=data.shapes.length;j<jl;j++){var shape=shapes[data.shapes[j]];geometryShapes.push(shape);}var extrudePath=data.options.extrudePath;if(extrudePath!==undefined){data.options.extrudePath=new Curves[extrudePath.type]().fromJSON(extrudePath);}geometry=new Geometries[data.type](geometryShapes,data.options);break;case'BufferGeometry':geometry=bufferGeometryLoader.parse(data);break;case'Geometry':if('THREE'in window&&'LegacyJSONLoader'in THREE){var geometryLoader=new THREE.LegacyJSONLoader();geometry=geometryLoader.parse(data,this.resourcePath).geometry;}else{console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".');}break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type \"'+data.type+'\"');continue;}geometry.uuid=data.uuid;if(data.name!==undefined)geometry.name=data.name;if(geometry.isBufferGeometry===true&&data.userData!==undefined)geometry.userData=data.userData;geometries[data.uuid]=geometry;}}return geometries;},parseMaterials:function(json,textures){var cache={};// MultiMaterial\nvar materials={};if(json!==undefined){var loader=new MaterialLoader();loader.setTextures(textures);for(var i=0,l=json.length;i<l;i++){var data=json[i];if(data.type==='MultiMaterial'){// Deprecated\nvar array=[];for(var j=0;j<data.materials.length;j++){var material=data.materials[j];if(cache[material.uuid]===undefined){cache[material.uuid]=loader.parse(material);}array.push(cache[material.uuid]);}materials[data.uuid]=array;}else{if(cache[data.uuid]===undefined){cache[data.uuid]=loader.parse(data);}materials[data.uuid]=cache[data.uuid];}}}return materials;},parseAnimations:function(json){var animations=[];for(var i=0;i<json.length;i++){var data=json[i];var clip=AnimationClip.parse(data);if(data.uuid!==undefined)clip.uuid=data.uuid;animations.push(clip);}return animations;},parseImages:function(json,onLoad){var scope=this;var images={};function loadImage(url){scope.manager.itemStart(url);return loader.load(url,function(){scope.manager.itemEnd(url);},undefined,function(){scope.manager.itemError(url);scope.manager.itemEnd(url);});}if(json!==undefined&&json.length>0){var manager=new LoadingManager(onLoad);var loader=new ImageLoader(manager);loader.setCrossOrigin(this.crossOrigin);for(var i=0,il=json.length;i<il;i++){var image=json[i];var url=image.url;if(Array.isArray(url)){// load array of images e.g CubeTexture\nimages[image.uuid]=[];for(var j=0,jl=url.length;j<jl;j++){var currentUrl=url[j];var path=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(currentUrl)?currentUrl:scope.resourcePath+currentUrl;images[image.uuid].push(loadImage(path));}}else{// load single image\nvar path=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url)?image.url:scope.resourcePath+image.url;images[image.uuid]=loadImage(path);}}}return images;},parseTextures:function(json,images){function parseConstant(value,type){if(typeof value==='number')return value;console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.',value);return type[value];}var textures={};if(json!==undefined){for(var i=0,l=json.length;i<l;i++){var data=json[i];if(data.image===undefined){console.warn('THREE.ObjectLoader: No \"image\" specified for',data.uuid);}if(images[data.image]===undefined){console.warn('THREE.ObjectLoader: Undefined image',data.image);}var texture;if(Array.isArray(images[data.image])){texture=new CubeTexture(images[data.image]);}else{texture=new Texture(images[data.image]);}texture.needsUpdate=true;texture.uuid=data.uuid;if(data.name!==undefined)texture.name=data.name;if(data.mapping!==undefined)texture.mapping=parseConstant(data.mapping,TEXTURE_MAPPING);if(data.offset!==undefined)texture.offset.fromArray(data.offset);if(data.repeat!==undefined)texture.repeat.fromArray(data.repeat);if(data.center!==undefined)texture.center.fromArray(data.center);if(data.rotation!==undefined)texture.rotation=data.rotation;if(data.wrap!==undefined){texture.wrapS=parseConstant(data.wrap[0],TEXTURE_WRAPPING);texture.wrapT=parseConstant(data.wrap[1],TEXTURE_WRAPPING);}if(data.format!==undefined)texture.format=data.format;if(data.type!==undefined)texture.type=data.type;if(data.encoding!==undefined)texture.encoding=data.encoding;if(data.minFilter!==undefined)texture.minFilter=parseConstant(data.minFilter,TEXTURE_FILTER);if(data.magFilter!==undefined)texture.magFilter=parseConstant(data.magFilter,TEXTURE_FILTER);if(data.anisotropy!==undefined)texture.anisotropy=data.anisotropy;if(data.flipY!==undefined)texture.flipY=data.flipY;if(data.premultiplyAlpha!==undefined)texture.premultiplyAlpha=data.premultiplyAlpha;if(data.unpackAlignment!==undefined)texture.unpackAlignment=data.unpackAlignment;textures[data.uuid]=texture;}}return textures;},parseObject:function(data,geometries,materials){var object;function getGeometry(name){if(geometries[name]===undefined){console.warn('THREE.ObjectLoader: Undefined geometry',name);}return geometries[name];}function getMaterial(name){if(name===undefined)return undefined;if(Array.isArray(name)){var array=[];for(var i=0,l=name.length;i<l;i++){var uuid=name[i];if(materials[uuid]===undefined){console.warn('THREE.ObjectLoader: Undefined material',uuid);}array.push(materials[uuid]);}return array;}if(materials[name]===undefined){console.warn('THREE.ObjectLoader: Undefined material',name);}return materials[name];}switch(data.type){case'Scene':object=new Scene();if(data.background!==undefined){if(Number.isInteger(data.background)){object.background=new Color(data.background);}}if(data.fog!==undefined){if(data.fog.type==='Fog'){object.fog=new Fog(data.fog.color,data.fog.near,data.fog.far);}else if(data.fog.type==='FogExp2'){object.fog=new FogExp2(data.fog.color,data.fog.density);}}break;case'PerspectiveCamera':object=new PerspectiveCamera(data.fov,data.aspect,data.near,data.far);if(data.focus!==undefined)object.focus=data.focus;if(data.zoom!==undefined)object.zoom=data.zoom;if(data.filmGauge!==undefined)object.filmGauge=data.filmGauge;if(data.filmOffset!==undefined)object.filmOffset=data.filmOffset;if(data.view!==undefined)object.view=Object.assign({},data.view);break;case'OrthographicCamera':object=new OrthographicCamera(data.left,data.right,data.top,data.bottom,data.near,data.far);if(data.zoom!==undefined)object.zoom=data.zoom;if(data.view!==undefined)object.view=Object.assign({},data.view);break;case'AmbientLight':object=new AmbientLight(data.color,data.intensity);break;case'DirectionalLight':object=new DirectionalLight(data.color,data.intensity);break;case'PointLight':object=new PointLight(data.color,data.intensity,data.distance,data.decay);break;case'RectAreaLight':object=new RectAreaLight(data.color,data.intensity,data.width,data.height);break;case'SpotLight':object=new SpotLight(data.color,data.intensity,data.distance,data.angle,data.penumbra,data.decay);break;case'HemisphereLight':object=new HemisphereLight(data.color,data.groundColor,data.intensity);break;case'SkinnedMesh':console.warn('THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.');case'Mesh':var geometry=getGeometry(data.geometry);var material=getMaterial(data.material);if(geometry.bones&&geometry.bones.length>0){object=new SkinnedMesh(geometry,material);}else{object=new Mesh(geometry,material);}if(data.drawMode!==undefined)object.setDrawMode(data.drawMode);break;case'LOD':object=new LOD();break;case'Line':object=new Line(getGeometry(data.geometry),getMaterial(data.material),data.mode);break;case'LineLoop':object=new LineLoop(getGeometry(data.geometry),getMaterial(data.material));break;case'LineSegments':object=new LineSegments(getGeometry(data.geometry),getMaterial(data.material));break;case'PointCloud':case'Points':object=new Points(getGeometry(data.geometry),getMaterial(data.material));break;case'Sprite':object=new Sprite(getMaterial(data.material));break;case'Group':object=new Group();break;default:object=new Object3D();}object.uuid=data.uuid;if(data.name!==undefined)object.name=data.name;if(data.matrix!==undefined){object.matrix.fromArray(data.matrix);if(data.matrixAutoUpdate!==undefined)object.matrixAutoUpdate=data.matrixAutoUpdate;if(object.matrixAutoUpdate)object.matrix.decompose(object.position,object.quaternion,object.scale);}else{if(data.position!==undefined)object.position.fromArray(data.position);if(data.rotation!==undefined)object.rotation.fromArray(data.rotation);if(data.quaternion!==undefined)object.quaternion.fromArray(data.quaternion);if(data.scale!==undefined)object.scale.fromArray(data.scale);}if(data.castShadow!==undefined)object.castShadow=data.castShadow;if(data.receiveShadow!==undefined)object.receiveShadow=data.receiveShadow;if(data.shadow){if(data.shadow.bias!==undefined)object.shadow.bias=data.shadow.bias;if(data.shadow.radius!==undefined)object.shadow.radius=data.shadow.radius;if(data.shadow.mapSize!==undefined)object.shadow.mapSize.fromArray(data.shadow.mapSize);if(data.shadow.camera!==undefined)object.shadow.camera=this.parseObject(data.shadow.camera);}if(data.visible!==undefined)object.visible=data.visible;if(data.frustumCulled!==undefined)object.frustumCulled=data.frustumCulled;if(data.renderOrder!==undefined)object.renderOrder=data.renderOrder;if(data.userData!==undefined)object.userData=data.userData;if(data.layers!==undefined)object.layers.mask=data.layers;if(data.children!==undefined){var children=data.children;for(var i=0;i<children.length;i++){object.add(this.parseObject(children[i],geometries,materials));}}if(data.type==='LOD'){var levels=data.levels;for(var l=0;l<levels.length;l++){var level=levels[l];var child=object.getObjectByProperty('uuid',level.object);if(child!==undefined){object.addLevel(child,level.distance);}}}return object;}});var TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,SphericalReflectionMapping:SphericalReflectionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping};var TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping};var TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipMapNearestFilter:NearestMipMapNearestFilter,NearestMipMapLinearFilter:NearestMipMapLinearFilter,LinearFilter:LinearFilter,LinearMipMapNearestFilter:LinearMipMapNearestFilter,LinearMipMapLinearFilter:LinearMipMapLinearFilter};/**\n\t * @author thespite / http://clicktorelease.com/\n\t */function ImageBitmapLoader(manager){if(typeof createImageBitmap==='undefined'){console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');}if(typeof fetch==='undefined'){console.warn('THREE.ImageBitmapLoader: fetch() not supported.');}this.manager=manager!==undefined?manager:DefaultLoadingManager;this.options=undefined;}ImageBitmapLoader.prototype={constructor:ImageBitmapLoader,setOptions:function setOptions(options){this.options=options;return this;},load:function(url,onLoad,onProgress,onError){if(url===undefined)url='';if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);var scope=this;var cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}fetch(url).then(function(res){return res.blob();}).then(function(blob){return createImageBitmap(blob,scope.options);}).then(function(imageBitmap){Cache.add(url,imageBitmap);if(onLoad)onLoad(imageBitmap);scope.manager.itemEnd(url);}).catch(function(e){if(onError)onError(e);scope.manager.itemError(url);scope.manager.itemEnd(url);});},setCrossOrigin:function()/* value */{return this;},setPath:function(value){this.path=value;return this;}};/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\t **/function ShapePath(){this.type='ShapePath';this.color=new Color();this.subPaths=[];this.currentPath=null;}Object.assign(ShapePath.prototype,{moveTo:function(x,y){this.currentPath=new Path();this.subPaths.push(this.currentPath);this.currentPath.moveTo(x,y);},lineTo:function(x,y){this.currentPath.lineTo(x,y);},quadraticCurveTo:function(aCPx,aCPy,aX,aY){this.currentPath.quadraticCurveTo(aCPx,aCPy,aX,aY);},bezierCurveTo:function(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){this.currentPath.bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY);},splineThru:function(pts){this.currentPath.splineThru(pts);},toShapes:function(isCCW,noHoles){function toShapesNoHoles(inSubpaths){var shapes=[];for(var i=0,l=inSubpaths.length;i<l;i++){var tmpPath=inSubpaths[i];var tmpShape=new Shape();tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);}return shapes;}function isPointInsidePolygon(inPt,inPolygon){var polyLen=inPolygon.length;// inPt on polygon contour => immediate success    or\n// toggling of inside/outside at every single! intersection point of an edge\n//  with the horizontal line through inPt, left of inPt\n//  not counting lowerY endpoints of edges and whole edges on that line\nvar inside=false;for(var p=polyLen-1,q=0;q<polyLen;p=q++){var edgeLowPt=inPolygon[p];var edgeHighPt=inPolygon[q];var edgeDx=edgeHighPt.x-edgeLowPt.x;var edgeDy=edgeHighPt.y-edgeLowPt.y;if(Math.abs(edgeDy)>Number.EPSILON){// not parallel\nif(edgeDy<0){edgeLowPt=inPolygon[q];edgeDx=-edgeDx;edgeHighPt=inPolygon[p];edgeDy=-edgeDy;}if(inPt.y<edgeLowPt.y||inPt.y>edgeHighPt.y)continue;if(inPt.y===edgeLowPt.y){if(inPt.x===edgeLowPt.x)return true;// inPt is on contour ?\n// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n}else{var perpEdge=edgeDy*(inPt.x-edgeLowPt.x)-edgeDx*(inPt.y-edgeLowPt.y);if(perpEdge===0)return true;// inPt is on contour ?\nif(perpEdge<0)continue;inside=!inside;// true intersection left of inPt\n}}else{// parallel or collinear\nif(inPt.y!==edgeLowPt.y)continue;// parallel\n// edge lies on the same horizontal line as inPt\nif(edgeHighPt.x<=inPt.x&&inPt.x<=edgeLowPt.x||edgeLowPt.x<=inPt.x&&inPt.x<=edgeHighPt.x)return true;// inPt: Point on contour !\n// continue;\n}}return inside;}var isClockWise=ShapeUtils.isClockWise;var subPaths=this.subPaths;if(subPaths.length===0)return[];if(noHoles===true)return toShapesNoHoles(subPaths);var solid,tmpPath,tmpShape,shapes=[];if(subPaths.length===1){tmpPath=subPaths[0];tmpShape=new Shape();tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);return shapes;}var holesFirst=!isClockWise(subPaths[0].getPoints());holesFirst=isCCW?!holesFirst:holesFirst;// console.log(\"Holes first\", holesFirst);\nvar betterShapeHoles=[];var newShapes=[];var newShapeHoles=[];var mainIdx=0;var tmpPoints;newShapes[mainIdx]=undefined;newShapeHoles[mainIdx]=[];for(var i=0,l=subPaths.length;i<l;i++){tmpPath=subPaths[i];tmpPoints=tmpPath.getPoints();solid=isClockWise(tmpPoints);solid=isCCW?!solid:solid;if(solid){if(!holesFirst&&newShapes[mainIdx])mainIdx++;newShapes[mainIdx]={s:new Shape(),p:tmpPoints};newShapes[mainIdx].s.curves=tmpPath.curves;if(holesFirst)mainIdx++;newShapeHoles[mainIdx]=[];//console.log('cw', i);\n}else{newShapeHoles[mainIdx].push({h:tmpPath,p:tmpPoints[0]});//console.log('ccw', i);\n}}// only Holes? -> probably all Shapes with wrong orientation\nif(!newShapes[0])return toShapesNoHoles(subPaths);if(newShapes.length>1){var ambiguous=false;var toChange=[];for(var sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){betterShapeHoles[sIdx]=[];}for(var sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){var sho=newShapeHoles[sIdx];for(var hIdx=0;hIdx<sho.length;hIdx++){var ho=sho[hIdx];var hole_unassigned=true;for(var s2Idx=0;s2Idx<newShapes.length;s2Idx++){if(isPointInsidePolygon(ho.p,newShapes[s2Idx].p)){if(sIdx!==s2Idx)toChange.push({froms:sIdx,tos:s2Idx,hole:hIdx});if(hole_unassigned){hole_unassigned=false;betterShapeHoles[s2Idx].push(ho);}else{ambiguous=true;}}}if(hole_unassigned){betterShapeHoles[sIdx].push(ho);}}}// console.log(\"ambiguous: \", ambiguous);\nif(toChange.length>0){// console.log(\"to change: \", toChange);\nif(!ambiguous)newShapeHoles=betterShapeHoles;}}var tmpHoles;for(var i=0,il=newShapes.length;i<il;i++){tmpShape=newShapes[i].s;shapes.push(tmpShape);tmpHoles=newShapeHoles[i];for(var j=0,jl=tmpHoles.length;j<jl;j++){tmpShape.holes.push(tmpHoles[j].h);}}//console.log(\"shape\", shapes);\nreturn shapes;}});/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */function Font(data){this.type='Font';this.data=data;}Object.assign(Font.prototype,{isFont:true,generateShapes:function(text,size){if(size===undefined)size=100;var shapes=[];var paths=createPaths(text,size,this.data);for(var p=0,pl=paths.length;p<pl;p++){Array.prototype.push.apply(shapes,paths[p].toShapes());}return shapes;}});function createPaths(text,size,data){var chars=Array.from?Array.from(text):String(text).split('');// see #13988\nvar scale=size/data.resolution;var line_height=(data.boundingBox.yMax-data.boundingBox.yMin+data.underlineThickness)*scale;var paths=[];var offsetX=0,offsetY=0;for(var i=0;i<chars.length;i++){var char=chars[i];if(char==='\\n'){offsetX=0;offsetY-=line_height;}else{var ret=createPath(char,scale,offsetX,offsetY,data);offsetX+=ret.offsetX;paths.push(ret.path);}}return paths;}function createPath(char,scale,offsetX,offsetY,data){var glyph=data.glyphs[char]||data.glyphs['?'];if(!glyph)return;var path=new ShapePath();var x,y,cpx,cpy,cpx1,cpy1,cpx2,cpy2;if(glyph.o){var outline=glyph._cachedOutline||(glyph._cachedOutline=glyph.o.split(' '));for(var i=0,l=outline.length;i<l;){var action=outline[i++];switch(action){case'm':// moveTo\nx=outline[i++]*scale+offsetX;y=outline[i++]*scale+offsetY;path.moveTo(x,y);break;case'l':// lineTo\nx=outline[i++]*scale+offsetX;y=outline[i++]*scale+offsetY;path.lineTo(x,y);break;case'q':// quadraticCurveTo\ncpx=outline[i++]*scale+offsetX;cpy=outline[i++]*scale+offsetY;cpx1=outline[i++]*scale+offsetX;cpy1=outline[i++]*scale+offsetY;path.quadraticCurveTo(cpx1,cpy1,cpx,cpy);break;case'b':// bezierCurveTo\ncpx=outline[i++]*scale+offsetX;cpy=outline[i++]*scale+offsetY;cpx1=outline[i++]*scale+offsetX;cpy1=outline[i++]*scale+offsetY;cpx2=outline[i++]*scale+offsetX;cpy2=outline[i++]*scale+offsetY;path.bezierCurveTo(cpx1,cpy1,cpx2,cpy2,cpx,cpy);break;}}}return{offsetX:glyph.ha*scale,path:path};}/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function FontLoader(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;}Object.assign(FontLoader.prototype,{load:function(url,onLoad,onProgress,onError){var scope=this;var loader=new FileLoader(this.manager);loader.setPath(this.path);loader.load(url,function(text){var json;try{json=JSON.parse(text);}catch(e){console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');json=JSON.parse(text.substring(65,text.length-2));}var font=scope.parse(json);if(onLoad)onLoad(font);},onProgress,onError);},parse:function(json){return new Font(json);},setPath:function(value){this.path=value;return this;}});/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */function Loader(){}Loader.Handlers={handlers:[],add:function(regex,loader){this.handlers.push(regex,loader);},get:function(file){var handlers=this.handlers;for(var i=0,l=handlers.length;i<l;i+=2){var regex=handlers[i];var loader=handlers[i+1];if(regex.test(file)){return loader;}}return null;}};Object.assign(Loader.prototype,{crossOrigin:'anonymous',onLoadStart:function(){},onLoadProgress:function(){},onLoadComplete:function(){},initMaterials:function(materials,texturePath,crossOrigin){var array=[];for(var i=0;i<materials.length;++i){array[i]=this.createMaterial(materials[i],texturePath,crossOrigin);}return array;},createMaterial:function(){var BlendingMode={NoBlending:NoBlending,NormalBlending:NormalBlending,AdditiveBlending:AdditiveBlending,SubtractiveBlending:SubtractiveBlending,MultiplyBlending:MultiplyBlending,CustomBlending:CustomBlending};var color=new Color();var textureLoader=new TextureLoader();var materialLoader=new MaterialLoader();return function createMaterial(m,texturePath,crossOrigin){// convert from old material format\nvar textures={};function loadTexture(path,repeat,offset,wrap,anisotropy){var fullPath=texturePath+path;var loader=Loader.Handlers.get(fullPath);var texture;if(loader!==null){texture=loader.load(fullPath);}else{textureLoader.setCrossOrigin(crossOrigin);texture=textureLoader.load(fullPath);}if(repeat!==undefined){texture.repeat.fromArray(repeat);if(repeat[0]!==1)texture.wrapS=RepeatWrapping;if(repeat[1]!==1)texture.wrapT=RepeatWrapping;}if(offset!==undefined){texture.offset.fromArray(offset);}if(wrap!==undefined){if(wrap[0]==='repeat')texture.wrapS=RepeatWrapping;if(wrap[0]==='mirror')texture.wrapS=MirroredRepeatWrapping;if(wrap[1]==='repeat')texture.wrapT=RepeatWrapping;if(wrap[1]==='mirror')texture.wrapT=MirroredRepeatWrapping;}if(anisotropy!==undefined){texture.anisotropy=anisotropy;}var uuid=_Math.generateUUID();textures[uuid]=texture;return uuid;}//\nvar json={uuid:_Math.generateUUID(),type:'MeshLambertMaterial'};for(var name in m){var value=m[name];switch(name){case'DbgColor':case'DbgIndex':case'opticalDensity':case'illumination':break;case'DbgName':json.name=value;break;case'blending':json.blending=BlendingMode[value];break;case'colorAmbient':case'mapAmbient':console.warn('THREE.Loader.createMaterial:',name,'is no longer supported.');break;case'colorDiffuse':json.color=color.fromArray(value).getHex();break;case'colorSpecular':json.specular=color.fromArray(value).getHex();break;case'colorEmissive':json.emissive=color.fromArray(value).getHex();break;case'specularCoef':json.shininess=value;break;case'shading':if(value.toLowerCase()==='basic')json.type='MeshBasicMaterial';if(value.toLowerCase()==='phong')json.type='MeshPhongMaterial';if(value.toLowerCase()==='standard')json.type='MeshStandardMaterial';break;case'mapDiffuse':json.map=loadTexture(value,m.mapDiffuseRepeat,m.mapDiffuseOffset,m.mapDiffuseWrap,m.mapDiffuseAnisotropy);break;case'mapDiffuseRepeat':case'mapDiffuseOffset':case'mapDiffuseWrap':case'mapDiffuseAnisotropy':break;case'mapEmissive':json.emissiveMap=loadTexture(value,m.mapEmissiveRepeat,m.mapEmissiveOffset,m.mapEmissiveWrap,m.mapEmissiveAnisotropy);break;case'mapEmissiveRepeat':case'mapEmissiveOffset':case'mapEmissiveWrap':case'mapEmissiveAnisotropy':break;case'mapLight':json.lightMap=loadTexture(value,m.mapLightRepeat,m.mapLightOffset,m.mapLightWrap,m.mapLightAnisotropy);break;case'mapLightRepeat':case'mapLightOffset':case'mapLightWrap':case'mapLightAnisotropy':break;case'mapAO':json.aoMap=loadTexture(value,m.mapAORepeat,m.mapAOOffset,m.mapAOWrap,m.mapAOAnisotropy);break;case'mapAORepeat':case'mapAOOffset':case'mapAOWrap':case'mapAOAnisotropy':break;case'mapBump':json.bumpMap=loadTexture(value,m.mapBumpRepeat,m.mapBumpOffset,m.mapBumpWrap,m.mapBumpAnisotropy);break;case'mapBumpScale':json.bumpScale=value;break;case'mapBumpRepeat':case'mapBumpOffset':case'mapBumpWrap':case'mapBumpAnisotropy':break;case'mapNormal':json.normalMap=loadTexture(value,m.mapNormalRepeat,m.mapNormalOffset,m.mapNormalWrap,m.mapNormalAnisotropy);break;case'mapNormalFactor':json.normalScale=value;break;case'mapNormalRepeat':case'mapNormalOffset':case'mapNormalWrap':case'mapNormalAnisotropy':break;case'mapSpecular':json.specularMap=loadTexture(value,m.mapSpecularRepeat,m.mapSpecularOffset,m.mapSpecularWrap,m.mapSpecularAnisotropy);break;case'mapSpecularRepeat':case'mapSpecularOffset':case'mapSpecularWrap':case'mapSpecularAnisotropy':break;case'mapMetalness':json.metalnessMap=loadTexture(value,m.mapMetalnessRepeat,m.mapMetalnessOffset,m.mapMetalnessWrap,m.mapMetalnessAnisotropy);break;case'mapMetalnessRepeat':case'mapMetalnessOffset':case'mapMetalnessWrap':case'mapMetalnessAnisotropy':break;case'mapRoughness':json.roughnessMap=loadTexture(value,m.mapRoughnessRepeat,m.mapRoughnessOffset,m.mapRoughnessWrap,m.mapRoughnessAnisotropy);break;case'mapRoughnessRepeat':case'mapRoughnessOffset':case'mapRoughnessWrap':case'mapRoughnessAnisotropy':break;case'mapAlpha':json.alphaMap=loadTexture(value,m.mapAlphaRepeat,m.mapAlphaOffset,m.mapAlphaWrap,m.mapAlphaAnisotropy);break;case'mapAlphaRepeat':case'mapAlphaOffset':case'mapAlphaWrap':case'mapAlphaAnisotropy':break;case'flipSided':json.side=BackSide;break;case'doubleSided':json.side=DoubleSide;break;case'transparency':console.warn('THREE.Loader.createMaterial: transparency has been renamed to opacity');json.opacity=value;break;case'depthTest':case'depthWrite':case'colorWrite':case'opacity':case'reflectivity':case'transparent':case'visible':case'wireframe':json[name]=value;break;case'vertexColors':if(value===true)json.vertexColors=VertexColors;if(value==='face')json.vertexColors=FaceColors;break;default:console.error('THREE.Loader.createMaterial: Unsupported',name,value);break;}}if(json.type==='MeshBasicMaterial')delete json.emissive;if(json.type!=='MeshPhongMaterial')delete json.specular;if(json.opacity<1)json.transparent=true;materialLoader.setTextures(textures);return materialLoader.parse(json);};}()});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */var context;var AudioContext={getContext:function(){if(context===undefined){context=new(window.AudioContext||window.webkitAudioContext)();}return context;},setContext:function(value){context=value;}};/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */function AudioLoader(manager){this.manager=manager!==undefined?manager:DefaultLoadingManager;}Object.assign(AudioLoader.prototype,{load:function(url,onLoad,onProgress,onError){var loader=new FileLoader(this.manager);loader.setResponseType('arraybuffer');loader.setPath(this.path);loader.load(url,function(buffer){// Create a copy of the buffer. The `decodeAudioData` method\n// detaches the buffer when complete, preventing reuse.\nvar bufferCopy=buffer.slice(0);var context=AudioContext.getContext();context.decodeAudioData(bufferCopy,function(audioBuffer){onLoad(audioBuffer);});},onProgress,onError);},setPath:function(value){this.path=value;return this;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function StereoCamera(){this.type='StereoCamera';this.aspect=1;this.eyeSep=0.064;this.cameraL=new PerspectiveCamera();this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=false;this.cameraR=new PerspectiveCamera();this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=false;}Object.assign(StereoCamera.prototype,{update:function(){var instance,focus,fov,aspect,near,far,zoom,eyeSep;var eyeRight=new Matrix4();var eyeLeft=new Matrix4();return function update(camera){var needsUpdate=instance!==this||focus!==camera.focus||fov!==camera.fov||aspect!==camera.aspect*this.aspect||near!==camera.near||far!==camera.far||zoom!==camera.zoom||eyeSep!==this.eyeSep;if(needsUpdate){instance=this;focus=camera.focus;fov=camera.fov;aspect=camera.aspect*this.aspect;near=camera.near;far=camera.far;zoom=camera.zoom;// Off-axis stereoscopic effect based on\n// http://paulbourke.net/stereographics/stereorender/\nvar projectionMatrix=camera.projectionMatrix.clone();eyeSep=this.eyeSep/2;var eyeSepOnProjection=eyeSep*near/focus;var ymax=near*Math.tan(_Math.DEG2RAD*fov*0.5)/zoom;var xmin,xmax;// translate xOffset\neyeLeft.elements[12]=-eyeSep;eyeRight.elements[12]=eyeSep;// for left eye\nxmin=-ymax*aspect+eyeSepOnProjection;xmax=ymax*aspect+eyeSepOnProjection;projectionMatrix.elements[0]=2*near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraL.projectionMatrix.copy(projectionMatrix);// for right eye\nxmin=-ymax*aspect-eyeSepOnProjection;xmax=ymax*aspect-eyeSepOnProjection;projectionMatrix.elements[0]=2*near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraR.projectionMatrix.copy(projectionMatrix);}this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(eyeLeft);this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(eyeRight);};}()});/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */function CubeCamera(near,far,cubeResolution,options){Object3D.call(this);this.type='CubeCamera';var fov=90,aspect=1;var cameraPX=new PerspectiveCamera(fov,aspect,near,far);cameraPX.up.set(0,-1,0);cameraPX.lookAt(new Vector3(1,0,0));this.add(cameraPX);var cameraNX=new PerspectiveCamera(fov,aspect,near,far);cameraNX.up.set(0,-1,0);cameraNX.lookAt(new Vector3(-1,0,0));this.add(cameraNX);var cameraPY=new PerspectiveCamera(fov,aspect,near,far);cameraPY.up.set(0,0,1);cameraPY.lookAt(new Vector3(0,1,0));this.add(cameraPY);var cameraNY=new PerspectiveCamera(fov,aspect,near,far);cameraNY.up.set(0,0,-1);cameraNY.lookAt(new Vector3(0,-1,0));this.add(cameraNY);var cameraPZ=new PerspectiveCamera(fov,aspect,near,far);cameraPZ.up.set(0,-1,0);cameraPZ.lookAt(new Vector3(0,0,1));this.add(cameraPZ);var cameraNZ=new PerspectiveCamera(fov,aspect,near,far);cameraNZ.up.set(0,-1,0);cameraNZ.lookAt(new Vector3(0,0,-1));this.add(cameraNZ);options=options||{format:RGBFormat,magFilter:LinearFilter,minFilter:LinearFilter};this.renderTarget=new WebGLRenderTargetCube(cubeResolution,cubeResolution,options);this.renderTarget.texture.name=\"CubeCamera\";this.update=function(renderer,scene){if(this.parent===null)this.updateMatrixWorld();var currentRenderTarget=renderer.getRenderTarget();var renderTarget=this.renderTarget;var generateMipmaps=renderTarget.texture.generateMipmaps;renderTarget.texture.generateMipmaps=false;renderTarget.activeCubeFace=0;renderer.render(scene,cameraPX,renderTarget);renderTarget.activeCubeFace=1;renderer.render(scene,cameraNX,renderTarget);renderTarget.activeCubeFace=2;renderer.render(scene,cameraPY,renderTarget);renderTarget.activeCubeFace=3;renderer.render(scene,cameraNY,renderTarget);renderTarget.activeCubeFace=4;renderer.render(scene,cameraPZ,renderTarget);renderTarget.texture.generateMipmaps=generateMipmaps;renderTarget.activeCubeFace=5;renderer.render(scene,cameraNZ,renderTarget);renderer.setRenderTarget(currentRenderTarget);};this.clear=function(renderer,color,depth,stencil){var currentRenderTarget=renderer.getRenderTarget();var renderTarget=this.renderTarget;for(var i=0;i<6;i++){renderTarget.activeCubeFace=i;renderer.setRenderTarget(renderTarget);renderer.clear(color,depth,stencil);}renderer.setRenderTarget(currentRenderTarget);};}CubeCamera.prototype=Object.create(Object3D.prototype);CubeCamera.prototype.constructor=CubeCamera;/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */function Clock(autoStart){this.autoStart=autoStart!==undefined?autoStart:true;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false;}Object.assign(Clock.prototype,{start:function(){this.startTime=(typeof performance==='undefined'?Date:performance).now();// see #10732\nthis.oldTime=this.startTime;this.elapsedTime=0;this.running=true;},stop:function(){this.getElapsedTime();this.running=false;this.autoStart=false;},getElapsedTime:function(){this.getDelta();return this.elapsedTime;},getDelta:function(){var diff=0;if(this.autoStart&&!this.running){this.start();return 0;}if(this.running){var newTime=(typeof performance==='undefined'?Date:performance).now();diff=(newTime-this.oldTime)/1000;this.oldTime=newTime;this.elapsedTime+=diff;}return diff;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function AudioListener(){Object3D.call(this);this.type='AudioListener';this.context=AudioContext.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null;this.timeDelta=0;}AudioListener.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:AudioListener,getInput:function(){return this.gain;},removeFilter:function(){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);this.gain.connect(this.context.destination);this.filter=null;}return this;},getFilter:function(){return this.filter;},setFilter:function(value){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);}else{this.gain.disconnect(this.context.destination);}this.filter=value;this.gain.connect(this.filter);this.filter.connect(this.context.destination);return this;},getMasterVolume:function(){return this.gain.gain.value;},setMasterVolume:function(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,0.01);return this;},updateMatrixWorld:function(){var position=new Vector3();var quaternion=new Quaternion();var scale=new Vector3();var orientation=new Vector3();var clock=new Clock();return function updateMatrixWorld(force){Object3D.prototype.updateMatrixWorld.call(this,force);var listener=this.context.listener;var up=this.up;this.timeDelta=clock.getDelta();this.matrixWorld.decompose(position,quaternion,scale);orientation.set(0,0,-1).applyQuaternion(quaternion);if(listener.positionX){// code path for Chrome (see #14393)\nvar endTime=this.context.currentTime+this.timeDelta;listener.positionX.linearRampToValueAtTime(position.x,endTime);listener.positionY.linearRampToValueAtTime(position.y,endTime);listener.positionZ.linearRampToValueAtTime(position.z,endTime);listener.forwardX.linearRampToValueAtTime(orientation.x,endTime);listener.forwardY.linearRampToValueAtTime(orientation.y,endTime);listener.forwardZ.linearRampToValueAtTime(orientation.z,endTime);listener.upX.linearRampToValueAtTime(up.x,endTime);listener.upY.linearRampToValueAtTime(up.y,endTime);listener.upZ.linearRampToValueAtTime(up.z,endTime);}else{listener.setPosition(position.x,position.y,position.z);listener.setOrientation(orientation.x,orientation.y,orientation.z,up.x,up.y,up.z);}};}()});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */function Audio(listener){Object3D.call(this);this.type='Audio';this.listener=listener;this.context=listener.context;this.gain=this.context.createGain();this.gain.connect(listener.getInput());this.autoplay=false;this.buffer=null;this.detune=0;this.loop=false;this.startTime=0;this.offset=0;this.playbackRate=1;this.isPlaying=false;this.hasPlaybackControl=true;this.sourceType='empty';this.filters=[];}Audio.prototype=Object.assign(Object.create(Object3D.prototype),{constructor:Audio,getOutput:function(){return this.gain;},setNodeSource:function(audioNode){this.hasPlaybackControl=false;this.sourceType='audioNode';this.source=audioNode;this.connect();return this;},setMediaElementSource:function(mediaElement){this.hasPlaybackControl=false;this.sourceType='mediaNode';this.source=this.context.createMediaElementSource(mediaElement);this.connect();return this;},setBuffer:function(audioBuffer){this.buffer=audioBuffer;this.sourceType='buffer';if(this.autoplay)this.play();return this;},play:function(){if(this.isPlaying===true){console.warn('THREE.Audio: Audio is already playing.');return;}if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}var source=this.context.createBufferSource();source.buffer=this.buffer;source.loop=this.loop;source.onended=this.onEnded.bind(this);this.startTime=this.context.currentTime;source.start(this.startTime,this.offset);this.isPlaying=true;this.source=source;this.setDetune(this.detune);this.setPlaybackRate(this.playbackRate);return this.connect();},pause:function(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}if(this.isPlaying===true){this.source.stop();this.source.onended=null;this.offset+=(this.context.currentTime-this.startTime)*this.playbackRate;this.isPlaying=false;}return this;},stop:function(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.source.stop();this.source.onended=null;this.offset=0;this.isPlaying=false;return this;},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var i=1,l=this.filters.length;i<l;i++){this.filters[i-1].connect(this.filters[i]);}this.filters[this.filters.length-1].connect(this.getOutput());}else{this.source.connect(this.getOutput());}return this;},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var i=1,l=this.filters.length;i<l;i++){this.filters[i-1].disconnect(this.filters[i]);}this.filters[this.filters.length-1].disconnect(this.getOutput());}else{this.source.disconnect(this.getOutput());}return this;},getFilters:function(){return this.filters;},setFilters:function(value){if(!value)value=[];if(this.isPlaying===true){this.disconnect();this.filters=value;this.connect();}else{this.filters=value;}return this;},setDetune:function(value){this.detune=value;if(this.source.detune===undefined)return;// only set detune when available\nif(this.isPlaying===true){this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,0.01);}return this;},getDetune:function(){return this.detune;},getFilter:function(){return this.getFilters()[0];},setFilter:function(filter){return this.setFilters(filter?[filter]:[]);},setPlaybackRate:function(value){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.playbackRate=value;if(this.isPlaying===true){this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,0.01);}return this;},getPlaybackRate:function(){return this.playbackRate;},onEnded:function(){this.isPlaying=false;},getLoop:function(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return false;}return this.loop;},setLoop:function(value){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.loop=value;if(this.isPlaying===true){this.source.loop=this.loop;}return this;},getVolume:function(){return this.gain.gain.value;},setVolume:function(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,0.01);return this;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function PositionalAudio(listener){Audio.call(this,listener);this.panner=this.context.createPanner();this.panner.connect(this.gain);}PositionalAudio.prototype=Object.assign(Object.create(Audio.prototype),{constructor:PositionalAudio,getOutput:function(){return this.panner;},getRefDistance:function(){return this.panner.refDistance;},setRefDistance:function(value){this.panner.refDistance=value;return this;},getRolloffFactor:function(){return this.panner.rolloffFactor;},setRolloffFactor:function(value){this.panner.rolloffFactor=value;return this;},getDistanceModel:function(){return this.panner.distanceModel;},setDistanceModel:function(value){this.panner.distanceModel=value;return this;},getMaxDistance:function(){return this.panner.maxDistance;},setMaxDistance:function(value){this.panner.maxDistance=value;return this;},setDirectionalCone:function(coneInnerAngle,coneOuterAngle,coneOuterGain){this.panner.coneInnerAngle=coneInnerAngle;this.panner.coneOuterAngle=coneOuterAngle;this.panner.coneOuterGain=coneOuterGain;return this;},updateMatrixWorld:function(){var position=new Vector3();var quaternion=new Quaternion();var scale=new Vector3();var orientation=new Vector3();return function updateMatrixWorld(force){Object3D.prototype.updateMatrixWorld.call(this,force);if(this.isPlaying===false)return;this.matrixWorld.decompose(position,quaternion,scale);orientation.set(0,0,1).applyQuaternion(quaternion);var panner=this.panner;if(panner.positionX){// code path for Chrome and Firefox (see #14393)\nvar endTime=this.context.currentTime+this.listener.timeDelta;panner.positionX.linearRampToValueAtTime(position.x,endTime);panner.positionY.linearRampToValueAtTime(position.y,endTime);panner.positionZ.linearRampToValueAtTime(position.z,endTime);panner.orientationX.linearRampToValueAtTime(orientation.x,endTime);panner.orientationY.linearRampToValueAtTime(orientation.y,endTime);panner.orientationZ.linearRampToValueAtTime(orientation.z,endTime);}else{panner.setPosition(position.x,position.y,position.z);panner.setOrientation(orientation.x,orientation.y,orientation.z);}};}()});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function AudioAnalyser(audio,fftSize){this.analyser=audio.context.createAnalyser();this.analyser.fftSize=fftSize!==undefined?fftSize:2048;this.data=new Uint8Array(this.analyser.frequencyBinCount);audio.getOutput().connect(this.analyser);}Object.assign(AudioAnalyser.prototype,{getFrequencyData:function(){this.analyser.getByteFrequencyData(this.data);return this.data;},getAverageFrequency:function(){var value=0,data=this.getFrequencyData();for(var i=0;i<data.length;i++){value+=data[i];}return value/data.length;}});/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */function PropertyMixer(binding,typeName,valueSize){this.binding=binding;this.valueSize=valueSize;var bufferType=Float64Array,mixFunction;switch(typeName){case'quaternion':mixFunction=this._slerp;break;case'string':case'bool':bufferType=Array;mixFunction=this._select;break;default:mixFunction=this._lerp;}this.buffer=new bufferType(valueSize*4);// layout: [ incoming | accu0 | accu1 | orig ]\n//\n// interpolators can use .buffer as their .result\n// the data then goes to 'incoming'\n//\n// 'accu0' and 'accu1' are used frame-interleaved for\n// the cumulative result and are compared to detect\n// changes\n//\n// 'orig' stores the original state of the property\nthis._mixBufferRegion=mixFunction;this.cumulativeWeight=0;this.useCount=0;this.referenceCount=0;}Object.assign(PropertyMixer.prototype,{// accumulate data in the 'incoming' region into 'accu<i>'\naccumulate:function(accuIndex,weight){// note: happily accumulating nothing when weight = 0, the caller knows\n// the weight and shouldn't have made the call in the first place\nvar buffer=this.buffer,stride=this.valueSize,offset=accuIndex*stride+stride,currentWeight=this.cumulativeWeight;if(currentWeight===0){// accuN := incoming * weight\nfor(var i=0;i!==stride;++i){buffer[offset+i]=buffer[i];}currentWeight=weight;}else{// accuN := accuN + incoming * weight\ncurrentWeight+=weight;var mix=weight/currentWeight;this._mixBufferRegion(buffer,offset,0,mix,stride);}this.cumulativeWeight=currentWeight;},// apply the state of 'accu<i>' to the binding when accus differ\napply:function(accuIndex){var stride=this.valueSize,buffer=this.buffer,offset=accuIndex*stride+stride,weight=this.cumulativeWeight,binding=this.binding;this.cumulativeWeight=0;if(weight<1){// accuN := accuN + original * ( 1 - cumulativeWeight )\nvar originalValueOffset=stride*3;this._mixBufferRegion(buffer,offset,originalValueOffset,1-weight,stride);}for(var i=stride,e=stride+stride;i!==e;++i){if(buffer[i]!==buffer[i+stride]){// value has changed -> update scene graph\nbinding.setValue(buffer,offset);break;}}},// remember the state of the bound property and copy it to both accus\nsaveOriginalState:function(){var binding=this.binding;var buffer=this.buffer,stride=this.valueSize,originalValueOffset=stride*3;binding.getValue(buffer,originalValueOffset);// accu[0..1] := orig -- initially detect changes against the original\nfor(var i=stride,e=originalValueOffset;i!==e;++i){buffer[i]=buffer[originalValueOffset+i%stride];}this.cumulativeWeight=0;},// apply the state previously taken via 'saveOriginalState' to the binding\nrestoreOriginalState:function(){var originalValueOffset=this.valueSize*3;this.binding.setValue(this.buffer,originalValueOffset);},// mix functions\n_select:function(buffer,dstOffset,srcOffset,t,stride){if(t>=0.5){for(var i=0;i!==stride;++i){buffer[dstOffset+i]=buffer[srcOffset+i];}}},_slerp:function(buffer,dstOffset,srcOffset,t){Quaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,srcOffset,t);},_lerp:function(buffer,dstOffset,srcOffset,t,stride){var s=1-t;for(var i=0;i!==stride;++i){var j=dstOffset+i;buffer[j]=buffer[j]*s+buffer[srcOffset+i]*t;}}});/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */ // Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE='\\\\[\\\\]\\\\.:\\\\/';function Composite(targetGroup,path,optionalParsedPath){var parsedPath=optionalParsedPath||PropertyBinding.parseTrackName(path);this._targetGroup=targetGroup;this._bindings=targetGroup.subscribe_(path,parsedPath);}Object.assign(Composite.prototype,{getValue:function(array,offset){this.bind();// bind all binding\nvar firstValidIndex=this._targetGroup.nCachedObjects_,binding=this._bindings[firstValidIndex];// and only call .getValue on the first\nif(binding!==undefined)binding.getValue(array,offset);},setValue:function(array,offset){var bindings=this._bindings;for(var i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].setValue(array,offset);}},bind:function(){var bindings=this._bindings;for(var i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].bind();}},unbind:function(){var bindings=this._bindings;for(var i=this._targetGroup.nCachedObjects_,n=bindings.length;i!==n;++i){bindings[i].unbind();}}});function PropertyBinding(rootNode,path,parsedPath){this.path=path;this.parsedPath=parsedPath||PropertyBinding.parseTrackName(path);this.node=PropertyBinding.findNode(rootNode,this.parsedPath.nodeName)||rootNode;this.rootNode=rootNode;}Object.assign(PropertyBinding,{Composite:Composite,create:function(root,path,parsedPath){if(!(root&&root.isAnimationObjectGroup)){return new PropertyBinding(root,path,parsedPath);}else{return new PropertyBinding.Composite(root,path,parsedPath);}},/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param  {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */sanitizeNodeName:function(){var reservedRe=new RegExp('['+RESERVED_CHARS_RE+']','g');return function sanitizeNodeName(name){return name.replace(/\\s/g,'_').replace(reservedRe,'');};}(),parseTrackName:function(){// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nvar wordChar='[^'+RESERVED_CHARS_RE+']';var wordCharOrDot='[^'+RESERVED_CHARS_RE.replace('\\\\.','')+']';// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nvar directoryRe=/((?:WC+[\\/:])*)/.source.replace('WC',wordChar);// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nvar nodeRe=/(WCOD+)?/.source.replace('WCOD',wordCharOrDot);// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nvar objectRe=/(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC',wordChar);// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nvar propertyRe=/\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC',wordChar);var trackRe=new RegExp(''+'^'+directoryRe+nodeRe+objectRe+propertyRe+'$');var supportedObjectNames=['material','materials','bones'];return function parseTrackName(trackName){var matches=trackRe.exec(trackName);if(!matches){throw new Error('PropertyBinding: Cannot parse trackName: '+trackName);}var results={// directoryName: matches[ 1 ], // (tschw) currently unused\nnodeName:matches[2],objectName:matches[3],objectIndex:matches[4],propertyName:matches[5],// required\npropertyIndex:matches[6]};var lastDot=results.nodeName&&results.nodeName.lastIndexOf('.');if(lastDot!==undefined&&lastDot!==-1){var objectName=results.nodeName.substring(lastDot+1);// Object names must be checked against a whitelist. Otherwise, there\n// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n// 'bar' could be the objectName, or part of a nodeName (which can\n// include '.' characters).\nif(supportedObjectNames.indexOf(objectName)!==-1){results.nodeName=results.nodeName.substring(0,lastDot);results.objectName=objectName;}}if(results.propertyName===null||results.propertyName.length===0){throw new Error('PropertyBinding: can not parse propertyName from trackName: '+trackName);}return results;};}(),findNode:function(root,nodeName){if(!nodeName||nodeName===\"\"||nodeName===\"root\"||nodeName===\".\"||nodeName===-1||nodeName===root.name||nodeName===root.uuid){return root;}// search into skeleton bones.\nif(root.skeleton){var bone=root.skeleton.getBoneByName(nodeName);if(bone!==undefined){return bone;}}// search into node subtree.\nif(root.children){var searchNodeSubtree=function(children){for(var i=0;i<children.length;i++){var childNode=children[i];if(childNode.name===nodeName||childNode.uuid===nodeName){return childNode;}var result=searchNodeSubtree(childNode.children);if(result)return result;}return null;};var subTreeNode=searchNodeSubtree(root.children);if(subTreeNode){return subTreeNode;}}return null;}});Object.assign(PropertyBinding.prototype,{// prototype, continued\n// these are used to \"bind\" a nonexistent property\n_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function getValue_direct(buffer,offset){buffer[offset]=this.node[this.propertyName];},function getValue_array(buffer,offset){var source=this.resolvedProperty;for(var i=0,n=source.length;i!==n;++i){buffer[offset++]=source[i];}},function getValue_arrayElement(buffer,offset){buffer[offset]=this.resolvedProperty[this.propertyIndex];},function getValue_toArray(buffer,offset){this.resolvedProperty.toArray(buffer,offset);}],SetterByBindingTypeAndVersioning:[[// Direct\nfunction setValue_direct(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];},function setValue_direct_setNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.needsUpdate=true;},function setValue_direct_setMatrixWorldNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=true;}],[// EntireArray\nfunction setValue_array(buffer,offset){var dest=this.resolvedProperty;for(var i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}},function setValue_array_setNeedsUpdate(buffer,offset){var dest=this.resolvedProperty;for(var i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}this.targetObject.needsUpdate=true;},function setValue_array_setMatrixWorldNeedsUpdate(buffer,offset){var dest=this.resolvedProperty;for(var i=0,n=dest.length;i!==n;++i){dest[i]=buffer[offset++];}this.targetObject.matrixWorldNeedsUpdate=true;}],[// ArrayElement\nfunction setValue_arrayElement(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];},function setValue_arrayElement_setNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.needsUpdate=true;},function setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=true;}],[// HasToFromArray\nfunction setValue_fromArray(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);},function setValue_fromArray_setNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.needsUpdate=true;},function setValue_fromArray_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.matrixWorldNeedsUpdate=true;}]],getValue:function getValue_unbound(targetArray,offset){this.bind();this.getValue(targetArray,offset);// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\n},setValue:function getValue_unbound(sourceArray,offset){this.bind();this.setValue(sourceArray,offset);},// create getter / setter pair for a property in the scene graph\nbind:function(){var targetObject=this.node,parsedPath=this.parsedPath,objectName=parsedPath.objectName,propertyName=parsedPath.propertyName,propertyIndex=parsedPath.propertyIndex;if(!targetObject){targetObject=PropertyBinding.findNode(this.rootNode,parsedPath.nodeName)||this.rootNode;this.node=targetObject;}// set fail state so we can just 'return' on error\nthis.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;// ensure there is a value node\nif(!targetObject){console.error('THREE.PropertyBinding: Trying to update node for track: '+this.path+' but it wasn\\'t found.');return;}if(objectName){var objectIndex=parsedPath.objectIndex;// special cases were we need to reach deeper into the hierarchy to get the face materials....\nswitch(objectName){case'materials':if(!targetObject.material){console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.',this);return;}if(!targetObject.material.materials){console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.',this);return;}targetObject=targetObject.material.materials;break;case'bones':if(!targetObject.skeleton){console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.',this);return;}// potential future optimization: skip this if propertyIndex is already an integer\n// and convert the integer string to a true integer.\ntargetObject=targetObject.skeleton.bones;// support resolving morphTarget names into indices.\nfor(var i=0;i<targetObject.length;i++){if(targetObject[i].name===objectIndex){objectIndex=i;break;}}break;default:if(targetObject[objectName]===undefined){console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.',this);return;}targetObject=targetObject[objectName];}if(objectIndex!==undefined){if(targetObject[objectIndex]===undefined){console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.',this,targetObject);return;}targetObject=targetObject[objectIndex];}}// resolve property\nvar nodeProperty=targetObject[propertyName];if(nodeProperty===undefined){var nodeName=parsedPath.nodeName;console.error('THREE.PropertyBinding: Trying to update property for track: '+nodeName+'.'+propertyName+' but it wasn\\'t found.',targetObject);return;}// determine versioning scheme\nvar versioning=this.Versioning.None;this.targetObject=targetObject;if(targetObject.needsUpdate!==undefined){// material\nversioning=this.Versioning.NeedsUpdate;}else if(targetObject.matrixWorldNeedsUpdate!==undefined){// node transform\nversioning=this.Versioning.MatrixWorldNeedsUpdate;}// determine how the property gets bound\nvar bindingType=this.BindingType.Direct;if(propertyIndex!==undefined){// access a sub element of the property array (only primitives are supported right now)\nif(propertyName===\"morphTargetInfluences\"){// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n// support resolving morphTarget names into indices.\nif(!targetObject.geometry){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.',this);return;}if(targetObject.geometry.isBufferGeometry){if(!targetObject.geometry.morphAttributes){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.',this);return;}for(var i=0;i<this.node.geometry.morphAttributes.position.length;i++){if(targetObject.geometry.morphAttributes.position[i].name===propertyIndex){propertyIndex=i;break;}}}else{if(!targetObject.geometry.morphTargets){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.',this);return;}for(var i=0;i<this.node.geometry.morphTargets.length;i++){if(targetObject.geometry.morphTargets[i].name===propertyIndex){propertyIndex=i;break;}}}}bindingType=this.BindingType.ArrayElement;this.resolvedProperty=nodeProperty;this.propertyIndex=propertyIndex;}else if(nodeProperty.fromArray!==undefined&&nodeProperty.toArray!==undefined){// must use copy for Object3D.Euler/Quaternion\nbindingType=this.BindingType.HasFromToArray;this.resolvedProperty=nodeProperty;}else if(Array.isArray(nodeProperty)){bindingType=this.BindingType.EntireArray;this.resolvedProperty=nodeProperty;}else{this.propertyName=propertyName;}// select getter / setter\nthis.getValue=this.GetterByBindingType[bindingType];this.setValue=this.SetterByBindingTypeAndVersioning[bindingType][versioning];},unbind:function(){this.node=null;// back to the prototype version of getValue / setValue\n// note: avoiding to mutate the shape of 'this' via 'delete'\nthis.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound;}});//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign(PropertyBinding.prototype,{// initial state of these methods that calls 'bind'\n_getValue_unbound:PropertyBinding.prototype.getValue,_setValue_unbound:PropertyBinding.prototype.setValue});/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t *  - Add objects you would otherwise pass as 'root' to the\n\t *    constructor or the .clipAction method of AnimationMixer.\n\t *\n\t *  - Instead pass this object as 'root'.\n\t *\n\t *  - You can also add and remove objects later when the mixer\n\t *    is running.\n\t *\n\t * Note:\n\t *\n\t *    Objects of this class appear as one object to the mixer,\n\t *    so cache control of the individual objects must be done\n\t *    on the group.\n\t *\n\t * Limitation:\n\t *\n\t *  - The animated properties must be compatible among the\n\t *    all objects in the group.\n\t *\n\t *  - A single property can either be controlled through a\n\t *    target group or directly, but not both.\n\t *\n\t * @author tschw\n\t */function AnimationObjectGroup(){this.uuid=_Math.generateUUID();// cached objects followed by the active ones\nthis._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;// threshold\n// note: read by PropertyBinding.Composite\nvar indices={};this._indicesByUUID=indices;// for bookkeeping\nfor(var i=0,n=arguments.length;i!==n;++i){indices[arguments[i].uuid]=i;}this._paths=[];// inside: string\nthis._parsedPaths=[];// inside: { we don't care, here }\nthis._bindings=[];// inside: Array< PropertyBinding >\nthis._bindingsIndicesByPath={};// inside: indices in these arrays\nvar scope=this;this.stats={objects:{get total(){return scope._objects.length;},get inUse(){return this.total-scope.nCachedObjects_;}},get bindingsPerObject(){return scope._bindings.length;}};}Object.assign(AnimationObjectGroup.prototype,{isAnimationObjectGroup:true,add:function(){var objects=this._objects,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,indicesByUUID=this._indicesByUUID,paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,nBindings=bindings.length,knownObject=undefined;for(var i=0,n=arguments.length;i!==n;++i){var object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(index===undefined){// unknown object -> add it to the ACTIVE region\nindex=nObjects++;indicesByUUID[uuid]=index;objects.push(object);// accounting is done, now do the same for all bindings\nfor(var j=0,m=nBindings;j!==m;++j){bindings[j].push(new PropertyBinding(object,paths[j],parsedPaths[j]));}}else if(index<nCachedObjects){knownObject=objects[index];// move existing object to the ACTIVE region\nvar firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex];indicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;indicesByUUID[uuid]=firstActiveIndex;objects[firstActiveIndex]=object;// accounting is done, now do the same for all bindings\nfor(var j=0,m=nBindings;j!==m;++j){var bindingsForPath=bindings[j],lastCached=bindingsForPath[firstActiveIndex],binding=bindingsForPath[index];bindingsForPath[index]=lastCached;if(binding===undefined){// since we do not bother to create new bindings\n// for objects that are cached, the binding may\n// or may not exist\nbinding=new PropertyBinding(object,paths[j],parsedPaths[j]);}bindingsForPath[firstActiveIndex]=binding;}}else if(objects[index]!==knownObject){console.error('THREE.AnimationObjectGroup: Different objects with the same UUID '+'detected. Clean the caches or recreate your infrastructure when reloading scenes.');}// else the object is already where we want it to be\n}// for arguments\nthis.nCachedObjects_=nCachedObjects;},remove:function(){var objects=this._objects,nCachedObjects=this.nCachedObjects_,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;for(var i=0,n=arguments.length;i!==n;++i){var object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(index!==undefined&&index>=nCachedObjects){// move existing object into the CACHED region\nvar lastCachedIndex=nCachedObjects++,firstActiveObject=objects[lastCachedIndex];indicesByUUID[firstActiveObject.uuid]=index;objects[index]=firstActiveObject;indicesByUUID[uuid]=lastCachedIndex;objects[lastCachedIndex]=object;// accounting is done, now do the same for all bindings\nfor(var j=0,m=nBindings;j!==m;++j){var bindingsForPath=bindings[j],firstActive=bindingsForPath[lastCachedIndex],binding=bindingsForPath[index];bindingsForPath[index]=firstActive;bindingsForPath[lastCachedIndex]=binding;}}}// for arguments\nthis.nCachedObjects_=nCachedObjects;},// remove & forget\nuncache:function(){var objects=this._objects,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;for(var i=0,n=arguments.length;i!==n;++i){var object=arguments[i],uuid=object.uuid,index=indicesByUUID[uuid];if(index!==undefined){delete indicesByUUID[uuid];if(index<nCachedObjects){// object is cached, shrink the CACHED region\nvar firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex],lastIndex=--nObjects,lastObject=objects[lastIndex];// last cached object takes this object's place\nindicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;// last object goes to the activated slot and pop\nindicesByUUID[lastObject.uuid]=firstActiveIndex;objects[firstActiveIndex]=lastObject;objects.pop();// accounting is done, now do the same for all bindings\nfor(var j=0,m=nBindings;j!==m;++j){var bindingsForPath=bindings[j],lastCached=bindingsForPath[firstActiveIndex],last=bindingsForPath[lastIndex];bindingsForPath[index]=lastCached;bindingsForPath[firstActiveIndex]=last;bindingsForPath.pop();}}else{// object is active, just swap with the last and pop\nvar lastIndex=--nObjects,lastObject=objects[lastIndex];indicesByUUID[lastObject.uuid]=index;objects[index]=lastObject;objects.pop();// accounting is done, now do the same for all bindings\nfor(var j=0,m=nBindings;j!==m;++j){var bindingsForPath=bindings[j];bindingsForPath[index]=bindingsForPath[lastIndex];bindingsForPath.pop();}}// cached or active\n}// if object is known\n}// for arguments\nthis.nCachedObjects_=nCachedObjects;},// Internal interface used by befriended PropertyBinding.Composite:\nsubscribe_:function(path,parsedPath){// returns an array of bindings for the given path that is changed\n// according to the contained objects in the group\nvar indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path],bindings=this._bindings;if(index!==undefined)return bindings[index];var paths=this._paths,parsedPaths=this._parsedPaths,objects=this._objects,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,bindingsForPath=new Array(nObjects);index=bindings.length;indicesByPath[path]=index;paths.push(path);parsedPaths.push(parsedPath);bindings.push(bindingsForPath);for(var i=nCachedObjects,n=objects.length;i!==n;++i){var object=objects[i];bindingsForPath[i]=new PropertyBinding(object,path,parsedPath);}return bindingsForPath;},unsubscribe_:function(path){// tells the group to forget about a property path and no longer\n// update the array previously obtained with 'subscribe_'\nvar indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path];if(index!==undefined){var paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,lastBindingsIndex=bindings.length-1,lastBindings=bindings[lastBindingsIndex],lastBindingsPath=path[lastBindingsIndex];indicesByPath[lastBindingsPath]=index;bindings[index]=lastBindings;bindings.pop();parsedPaths[index]=parsedPaths[lastBindingsIndex];parsedPaths.pop();paths[index]=paths[lastBindingsIndex];paths.pop();}}});/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */function AnimationAction(mixer,clip,localRoot){this._mixer=mixer;this._clip=clip;this._localRoot=localRoot||null;var tracks=clip.tracks,nTracks=tracks.length,interpolants=new Array(nTracks);var interpolantSettings={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding};for(var i=0;i!==nTracks;++i){var interpolant=tracks[i].createInterpolant(null);interpolants[i]=interpolant;interpolant.settings=interpolantSettings;}this._interpolantSettings=interpolantSettings;this._interpolants=interpolants;// bound by the mixer\n// inside: PropertyMixer (managed by the mixer)\nthis._propertyBindings=new Array(nTracks);this._cacheIndex=null;// for the memory manager\nthis._byClipCacheIndex=null;// for the memory manager\nthis._timeScaleInterpolant=null;this._weightInterpolant=null;this.loop=LoopRepeat;this._loopCount=-1;// global mixer time when the action is to be started\n// it's set back to 'null' upon start of the action\nthis._startTime=null;// scaled local time of the action\n// gets clamped or wrapped to 0..clip.duration according to loop\nthis.time=0;this.timeScale=1;this._effectiveTimeScale=1;this.weight=1;this._effectiveWeight=1;this.repetitions=Infinity;// no. of repetitions when looping\nthis.paused=false;// true -> zero effective time scale\nthis.enabled=true;// false -> zero effective weight\nthis.clampWhenFinished=false;// keep feeding the last frame?\nthis.zeroSlopeAtStart=true;// for smooth interpolation w/o separate\nthis.zeroSlopeAtEnd=true;// clips for start, loop and end\n}Object.assign(AnimationAction.prototype,{// State & Scheduling\nplay:function(){this._mixer._activateAction(this);return this;},stop:function(){this._mixer._deactivateAction(this);return this.reset();},reset:function(){this.paused=false;this.enabled=true;this.time=0;// restart clip\nthis._loopCount=-1;// forget previous loops\nthis._startTime=null;// forget scheduling\nreturn this.stopFading().stopWarping();},isRunning:function(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this);},// return true when play has been called\nisScheduled:function(){return this._mixer._isActiveAction(this);},startAt:function(time){this._startTime=time;return this;},setLoop:function(mode,repetitions){this.loop=mode;this.repetitions=repetitions;return this;},// Weight\n// set the weight stopping any scheduled fading\n// although .enabled = false yields an effective weight of zero, this\n// method does *not* change .enabled, because it would be confusing\nsetEffectiveWeight:function(weight){this.weight=weight;// note: same logic as when updated at runtime\nthis._effectiveWeight=this.enabled?weight:0;return this.stopFading();},// return the weight considering fading and .enabled\ngetEffectiveWeight:function(){return this._effectiveWeight;},fadeIn:function(duration){return this._scheduleFading(duration,0,1);},fadeOut:function(duration){return this._scheduleFading(duration,1,0);},crossFadeFrom:function(fadeOutAction,duration,warp){fadeOutAction.fadeOut(duration);this.fadeIn(duration);if(warp){var fadeInDuration=this._clip.duration,fadeOutDuration=fadeOutAction._clip.duration,startEndRatio=fadeOutDuration/fadeInDuration,endStartRatio=fadeInDuration/fadeOutDuration;fadeOutAction.warp(1.0,startEndRatio,duration);this.warp(endStartRatio,1.0,duration);}return this;},crossFadeTo:function(fadeInAction,duration,warp){return fadeInAction.crossFadeFrom(this,duration,warp);},stopFading:function(){var weightInterpolant=this._weightInterpolant;if(weightInterpolant!==null){this._weightInterpolant=null;this._mixer._takeBackControlInterpolant(weightInterpolant);}return this;},// Time Scale Control\n// set the time scale stopping any scheduled warping\n// although .paused = true yields an effective time scale of zero, this\n// method does *not* change .paused, because it would be confusing\nsetEffectiveTimeScale:function(timeScale){this.timeScale=timeScale;this._effectiveTimeScale=this.paused?0:timeScale;return this.stopWarping();},// return the time scale considering warping and .paused\ngetEffectiveTimeScale:function(){return this._effectiveTimeScale;},setDuration:function(duration){this.timeScale=this._clip.duration/duration;return this.stopWarping();},syncWith:function(action){this.time=action.time;this.timeScale=action.timeScale;return this.stopWarping();},halt:function(duration){return this.warp(this._effectiveTimeScale,0,duration);},warp:function(startTimeScale,endTimeScale,duration){var mixer=this._mixer,now=mixer.time,interpolant=this._timeScaleInterpolant,timeScale=this.timeScale;if(interpolant===null){interpolant=mixer._lendControlInterpolant();this._timeScaleInterpolant=interpolant;}var times=interpolant.parameterPositions,values=interpolant.sampleValues;times[0]=now;times[1]=now+duration;values[0]=startTimeScale/timeScale;values[1]=endTimeScale/timeScale;return this;},stopWarping:function(){var timeScaleInterpolant=this._timeScaleInterpolant;if(timeScaleInterpolant!==null){this._timeScaleInterpolant=null;this._mixer._takeBackControlInterpolant(timeScaleInterpolant);}return this;},// Object Accessors\ngetMixer:function(){return this._mixer;},getClip:function(){return this._clip;},getRoot:function(){return this._localRoot||this._mixer._root;},// Interna\n_update:function(time,deltaTime,timeDirection,accuIndex){// called by the mixer\nif(!this.enabled){// call ._updateWeight() to update ._effectiveWeight\nthis._updateWeight(time);return;}var startTime=this._startTime;if(startTime!==null){// check for scheduled start of action\nvar timeRunning=(time-startTime)*timeDirection;if(timeRunning<0||timeDirection===0){return;// yet to come / don't decide when delta = 0\n}// start\nthis._startTime=null;// unschedule\ndeltaTime=timeDirection*timeRunning;}// apply time scale and advance time\ndeltaTime*=this._updateTimeScale(time);var clipTime=this._updateTime(deltaTime);// note: _updateTime may disable the action resulting in\n// an effective weight of 0\nvar weight=this._updateWeight(time);if(weight>0){var interpolants=this._interpolants;var propertyMixers=this._propertyBindings;for(var j=0,m=interpolants.length;j!==m;++j){interpolants[j].evaluate(clipTime);propertyMixers[j].accumulate(accuIndex,weight);}}},_updateWeight:function(time){var weight=0;if(this.enabled){weight=this.weight;var interpolant=this._weightInterpolant;if(interpolant!==null){var interpolantValue=interpolant.evaluate(time)[0];weight*=interpolantValue;if(time>interpolant.parameterPositions[1]){this.stopFading();if(interpolantValue===0){// faded out, disable\nthis.enabled=false;}}}}this._effectiveWeight=weight;return weight;},_updateTimeScale:function(time){var timeScale=0;if(!this.paused){timeScale=this.timeScale;var interpolant=this._timeScaleInterpolant;if(interpolant!==null){var interpolantValue=interpolant.evaluate(time)[0];timeScale*=interpolantValue;if(time>interpolant.parameterPositions[1]){this.stopWarping();if(timeScale===0){// motion has halted, pause\nthis.paused=true;}else{// warp done - apply final time scale\nthis.timeScale=timeScale;}}}}this._effectiveTimeScale=timeScale;return timeScale;},_updateTime:function(deltaTime){var time=this.time+deltaTime;var duration=this._clip.duration;var loop=this.loop;var loopCount=this._loopCount;var pingPong=loop===LoopPingPong;if(deltaTime===0){if(loopCount===-1)return time;return pingPong&&(loopCount&1)===1?duration-time:time;}if(loop===LoopOnce){if(loopCount===-1){// just started\nthis._loopCount=0;this._setEndings(true,true,false);}handle_stop:{if(time>=duration){time=duration;}else if(time<0){time=0;}else break handle_stop;if(this.clampWhenFinished)this.paused=true;else this.enabled=false;this._mixer.dispatchEvent({type:'finished',action:this,direction:deltaTime<0?-1:1});}}else{// repetitive Repeat or PingPong\nif(loopCount===-1){// just started\nif(deltaTime>=0){loopCount=0;this._setEndings(true,this.repetitions===0,pingPong);}else{// when looping in reverse direction, the initial\n// transition through zero counts as a repetition,\n// so leave loopCount at -1\nthis._setEndings(this.repetitions===0,true,pingPong);}}if(time>=duration||time<0){// wrap around\nvar loopDelta=Math.floor(time/duration);// signed\ntime-=duration*loopDelta;loopCount+=Math.abs(loopDelta);var pending=this.repetitions-loopCount;if(pending<=0){// have to stop (switch state, clamp time, fire event)\nif(this.clampWhenFinished)this.paused=true;else this.enabled=false;time=deltaTime>0?duration:0;this._mixer.dispatchEvent({type:'finished',action:this,direction:deltaTime>0?1:-1});}else{// keep running\nif(pending===1){// entering the last round\nvar atStart=deltaTime<0;this._setEndings(atStart,!atStart,pingPong);}else{this._setEndings(false,false,pingPong);}this._loopCount=loopCount;this._mixer.dispatchEvent({type:'loop',action:this,loopDelta:loopDelta});}}if(pingPong&&(loopCount&1)===1){// invert time for the \"pong round\"\nthis.time=time;return duration-time;}}this.time=time;return time;},_setEndings:function(atStart,atEnd,pingPong){var settings=this._interpolantSettings;if(pingPong){settings.endingStart=ZeroSlopeEnding;settings.endingEnd=ZeroSlopeEnding;}else{// assuming for LoopOnce atStart == atEnd == true\nif(atStart){settings.endingStart=this.zeroSlopeAtStart?ZeroSlopeEnding:ZeroCurvatureEnding;}else{settings.endingStart=WrapAroundEnding;}if(atEnd){settings.endingEnd=this.zeroSlopeAtEnd?ZeroSlopeEnding:ZeroCurvatureEnding;}else{settings.endingEnd=WrapAroundEnding;}}},_scheduleFading:function(duration,weightNow,weightThen){var mixer=this._mixer,now=mixer.time,interpolant=this._weightInterpolant;if(interpolant===null){interpolant=mixer._lendControlInterpolant();this._weightInterpolant=interpolant;}var times=interpolant.parameterPositions,values=interpolant.sampleValues;times[0]=now;values[0]=weightNow;times[1]=now+duration;values[1]=weightThen;return this;}});/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */function AnimationMixer(root){this._root=root;this._initMemoryManager();this._accuIndex=0;this.time=0;this.timeScale=1.0;}AnimationMixer.prototype=Object.assign(Object.create(EventDispatcher.prototype),{constructor:AnimationMixer,_bindAction:function(action,prototypeAction){var root=action._localRoot||this._root,tracks=action._clip.tracks,nTracks=tracks.length,bindings=action._propertyBindings,interpolants=action._interpolants,rootUuid=root.uuid,bindingsByRoot=this._bindingsByRootAndName,bindingsByName=bindingsByRoot[rootUuid];if(bindingsByName===undefined){bindingsByName={};bindingsByRoot[rootUuid]=bindingsByName;}for(var i=0;i!==nTracks;++i){var track=tracks[i],trackName=track.name,binding=bindingsByName[trackName];if(binding!==undefined){bindings[i]=binding;}else{binding=bindings[i];if(binding!==undefined){// existing binding, make sure the cache knows\nif(binding._cacheIndex===null){++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName);}continue;}var path=prototypeAction&&prototypeAction._propertyBindings[i].binding.parsedPath;binding=new PropertyMixer(PropertyBinding.create(root,trackName,path),track.ValueTypeName,track.getValueSize());++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName);bindings[i]=binding;}interpolants[i].resultBuffer=binding.buffer;}},_activateAction:function(action){if(!this._isActiveAction(action)){if(action._cacheIndex===null){// this action has been forgotten by the cache, but the user\n// appears to be still using it -> rebind\nvar rootUuid=(action._localRoot||this._root).uuid,clipUuid=action._clip.uuid,actionsForClip=this._actionsByClip[clipUuid];this._bindAction(action,actionsForClip&&actionsForClip.knownActions[0]);this._addInactiveAction(action,clipUuid,rootUuid);}var bindings=action._propertyBindings;// increment reference counts / sort out state\nfor(var i=0,n=bindings.length;i!==n;++i){var binding=bindings[i];if(binding.useCount++===0){this._lendBinding(binding);binding.saveOriginalState();}}this._lendAction(action);}},_deactivateAction:function(action){if(this._isActiveAction(action)){var bindings=action._propertyBindings;// decrement reference counts / sort out state\nfor(var i=0,n=bindings.length;i!==n;++i){var binding=bindings[i];if(--binding.useCount===0){binding.restoreOriginalState();this._takeBackBinding(binding);}}this._takeBackAction(action);}},// Memory manager\n_initMemoryManager:function(){this._actions=[];// 'nActiveActions' followed by inactive ones\nthis._nActiveActions=0;this._actionsByClip={};// inside:\n// {\n// \tknownActions: Array< AnimationAction > - used as prototypes\n// \tactionByRoot: AnimationAction - lookup\n// }\nthis._bindings=[];// 'nActiveBindings' followed by inactive ones\nthis._nActiveBindings=0;this._bindingsByRootAndName={};// inside: Map< name, PropertyMixer >\nthis._controlInterpolants=[];// same game as above\nthis._nActiveControlInterpolants=0;var scope=this;this.stats={actions:{get total(){return scope._actions.length;},get inUse(){return scope._nActiveActions;}},bindings:{get total(){return scope._bindings.length;},get inUse(){return scope._nActiveBindings;}},controlInterpolants:{get total(){return scope._controlInterpolants.length;},get inUse(){return scope._nActiveControlInterpolants;}}};},// Memory management for AnimationAction objects\n_isActiveAction:function(action){var index=action._cacheIndex;return index!==null&&index<this._nActiveActions;},_addInactiveAction:function(action,clipUuid,rootUuid){var actions=this._actions,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid];if(actionsForClip===undefined){actionsForClip={knownActions:[action],actionByRoot:{}};action._byClipCacheIndex=0;actionsByClip[clipUuid]=actionsForClip;}else{var knownActions=actionsForClip.knownActions;action._byClipCacheIndex=knownActions.length;knownActions.push(action);}action._cacheIndex=actions.length;actions.push(action);actionsForClip.actionByRoot[rootUuid]=action;},_removeInactiveAction:function(action){var actions=this._actions,lastInactiveAction=actions[actions.length-1],cacheIndex=action._cacheIndex;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();action._cacheIndex=null;var clipUuid=action._clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid],knownActionsForClip=actionsForClip.knownActions,lastKnownAction=knownActionsForClip[knownActionsForClip.length-1],byClipCacheIndex=action._byClipCacheIndex;lastKnownAction._byClipCacheIndex=byClipCacheIndex;knownActionsForClip[byClipCacheIndex]=lastKnownAction;knownActionsForClip.pop();action._byClipCacheIndex=null;var actionByRoot=actionsForClip.actionByRoot,rootUuid=(action._localRoot||this._root).uuid;delete actionByRoot[rootUuid];if(knownActionsForClip.length===0){delete actionsByClip[clipUuid];}this._removeInactiveBindingsForAction(action);},_removeInactiveBindingsForAction:function(action){var bindings=action._propertyBindings;for(var i=0,n=bindings.length;i!==n;++i){var binding=bindings[i];if(--binding.referenceCount===0){this._removeInactiveBinding(binding);}}},_lendAction:function(action){// [ active actions |  inactive actions  ]\n// [  active actions >| inactive actions ]\n//                 s        a\n//                  <-swap->\n//                 a        s\nvar actions=this._actions,prevIndex=action._cacheIndex,lastActiveIndex=this._nActiveActions++,firstInactiveAction=actions[lastActiveIndex];action._cacheIndex=lastActiveIndex;actions[lastActiveIndex]=action;firstInactiveAction._cacheIndex=prevIndex;actions[prevIndex]=firstInactiveAction;},_takeBackAction:function(action){// [  active actions  | inactive actions ]\n// [ active actions |< inactive actions  ]\n//        a        s\n//         <-swap->\n//        s        a\nvar actions=this._actions,prevIndex=action._cacheIndex,firstInactiveIndex=--this._nActiveActions,lastActiveAction=actions[firstInactiveIndex];action._cacheIndex=firstInactiveIndex;actions[firstInactiveIndex]=action;lastActiveAction._cacheIndex=prevIndex;actions[prevIndex]=lastActiveAction;},// Memory management for PropertyMixer objects\n_addInactiveBinding:function(binding,rootUuid,trackName){var bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid],bindings=this._bindings;if(bindingByName===undefined){bindingByName={};bindingsByRoot[rootUuid]=bindingByName;}bindingByName[trackName]=binding;binding._cacheIndex=bindings.length;bindings.push(binding);},_removeInactiveBinding:function(binding){var bindings=this._bindings,propBinding=binding.binding,rootUuid=propBinding.rootNode.uuid,trackName=propBinding.path,bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid],lastInactiveBinding=bindings[bindings.length-1],cacheIndex=binding._cacheIndex;lastInactiveBinding._cacheIndex=cacheIndex;bindings[cacheIndex]=lastInactiveBinding;bindings.pop();delete bindingByName[trackName];remove_empty_map:{for(var _ in bindingByName)break remove_empty_map;// eslint-disable-line no-unused-vars\ndelete bindingsByRoot[rootUuid];}},_lendBinding:function(binding){var bindings=this._bindings,prevIndex=binding._cacheIndex,lastActiveIndex=this._nActiveBindings++,firstInactiveBinding=bindings[lastActiveIndex];binding._cacheIndex=lastActiveIndex;bindings[lastActiveIndex]=binding;firstInactiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=firstInactiveBinding;},_takeBackBinding:function(binding){var bindings=this._bindings,prevIndex=binding._cacheIndex,firstInactiveIndex=--this._nActiveBindings,lastActiveBinding=bindings[firstInactiveIndex];binding._cacheIndex=firstInactiveIndex;bindings[firstInactiveIndex]=binding;lastActiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=lastActiveBinding;},// Memory management of Interpolants for weight and time scale\n_lendControlInterpolant:function(){var interpolants=this._controlInterpolants,lastActiveIndex=this._nActiveControlInterpolants++,interpolant=interpolants[lastActiveIndex];if(interpolant===undefined){interpolant=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer);interpolant.__cacheIndex=lastActiveIndex;interpolants[lastActiveIndex]=interpolant;}return interpolant;},_takeBackControlInterpolant:function(interpolant){var interpolants=this._controlInterpolants,prevIndex=interpolant.__cacheIndex,firstInactiveIndex=--this._nActiveControlInterpolants,lastActiveInterpolant=interpolants[firstInactiveIndex];interpolant.__cacheIndex=firstInactiveIndex;interpolants[firstInactiveIndex]=interpolant;lastActiveInterpolant.__cacheIndex=prevIndex;interpolants[prevIndex]=lastActiveInterpolant;},_controlInterpolantsResultBuffer:new Float32Array(1),// return an action for a clip optionally using a custom root target\n// object (this method allocates a lot of dynamic memory in case a\n// previously unknown clip/root combination is specified)\nclipAction:function(clip,optionalRoot){var root=optionalRoot||this._root,rootUuid=root.uuid,clipObject=typeof clip==='string'?AnimationClip.findByName(root,clip):clip,clipUuid=clipObject!==null?clipObject.uuid:clip,actionsForClip=this._actionsByClip[clipUuid],prototypeAction=null;if(actionsForClip!==undefined){var existingAction=actionsForClip.actionByRoot[rootUuid];if(existingAction!==undefined){return existingAction;}// we know the clip, so we don't have to parse all\n// the bindings again but can just copy\nprototypeAction=actionsForClip.knownActions[0];// also, take the clip from the prototype action\nif(clipObject===null)clipObject=prototypeAction._clip;}// clip must be known when specified via string\nif(clipObject===null)return null;// allocate all resources required to run it\nvar newAction=new AnimationAction(this,clipObject,optionalRoot);this._bindAction(newAction,prototypeAction);// and make the action known to the memory manager\nthis._addInactiveAction(newAction,clipUuid,rootUuid);return newAction;},// get an existing action\nexistingAction:function(clip,optionalRoot){var root=optionalRoot||this._root,rootUuid=root.uuid,clipObject=typeof clip==='string'?AnimationClip.findByName(root,clip):clip,clipUuid=clipObject?clipObject.uuid:clip,actionsForClip=this._actionsByClip[clipUuid];if(actionsForClip!==undefined){return actionsForClip.actionByRoot[rootUuid]||null;}return null;},// deactivates all previously scheduled actions\nstopAllAction:function(){var actions=this._actions,nActions=this._nActiveActions,bindings=this._bindings,nBindings=this._nActiveBindings;this._nActiveActions=0;this._nActiveBindings=0;for(var i=0;i!==nActions;++i){actions[i].reset();}for(var i=0;i!==nBindings;++i){bindings[i].useCount=0;}return this;},// advance the time and update apply the animation\nupdate:function(deltaTime){deltaTime*=this.timeScale;var actions=this._actions,nActions=this._nActiveActions,time=this.time+=deltaTime,timeDirection=Math.sign(deltaTime),accuIndex=this._accuIndex^=1;// run active actions\nfor(var i=0;i!==nActions;++i){var action=actions[i];action._update(time,deltaTime,timeDirection,accuIndex);}// update scene graph\nvar bindings=this._bindings,nBindings=this._nActiveBindings;for(var i=0;i!==nBindings;++i){bindings[i].apply(accuIndex);}return this;},// return this mixer's root target object\ngetRoot:function(){return this._root;},// free all resources specific to a particular clip\nuncacheClip:function(clip){var actions=this._actions,clipUuid=clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid];if(actionsForClip!==undefined){// note: just calling _removeInactiveAction would mess up the\n// iteration state and also require updating the state we can\n// just throw away\nvar actionsToRemove=actionsForClip.knownActions;for(var i=0,n=actionsToRemove.length;i!==n;++i){var action=actionsToRemove[i];this._deactivateAction(action);var cacheIndex=action._cacheIndex,lastInactiveAction=actions[actions.length-1];action._cacheIndex=null;action._byClipCacheIndex=null;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();this._removeInactiveBindingsForAction(action);}delete actionsByClip[clipUuid];}},// free all resources specific to a particular root target object\nuncacheRoot:function(root){var rootUuid=root.uuid,actionsByClip=this._actionsByClip;for(var clipUuid in actionsByClip){var actionByRoot=actionsByClip[clipUuid].actionByRoot,action=actionByRoot[rootUuid];if(action!==undefined){this._deactivateAction(action);this._removeInactiveAction(action);}}var bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid];if(bindingByName!==undefined){for(var trackName in bindingByName){var binding=bindingByName[trackName];binding.restoreOriginalState();this._removeInactiveBinding(binding);}}},// remove a targeted clip from the cache\nuncacheAction:function(clip,optionalRoot){var action=this.existingAction(clip,optionalRoot);if(action!==null){this._deactivateAction(action);this._removeInactiveAction(action);}}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function Uniform(value){if(typeof value==='string'){console.warn('THREE.Uniform: Type parameter is no longer needed.');value=arguments[1];}this.value=value;}Uniform.prototype.clone=function(){return new Uniform(this.value.clone===undefined?this.value:this.value.clone());};/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */function InstancedBufferGeometry(){BufferGeometry.call(this);this.type='InstancedBufferGeometry';this.maxInstancedCount=undefined;}InstancedBufferGeometry.prototype=Object.assign(Object.create(BufferGeometry.prototype),{constructor:InstancedBufferGeometry,isInstancedBufferGeometry:true,copy:function(source){BufferGeometry.prototype.copy.call(this,source);this.maxInstancedCount=source.maxInstancedCount;return this;},clone:function(){return new this.constructor().copy(this);}});/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */function InstancedInterleavedBuffer(array,stride,meshPerAttribute){InterleavedBuffer.call(this,array,stride);this.meshPerAttribute=meshPerAttribute||1;}InstancedInterleavedBuffer.prototype=Object.assign(Object.create(InterleavedBuffer.prototype),{constructor:InstancedInterleavedBuffer,isInstancedInterleavedBuffer:true,copy:function(source){InterleavedBuffer.prototype.copy.call(this,source);this.meshPerAttribute=source.meshPerAttribute;return this;}});/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */function InstancedBufferAttribute(array,itemSize,normalized,meshPerAttribute){if(typeof normalized==='number'){meshPerAttribute=normalized;normalized=false;console.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');}BufferAttribute.call(this,array,itemSize,normalized);this.meshPerAttribute=meshPerAttribute||1;}InstancedBufferAttribute.prototype=Object.assign(Object.create(BufferAttribute.prototype),{constructor:InstancedBufferAttribute,isInstancedBufferAttribute:true,copy:function(source){BufferAttribute.prototype.copy.call(this,source);this.meshPerAttribute=source.meshPerAttribute;return this;}});/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */function Raycaster(origin,direction,near,far){this.ray=new Ray(origin,direction);// direction is assumed to be normalized (for accurate distance calculations)\nthis.near=near||0;this.far=far||Infinity;this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}};Object.defineProperties(this.params,{PointCloud:{get:function(){console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');return this.Points;}}});}function ascSort(a,b){return a.distance-b.distance;}function intersectObject(object,raycaster,intersects,recursive){if(object.visible===false)return;object.raycast(raycaster,intersects);if(recursive===true){var children=object.children;for(var i=0,l=children.length;i<l;i++){intersectObject(children[i],raycaster,intersects,true);}}}Object.assign(Raycaster.prototype,{linePrecision:1,set:function(origin,direction){// direction is assumed to be normalized (for accurate distance calculations)\nthis.ray.set(origin,direction);},setFromCamera:function(coords,camera){if(camera&&camera.isPerspectiveCamera){this.ray.origin.setFromMatrixPosition(camera.matrixWorld);this.ray.direction.set(coords.x,coords.y,0.5).unproject(camera).sub(this.ray.origin).normalize();}else if(camera&&camera.isOrthographicCamera){this.ray.origin.set(coords.x,coords.y,(camera.near+camera.far)/(camera.near-camera.far)).unproject(camera);// set origin in plane of camera\nthis.ray.direction.set(0,0,-1).transformDirection(camera.matrixWorld);}else{console.error('THREE.Raycaster: Unsupported camera type.');}},intersectObject:function(object,recursive,optionalTarget){var intersects=optionalTarget||[];intersectObject(object,this,intersects,recursive);intersects.sort(ascSort);return intersects;},intersectObjects:function(objects,recursive,optionalTarget){var intersects=optionalTarget||[];if(Array.isArray(objects)===false){console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');return intersects;}for(var i=0,l=objects.length;i<l;i++){intersectObject(objects[i],this,intersects,recursive);}intersects.sort(ascSort);return intersects;}});/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n\t * The azimuthal angle (theta) is measured from the positive z-axiz.\n\t */function Spherical(radius,phi,theta){this.radius=radius!==undefined?radius:1.0;this.phi=phi!==undefined?phi:0;// polar angle\nthis.theta=theta!==undefined?theta:0;// azimuthal angle\nreturn this;}Object.assign(Spherical.prototype,{set:function(radius,phi,theta){this.radius=radius;this.phi=phi;this.theta=theta;return this;},clone:function(){return new this.constructor().copy(this);},copy:function(other){this.radius=other.radius;this.phi=other.phi;this.theta=other.theta;return this;},// restrict phi to be betwee EPS and PI-EPS\nmakeSafe:function(){var EPS=0.000001;this.phi=Math.max(EPS,Math.min(Math.PI-EPS,this.phi));return this;},setFromVector3:function(v){return this.setFromCartesianCoords(v.x,v.y,v.z);},setFromCartesianCoords:function(x,y,z){this.radius=Math.sqrt(x*x+y*y+z*z);if(this.radius===0){this.theta=0;this.phi=0;}else{this.theta=Math.atan2(x,z);this.phi=Math.acos(_Math.clamp(y/this.radius,-1,1));}return this;}});/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t *\n\t */function Cylindrical(radius,theta,y){this.radius=radius!==undefined?radius:1.0;// distance from the origin to a point in the x-z plane\nthis.theta=theta!==undefined?theta:0;// counterclockwise angle in the x-z plane measured in radians from the positive z-axis\nthis.y=y!==undefined?y:0;// height above the x-z plane\nreturn this;}Object.assign(Cylindrical.prototype,{set:function(radius,theta,y){this.radius=radius;this.theta=theta;this.y=y;return this;},clone:function(){return new this.constructor().copy(this);},copy:function(other){this.radius=other.radius;this.theta=other.theta;this.y=other.y;return this;},setFromVector3:function(v){return this.setFromCartesianCoords(v.x,v.y,v.z);},setFromCartesianCoords:function(x,y,z){this.radius=Math.sqrt(x*x+z*z);this.theta=Math.atan2(x,z);this.y=y;return this;}});/**\n\t * @author bhouston / http://clara.io\n\t */function Box2(min,max){this.min=min!==undefined?min:new Vector2(+Infinity,+Infinity);this.max=max!==undefined?max:new Vector2(-Infinity,-Infinity);}Object.assign(Box2.prototype,{set:function(min,max){this.min.copy(min);this.max.copy(max);return this;},setFromPoints:function(points){this.makeEmpty();for(var i=0,il=points.length;i<il;i++){this.expandByPoint(points[i]);}return this;},setFromCenterAndSize:function(){var v1=new Vector2();return function setFromCenterAndSize(center,size){var halfSize=v1.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;};}(),clone:function(){return new this.constructor().copy(this);},copy:function(box){this.min.copy(box.min);this.max.copy(box.max);return this;},makeEmpty:function(){this.min.x=this.min.y=+Infinity;this.max.x=this.max.y=-Infinity;return this;},isEmpty:function(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\nreturn this.max.x<this.min.x||this.max.y<this.min.y;},getCenter:function(target){if(target===undefined){console.warn('THREE.Box2: .getCenter() target is now required');target=new Vector2();}return this.isEmpty()?target.set(0,0):target.addVectors(this.min,this.max).multiplyScalar(0.5);},getSize:function(target){if(target===undefined){console.warn('THREE.Box2: .getSize() target is now required');target=new Vector2();}return this.isEmpty()?target.set(0,0):target.subVectors(this.max,this.min);},expandByPoint:function(point){this.min.min(point);this.max.max(point);return this;},expandByVector:function(vector){this.min.sub(vector);this.max.add(vector);return this;},expandByScalar:function(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;},containsPoint:function(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y?false:true;},containsBox:function(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y;},getParameter:function(point,target){// This can potentially have a divide by zero if the box\n// has a size dimension of 0.\nif(target===undefined){console.warn('THREE.Box2: .getParameter() target is now required');target=new Vector2();}return target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y));},intersectsBox:function(box){// using 4 splitting planes to rule out intersections\nreturn box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y?false:true;},clampPoint:function(point,target){if(target===undefined){console.warn('THREE.Box2: .clampPoint() target is now required');target=new Vector2();}return target.copy(point).clamp(this.min,this.max);},distanceToPoint:function(){var v1=new Vector2();return function distanceToPoint(point){var clampedPoint=v1.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();};}(),intersect:function(box){this.min.max(box.min);this.max.min(box.max);return this;},union:function(box){this.min.min(box.min);this.max.max(box.max);return this;},translate:function(offset){this.min.add(offset);this.max.add(offset);return this;},equals:function(box){return box.min.equals(this.min)&&box.max.equals(this.max);}});/**\n\t * @author bhouston / http://clara.io\n\t */function Line3(start,end){this.start=start!==undefined?start:new Vector3();this.end=end!==undefined?end:new Vector3();}Object.assign(Line3.prototype,{set:function(start,end){this.start.copy(start);this.end.copy(end);return this;},clone:function(){return new this.constructor().copy(this);},copy:function(line){this.start.copy(line.start);this.end.copy(line.end);return this;},getCenter:function(target){if(target===undefined){console.warn('THREE.Line3: .getCenter() target is now required');target=new Vector3();}return target.addVectors(this.start,this.end).multiplyScalar(0.5);},delta:function(target){if(target===undefined){console.warn('THREE.Line3: .delta() target is now required');target=new Vector3();}return target.subVectors(this.end,this.start);},distanceSq:function(){return this.start.distanceToSquared(this.end);},distance:function(){return this.start.distanceTo(this.end);},at:function(t,target){if(target===undefined){console.warn('THREE.Line3: .at() target is now required');target=new Vector3();}return this.delta(target).multiplyScalar(t).add(this.start);},closestPointToPointParameter:function(){var startP=new Vector3();var startEnd=new Vector3();return function closestPointToPointParameter(point,clampToLine){startP.subVectors(point,this.start);startEnd.subVectors(this.end,this.start);var startEnd2=startEnd.dot(startEnd);var startEnd_startP=startEnd.dot(startP);var t=startEnd_startP/startEnd2;if(clampToLine){t=_Math.clamp(t,0,1);}return t;};}(),closestPointToPoint:function(point,clampToLine,target){var t=this.closestPointToPointParameter(point,clampToLine);if(target===undefined){console.warn('THREE.Line3: .closestPointToPoint() target is now required');target=new Vector3();}return this.delta(target).multiplyScalar(t).add(this.start);},applyMatrix4:function(matrix){this.start.applyMatrix4(matrix);this.end.applyMatrix4(matrix);return this;},equals:function(line){return line.start.equals(this.start)&&line.end.equals(this.end);}});/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */function ImmediateRenderObject(material){Object3D.call(this);this.material=material;this.render=function()/* renderCallback */{};}ImmediateRenderObject.prototype=Object.create(Object3D.prototype);ImmediateRenderObject.prototype.constructor=ImmediateRenderObject;ImmediateRenderObject.prototype.isImmediateRenderObject=true;/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */function VertexNormalsHelper(object,size,hex,linewidth){this.object=object;this.size=size!==undefined?size:1;var color=hex!==undefined?hex:0xff0000;var width=linewidth!==undefined?linewidth:1;//\nvar nNormals=0;var objGeometry=this.object.geometry;if(objGeometry&&objGeometry.isGeometry){nNormals=objGeometry.faces.length*3;}else if(objGeometry&&objGeometry.isBufferGeometry){nNormals=objGeometry.attributes.normal.count;}//\nvar geometry=new BufferGeometry();var positions=new Float32BufferAttribute(nNormals*2*3,3);geometry.addAttribute('position',positions);LineSegments.call(this,geometry,new LineBasicMaterial({color:color,linewidth:width}));//\nthis.matrixAutoUpdate=false;this.update();}VertexNormalsHelper.prototype=Object.create(LineSegments.prototype);VertexNormalsHelper.prototype.constructor=VertexNormalsHelper;VertexNormalsHelper.prototype.update=function(){var v1=new Vector3();var v2=new Vector3();var normalMatrix=new Matrix3();return function update(){var keys=['a','b','c'];this.object.updateMatrixWorld(true);normalMatrix.getNormalMatrix(this.object.matrixWorld);var matrixWorld=this.object.matrixWorld;var position=this.geometry.attributes.position;//\nvar objGeometry=this.object.geometry;if(objGeometry&&objGeometry.isGeometry){var vertices=objGeometry.vertices;var faces=objGeometry.faces;var idx=0;for(var i=0,l=faces.length;i<l;i++){var face=faces[i];for(var j=0,jl=face.vertexNormals.length;j<jl;j++){var vertex=vertices[face[keys[j]]];var normal=face.vertexNormals[j];v1.copy(vertex).applyMatrix4(matrixWorld);v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);position.setXYZ(idx,v1.x,v1.y,v1.z);idx=idx+1;position.setXYZ(idx,v2.x,v2.y,v2.z);idx=idx+1;}}}else if(objGeometry&&objGeometry.isBufferGeometry){var objPos=objGeometry.attributes.position;var objNorm=objGeometry.attributes.normal;var idx=0;// for simplicity, ignore index and drawcalls, and render every normal\nfor(var j=0,jl=objPos.count;j<jl;j++){v1.set(objPos.getX(j),objPos.getY(j),objPos.getZ(j)).applyMatrix4(matrixWorld);v2.set(objNorm.getX(j),objNorm.getY(j),objNorm.getZ(j));v2.applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);position.setXYZ(idx,v1.x,v1.y,v1.z);idx=idx+1;position.setXYZ(idx,v2.x,v2.y,v2.z);idx=idx+1;}}position.needsUpdate=true;};}();/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */function SpotLightHelper(light,color){Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;var geometry=new BufferGeometry();var positions=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var i=0,j=1,l=32;i<l;i++,j++){var p1=i/l*Math.PI*2;var p2=j/l*Math.PI*2;positions.push(Math.cos(p1),Math.sin(p1),1,Math.cos(p2),Math.sin(p2),1);}geometry.addAttribute('position',new Float32BufferAttribute(positions,3));var material=new LineBasicMaterial({fog:false});this.cone=new LineSegments(geometry,material);this.add(this.cone);this.update();}SpotLightHelper.prototype=Object.create(Object3D.prototype);SpotLightHelper.prototype.constructor=SpotLightHelper;SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose();this.cone.material.dispose();};SpotLightHelper.prototype.update=function(){var vector=new Vector3();return function update(){this.light.updateMatrixWorld();var coneLength=this.light.distance?this.light.distance:1000;var coneWidth=coneLength*Math.tan(this.light.angle);this.cone.scale.set(coneWidth,coneWidth,coneLength);vector.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(vector);if(this.color!==undefined){this.cone.material.color.set(this.color);}else{this.cone.material.color.copy(this.light.color);}};}();/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */function getBoneList(object){var boneList=[];if(object&&object.isBone){boneList.push(object);}for(var i=0;i<object.children.length;i++){boneList.push.apply(boneList,getBoneList(object.children[i]));}return boneList;}function SkeletonHelper(object){var bones=getBoneList(object);var geometry=new BufferGeometry();var vertices=[];var colors=[];var color1=new Color(0,0,1);var color2=new Color(0,1,0);for(var i=0;i<bones.length;i++){var bone=bones[i];if(bone.parent&&bone.parent.isBone){vertices.push(0,0,0);vertices.push(0,0,0);colors.push(color1.r,color1.g,color1.b);colors.push(color2.r,color2.g,color2.b);}}geometry.addAttribute('position',new Float32BufferAttribute(vertices,3));geometry.addAttribute('color',new Float32BufferAttribute(colors,3));var material=new LineBasicMaterial({vertexColors:VertexColors,depthTest:false,depthWrite:false,transparent:true});LineSegments.call(this,geometry,material);this.root=object;this.bones=bones;this.matrix=object.matrixWorld;this.matrixAutoUpdate=false;}SkeletonHelper.prototype=Object.create(LineSegments.prototype);SkeletonHelper.prototype.constructor=SkeletonHelper;SkeletonHelper.prototype.updateMatrixWorld=function(){var vector=new Vector3();var boneMatrix=new Matrix4();var matrixWorldInv=new Matrix4();return function updateMatrixWorld(force){var bones=this.bones;var geometry=this.geometry;var position=geometry.getAttribute('position');matrixWorldInv.getInverse(this.root.matrixWorld);for(var i=0,j=0;i<bones.length;i++){var bone=bones[i];if(bone.parent&&bone.parent.isBone){boneMatrix.multiplyMatrices(matrixWorldInv,bone.matrixWorld);vector.setFromMatrixPosition(boneMatrix);position.setXYZ(j,vector.x,vector.y,vector.z);boneMatrix.multiplyMatrices(matrixWorldInv,bone.parent.matrixWorld);vector.setFromMatrixPosition(boneMatrix);position.setXYZ(j+1,vector.x,vector.y,vector.z);j+=2;}}geometry.getAttribute('position').needsUpdate=true;Object3D.prototype.updateMatrixWorld.call(this,force);};}();/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */function PointLightHelper(light,sphereSize,color){this.light=light;this.light.updateMatrixWorld();this.color=color;var geometry=new SphereBufferGeometry(sphereSize,4,2);var material=new MeshBasicMaterial({wireframe:true,fog:false});Mesh.call(this,geometry,material);this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=false;this.update();/*\n\t\tvar distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tvar d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/}PointLightHelper.prototype=Object.create(Mesh.prototype);PointLightHelper.prototype.constructor=PointLightHelper;PointLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose();};PointLightHelper.prototype.update=function(){if(this.color!==undefined){this.material.color.set(this.color);}else{this.material.color.copy(this.light.color);}/*\n\t\tvar d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/};/**\n\t * @author abelnation / http://github.com/abelnation\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t *  This helper must be added as a child of the light\n\t */function RectAreaLightHelper(light,color){this.type='RectAreaLightHelper';this.light=light;this.color=color;// optional hardwired color for the helper\nvar positions=[1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0];var geometry=new BufferGeometry();geometry.addAttribute('position',new Float32BufferAttribute(positions,3));geometry.computeBoundingSphere();var material=new LineBasicMaterial({fog:false});Line.call(this,geometry,material);//\nvar positions2=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0];var geometry2=new BufferGeometry();geometry2.addAttribute('position',new Float32BufferAttribute(positions2,3));geometry2.computeBoundingSphere();this.add(new Mesh(geometry2,new MeshBasicMaterial({side:BackSide,fog:false})));this.update();}RectAreaLightHelper.prototype=Object.create(Line.prototype);RectAreaLightHelper.prototype.constructor=RectAreaLightHelper;RectAreaLightHelper.prototype.update=function(){this.scale.set(0.5*this.light.width,0.5*this.light.height,1);if(this.color!==undefined){this.material.color.set(this.color);this.children[0].material.color.set(this.color);}else{this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);// prevent hue shift\nvar c=this.material.color;var max=Math.max(c.r,c.g,c.b);if(max>1)c.multiplyScalar(1/max);this.children[0].material.color.copy(this.material.color);}};RectAreaLightHelper.prototype.dispose=function(){this.geometry.dispose();this.material.dispose();this.children[0].geometry.dispose();this.children[0].material.dispose();};/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */function HemisphereLightHelper(light,size,color){Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;var geometry=new OctahedronBufferGeometry(size);geometry.rotateY(Math.PI*0.5);this.material=new MeshBasicMaterial({wireframe:true,fog:false});if(this.color===undefined)this.material.vertexColors=VertexColors;var position=geometry.getAttribute('position');var colors=new Float32Array(position.count*3);geometry.addAttribute('color',new BufferAttribute(colors,3));this.add(new Mesh(geometry,this.material));this.update();}HemisphereLightHelper.prototype=Object.create(Object3D.prototype);HemisphereLightHelper.prototype.constructor=HemisphereLightHelper;HemisphereLightHelper.prototype.dispose=function(){this.children[0].geometry.dispose();this.children[0].material.dispose();};HemisphereLightHelper.prototype.update=function(){var vector=new Vector3();var color1=new Color();var color2=new Color();return function update(){var mesh=this.children[0];if(this.color!==undefined){this.material.color.set(this.color);}else{var colors=mesh.geometry.getAttribute('color');color1.copy(this.light.color);color2.copy(this.light.groundColor);for(var i=0,l=colors.count;i<l;i++){var color=i<l/2?color1:color2;colors.setXYZ(i,color.r,color.g,color.b);}colors.needsUpdate=true;}mesh.lookAt(vector.setFromMatrixPosition(this.light.matrixWorld).negate());};}();/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function GridHelper(size,divisions,color1,color2){size=size||10;divisions=divisions||10;color1=new Color(color1!==undefined?color1:0x444444);color2=new Color(color2!==undefined?color2:0x888888);var center=divisions/2;var step=size/divisions;var halfSize=size/2;var vertices=[],colors=[];for(var i=0,j=0,k=-halfSize;i<=divisions;i++,k+=step){vertices.push(-halfSize,0,k,halfSize,0,k);vertices.push(k,0,-halfSize,k,0,halfSize);var color=i===center?color1:color2;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;}var geometry=new BufferGeometry();geometry.addAttribute('position',new Float32BufferAttribute(vertices,3));geometry.addAttribute('color',new Float32BufferAttribute(colors,3));var material=new LineBasicMaterial({vertexColors:VertexColors});LineSegments.call(this,geometry,material);}GridHelper.prototype=Object.create(LineSegments.prototype);GridHelper.prototype.constructor=GridHelper;/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author Hectate / http://www.github.com/Hectate\n\t */function PolarGridHelper(radius,radials,circles,divisions,color1,color2){radius=radius||10;radials=radials||16;circles=circles||8;divisions=divisions||64;color1=new Color(color1!==undefined?color1:0x444444);color2=new Color(color2!==undefined?color2:0x888888);var vertices=[];var colors=[];var x,z;var v,i,j,r,color;// create the radials\nfor(i=0;i<=radials;i++){v=i/radials*(Math.PI*2);x=Math.sin(v)*radius;z=Math.cos(v)*radius;vertices.push(0,0,0);vertices.push(x,0,z);color=i&1?color1:color2;colors.push(color.r,color.g,color.b);colors.push(color.r,color.g,color.b);}// create the circles\nfor(i=0;i<=circles;i++){color=i&1?color1:color2;r=radius-radius/circles*i;for(j=0;j<divisions;j++){// first vertex\nv=j/divisions*(Math.PI*2);x=Math.sin(v)*r;z=Math.cos(v)*r;vertices.push(x,0,z);colors.push(color.r,color.g,color.b);// second vertex\nv=(j+1)/divisions*(Math.PI*2);x=Math.sin(v)*r;z=Math.cos(v)*r;vertices.push(x,0,z);colors.push(color.r,color.g,color.b);}}var geometry=new BufferGeometry();geometry.addAttribute('position',new Float32BufferAttribute(vertices,3));geometry.addAttribute('color',new Float32BufferAttribute(colors,3));var material=new LineBasicMaterial({vertexColors:VertexColors});LineSegments.call(this,geometry,material);}PolarGridHelper.prototype=Object.create(LineSegments.prototype);PolarGridHelper.prototype.constructor=PolarGridHelper;/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */function FaceNormalsHelper(object,size,hex,linewidth){// FaceNormalsHelper only supports THREE.Geometry\nthis.object=object;this.size=size!==undefined?size:1;var color=hex!==undefined?hex:0xffff00;var width=linewidth!==undefined?linewidth:1;//\nvar nNormals=0;var objGeometry=this.object.geometry;if(objGeometry&&objGeometry.isGeometry){nNormals=objGeometry.faces.length;}else{console.warn('THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.');}//\nvar geometry=new BufferGeometry();var positions=new Float32BufferAttribute(nNormals*2*3,3);geometry.addAttribute('position',positions);LineSegments.call(this,geometry,new LineBasicMaterial({color:color,linewidth:width}));//\nthis.matrixAutoUpdate=false;this.update();}FaceNormalsHelper.prototype=Object.create(LineSegments.prototype);FaceNormalsHelper.prototype.constructor=FaceNormalsHelper;FaceNormalsHelper.prototype.update=function(){var v1=new Vector3();var v2=new Vector3();var normalMatrix=new Matrix3();return function update(){this.object.updateMatrixWorld(true);normalMatrix.getNormalMatrix(this.object.matrixWorld);var matrixWorld=this.object.matrixWorld;var position=this.geometry.attributes.position;//\nvar objGeometry=this.object.geometry;var vertices=objGeometry.vertices;var faces=objGeometry.faces;var idx=0;for(var i=0,l=faces.length;i<l;i++){var face=faces[i];var normal=face.normal;v1.copy(vertices[face.a]).add(vertices[face.b]).add(vertices[face.c]).divideScalar(3).applyMatrix4(matrixWorld);v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);position.setXYZ(idx,v1.x,v1.y,v1.z);idx=idx+1;position.setXYZ(idx,v2.x,v2.y,v2.z);idx=idx+1;}position.needsUpdate=true;};}();/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */function DirectionalLightHelper(light,size,color){Object3D.call(this);this.light=light;this.light.updateMatrixWorld();this.matrix=light.matrixWorld;this.matrixAutoUpdate=false;this.color=color;if(size===undefined)size=1;var geometry=new BufferGeometry();geometry.addAttribute('position',new Float32BufferAttribute([-size,size,0,size,size,0,size,-size,0,-size,-size,0,-size,size,0],3));var material=new LineBasicMaterial({fog:false});this.lightPlane=new Line(geometry,material);this.add(this.lightPlane);geometry=new BufferGeometry();geometry.addAttribute('position',new Float32BufferAttribute([0,0,0,0,0,1],3));this.targetLine=new Line(geometry,material);this.add(this.targetLine);this.update();}DirectionalLightHelper.prototype=Object.create(Object3D.prototype);DirectionalLightHelper.prototype.constructor=DirectionalLightHelper;DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose();};DirectionalLightHelper.prototype.update=function(){var v1=new Vector3();var v2=new Vector3();var v3=new Vector3();return function update(){v1.setFromMatrixPosition(this.light.matrixWorld);v2.setFromMatrixPosition(this.light.target.matrixWorld);v3.subVectors(v2,v1);this.lightPlane.lookAt(v2);if(this.color!==undefined){this.lightPlane.material.color.set(this.color);this.targetLine.material.color.set(this.color);}else{this.lightPlane.material.color.copy(this.light.color);this.targetLine.material.color.copy(this.light.color);}this.targetLine.lookAt(v2);this.targetLine.scale.z=v3.length();};}();/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */function CameraHelper(camera){var geometry=new BufferGeometry();var material=new LineBasicMaterial({color:0xffffff,vertexColors:FaceColors});var vertices=[];var colors=[];var pointMap={};// colors\nvar colorFrustum=new Color(0xffaa00);var colorCone=new Color(0xff0000);var colorUp=new Color(0x00aaff);var colorTarget=new Color(0xffffff);var colorCross=new Color(0x333333);// near\naddLine('n1','n2',colorFrustum);addLine('n2','n4',colorFrustum);addLine('n4','n3',colorFrustum);addLine('n3','n1',colorFrustum);// far\naddLine('f1','f2',colorFrustum);addLine('f2','f4',colorFrustum);addLine('f4','f3',colorFrustum);addLine('f3','f1',colorFrustum);// sides\naddLine('n1','f1',colorFrustum);addLine('n2','f2',colorFrustum);addLine('n3','f3',colorFrustum);addLine('n4','f4',colorFrustum);// cone\naddLine('p','n1',colorCone);addLine('p','n2',colorCone);addLine('p','n3',colorCone);addLine('p','n4',colorCone);// up\naddLine('u1','u2',colorUp);addLine('u2','u3',colorUp);addLine('u3','u1',colorUp);// target\naddLine('c','t',colorTarget);addLine('p','c',colorCross);// cross\naddLine('cn1','cn2',colorCross);addLine('cn3','cn4',colorCross);addLine('cf1','cf2',colorCross);addLine('cf3','cf4',colorCross);function addLine(a,b,color){addPoint(a,color);addPoint(b,color);}function addPoint(id,color){vertices.push(0,0,0);colors.push(color.r,color.g,color.b);if(pointMap[id]===undefined){pointMap[id]=[];}pointMap[id].push(vertices.length/3-1);}geometry.addAttribute('position',new Float32BufferAttribute(vertices,3));geometry.addAttribute('color',new Float32BufferAttribute(colors,3));LineSegments.call(this,geometry,material);this.camera=camera;if(this.camera.updateProjectionMatrix)this.camera.updateProjectionMatrix();this.matrix=camera.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=pointMap;this.update();}CameraHelper.prototype=Object.create(LineSegments.prototype);CameraHelper.prototype.constructor=CameraHelper;CameraHelper.prototype.update=function(){var geometry,pointMap;var vector=new Vector3();var camera=new Camera();function setPoint(point,x,y,z){vector.set(x,y,z).unproject(camera);var points=pointMap[point];if(points!==undefined){var position=geometry.getAttribute('position');for(var i=0,l=points.length;i<l;i++){position.setXYZ(points[i],vector.x,vector.y,vector.z);}}}return function update(){geometry=this.geometry;pointMap=this.pointMap;var w=1,h=1;// we need just camera projection matrix\n// world matrix must be identity\ncamera.projectionMatrix.copy(this.camera.projectionMatrix);// center / target\nsetPoint('c',0,0,-1);setPoint('t',0,0,1);// near\nsetPoint('n1',-w,-h,-1);setPoint('n2',w,-h,-1);setPoint('n3',-w,h,-1);setPoint('n4',w,h,-1);// far\nsetPoint('f1',-w,-h,1);setPoint('f2',w,-h,1);setPoint('f3',-w,h,1);setPoint('f4',w,h,1);// up\nsetPoint('u1',w*0.7,h*1.1,-1);setPoint('u2',-w*0.7,h*1.1,-1);setPoint('u3',0,h*2,-1);// cross\nsetPoint('cf1',-w,0,1);setPoint('cf2',w,0,1);setPoint('cf3',0,-h,1);setPoint('cf4',0,h,1);setPoint('cn1',-w,0,-1);setPoint('cn2',w,0,-1);setPoint('cn3',0,-h,-1);setPoint('cn4',0,h,-1);geometry.getAttribute('position').needsUpdate=true;};}();/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t */function BoxHelper(object,color){this.object=object;if(color===undefined)color=0xffff00;var indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var positions=new Float32Array(8*3);var geometry=new BufferGeometry();geometry.setIndex(new BufferAttribute(indices,1));geometry.addAttribute('position',new BufferAttribute(positions,3));LineSegments.call(this,geometry,new LineBasicMaterial({color:color}));this.matrixAutoUpdate=false;this.update();}BoxHelper.prototype=Object.create(LineSegments.prototype);BoxHelper.prototype.constructor=BoxHelper;BoxHelper.prototype.update=function(){var box=new Box3();return function update(object){if(object!==undefined){console.warn('THREE.BoxHelper: .update() has no longer arguments.');}if(this.object!==undefined){box.setFromObject(this.object);}if(box.isEmpty())return;var min=box.min;var max=box.max;/*\n\t\t\t  5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\n\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/var position=this.geometry.attributes.position;var array=position.array;array[0]=max.x;array[1]=max.y;array[2]=max.z;array[3]=min.x;array[4]=max.y;array[5]=max.z;array[6]=min.x;array[7]=min.y;array[8]=max.z;array[9]=max.x;array[10]=min.y;array[11]=max.z;array[12]=max.x;array[13]=max.y;array[14]=min.z;array[15]=min.x;array[16]=max.y;array[17]=min.z;array[18]=min.x;array[19]=min.y;array[20]=min.z;array[21]=max.x;array[22]=min.y;array[23]=min.z;position.needsUpdate=true;this.geometry.computeBoundingSphere();};}();BoxHelper.prototype.setFromObject=function(object){this.object=object;this.update();return this;};BoxHelper.prototype.copy=function(source){LineSegments.prototype.copy.call(this,source);this.object=source.object;return this;};BoxHelper.prototype.clone=function(){return new this.constructor().copy(this);};/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */function Box3Helper(box,hex){this.type='Box3Helper';this.box=box;var color=hex!==undefined?hex:0xffff00;var indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var positions=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1];var geometry=new BufferGeometry();geometry.setIndex(new BufferAttribute(indices,1));geometry.addAttribute('position',new Float32BufferAttribute(positions,3));LineSegments.call(this,geometry,new LineBasicMaterial({color:color}));this.geometry.computeBoundingSphere();}Box3Helper.prototype=Object.create(LineSegments.prototype);Box3Helper.prototype.constructor=Box3Helper;Box3Helper.prototype.updateMatrixWorld=function(force){var box=this.box;if(box.isEmpty())return;box.getCenter(this.position);box.getSize(this.scale);this.scale.multiplyScalar(0.5);Object3D.prototype.updateMatrixWorld.call(this,force);};/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */function PlaneHelper(plane,size,hex){this.type='PlaneHelper';this.plane=plane;this.size=size===undefined?1:size;var color=hex!==undefined?hex:0xffff00;var positions=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0];var geometry=new BufferGeometry();geometry.addAttribute('position',new Float32BufferAttribute(positions,3));geometry.computeBoundingSphere();Line.call(this,geometry,new LineBasicMaterial({color:color}));//\nvar positions2=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1];var geometry2=new BufferGeometry();geometry2.addAttribute('position',new Float32BufferAttribute(positions2,3));geometry2.computeBoundingSphere();this.add(new Mesh(geometry2,new MeshBasicMaterial({color:color,opacity:0.2,transparent:true,depthWrite:false})));}PlaneHelper.prototype=Object.create(Line.prototype);PlaneHelper.prototype.constructor=PlaneHelper;PlaneHelper.prototype.updateMatrixWorld=function(force){var scale=-this.plane.constant;if(Math.abs(scale)<1e-8)scale=1e-8;// sign does not matter\nthis.scale.set(0.5*this.size,0.5*this.size,scale);this.children[0].material.side=scale<0?BackSide:FrontSide;// renderer flips side when determinant < 0; flipping not wanted here\nthis.lookAt(this.plane.normal);Object3D.prototype.updateMatrixWorld.call(this,force);};/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */var lineGeometry,coneGeometry;function ArrowHelper(dir,origin,length,color,headLength,headWidth){// dir is assumed to be normalized\nObject3D.call(this);if(dir===undefined)dir=new Vector3(0,0,1);if(origin===undefined)origin=new Vector3(0,0,0);if(length===undefined)length=1;if(color===undefined)color=0xffff00;if(headLength===undefined)headLength=0.2*length;if(headWidth===undefined)headWidth=0.2*headLength;if(lineGeometry===undefined){lineGeometry=new BufferGeometry();lineGeometry.addAttribute('position',new Float32BufferAttribute([0,0,0,0,1,0],3));coneGeometry=new CylinderBufferGeometry(0,0.5,1,5,1);coneGeometry.translate(0,-0.5,0);}this.position.copy(origin);this.line=new Line(lineGeometry,new LineBasicMaterial({color:color}));this.line.matrixAutoUpdate=false;this.add(this.line);this.cone=new Mesh(coneGeometry,new MeshBasicMaterial({color:color}));this.cone.matrixAutoUpdate=false;this.add(this.cone);this.setDirection(dir);this.setLength(length,headLength,headWidth);}ArrowHelper.prototype=Object.create(Object3D.prototype);ArrowHelper.prototype.constructor=ArrowHelper;ArrowHelper.prototype.setDirection=function(){var axis=new Vector3();var radians;return function setDirection(dir){// dir is assumed to be normalized\nif(dir.y>0.99999){this.quaternion.set(0,0,0,1);}else if(dir.y<-0.99999){this.quaternion.set(1,0,0,0);}else{axis.set(dir.z,0,-dir.x).normalize();radians=Math.acos(dir.y);this.quaternion.setFromAxisAngle(axis,radians);}};}();ArrowHelper.prototype.setLength=function(length,headLength,headWidth){if(headLength===undefined)headLength=0.2*length;if(headWidth===undefined)headWidth=0.2*headLength;this.line.scale.set(1,Math.max(0,length-headLength),1);this.line.updateMatrix();this.cone.scale.set(headWidth,headLength,headWidth);this.cone.position.y=length;this.cone.updateMatrix();};ArrowHelper.prototype.setColor=function(color){this.line.material.color.copy(color);this.cone.material.color.copy(color);};ArrowHelper.prototype.copy=function(source){Object3D.prototype.copy.call(this,source,false);this.line.copy(source.line);this.cone.copy(source.cone);return this;};ArrowHelper.prototype.clone=function(){return new this.constructor().copy(this);};/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */function AxesHelper(size){size=size||1;var vertices=[0,0,0,size,0,0,0,0,0,0,size,0,0,0,0,0,0,size];var colors=[1,0,0,1,0.6,0,0,1,0,0.6,1,0,0,0,1,0,0.6,1];var geometry=new BufferGeometry();geometry.addAttribute('position',new Float32BufferAttribute(vertices,3));geometry.addAttribute('color',new Float32BufferAttribute(colors,3));var material=new LineBasicMaterial({vertexColors:VertexColors});LineSegments.call(this,geometry,material);}AxesHelper.prototype=Object.create(LineSegments.prototype);AxesHelper.prototype.constructor=AxesHelper;/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */function Face4(a,b,c,d,normal,color,materialIndex){console.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');return new Face3(a,b,c,normal,color,materialIndex);}var LineStrip=0;var LinePieces=1;function MeshFaceMaterial(materials){console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');return materials;}function MultiMaterial(materials){if(materials===undefined)materials=[];console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');materials.isMultiMaterial=true;materials.materials=materials;materials.clone=function(){return materials.slice();};return materials;}function PointCloud(geometry,material){console.warn('THREE.PointCloud has been renamed to THREE.Points.');return new Points(geometry,material);}function Particle(material){console.warn('THREE.Particle has been renamed to THREE.Sprite.');return new Sprite(material);}function ParticleSystem(geometry,material){console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');return new Points(geometry,material);}function PointCloudMaterial(parameters){console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function ParticleBasicMaterial(parameters){console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function ParticleSystemMaterial(parameters){console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function Vertex(x,y,z){console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');return new Vector3(x,y,z);}//\nfunction DynamicBufferAttribute(array,itemSize){console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.');return new BufferAttribute(array,itemSize).setDynamic(true);}function Int8Attribute(array,itemSize){console.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');return new Int8BufferAttribute(array,itemSize);}function Uint8Attribute(array,itemSize){console.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');return new Uint8BufferAttribute(array,itemSize);}function Uint8ClampedAttribute(array,itemSize){console.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');return new Uint8ClampedBufferAttribute(array,itemSize);}function Int16Attribute(array,itemSize){console.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');return new Int16BufferAttribute(array,itemSize);}function Uint16Attribute(array,itemSize){console.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');return new Uint16BufferAttribute(array,itemSize);}function Int32Attribute(array,itemSize){console.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');return new Int32BufferAttribute(array,itemSize);}function Uint32Attribute(array,itemSize){console.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');return new Uint32BufferAttribute(array,itemSize);}function Float32Attribute(array,itemSize){console.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');return new Float32BufferAttribute(array,itemSize);}function Float64Attribute(array,itemSize){console.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');return new Float64BufferAttribute(array,itemSize);}//\nCurve.create=function(construct,getPoint){console.log('THREE.Curve.create() has been deprecated');construct.prototype=Object.create(Curve.prototype);construct.prototype.constructor=construct;construct.prototype.getPoint=getPoint;return construct;};//\nObject.assign(CurvePath.prototype,{createPointsGeometry:function(divisions){console.warn('THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.');// generate geometry from path points (for Line or Points objects)\nvar pts=this.getPoints(divisions);return this.createGeometry(pts);},createSpacedPointsGeometry:function(divisions){console.warn('THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.');// generate geometry from equidistant sampling along the path\nvar pts=this.getSpacedPoints(divisions);return this.createGeometry(pts);},createGeometry:function(points){console.warn('THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.');var geometry=new Geometry();for(var i=0,l=points.length;i<l;i++){var point=points[i];geometry.vertices.push(new Vector3(point.x,point.y,point.z||0));}return geometry;}});//\nObject.assign(Path.prototype,{fromPoints:function(points){console.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');this.setFromPoints(points);}});//\nfunction ClosedSplineCurve3(points){console.warn('THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');CatmullRomCurve3.call(this,points);this.type='catmullrom';this.closed=true;}ClosedSplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype);//\nfunction SplineCurve3(points){console.warn('THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');CatmullRomCurve3.call(this,points);this.type='catmullrom';}SplineCurve3.prototype=Object.create(CatmullRomCurve3.prototype);//\nfunction Spline(points){console.warn('THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.');CatmullRomCurve3.call(this,points);this.type='catmullrom';}Spline.prototype=Object.create(CatmullRomCurve3.prototype);Object.assign(Spline.prototype,{initFromArray:function()/* a */{console.error('THREE.Spline: .initFromArray() has been removed.');},getControlPointsArray:function()/* optionalTarget */{console.error('THREE.Spline: .getControlPointsArray() has been removed.');},reparametrizeByArcLength:function()/* samplingCoef */{console.error('THREE.Spline: .reparametrizeByArcLength() has been removed.');}});//\nfunction AxisHelper(size){console.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');return new AxesHelper(size);}function BoundingBoxHelper(object,color){console.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');return new BoxHelper(object,color);}function EdgesHelper(object,hex){console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');return new LineSegments(new EdgesGeometry(object.geometry),new LineBasicMaterial({color:hex!==undefined?hex:0xffffff}));}GridHelper.prototype.setColors=function(){console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');};SkeletonHelper.prototype.update=function(){console.error('THREE.SkeletonHelper: update() no longer needs to be called.');};function WireframeHelper(object,hex){console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');return new LineSegments(new WireframeGeometry(object.geometry),new LineBasicMaterial({color:hex!==undefined?hex:0xffffff}));}//\nObject.assign(Loader.prototype,{extractUrlBase:function(url){console.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');return LoaderUtils.extractUrlBase(url);}});function XHRLoader(manager){console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');return new FileLoader(manager);}function BinaryTextureLoader(manager){console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');return new DataTextureLoader(manager);}Object.assign(ObjectLoader.prototype,{setTexturePath:function(value){console.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');return this.setResourcePath(value);}});//\nObject.assign(Box2.prototype,{center:function(optionalTarget){console.warn('THREE.Box2: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);},empty:function(){console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');return this.isEmpty();},isIntersectionBox:function(box){console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);},size:function(optionalTarget){console.warn('THREE.Box2: .size() has been renamed to .getSize().');return this.getSize(optionalTarget);}});Object.assign(Box3.prototype,{center:function(optionalTarget){console.warn('THREE.Box3: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);},empty:function(){console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');return this.isEmpty();},isIntersectionBox:function(box){console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);},isIntersectionSphere:function(sphere){console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(sphere);},size:function(optionalTarget){console.warn('THREE.Box3: .size() has been renamed to .getSize().');return this.getSize(optionalTarget);}});Line3.prototype.center=function(optionalTarget){console.warn('THREE.Line3: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);};Object.assign(_Math,{random16:function(){console.warn('THREE.Math: .random16() has been deprecated. Use Math.random() instead.');return Math.random();},nearestPowerOfTwo:function(value){console.warn('THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().');return _Math.floorPowerOfTwo(value);},nextPowerOfTwo:function(value){console.warn('THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().');return _Math.ceilPowerOfTwo(value);}});Object.assign(Matrix3.prototype,{flattenToArrayOffset:function(array,offset){console.warn(\"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");return this.toArray(array,offset);},multiplyVector3:function(vector){console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');return vector.applyMatrix3(this);},multiplyVector3Array:function()/* a */{console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');},applyToBuffer:function(buffer/*, offset, length */){console.warn('THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');return this.applyToBufferAttribute(buffer);},applyToVector3Array:function()/* array, offset, length */{console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');}});Object.assign(Matrix4.prototype,{extractPosition:function(m){console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');return this.copyPosition(m);},flattenToArrayOffset:function(array,offset){console.warn(\"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");return this.toArray(array,offset);},getPosition:function(){var v1;return function getPosition(){if(v1===undefined)v1=new Vector3();console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');return v1.setFromMatrixColumn(this,3);};}(),setRotationFromQuaternion:function(q){console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');return this.makeRotationFromQuaternion(q);},multiplyToArray:function(){console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');},multiplyVector3:function(vector){console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);},multiplyVector4:function(vector){console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);},multiplyVector3Array:function()/* a */{console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');},rotateAxis:function(v){console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');v.transformDirection(this);},crossVector:function(vector){console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);},translate:function(){console.error('THREE.Matrix4: .translate() has been removed.');},rotateX:function(){console.error('THREE.Matrix4: .rotateX() has been removed.');},rotateY:function(){console.error('THREE.Matrix4: .rotateY() has been removed.');},rotateZ:function(){console.error('THREE.Matrix4: .rotateZ() has been removed.');},rotateByAxis:function(){console.error('THREE.Matrix4: .rotateByAxis() has been removed.');},applyToBuffer:function(buffer/*, offset, length */){console.warn('THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');return this.applyToBufferAttribute(buffer);},applyToVector3Array:function()/* array, offset, length */{console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');},makeFrustum:function(left,right,bottom,top,near,far){console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');return this.makePerspective(left,right,top,bottom,near,far);}});Plane.prototype.isIntersectionLine=function(line){console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');return this.intersectsLine(line);};Quaternion.prototype.multiplyVector3=function(vector){console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');return vector.applyQuaternion(this);};Object.assign(Ray.prototype,{isIntersectionBox:function(box){console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);},isIntersectionPlane:function(plane){console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');return this.intersectsPlane(plane);},isIntersectionSphere:function(sphere){console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(sphere);}});Object.assign(Triangle.prototype,{area:function(){console.warn('THREE.Triangle: .area() has been renamed to .getArea().');return this.getArea();},barycoordFromPoint:function(point,target){console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');return this.getBarycoord(point,target);},midpoint:function(target){console.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');return this.getMidpoint(target);},normal:function(target){console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');return this.getNormal(target);},plane:function(target){console.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');return this.getPlane(target);}});Object.assign(Triangle,{barycoordFromPoint:function(point,a,b,c,target){console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');return Triangle.getBarycoord(point,a,b,c,target);},normal:function(a,b,c,target){console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');return Triangle.getNormal(a,b,c,target);}});Object.assign(Shape.prototype,{extractAllPoints:function(divisions){console.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');return this.extractPoints(divisions);},extrude:function(options){console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');return new ExtrudeGeometry(this,options);},makeGeometry:function(options){console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');return new ShapeGeometry(this,options);}});Object.assign(Vector2.prototype,{fromAttribute:function(attribute,index,offset){console.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);},distanceToManhattan:function(v){console.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');return this.manhattanDistanceTo(v);},lengthManhattan:function(){console.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();}});Object.assign(Vector3.prototype,{setEulerFromRotationMatrix:function(){console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');},setEulerFromQuaternion:function(){console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');},getPositionFromMatrix:function(m){console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');return this.setFromMatrixPosition(m);},getScaleFromMatrix:function(m){console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');return this.setFromMatrixScale(m);},getColumnFromMatrix:function(index,matrix){console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');return this.setFromMatrixColumn(matrix,index);},applyProjection:function(m){console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');return this.applyMatrix4(m);},fromAttribute:function(attribute,index,offset){console.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);},distanceToManhattan:function(v){console.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');return this.manhattanDistanceTo(v);},lengthManhattan:function(){console.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();}});Object.assign(Vector4.prototype,{fromAttribute:function(attribute,index,offset){console.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);},lengthManhattan:function(){console.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();}});//\nObject.assign(Geometry.prototype,{computeTangents:function(){console.error('THREE.Geometry: .computeTangents() has been removed.');},computeLineDistances:function(){console.error('THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.');}});Object.assign(Object3D.prototype,{getChildByName:function(name){console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');return this.getObjectByName(name);},renderDepth:function(){console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');},translate:function(distance,axis){console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');return this.translateOnAxis(axis,distance);},getWorldRotation:function(){console.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');}});Object.defineProperties(Object3D.prototype,{eulerOrder:{get:function(){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');return this.rotation.order;},set:function(value){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');this.rotation.order=value;}},useQuaternion:{get:function(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');},set:function(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');}}});Object.defineProperties(LOD.prototype,{objects:{get:function(){console.warn('THREE.LOD: .objects has been renamed to .levels.');return this.levels;}}});Object.defineProperty(Skeleton.prototype,'useVertexTexture',{get:function(){console.warn('THREE.Skeleton: useVertexTexture has been removed.');},set:function(){console.warn('THREE.Skeleton: useVertexTexture has been removed.');}});SkinnedMesh.prototype.initBones=function(){console.error('THREE.SkinnedMesh: initBones() has been removed.');};Object.defineProperty(Curve.prototype,'__arcLengthDivisions',{get:function(){console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');return this.arcLengthDivisions;},set:function(value){console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');this.arcLengthDivisions=value;}});//\nPerspectiveCamera.prototype.setLens=function(focalLength,filmGauge){console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. \"+\"Use .setFocalLength and .filmGauge for a photographic setup.\");if(filmGauge!==undefined)this.filmGauge=filmGauge;this.setFocalLength(focalLength);};//\nObject.defineProperties(Light.prototype,{onlyShadow:{set:function(){console.warn('THREE.Light: .onlyShadow has been removed.');}},shadowCameraFov:{set:function(value){console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');this.shadow.camera.fov=value;}},shadowCameraLeft:{set:function(value){console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');this.shadow.camera.left=value;}},shadowCameraRight:{set:function(value){console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');this.shadow.camera.right=value;}},shadowCameraTop:{set:function(value){console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');this.shadow.camera.top=value;}},shadowCameraBottom:{set:function(value){console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');this.shadow.camera.bottom=value;}},shadowCameraNear:{set:function(value){console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');this.shadow.camera.near=value;}},shadowCameraFar:{set:function(value){console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');this.shadow.camera.far=value;}},shadowCameraVisible:{set:function(){console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');}},shadowBias:{set:function(value){console.warn('THREE.Light: .shadowBias is now .shadow.bias.');this.shadow.bias=value;}},shadowDarkness:{set:function(){console.warn('THREE.Light: .shadowDarkness has been removed.');}},shadowMapWidth:{set:function(value){console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');this.shadow.mapSize.width=value;}},shadowMapHeight:{set:function(value){console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');this.shadow.mapSize.height=value;}}});//\nObject.defineProperties(BufferAttribute.prototype,{length:{get:function(){console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');return this.array.length;}},copyIndicesArray:function()/* indices */{console.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');}});Object.assign(BufferGeometry.prototype,{addIndex:function(index){console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');this.setIndex(index);},addDrawCall:function(start,count,indexOffset){if(indexOffset!==undefined){console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');}console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');this.addGroup(start,count);},clearDrawCalls:function(){console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');this.clearGroups();},computeTangents:function(){console.warn('THREE.BufferGeometry: .computeTangents() has been removed.');},computeOffsets:function(){console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');}});Object.defineProperties(BufferGeometry.prototype,{drawcalls:{get:function(){console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');return this.groups;}},offsets:{get:function(){console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');return this.groups;}}});//\nObject.assign(ExtrudeBufferGeometry.prototype,{getArrays:function(){console.error('THREE.ExtrudeBufferGeometry: .getArrays() has been removed.');},addShapeList:function(){console.error('THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.');},addShape:function(){console.error('THREE.ExtrudeBufferGeometry: .addShape() has been removed.');}});//\nObject.defineProperties(Uniform.prototype,{dynamic:{set:function(){console.warn('THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.');}},onUpdate:{value:function(){console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');return this;}}});//\nObject.defineProperties(Material.prototype,{wrapAround:{get:function(){console.warn('THREE.Material: .wrapAround has been removed.');},set:function(){console.warn('THREE.Material: .wrapAround has been removed.');}},overdraw:{get:function(){console.warn('THREE.Material: .overdraw has been removed.');},set:function(){console.warn('THREE.Material: .overdraw has been removed.');}},wrapRGB:{get:function(){console.warn('THREE.Material: .wrapRGB has been removed.');return new Color();}},shading:{get:function(){console.error('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');},set:function(value){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=value===FlatShading;}}});Object.defineProperties(MeshPhongMaterial.prototype,{metal:{get:function(){console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.');return false;},set:function(){console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead');}}});Object.defineProperties(ShaderMaterial.prototype,{derivatives:{get:function(){console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');return this.extensions.derivatives;},set:function(value){console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');this.extensions.derivatives=value;}}});//\nObject.assign(WebGLRenderer.prototype,{clearTarget:function(renderTarget,color,depth,stencil){console.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');this.setRenderTarget(renderTarget);this.clear(color,depth,stencil);},animate:function(callback){console.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');this.setAnimationLoop(callback);},getCurrentRenderTarget:function(){console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');return this.getRenderTarget();},getMaxAnisotropy:function(){console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');return this.capabilities.getMaxAnisotropy();},getPrecision:function(){console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');return this.capabilities.precision;},resetGLState:function(){console.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');return this.state.reset();},supportsFloatTextures:function(){console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');return this.extensions.get('OES_texture_float');},supportsHalfFloatTextures:function(){console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');return this.extensions.get('OES_texture_half_float');},supportsStandardDerivatives:function(){console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');return this.extensions.get('OES_standard_derivatives');},supportsCompressedTextureS3TC:function(){console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');return this.extensions.get('WEBGL_compressed_texture_s3tc');},supportsCompressedTexturePVRTC:function(){console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');return this.extensions.get('WEBGL_compressed_texture_pvrtc');},supportsBlendMinMax:function(){console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');return this.extensions.get('EXT_blend_minmax');},supportsVertexTextures:function(){console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');return this.capabilities.vertexTextures;},supportsInstancedArrays:function(){console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');return this.extensions.get('ANGLE_instanced_arrays');},enableScissorTest:function(boolean){console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');this.setScissorTest(boolean);},initMaterial:function(){console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');},addPrePlugin:function(){console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');},addPostPlugin:function(){console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');},updateShadowMap:function(){console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');},setFaceCulling:function(){console.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');}});Object.defineProperties(WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled;},set:function(value){console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');this.shadowMap.enabled=value;}},shadowMapType:{get:function(){return this.shadowMap.type;},set:function(value){console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');this.shadowMap.type=value;}},shadowMapCullFace:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');return undefined;},set:function()/* value */{console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');}}});Object.defineProperties(WebGLShadowMap.prototype,{cullFace:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');return undefined;},set:function()/* cullFace */{console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');}},renderReverseSided:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');return undefined;},set:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');}},renderSingleSided:{get:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');return undefined;},set:function(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');}}});//\nObject.defineProperties(WebGLRenderTarget.prototype,{wrapS:{get:function(){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');return this.texture.wrapS;},set:function(value){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');this.texture.wrapS=value;}},wrapT:{get:function(){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');return this.texture.wrapT;},set:function(value){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');this.texture.wrapT=value;}},magFilter:{get:function(){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');return this.texture.magFilter;},set:function(value){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');this.texture.magFilter=value;}},minFilter:{get:function(){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');return this.texture.minFilter;},set:function(value){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');this.texture.minFilter=value;}},anisotropy:{get:function(){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');return this.texture.anisotropy;},set:function(value){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');this.texture.anisotropy=value;}},offset:{get:function(){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');return this.texture.offset;},set:function(value){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');this.texture.offset=value;}},repeat:{get:function(){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');return this.texture.repeat;},set:function(value){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');this.texture.repeat=value;}},format:{get:function(){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');return this.texture.format;},set:function(value){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');this.texture.format=value;}},type:{get:function(){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');return this.texture.type;},set:function(value){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');this.texture.type=value;}},generateMipmaps:{get:function(){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');return this.texture.generateMipmaps;},set:function(value){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');this.texture.generateMipmaps=value;}}});//\nObject.defineProperties(WebVRManager.prototype,{standing:{set:function()/* value */{console.warn('THREE.WebVRManager: .standing has been removed.');}},userHeight:{set:function()/* value */{console.warn('THREE.WebVRManager: .userHeight has been removed.');}}});//\nAudio.prototype.load=function(file){console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');var scope=this;var audioLoader=new AudioLoader();audioLoader.load(file,function(buffer){scope.setBuffer(buffer);});return this;};AudioAnalyser.prototype.getData=function(){console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');return this.getFrequencyData();};//\nCubeCamera.prototype.updateCubeMap=function(renderer,scene){console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');return this.update(renderer,scene);};//\nvar GeometryUtils={merge:function(geometry1,geometry2,materialIndexOffset){console.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');var matrix;if(geometry2.isMesh){geometry2.matrixAutoUpdate&&geometry2.updateMatrix();matrix=geometry2.matrix;geometry2=geometry2.geometry;}geometry1.merge(geometry2,matrix,materialIndexOffset);},center:function(geometry){console.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');return geometry.center();}};ImageUtils.crossOrigin=undefined;ImageUtils.loadTexture=function(url,mapping,onLoad,onError){console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');var loader=new TextureLoader();loader.setCrossOrigin(this.crossOrigin);var texture=loader.load(url,onLoad,undefined,onError);if(mapping)texture.mapping=mapping;return texture;};ImageUtils.loadTextureCube=function(urls,mapping,onLoad,onError){console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');var loader=new CubeTextureLoader();loader.setCrossOrigin(this.crossOrigin);var texture=loader.load(urls,onLoad,undefined,onError);if(mapping)texture.mapping=mapping;return texture;};ImageUtils.loadCompressedTexture=function(){console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');};ImageUtils.loadCompressedTextureCube=function(){console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');};//\nfunction Projector(){console.error('THREE.Projector has been moved to /examples/js/renderers/Projector.js.');this.projectVector=function(vector,camera){console.warn('THREE.Projector: .projectVector() is now vector.project().');vector.project(camera);};this.unprojectVector=function(vector,camera){console.warn('THREE.Projector: .unprojectVector() is now vector.unproject().');vector.unproject(camera);};this.pickingRay=function(){console.error('THREE.Projector: .pickingRay() is now raycaster.setFromCamera().');};}//\nfunction CanvasRenderer(){console.error('THREE.CanvasRenderer has been removed');}//\nfunction JSONLoader(){console.error('THREE.JSONLoader has been removed.');}//\nvar SceneUtils={createMultiMaterialObject:function()/* geometry, materials */{console.error('THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js');},detach:function()/* child, parent, scene */{console.error('THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js');},attach:function()/* child, scene, parent */{console.error('THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js');}};//\nfunction LensFlare(){console.error('THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js');}exports.WebGLMultisampleRenderTarget=WebGLMultisampleRenderTarget;exports.WebGLRenderTargetCube=WebGLRenderTargetCube;exports.WebGLRenderTarget=WebGLRenderTarget;exports.WebGLRenderer=WebGLRenderer;exports.ShaderLib=ShaderLib;exports.UniformsLib=UniformsLib;exports.UniformsUtils=UniformsUtils;exports.ShaderChunk=ShaderChunk;exports.FogExp2=FogExp2;exports.Fog=Fog;exports.Scene=Scene;exports.Sprite=Sprite;exports.LOD=LOD;exports.SkinnedMesh=SkinnedMesh;exports.Skeleton=Skeleton;exports.Bone=Bone;exports.Mesh=Mesh;exports.LineSegments=LineSegments;exports.LineLoop=LineLoop;exports.Line=Line;exports.Points=Points;exports.Group=Group;exports.VideoTexture=VideoTexture;exports.DataTexture=DataTexture;exports.DataTexture3D=DataTexture3D;exports.CompressedTexture=CompressedTexture;exports.CubeTexture=CubeTexture;exports.CanvasTexture=CanvasTexture;exports.DepthTexture=DepthTexture;exports.Texture=Texture;exports.AnimationLoader=AnimationLoader;exports.CompressedTextureLoader=CompressedTextureLoader;exports.DataTextureLoader=DataTextureLoader;exports.CubeTextureLoader=CubeTextureLoader;exports.TextureLoader=TextureLoader;exports.ObjectLoader=ObjectLoader;exports.MaterialLoader=MaterialLoader;exports.BufferGeometryLoader=BufferGeometryLoader;exports.DefaultLoadingManager=DefaultLoadingManager;exports.LoadingManager=LoadingManager;exports.ImageLoader=ImageLoader;exports.ImageBitmapLoader=ImageBitmapLoader;exports.FontLoader=FontLoader;exports.FileLoader=FileLoader;exports.Loader=Loader;exports.LoaderUtils=LoaderUtils;exports.Cache=Cache;exports.AudioLoader=AudioLoader;exports.SpotLightShadow=SpotLightShadow;exports.SpotLight=SpotLight;exports.PointLight=PointLight;exports.RectAreaLight=RectAreaLight;exports.HemisphereLight=HemisphereLight;exports.DirectionalLightShadow=DirectionalLightShadow;exports.DirectionalLight=DirectionalLight;exports.AmbientLight=AmbientLight;exports.LightShadow=LightShadow;exports.Light=Light;exports.StereoCamera=StereoCamera;exports.PerspectiveCamera=PerspectiveCamera;exports.OrthographicCamera=OrthographicCamera;exports.CubeCamera=CubeCamera;exports.ArrayCamera=ArrayCamera;exports.Camera=Camera;exports.AudioListener=AudioListener;exports.PositionalAudio=PositionalAudio;exports.AudioContext=AudioContext;exports.AudioAnalyser=AudioAnalyser;exports.Audio=Audio;exports.VectorKeyframeTrack=VectorKeyframeTrack;exports.StringKeyframeTrack=StringKeyframeTrack;exports.QuaternionKeyframeTrack=QuaternionKeyframeTrack;exports.NumberKeyframeTrack=NumberKeyframeTrack;exports.ColorKeyframeTrack=ColorKeyframeTrack;exports.BooleanKeyframeTrack=BooleanKeyframeTrack;exports.PropertyMixer=PropertyMixer;exports.PropertyBinding=PropertyBinding;exports.KeyframeTrack=KeyframeTrack;exports.AnimationUtils=AnimationUtils;exports.AnimationObjectGroup=AnimationObjectGroup;exports.AnimationMixer=AnimationMixer;exports.AnimationClip=AnimationClip;exports.Uniform=Uniform;exports.InstancedBufferGeometry=InstancedBufferGeometry;exports.BufferGeometry=BufferGeometry;exports.Geometry=Geometry;exports.InterleavedBufferAttribute=InterleavedBufferAttribute;exports.InstancedInterleavedBuffer=InstancedInterleavedBuffer;exports.InterleavedBuffer=InterleavedBuffer;exports.InstancedBufferAttribute=InstancedBufferAttribute;exports.Face3=Face3;exports.Object3D=Object3D;exports.Raycaster=Raycaster;exports.Layers=Layers;exports.EventDispatcher=EventDispatcher;exports.Clock=Clock;exports.QuaternionLinearInterpolant=QuaternionLinearInterpolant;exports.LinearInterpolant=LinearInterpolant;exports.DiscreteInterpolant=DiscreteInterpolant;exports.CubicInterpolant=CubicInterpolant;exports.Interpolant=Interpolant;exports.Triangle=Triangle;exports.Math=_Math;exports.Spherical=Spherical;exports.Cylindrical=Cylindrical;exports.Plane=Plane;exports.Frustum=Frustum;exports.Sphere=Sphere;exports.Ray=Ray;exports.Matrix4=Matrix4;exports.Matrix3=Matrix3;exports.Box3=Box3;exports.Box2=Box2;exports.Line3=Line3;exports.Euler=Euler;exports.Vector4=Vector4;exports.Vector3=Vector3;exports.Vector2=Vector2;exports.Quaternion=Quaternion;exports.Color=Color;exports.ImmediateRenderObject=ImmediateRenderObject;exports.VertexNormalsHelper=VertexNormalsHelper;exports.SpotLightHelper=SpotLightHelper;exports.SkeletonHelper=SkeletonHelper;exports.PointLightHelper=PointLightHelper;exports.RectAreaLightHelper=RectAreaLightHelper;exports.HemisphereLightHelper=HemisphereLightHelper;exports.GridHelper=GridHelper;exports.PolarGridHelper=PolarGridHelper;exports.FaceNormalsHelper=FaceNormalsHelper;exports.DirectionalLightHelper=DirectionalLightHelper;exports.CameraHelper=CameraHelper;exports.BoxHelper=BoxHelper;exports.Box3Helper=Box3Helper;exports.PlaneHelper=PlaneHelper;exports.ArrowHelper=ArrowHelper;exports.AxesHelper=AxesHelper;exports.Shape=Shape;exports.Path=Path;exports.ShapePath=ShapePath;exports.Font=Font;exports.CurvePath=CurvePath;exports.Curve=Curve;exports.ImageUtils=ImageUtils;exports.ShapeUtils=ShapeUtils;exports.WebGLUtils=WebGLUtils;exports.WireframeGeometry=WireframeGeometry;exports.ParametricGeometry=ParametricGeometry;exports.ParametricBufferGeometry=ParametricBufferGeometry;exports.TetrahedronGeometry=TetrahedronGeometry;exports.TetrahedronBufferGeometry=TetrahedronBufferGeometry;exports.OctahedronGeometry=OctahedronGeometry;exports.OctahedronBufferGeometry=OctahedronBufferGeometry;exports.IcosahedronGeometry=IcosahedronGeometry;exports.IcosahedronBufferGeometry=IcosahedronBufferGeometry;exports.DodecahedronGeometry=DodecahedronGeometry;exports.DodecahedronBufferGeometry=DodecahedronBufferGeometry;exports.PolyhedronGeometry=PolyhedronGeometry;exports.PolyhedronBufferGeometry=PolyhedronBufferGeometry;exports.TubeGeometry=TubeGeometry;exports.TubeBufferGeometry=TubeBufferGeometry;exports.TorusKnotGeometry=TorusKnotGeometry;exports.TorusKnotBufferGeometry=TorusKnotBufferGeometry;exports.TorusGeometry=TorusGeometry;exports.TorusBufferGeometry=TorusBufferGeometry;exports.TextGeometry=TextGeometry;exports.TextBufferGeometry=TextBufferGeometry;exports.SphereGeometry=SphereGeometry;exports.SphereBufferGeometry=SphereBufferGeometry;exports.RingGeometry=RingGeometry;exports.RingBufferGeometry=RingBufferGeometry;exports.PlaneGeometry=PlaneGeometry;exports.PlaneBufferGeometry=PlaneBufferGeometry;exports.LatheGeometry=LatheGeometry;exports.LatheBufferGeometry=LatheBufferGeometry;exports.ShapeGeometry=ShapeGeometry;exports.ShapeBufferGeometry=ShapeBufferGeometry;exports.ExtrudeGeometry=ExtrudeGeometry;exports.ExtrudeBufferGeometry=ExtrudeBufferGeometry;exports.EdgesGeometry=EdgesGeometry;exports.ConeGeometry=ConeGeometry;exports.ConeBufferGeometry=ConeBufferGeometry;exports.CylinderGeometry=CylinderGeometry;exports.CylinderBufferGeometry=CylinderBufferGeometry;exports.CircleGeometry=CircleGeometry;exports.CircleBufferGeometry=CircleBufferGeometry;exports.BoxGeometry=BoxGeometry;exports.BoxBufferGeometry=BoxBufferGeometry;exports.ShadowMaterial=ShadowMaterial;exports.SpriteMaterial=SpriteMaterial;exports.RawShaderMaterial=RawShaderMaterial;exports.ShaderMaterial=ShaderMaterial;exports.PointsMaterial=PointsMaterial;exports.MeshPhysicalMaterial=MeshPhysicalMaterial;exports.MeshStandardMaterial=MeshStandardMaterial;exports.MeshPhongMaterial=MeshPhongMaterial;exports.MeshToonMaterial=MeshToonMaterial;exports.MeshNormalMaterial=MeshNormalMaterial;exports.MeshLambertMaterial=MeshLambertMaterial;exports.MeshDepthMaterial=MeshDepthMaterial;exports.MeshDistanceMaterial=MeshDistanceMaterial;exports.MeshBasicMaterial=MeshBasicMaterial;exports.MeshMatcapMaterial=MeshMatcapMaterial;exports.LineDashedMaterial=LineDashedMaterial;exports.LineBasicMaterial=LineBasicMaterial;exports.Material=Material;exports.Float64BufferAttribute=Float64BufferAttribute;exports.Float32BufferAttribute=Float32BufferAttribute;exports.Uint32BufferAttribute=Uint32BufferAttribute;exports.Int32BufferAttribute=Int32BufferAttribute;exports.Uint16BufferAttribute=Uint16BufferAttribute;exports.Int16BufferAttribute=Int16BufferAttribute;exports.Uint8ClampedBufferAttribute=Uint8ClampedBufferAttribute;exports.Uint8BufferAttribute=Uint8BufferAttribute;exports.Int8BufferAttribute=Int8BufferAttribute;exports.BufferAttribute=BufferAttribute;exports.ArcCurve=ArcCurve;exports.CatmullRomCurve3=CatmullRomCurve3;exports.CubicBezierCurve=CubicBezierCurve;exports.CubicBezierCurve3=CubicBezierCurve3;exports.EllipseCurve=EllipseCurve;exports.LineCurve=LineCurve;exports.LineCurve3=LineCurve3;exports.QuadraticBezierCurve=QuadraticBezierCurve;exports.QuadraticBezierCurve3=QuadraticBezierCurve3;exports.SplineCurve=SplineCurve;exports.REVISION=REVISION;exports.MOUSE=MOUSE;exports.CullFaceNone=CullFaceNone;exports.CullFaceBack=CullFaceBack;exports.CullFaceFront=CullFaceFront;exports.CullFaceFrontBack=CullFaceFrontBack;exports.FrontFaceDirectionCW=FrontFaceDirectionCW;exports.FrontFaceDirectionCCW=FrontFaceDirectionCCW;exports.BasicShadowMap=BasicShadowMap;exports.PCFShadowMap=PCFShadowMap;exports.PCFSoftShadowMap=PCFSoftShadowMap;exports.FrontSide=FrontSide;exports.BackSide=BackSide;exports.DoubleSide=DoubleSide;exports.FlatShading=FlatShading;exports.SmoothShading=SmoothShading;exports.NoColors=NoColors;exports.FaceColors=FaceColors;exports.VertexColors=VertexColors;exports.NoBlending=NoBlending;exports.NormalBlending=NormalBlending;exports.AdditiveBlending=AdditiveBlending;exports.SubtractiveBlending=SubtractiveBlending;exports.MultiplyBlending=MultiplyBlending;exports.CustomBlending=CustomBlending;exports.AddEquation=AddEquation;exports.SubtractEquation=SubtractEquation;exports.ReverseSubtractEquation=ReverseSubtractEquation;exports.MinEquation=MinEquation;exports.MaxEquation=MaxEquation;exports.ZeroFactor=ZeroFactor;exports.OneFactor=OneFactor;exports.SrcColorFactor=SrcColorFactor;exports.OneMinusSrcColorFactor=OneMinusSrcColorFactor;exports.SrcAlphaFactor=SrcAlphaFactor;exports.OneMinusSrcAlphaFactor=OneMinusSrcAlphaFactor;exports.DstAlphaFactor=DstAlphaFactor;exports.OneMinusDstAlphaFactor=OneMinusDstAlphaFactor;exports.DstColorFactor=DstColorFactor;exports.OneMinusDstColorFactor=OneMinusDstColorFactor;exports.SrcAlphaSaturateFactor=SrcAlphaSaturateFactor;exports.NeverDepth=NeverDepth;exports.AlwaysDepth=AlwaysDepth;exports.LessDepth=LessDepth;exports.LessEqualDepth=LessEqualDepth;exports.EqualDepth=EqualDepth;exports.GreaterEqualDepth=GreaterEqualDepth;exports.GreaterDepth=GreaterDepth;exports.NotEqualDepth=NotEqualDepth;exports.MultiplyOperation=MultiplyOperation;exports.MixOperation=MixOperation;exports.AddOperation=AddOperation;exports.NoToneMapping=NoToneMapping;exports.LinearToneMapping=LinearToneMapping;exports.ReinhardToneMapping=ReinhardToneMapping;exports.Uncharted2ToneMapping=Uncharted2ToneMapping;exports.CineonToneMapping=CineonToneMapping;exports.ACESFilmicToneMapping=ACESFilmicToneMapping;exports.UVMapping=UVMapping;exports.CubeReflectionMapping=CubeReflectionMapping;exports.CubeRefractionMapping=CubeRefractionMapping;exports.EquirectangularReflectionMapping=EquirectangularReflectionMapping;exports.EquirectangularRefractionMapping=EquirectangularRefractionMapping;exports.SphericalReflectionMapping=SphericalReflectionMapping;exports.CubeUVReflectionMapping=CubeUVReflectionMapping;exports.CubeUVRefractionMapping=CubeUVRefractionMapping;exports.RepeatWrapping=RepeatWrapping;exports.ClampToEdgeWrapping=ClampToEdgeWrapping;exports.MirroredRepeatWrapping=MirroredRepeatWrapping;exports.NearestFilter=NearestFilter;exports.NearestMipMapNearestFilter=NearestMipMapNearestFilter;exports.NearestMipMapLinearFilter=NearestMipMapLinearFilter;exports.LinearFilter=LinearFilter;exports.LinearMipMapNearestFilter=LinearMipMapNearestFilter;exports.LinearMipMapLinearFilter=LinearMipMapLinearFilter;exports.UnsignedByteType=UnsignedByteType;exports.ByteType=ByteType;exports.ShortType=ShortType;exports.UnsignedShortType=UnsignedShortType;exports.IntType=IntType;exports.UnsignedIntType=UnsignedIntType;exports.FloatType=FloatType;exports.HalfFloatType=HalfFloatType;exports.UnsignedShort4444Type=UnsignedShort4444Type;exports.UnsignedShort5551Type=UnsignedShort5551Type;exports.UnsignedShort565Type=UnsignedShort565Type;exports.UnsignedInt248Type=UnsignedInt248Type;exports.AlphaFormat=AlphaFormat;exports.RGBFormat=RGBFormat;exports.RGBAFormat=RGBAFormat;exports.LuminanceFormat=LuminanceFormat;exports.LuminanceAlphaFormat=LuminanceAlphaFormat;exports.RGBEFormat=RGBEFormat;exports.DepthFormat=DepthFormat;exports.DepthStencilFormat=DepthStencilFormat;exports.RedFormat=RedFormat;exports.RGB_S3TC_DXT1_Format=RGB_S3TC_DXT1_Format;exports.RGBA_S3TC_DXT1_Format=RGBA_S3TC_DXT1_Format;exports.RGBA_S3TC_DXT3_Format=RGBA_S3TC_DXT3_Format;exports.RGBA_S3TC_DXT5_Format=RGBA_S3TC_DXT5_Format;exports.RGB_PVRTC_4BPPV1_Format=RGB_PVRTC_4BPPV1_Format;exports.RGB_PVRTC_2BPPV1_Format=RGB_PVRTC_2BPPV1_Format;exports.RGBA_PVRTC_4BPPV1_Format=RGBA_PVRTC_4BPPV1_Format;exports.RGBA_PVRTC_2BPPV1_Format=RGBA_PVRTC_2BPPV1_Format;exports.RGB_ETC1_Format=RGB_ETC1_Format;exports.RGBA_ASTC_4x4_Format=RGBA_ASTC_4x4_Format;exports.RGBA_ASTC_5x4_Format=RGBA_ASTC_5x4_Format;exports.RGBA_ASTC_5x5_Format=RGBA_ASTC_5x5_Format;exports.RGBA_ASTC_6x5_Format=RGBA_ASTC_6x5_Format;exports.RGBA_ASTC_6x6_Format=RGBA_ASTC_6x6_Format;exports.RGBA_ASTC_8x5_Format=RGBA_ASTC_8x5_Format;exports.RGBA_ASTC_8x6_Format=RGBA_ASTC_8x6_Format;exports.RGBA_ASTC_8x8_Format=RGBA_ASTC_8x8_Format;exports.RGBA_ASTC_10x5_Format=RGBA_ASTC_10x5_Format;exports.RGBA_ASTC_10x6_Format=RGBA_ASTC_10x6_Format;exports.RGBA_ASTC_10x8_Format=RGBA_ASTC_10x8_Format;exports.RGBA_ASTC_10x10_Format=RGBA_ASTC_10x10_Format;exports.RGBA_ASTC_12x10_Format=RGBA_ASTC_12x10_Format;exports.RGBA_ASTC_12x12_Format=RGBA_ASTC_12x12_Format;exports.LoopOnce=LoopOnce;exports.LoopRepeat=LoopRepeat;exports.LoopPingPong=LoopPingPong;exports.InterpolateDiscrete=InterpolateDiscrete;exports.InterpolateLinear=InterpolateLinear;exports.InterpolateSmooth=InterpolateSmooth;exports.ZeroCurvatureEnding=ZeroCurvatureEnding;exports.ZeroSlopeEnding=ZeroSlopeEnding;exports.WrapAroundEnding=WrapAroundEnding;exports.TrianglesDrawMode=TrianglesDrawMode;exports.TriangleStripDrawMode=TriangleStripDrawMode;exports.TriangleFanDrawMode=TriangleFanDrawMode;exports.LinearEncoding=LinearEncoding;exports.sRGBEncoding=sRGBEncoding;exports.GammaEncoding=GammaEncoding;exports.RGBEEncoding=RGBEEncoding;exports.LogLuvEncoding=LogLuvEncoding;exports.RGBM7Encoding=RGBM7Encoding;exports.RGBM16Encoding=RGBM16Encoding;exports.RGBDEncoding=RGBDEncoding;exports.BasicDepthPacking=BasicDepthPacking;exports.RGBADepthPacking=RGBADepthPacking;exports.TangentSpaceNormalMap=TangentSpaceNormalMap;exports.ObjectSpaceNormalMap=ObjectSpaceNormalMap;exports.CubeGeometry=BoxGeometry;exports.Face4=Face4;exports.LineStrip=LineStrip;exports.LinePieces=LinePieces;exports.MeshFaceMaterial=MeshFaceMaterial;exports.MultiMaterial=MultiMaterial;exports.PointCloud=PointCloud;exports.Particle=Particle;exports.ParticleSystem=ParticleSystem;exports.PointCloudMaterial=PointCloudMaterial;exports.ParticleBasicMaterial=ParticleBasicMaterial;exports.ParticleSystemMaterial=ParticleSystemMaterial;exports.Vertex=Vertex;exports.DynamicBufferAttribute=DynamicBufferAttribute;exports.Int8Attribute=Int8Attribute;exports.Uint8Attribute=Uint8Attribute;exports.Uint8ClampedAttribute=Uint8ClampedAttribute;exports.Int16Attribute=Int16Attribute;exports.Uint16Attribute=Uint16Attribute;exports.Int32Attribute=Int32Attribute;exports.Uint32Attribute=Uint32Attribute;exports.Float32Attribute=Float32Attribute;exports.Float64Attribute=Float64Attribute;exports.ClosedSplineCurve3=ClosedSplineCurve3;exports.SplineCurve3=SplineCurve3;exports.Spline=Spline;exports.AxisHelper=AxisHelper;exports.BoundingBoxHelper=BoundingBoxHelper;exports.EdgesHelper=EdgesHelper;exports.WireframeHelper=WireframeHelper;exports.XHRLoader=XHRLoader;exports.BinaryTextureLoader=BinaryTextureLoader;exports.GeometryUtils=GeometryUtils;exports.Projector=Projector;exports.CanvasRenderer=CanvasRenderer;exports.JSONLoader=JSONLoader;exports.SceneUtils=SceneUtils;exports.LensFlare=LensFlare;Object.defineProperty(exports,'__esModule',{value:true});});},{}],37:[function(_dereq_,module,exports){// Copyright 2016 The Draco Authors.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n'use strict';/**\n * @param {THREE.LoadingManager} manager\n */THREE.DRACOLoader=function(manager){this.timeLoaded=0;this.manager=manager||THREE.DefaultLoadingManager;this.materials=null;this.verbosity=0;this.attributeOptions={};this.drawMode=THREE.TrianglesDrawMode;// Native Draco attribute type to Three.JS attribute type.\nthis.nativeAttributeMap={'position':'POSITION','normal':'NORMAL','color':'COLOR','uv':'TEX_COORD'};};THREE.DRACOLoader.prototype={constructor:THREE.DRACOLoader,load:function(url,onLoad,onProgress,onError){var scope=this;var loader=new THREE.FileLoader(scope.manager);loader.setPath(this.path);loader.setResponseType('arraybuffer');loader.load(url,function(blob){scope.decodeDracoFile(blob,onLoad);},onProgress,onError);},setPath:function(value){this.path=value;return this;},setVerbosity:function(level){this.verbosity=level;return this;},/**\n     *  Sets desired mode for generated geometry indices.\n     *  Can be either:\n     *      THREE.TrianglesDrawMode\n     *      THREE.TriangleStripDrawMode\n     */setDrawMode:function(drawMode){this.drawMode=drawMode;return this;},/**\n     * Skips dequantization for a specific attribute.\n     * |attributeName| is the THREE.js name of the given attribute type.\n     * The only currently supported |attributeName| is 'position', more may be\n     * added in future.\n     */setSkipDequantization:function(attributeName,skip){var skipDequantization=true;if(typeof skip!=='undefined')skipDequantization=skip;this.getAttributeOptions(attributeName).skipDequantization=skipDequantization;return this;},/**\n     * Decompresses a Draco buffer. Names of attributes (for ID and type maps)\n     * must be one of the supported three.js types, including: position, color,\n     * normal, uv, uv2, skinIndex, skinWeight.\n     *\n     * @param {ArrayBuffer} rawBuffer\n     * @param {Function} callback\n     * @param {Object|undefined} attributeUniqueIdMap Provides a pre-defined ID\n     *     for each attribute in the geometry to be decoded. If given,\n     *     `attributeTypeMap` is required and `nativeAttributeMap` will be\n     *     ignored.\n     * @param {Object|undefined} attributeTypeMap Provides a predefined data\n     *     type (as a typed array constructor) for each attribute in the\n     *     geometry to be decoded.\n     */decodeDracoFile:function(rawBuffer,callback,attributeUniqueIdMap,attributeTypeMap){var scope=this;THREE.DRACOLoader.getDecoderModule().then(function(module){scope.decodeDracoFileInternal(rawBuffer,module.decoder,callback,attributeUniqueIdMap,attributeTypeMap);});},decodeDracoFileInternal:function(rawBuffer,dracoDecoder,callback,attributeUniqueIdMap,attributeTypeMap){/*\n       * Here is how to use Draco Javascript decoder and get the geometry.\n       */var buffer=new dracoDecoder.DecoderBuffer();buffer.Init(new Int8Array(rawBuffer),rawBuffer.byteLength);var decoder=new dracoDecoder.Decoder();/*\n       * Determine what type is this file: mesh or point cloud.\n       */var geometryType=decoder.GetEncodedGeometryType(buffer);if(geometryType==dracoDecoder.TRIANGULAR_MESH){if(this.verbosity>0){console.log('Loaded a mesh.');}}else if(geometryType==dracoDecoder.POINT_CLOUD){if(this.verbosity>0){console.log('Loaded a point cloud.');}}else{var errorMsg='THREE.DRACOLoader: Unknown geometry type.';console.error(errorMsg);throw new Error(errorMsg);}callback(this.convertDracoGeometryTo3JS(dracoDecoder,decoder,geometryType,buffer,attributeUniqueIdMap,attributeTypeMap));},addAttributeToGeometry:function(dracoDecoder,decoder,dracoGeometry,attributeName,attributeType,attribute,geometry,geometryBuffer){if(attribute.ptr===0){var errorMsg='THREE.DRACOLoader: No attribute '+attributeName;console.error(errorMsg);throw new Error(errorMsg);}var numComponents=attribute.num_components();var numPoints=dracoGeometry.num_points();var numValues=numPoints*numComponents;var attributeData;var TypedBufferAttribute;switch(attributeType){case Float32Array:attributeData=new dracoDecoder.DracoFloat32Array();decoder.GetAttributeFloatForAllPoints(dracoGeometry,attribute,attributeData);geometryBuffer[attributeName]=new Float32Array(numValues);TypedBufferAttribute=THREE.Float32BufferAttribute;break;case Int8Array:attributeData=new dracoDecoder.DracoInt8Array();decoder.GetAttributeInt8ForAllPoints(dracoGeometry,attribute,attributeData);geometryBuffer[attributeName]=new Int8Array(numValues);TypedBufferAttribute=THREE.Int8BufferAttribute;break;case Int16Array:attributeData=new dracoDecoder.DracoInt16Array();decoder.GetAttributeInt16ForAllPoints(dracoGeometry,attribute,attributeData);geometryBuffer[attributeName]=new Int16Array(numValues);TypedBufferAttribute=THREE.Int16BufferAttribute;break;case Int32Array:attributeData=new dracoDecoder.DracoInt32Array();decoder.GetAttributeInt32ForAllPoints(dracoGeometry,attribute,attributeData);geometryBuffer[attributeName]=new Int32Array(numValues);TypedBufferAttribute=THREE.Int32BufferAttribute;break;case Uint8Array:attributeData=new dracoDecoder.DracoUInt8Array();decoder.GetAttributeUInt8ForAllPoints(dracoGeometry,attribute,attributeData);geometryBuffer[attributeName]=new Uint8Array(numValues);TypedBufferAttribute=THREE.Uint8BufferAttribute;break;case Uint16Array:attributeData=new dracoDecoder.DracoUInt16Array();decoder.GetAttributeUInt16ForAllPoints(dracoGeometry,attribute,attributeData);geometryBuffer[attributeName]=new Uint16Array(numValues);TypedBufferAttribute=THREE.Uint16BufferAttribute;break;case Uint32Array:attributeData=new dracoDecoder.DracoUInt32Array();decoder.GetAttributeUInt32ForAllPoints(dracoGeometry,attribute,attributeData);geometryBuffer[attributeName]=new Uint32Array(numValues);TypedBufferAttribute=THREE.Uint32BufferAttribute;break;default:var errorMsg='THREE.DRACOLoader: Unexpected attribute type.';console.error(errorMsg);throw new Error(errorMsg);}// Copy data from decoder.\nfor(var i=0;i<numValues;i++){geometryBuffer[attributeName][i]=attributeData.GetValue(i);}// Add attribute to THREEJS geometry for rendering.\ngeometry.addAttribute(attributeName,new TypedBufferAttribute(geometryBuffer[attributeName],numComponents));dracoDecoder.destroy(attributeData);},convertDracoGeometryTo3JS:function(dracoDecoder,decoder,geometryType,buffer,attributeUniqueIdMap,attributeTypeMap){// TODO: Should not assume native Draco attribute IDs apply.\nif(this.getAttributeOptions('position').skipDequantization===true){decoder.SkipAttributeTransform(dracoDecoder.POSITION);}var dracoGeometry;var decodingStatus;var start_time=performance.now();if(geometryType===dracoDecoder.TRIANGULAR_MESH){dracoGeometry=new dracoDecoder.Mesh();decodingStatus=decoder.DecodeBufferToMesh(buffer,dracoGeometry);}else{dracoGeometry=new dracoDecoder.PointCloud();decodingStatus=decoder.DecodeBufferToPointCloud(buffer,dracoGeometry);}if(!decodingStatus.ok()||dracoGeometry.ptr==0){var errorMsg='THREE.DRACOLoader: Decoding failed: ';errorMsg+=decodingStatus.error_msg();console.error(errorMsg);dracoDecoder.destroy(decoder);dracoDecoder.destroy(dracoGeometry);throw new Error(errorMsg);}var decode_end=performance.now();dracoDecoder.destroy(buffer);/*\n         * Example on how to retrieve mesh and attributes.\n         */var numFaces;if(geometryType==dracoDecoder.TRIANGULAR_MESH){numFaces=dracoGeometry.num_faces();if(this.verbosity>0){console.log('Number of faces loaded: '+numFaces.toString());}}else{numFaces=0;}var numPoints=dracoGeometry.num_points();var numAttributes=dracoGeometry.num_attributes();if(this.verbosity>0){console.log('Number of points loaded: '+numPoints.toString());console.log('Number of attributes loaded: '+numAttributes.toString());}// Verify if there is position attribute.\n// TODO: Should not assume native Draco attribute IDs apply.\nvar posAttId=decoder.GetAttributeId(dracoGeometry,dracoDecoder.POSITION);if(posAttId==-1){var errorMsg='THREE.DRACOLoader: No position attribute found.';console.error(errorMsg);dracoDecoder.destroy(decoder);dracoDecoder.destroy(dracoGeometry);throw new Error(errorMsg);}var posAttribute=decoder.GetAttribute(dracoGeometry,posAttId);// Structure for converting to THREEJS geometry later.\nvar geometryBuffer={};// Import data to Three JS geometry.\nvar geometry=new THREE.BufferGeometry();// Do not use both the native attribute map and a provided (e.g. glTF) map.\nif(attributeUniqueIdMap){// Add attributes of user specified unique id. E.g. GLTF models.\nfor(var attributeName in attributeUniqueIdMap){var attributeType=attributeTypeMap[attributeName];var attributeId=attributeUniqueIdMap[attributeName];var attribute=decoder.GetAttributeByUniqueId(dracoGeometry,attributeId);this.addAttributeToGeometry(dracoDecoder,decoder,dracoGeometry,attributeName,attributeType,attribute,geometry,geometryBuffer);}}else{// Add native Draco attribute type to geometry.\nfor(var attributeName in this.nativeAttributeMap){var attId=decoder.GetAttributeId(dracoGeometry,dracoDecoder[this.nativeAttributeMap[attributeName]]);if(attId!==-1){if(this.verbosity>0){console.log('Loaded '+attributeName+' attribute.');}var attribute=decoder.GetAttribute(dracoGeometry,attId);this.addAttributeToGeometry(dracoDecoder,decoder,dracoGeometry,attributeName,Float32Array,attribute,geometry,geometryBuffer);}}}// For mesh, we need to generate the faces.\nif(geometryType==dracoDecoder.TRIANGULAR_MESH){if(this.drawMode===THREE.TriangleStripDrawMode){var stripsArray=new dracoDecoder.DracoInt32Array();var numStrips=decoder.GetTriangleStripsFromMesh(dracoGeometry,stripsArray);geometryBuffer.indices=new Uint32Array(stripsArray.size());for(var i=0;i<stripsArray.size();++i){geometryBuffer.indices[i]=stripsArray.GetValue(i);}dracoDecoder.destroy(stripsArray);}else{var numIndices=numFaces*3;geometryBuffer.indices=new Uint32Array(numIndices);var ia=new dracoDecoder.DracoInt32Array();for(var i=0;i<numFaces;++i){decoder.GetFaceFromMesh(dracoGeometry,i,ia);var index=i*3;geometryBuffer.indices[index]=ia.GetValue(0);geometryBuffer.indices[index+1]=ia.GetValue(1);geometryBuffer.indices[index+2]=ia.GetValue(2);}dracoDecoder.destroy(ia);}}geometry.drawMode=this.drawMode;if(geometryType==dracoDecoder.TRIANGULAR_MESH){geometry.setIndex(new(geometryBuffer.indices.length>65535?THREE.Uint32BufferAttribute:THREE.Uint16BufferAttribute)(geometryBuffer.indices,1));}// TODO: Should not assume native Draco attribute IDs apply.\n// TODO: Can other attribute types be quantized?\nvar posTransform=new dracoDecoder.AttributeQuantizationTransform();if(posTransform.InitFromAttribute(posAttribute)){// Quantized attribute. Store the quantization parameters into the\n// THREE.js attribute.\ngeometry.attributes['position'].isQuantized=true;geometry.attributes['position'].maxRange=posTransform.range();geometry.attributes['position'].numQuantizationBits=posTransform.quantization_bits();geometry.attributes['position'].minValues=new Float32Array(3);for(var i=0;i<3;++i){geometry.attributes['position'].minValues[i]=posTransform.min_value(i);}}dracoDecoder.destroy(posTransform);dracoDecoder.destroy(decoder);dracoDecoder.destroy(dracoGeometry);this.decode_time=decode_end-start_time;this.import_time=performance.now()-decode_end;if(this.verbosity>0){console.log('Decode time: '+this.decode_time);console.log('Import time: '+this.import_time);}return geometry;},isVersionSupported:function(version,callback){THREE.DRACOLoader.getDecoderModule().then(function(module){callback(module.decoder.isVersionSupported(version));});},getAttributeOptions:function(attributeName){if(typeof this.attributeOptions[attributeName]==='undefined')this.attributeOptions[attributeName]={};return this.attributeOptions[attributeName];}};THREE.DRACOLoader.decoderPath='./';THREE.DRACOLoader.decoderConfig={};THREE.DRACOLoader.decoderModulePromise=null;/**\n * Sets the base path for decoder source files.\n * @param {string} path\n */THREE.DRACOLoader.setDecoderPath=function(path){THREE.DRACOLoader.decoderPath=path;};/**\n * Sets decoder configuration and releases singleton decoder module. Module\n * will be recreated with the next decoding call.\n * @param {Object} config\n */THREE.DRACOLoader.setDecoderConfig=function(config){var wasmBinary=THREE.DRACOLoader.decoderConfig.wasmBinary;THREE.DRACOLoader.decoderConfig=config||{};THREE.DRACOLoader.releaseDecoderModule();// Reuse WASM binary.\nif(wasmBinary)THREE.DRACOLoader.decoderConfig.wasmBinary=wasmBinary;};/**\n * Releases the singleton DracoDecoderModule instance. Module will be recreated\n * with the next decoding call.\n */THREE.DRACOLoader.releaseDecoderModule=function(){THREE.DRACOLoader.decoderModulePromise=null;};/**\n * Gets WebAssembly or asm.js singleton instance of DracoDecoderModule\n * after testing for browser support. Returns Promise that resolves when\n * module is available.\n * @return {Promise<{decoder: DracoDecoderModule}>}\n */THREE.DRACOLoader.getDecoderModule=function(){var scope=this;var path=THREE.DRACOLoader.decoderPath;var config=THREE.DRACOLoader.decoderConfig;var promise=THREE.DRACOLoader.decoderModulePromise;if(promise)return promise;// Load source files.\nif(typeof DracoDecoderModule!=='undefined'){// Loaded externally.\npromise=Promise.resolve();}else if(typeof WebAssembly!=='object'||config.type==='js'){// Load with asm.js.\npromise=THREE.DRACOLoader._loadScript(path+'draco_decoder.js');}else{// Load with WebAssembly.\nconfig.wasmBinaryFile=path+'draco_decoder.wasm';promise=THREE.DRACOLoader._loadScript(path+'draco_wasm_wrapper.js').then(function(){return THREE.DRACOLoader._loadArrayBuffer(config.wasmBinaryFile);}).then(function(wasmBinary){config.wasmBinary=wasmBinary;});}// Wait for source files, then create and return a decoder.\npromise=promise.then(function(){return new Promise(function(resolve){config.onModuleLoaded=function(decoder){scope.timeLoaded=performance.now();// Module is Promise-like. Wrap before resolving to avoid loop.\nresolve({decoder:decoder});};DracoDecoderModule(config);});});THREE.DRACOLoader.decoderModulePromise=promise;return promise;};/**\n * @param {string} src\n * @return {Promise}\n */THREE.DRACOLoader._loadScript=function(src){var prevScript=document.getElementById('decoder_script');if(prevScript!==null){prevScript.parentNode.removeChild(prevScript);}var head=document.getElementsByTagName('head')[0];var script=document.createElement('script');script.id='decoder_script';script.type='text/javascript';script.src=src;return new Promise(function(resolve){script.onload=resolve;head.appendChild(script);});};/**\n * @param {string} src\n * @return {Promise}\n */THREE.DRACOLoader._loadArrayBuffer=function(src){var loader=new THREE.FileLoader();loader.setResponseType('arraybuffer');return new Promise(function(resolve,reject){loader.load(src,resolve,undefined,reject);});};},{}],38:[function(_dereq_,module,exports){/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */THREE.GLTFLoader=function(){function GLTFLoader(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager;this.dracoLoader=null;}GLTFLoader.prototype={constructor:GLTFLoader,crossOrigin:'anonymous',load:function(url,onLoad,onProgress,onError){var scope=this;var resourcePath;if(this.resourcePath!==undefined){resourcePath=this.resourcePath;}else if(this.path!==undefined){resourcePath=this.path;}else{resourcePath=THREE.LoaderUtils.extractUrlBase(url);}// Tells the LoadingManager to track an extra item, which resolves after\n// the model is fully loaded. This means the count of items loaded will\n// be incorrect, but ensures manager.onLoad() does not fire early.\nscope.manager.itemStart(url);var _onError=function(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);scope.manager.itemEnd(url);};var loader=new THREE.FileLoader(scope.manager);loader.setPath(this.path);loader.setResponseType('arraybuffer');loader.load(url,function(data){try{scope.parse(data,resourcePath,function(gltf){onLoad(gltf);scope.manager.itemEnd(url);},_onError);}catch(e){_onError(e);}},onProgress,_onError);},setCrossOrigin:function(value){this.crossOrigin=value;return this;},setPath:function(value){this.path=value;return this;},setResourcePath:function(value){this.resourcePath=value;return this;},setDRACOLoader:function(dracoLoader){this.dracoLoader=dracoLoader;return this;},parse:function(data,path,onLoad,onError){var content;var extensions={};if(typeof data==='string'){content=data;}else{var magic=THREE.LoaderUtils.decodeText(new Uint8Array(data,0,4));if(magic===BINARY_EXTENSION_HEADER_MAGIC){try{extensions[EXTENSIONS.KHR_BINARY_GLTF]=new GLTFBinaryExtension(data);}catch(error){if(onError)onError(error);return;}content=extensions[EXTENSIONS.KHR_BINARY_GLTF].content;}else{content=THREE.LoaderUtils.decodeText(new Uint8Array(data));}}var json=JSON.parse(content);if(json.asset===undefined||json.asset.version[0]<2){if(onError)onError(new Error('THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.'));return;}if(json.extensionsUsed){for(var i=0;i<json.extensionsUsed.length;++i){var extensionName=json.extensionsUsed[i];var extensionsRequired=json.extensionsRequired||[];switch(extensionName){case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:extensions[extensionName]=new GLTFLightsExtension(json);break;case EXTENSIONS.KHR_MATERIALS_UNLIT:extensions[extensionName]=new GLTFMaterialsUnlitExtension(json);break;case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:extensions[extensionName]=new GLTFMaterialsPbrSpecularGlossinessExtension(json);break;case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:extensions[extensionName]=new GLTFDracoMeshCompressionExtension(json,this.dracoLoader);break;case EXTENSIONS.MSFT_TEXTURE_DDS:extensions[EXTENSIONS.MSFT_TEXTURE_DDS]=new GLTFTextureDDSExtension(json);break;case EXTENSIONS.KHR_TEXTURE_TRANSFORM:extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]=new GLTFTextureTransformExtension(json);break;default:if(extensionsRequired.indexOf(extensionName)>=0){console.warn('THREE.GLTFLoader: Unknown extension \"'+extensionName+'\".');}}}}var parser=new GLTFParser(json,extensions,{path:path||this.resourcePath||'',crossOrigin:this.crossOrigin,manager:this.manager});parser.parse(function(scene,scenes,cameras,animations,json){var glTF={scene:scene,scenes:scenes,cameras:cameras,animations:animations,asset:json.asset,parser:parser,userData:{}};addUnknownExtensionsToUserData(extensions,glTF,json);onLoad(glTF);},onError);}};/* GLTFREGISTRY */function GLTFRegistry(){var objects={};return{get:function(key){return objects[key];},add:function(key,object){objects[key]=object;},remove:function(key){delete objects[key];},removeAll:function(){objects={};}};}/*********************************/ /********** EXTENSIONS ***********/ /*********************************/var EXTENSIONS={KHR_BINARY_GLTF:'KHR_binary_glTF',KHR_DRACO_MESH_COMPRESSION:'KHR_draco_mesh_compression',KHR_LIGHTS_PUNCTUAL:'KHR_lights_punctual',KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:'KHR_materials_pbrSpecularGlossiness',KHR_MATERIALS_UNLIT:'KHR_materials_unlit',KHR_TEXTURE_TRANSFORM:'KHR_texture_transform',MSFT_TEXTURE_DDS:'MSFT_texture_dds'};/**\n\t * DDS Texture Extension\n\t *\n\t * Specification:\n\t * https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\n\t *\n\t */function GLTFTextureDDSExtension(){if(!THREE.DDSLoader){throw new Error('THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader');}this.name=EXTENSIONS.MSFT_TEXTURE_DDS;this.ddsLoader=new THREE.DDSLoader();}/**\n\t * Lights Extension\n\t *\n\t * Specification: PENDING\n\t */function GLTFLightsExtension(json){this.name=EXTENSIONS.KHR_LIGHTS_PUNCTUAL;var extension=json.extensions&&json.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]||{};this.lightDefs=extension.lights||[];}GLTFLightsExtension.prototype.loadLight=function(lightIndex){var lightDef=this.lightDefs[lightIndex];var lightNode;var color=new THREE.Color(0xffffff);if(lightDef.color!==undefined)color.fromArray(lightDef.color);var range=lightDef.range!==undefined?lightDef.range:0;switch(lightDef.type){case'directional':lightNode=new THREE.DirectionalLight(color);lightNode.target.position.set(0,0,-1);lightNode.add(lightNode.target);break;case'point':lightNode=new THREE.PointLight(color);lightNode.distance=range;break;case'spot':lightNode=new THREE.SpotLight(color);lightNode.distance=range;// Handle spotlight properties.\nlightDef.spot=lightDef.spot||{};lightDef.spot.innerConeAngle=lightDef.spot.innerConeAngle!==undefined?lightDef.spot.innerConeAngle:0;lightDef.spot.outerConeAngle=lightDef.spot.outerConeAngle!==undefined?lightDef.spot.outerConeAngle:Math.PI/4.0;lightNode.angle=lightDef.spot.outerConeAngle;lightNode.penumbra=1.0-lightDef.spot.innerConeAngle/lightDef.spot.outerConeAngle;lightNode.target.position.set(0,0,-1);lightNode.add(lightNode.target);break;default:throw new Error('THREE.GLTFLoader: Unexpected light type, \"'+lightDef.type+'\".');}// Some lights (e.g. spot) default to a position other than the origin. Reset the position\n// here, because node-level parsing will only override position if explicitly specified.\nlightNode.position.set(0,0,0);lightNode.decay=2;if(lightDef.intensity!==undefined)lightNode.intensity=lightDef.intensity;lightNode.name=lightDef.name||'light_'+lightIndex;return Promise.resolve(lightNode);};/**\n\t * Unlit Materials Extension (pending)\n\t *\n\t * PR: https://github.com/KhronosGroup/glTF/pull/1163\n\t */function GLTFMaterialsUnlitExtension(json){this.name=EXTENSIONS.KHR_MATERIALS_UNLIT;}GLTFMaterialsUnlitExtension.prototype.getMaterialType=function(material){return THREE.MeshBasicMaterial;};GLTFMaterialsUnlitExtension.prototype.extendParams=function(materialParams,material,parser){var pending=[];materialParams.color=new THREE.Color(1.0,1.0,1.0);materialParams.opacity=1.0;var metallicRoughness=material.pbrMetallicRoughness;if(metallicRoughness){if(Array.isArray(metallicRoughness.baseColorFactor)){var array=metallicRoughness.baseColorFactor;materialParams.color.fromArray(array);materialParams.opacity=array[3];}if(metallicRoughness.baseColorTexture!==undefined){pending.push(parser.assignTexture(materialParams,'map',metallicRoughness.baseColorTexture));}}return Promise.all(pending);};/* BINARY EXTENSION */var BINARY_EXTENSION_BUFFER_NAME='binary_glTF';var BINARY_EXTENSION_HEADER_MAGIC='glTF';var BINARY_EXTENSION_HEADER_LENGTH=12;var BINARY_EXTENSION_CHUNK_TYPES={JSON:0x4E4F534A,BIN:0x004E4942};function GLTFBinaryExtension(data){this.name=EXTENSIONS.KHR_BINARY_GLTF;this.content=null;this.body=null;var headerView=new DataView(data,0,BINARY_EXTENSION_HEADER_LENGTH);this.header={magic:THREE.LoaderUtils.decodeText(new Uint8Array(data.slice(0,4))),version:headerView.getUint32(4,true),length:headerView.getUint32(8,true)};if(this.header.magic!==BINARY_EXTENSION_HEADER_MAGIC){throw new Error('THREE.GLTFLoader: Unsupported glTF-Binary header.');}else if(this.header.version<2.0){throw new Error('THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.');}var chunkView=new DataView(data,BINARY_EXTENSION_HEADER_LENGTH);var chunkIndex=0;while(chunkIndex<chunkView.byteLength){var chunkLength=chunkView.getUint32(chunkIndex,true);chunkIndex+=4;var chunkType=chunkView.getUint32(chunkIndex,true);chunkIndex+=4;if(chunkType===BINARY_EXTENSION_CHUNK_TYPES.JSON){var contentArray=new Uint8Array(data,BINARY_EXTENSION_HEADER_LENGTH+chunkIndex,chunkLength);this.content=THREE.LoaderUtils.decodeText(contentArray);}else if(chunkType===BINARY_EXTENSION_CHUNK_TYPES.BIN){var byteOffset=BINARY_EXTENSION_HEADER_LENGTH+chunkIndex;this.body=data.slice(byteOffset,byteOffset+chunkLength);}// Clients must ignore chunks with unknown types.\nchunkIndex+=chunkLength;}if(this.content===null){throw new Error('THREE.GLTFLoader: JSON content not found.');}}/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/pull/874\n\t */function GLTFDracoMeshCompressionExtension(json,dracoLoader){if(!dracoLoader){throw new Error('THREE.GLTFLoader: No DRACOLoader instance provided.');}this.name=EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;this.json=json;this.dracoLoader=dracoLoader;THREE.DRACOLoader.getDecoderModule();}GLTFDracoMeshCompressionExtension.prototype.decodePrimitive=function(primitive,parser){var json=this.json;var dracoLoader=this.dracoLoader;var bufferViewIndex=primitive.extensions[this.name].bufferView;var gltfAttributeMap=primitive.extensions[this.name].attributes;var threeAttributeMap={};var attributeNormalizedMap={};var attributeTypeMap={};for(var attributeName in gltfAttributeMap){if(!(attributeName in ATTRIBUTES))continue;threeAttributeMap[ATTRIBUTES[attributeName]]=gltfAttributeMap[attributeName];}for(attributeName in primitive.attributes){if(ATTRIBUTES[attributeName]!==undefined&&gltfAttributeMap[attributeName]!==undefined){var accessorDef=json.accessors[primitive.attributes[attributeName]];var componentType=WEBGL_COMPONENT_TYPES[accessorDef.componentType];attributeTypeMap[ATTRIBUTES[attributeName]]=componentType;attributeNormalizedMap[ATTRIBUTES[attributeName]]=accessorDef.normalized===true;}}return parser.getDependency('bufferView',bufferViewIndex).then(function(bufferView){return new Promise(function(resolve){dracoLoader.decodeDracoFile(bufferView,function(geometry){for(var attributeName in geometry.attributes){var attribute=geometry.attributes[attributeName];var normalized=attributeNormalizedMap[attributeName];if(normalized!==undefined)attribute.normalized=normalized;}resolve(geometry);},threeAttributeMap,attributeTypeMap);});});};/**\n\t * Texture Transform Extension\n\t *\n\t * Specification:\n\t */function GLTFTextureTransformExtension(json){this.name=EXTENSIONS.KHR_TEXTURE_TRANSFORM;}GLTFTextureTransformExtension.prototype.extendTexture=function(texture,transform){texture=texture.clone();if(transform.offset!==undefined){texture.offset.fromArray(transform.offset);}if(transform.rotation!==undefined){texture.rotation=transform.rotation;}if(transform.scale!==undefined){texture.repeat.fromArray(transform.scale);}if(transform.texCoord!==undefined){console.warn('THREE.GLTFLoader: Custom UV sets in \"'+this.name+'\" extension not yet supported.');}texture.needsUpdate=true;return texture;};/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */function GLTFMaterialsPbrSpecularGlossinessExtension(){return{name:EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,specularGlossinessParams:['color','map','lightMap','lightMapIntensity','aoMap','aoMapIntensity','emissive','emissiveIntensity','emissiveMap','bumpMap','bumpScale','normalMap','displacementMap','displacementScale','displacementBias','specularMap','specular','glossinessMap','glossiness','alphaMap','envMap','envMapIntensity','refractionRatio'],getMaterialType:function(){return THREE.ShaderMaterial;},extendParams:function(params,material,parser){var pbrSpecularGlossiness=material.extensions[this.name];var shader=THREE.ShaderLib['standard'];var uniforms=THREE.UniformsUtils.clone(shader.uniforms);var specularMapParsFragmentChunk=['#ifdef USE_SPECULARMAP','\tuniform sampler2D specularMap;','#endif'].join('\\n');var glossinessMapParsFragmentChunk=['#ifdef USE_GLOSSINESSMAP','\tuniform sampler2D glossinessMap;','#endif'].join('\\n');var specularMapFragmentChunk=['vec3 specularFactor = specular;','#ifdef USE_SPECULARMAP','\tvec4 texelSpecular = texture2D( specularMap, vUv );','\ttexelSpecular = sRGBToLinear( texelSpecular );','\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture','\tspecularFactor *= texelSpecular.rgb;','#endif'].join('\\n');var glossinessMapFragmentChunk=['float glossinessFactor = glossiness;','#ifdef USE_GLOSSINESSMAP','\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );','\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture','\tglossinessFactor *= texelGlossiness.a;','#endif'].join('\\n');var lightPhysicalFragmentChunk=['PhysicalMaterial material;','material.diffuseColor = diffuseColor.rgb;','material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );','material.specularColor = specularFactor.rgb;'].join('\\n');var fragmentShader=shader.fragmentShader.replace('uniform float roughness;','uniform vec3 specular;').replace('uniform float metalness;','uniform float glossiness;').replace('#include <roughnessmap_pars_fragment>',specularMapParsFragmentChunk).replace('#include <metalnessmap_pars_fragment>',glossinessMapParsFragmentChunk).replace('#include <roughnessmap_fragment>',specularMapFragmentChunk).replace('#include <metalnessmap_fragment>',glossinessMapFragmentChunk).replace('#include <lights_physical_fragment>',lightPhysicalFragmentChunk);delete uniforms.roughness;delete uniforms.metalness;delete uniforms.roughnessMap;delete uniforms.metalnessMap;uniforms.specular={value:new THREE.Color().setHex(0x111111)};uniforms.glossiness={value:0.5};uniforms.specularMap={value:null};uniforms.glossinessMap={value:null};params.vertexShader=shader.vertexShader;params.fragmentShader=fragmentShader;params.uniforms=uniforms;params.defines={'STANDARD':''};params.color=new THREE.Color(1.0,1.0,1.0);params.opacity=1.0;var pending=[];if(Array.isArray(pbrSpecularGlossiness.diffuseFactor)){var array=pbrSpecularGlossiness.diffuseFactor;params.color.fromArray(array);params.opacity=array[3];}if(pbrSpecularGlossiness.diffuseTexture!==undefined){pending.push(parser.assignTexture(params,'map',pbrSpecularGlossiness.diffuseTexture));}params.emissive=new THREE.Color(0.0,0.0,0.0);params.glossiness=pbrSpecularGlossiness.glossinessFactor!==undefined?pbrSpecularGlossiness.glossinessFactor:1.0;params.specular=new THREE.Color(1.0,1.0,1.0);if(Array.isArray(pbrSpecularGlossiness.specularFactor)){params.specular.fromArray(pbrSpecularGlossiness.specularFactor);}if(pbrSpecularGlossiness.specularGlossinessTexture!==undefined){var specGlossMapDef=pbrSpecularGlossiness.specularGlossinessTexture;pending.push(parser.assignTexture(params,'glossinessMap',specGlossMapDef));pending.push(parser.assignTexture(params,'specularMap',specGlossMapDef));}return Promise.all(pending);},createMaterial:function(params){// setup material properties based on MeshStandardMaterial for Specular-Glossiness\nvar material=new THREE.ShaderMaterial({defines:params.defines,vertexShader:params.vertexShader,fragmentShader:params.fragmentShader,uniforms:params.uniforms,fog:true,lights:true,opacity:params.opacity,transparent:params.transparent});material.isGLTFSpecularGlossinessMaterial=true;material.color=params.color;material.map=params.map===undefined?null:params.map;material.lightMap=null;material.lightMapIntensity=1.0;material.aoMap=params.aoMap===undefined?null:params.aoMap;material.aoMapIntensity=1.0;material.emissive=params.emissive;material.emissiveIntensity=1.0;material.emissiveMap=params.emissiveMap===undefined?null:params.emissiveMap;material.bumpMap=params.bumpMap===undefined?null:params.bumpMap;material.bumpScale=1;material.normalMap=params.normalMap===undefined?null:params.normalMap;if(params.normalScale)material.normalScale=params.normalScale;material.displacementMap=null;material.displacementScale=1;material.displacementBias=0;material.specularMap=params.specularMap===undefined?null:params.specularMap;material.specular=params.specular;material.glossinessMap=params.glossinessMap===undefined?null:params.glossinessMap;material.glossiness=params.glossiness;material.alphaMap=null;material.envMap=params.envMap===undefined?null:params.envMap;material.envMapIntensity=1.0;material.refractionRatio=0.98;material.extensions.derivatives=true;return material;},/**\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\n\t\t\t * normally be defined by MeshStandardMaterial.\n\t\t\t *\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\n\t\t\t *\n\t\t\t * @param  {THREE.ShaderMaterial} source\n\t\t\t * @return {THREE.ShaderMaterial}\n\t\t\t */cloneMaterial:function(source){var target=source.clone();target.isGLTFSpecularGlossinessMaterial=true;var params=this.specularGlossinessParams;for(var i=0,il=params.length;i<il;i++){target[params[i]]=source[params[i]];}return target;},// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\nrefreshUniforms:function(renderer,scene,camera,geometry,material,group){if(material.isGLTFSpecularGlossinessMaterial!==true){return;}var uniforms=material.uniforms;var defines=material.defines;uniforms.opacity.value=material.opacity;uniforms.diffuse.value.copy(material.color);uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);uniforms.map.value=material.map;uniforms.specularMap.value=material.specularMap;uniforms.alphaMap.value=material.alphaMap;uniforms.lightMap.value=material.lightMap;uniforms.lightMapIntensity.value=material.lightMapIntensity;uniforms.aoMap.value=material.aoMap;uniforms.aoMapIntensity.value=material.aoMapIntensity;// uv repeat and offset setting priorities\n// 1. color map\n// 2. specular map\n// 3. normal map\n// 4. bump map\n// 5. alpha map\n// 6. emissive map\nvar uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.specularMap){uvScaleMap=material.specularMap;}else if(material.displacementMap){uvScaleMap=material.displacementMap;}else if(material.normalMap){uvScaleMap=material.normalMap;}else if(material.bumpMap){uvScaleMap=material.bumpMap;}else if(material.glossinessMap){uvScaleMap=material.glossinessMap;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}else if(material.emissiveMap){uvScaleMap=material.emissiveMap;}if(uvScaleMap!==undefined){// backwards compatibility\nif(uvScaleMap.isWebGLRenderTarget){uvScaleMap=uvScaleMap.texture;}if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}if(material.envMap){uniforms.envMap.value=material.envMap;uniforms.envMapIntensity.value=material.envMapIntensity;// don't flip CubeTexture envMaps, flip everything else:\n//  WebGLRenderTargetCube will be flipped for backwards compatibility\n//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\nuniforms.flipEnvMap.value=material.envMap.isCubeTexture?-1:1;uniforms.reflectivity.value=material.reflectivity;uniforms.refractionRatio.value=material.refractionRatio;uniforms.maxMipLevel.value=renderer.properties.get(material.envMap).__maxMipLevel;}uniforms.specular.value.copy(material.specular);uniforms.glossiness.value=material.glossiness;uniforms.glossinessMap.value=material.glossinessMap;uniforms.emissiveMap.value=material.emissiveMap;uniforms.bumpMap.value=material.bumpMap;uniforms.normalMap.value=material.normalMap;uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;if(uniforms.glossinessMap.value!==null&&defines.USE_GLOSSINESSMAP===undefined){defines.USE_GLOSSINESSMAP='';// set USE_ROUGHNESSMAP to enable vUv\ndefines.USE_ROUGHNESSMAP='';}if(uniforms.glossinessMap.value===null&&defines.USE_GLOSSINESSMAP!==undefined){delete defines.USE_GLOSSINESSMAP;delete defines.USE_ROUGHNESSMAP;}}};}/*********************************/ /********** INTERPOLATION ********/ /*********************************/ // Spline Interpolation\n// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\nfunction GLTFCubicSplineInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){THREE.Interpolant.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}GLTFCubicSplineInterpolant.prototype=Object.create(THREE.Interpolant.prototype);GLTFCubicSplineInterpolant.prototype.constructor=GLTFCubicSplineInterpolant;GLTFCubicSplineInterpolant.prototype.copySampleValue_=function(index){// Copies a sample value to the result buffer. See description of glTF\n// CUBICSPLINE values layout in interpolate_() function below.\nvar result=this.resultBuffer,values=this.sampleValues,valueSize=this.valueSize,offset=index*valueSize*3+valueSize;for(var i=0;i!==valueSize;i++){result[i]=values[offset+i];}return result;};GLTFCubicSplineInterpolant.prototype.beforeStart_=GLTFCubicSplineInterpolant.prototype.copySampleValue_;GLTFCubicSplineInterpolant.prototype.afterEnd_=GLTFCubicSplineInterpolant.prototype.copySampleValue_;GLTFCubicSplineInterpolant.prototype.interpolate_=function(i1,t0,t,t1){var result=this.resultBuffer;var values=this.sampleValues;var stride=this.valueSize;var stride2=stride*2;var stride3=stride*3;var td=t1-t0;var p=(t-t0)/td;var pp=p*p;var ppp=pp*p;var offset1=i1*stride3;var offset0=offset1-stride3;var s2=-2*ppp+3*pp;var s3=ppp-pp;var s0=1-s2;var s1=s3-pp+p;// Layout of keyframe output values for CUBICSPLINE animations:\n//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\nfor(var i=0;i!==stride;i++){var p0=values[offset0+i+stride];// splineVertex_k\nvar m0=values[offset0+i+stride2]*td;// outTangent_k * (t_k+1 - t_k)\nvar p1=values[offset1+i+stride];// splineVertex_k+1\nvar m1=values[offset1+i]*td;// inTangent_k+1 * (t_k+1 - t_k)\nresult[i]=s0*p0+s1*m0+s2*p1+s3*m1;}return result;};/*********************************/ /********** INTERNALS ************/ /*********************************/ /* CONSTANTS */var WEBGL_CONSTANTS={FLOAT:5126,//FLOAT_MAT2: 35674,\nFLOAT_MAT3:35675,FLOAT_MAT4:35676,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,LINEAR:9729,REPEAT:10497,SAMPLER_2D:35678,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,UNSIGNED_BYTE:5121,UNSIGNED_SHORT:5123};var WEBGL_TYPE={5126:Number,//35674: THREE.Matrix2,\n35675:THREE.Matrix3,35676:THREE.Matrix4,35664:THREE.Vector2,35665:THREE.Vector3,35666:THREE.Vector4,35678:THREE.Texture};var WEBGL_COMPONENT_TYPES={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array};var WEBGL_FILTERS={9728:THREE.NearestFilter,9729:THREE.LinearFilter,9984:THREE.NearestMipMapNearestFilter,9985:THREE.LinearMipMapNearestFilter,9986:THREE.NearestMipMapLinearFilter,9987:THREE.LinearMipMapLinearFilter};var WEBGL_WRAPPINGS={33071:THREE.ClampToEdgeWrapping,33648:THREE.MirroredRepeatWrapping,10497:THREE.RepeatWrapping};var WEBGL_SIDES={1028:THREE.BackSide,// Culling front\n1029:THREE.FrontSide// Culling back\n//1032: THREE.NoSide   // Culling front and back, what to do?\n};var WEBGL_DEPTH_FUNCS={512:THREE.NeverDepth,513:THREE.LessDepth,514:THREE.EqualDepth,515:THREE.LessEqualDepth,516:THREE.GreaterEqualDepth,517:THREE.NotEqualDepth,518:THREE.GreaterEqualDepth,519:THREE.AlwaysDepth};var WEBGL_BLEND_EQUATIONS={32774:THREE.AddEquation,32778:THREE.SubtractEquation,32779:THREE.ReverseSubtractEquation};var WEBGL_BLEND_FUNCS={0:THREE.ZeroFactor,1:THREE.OneFactor,768:THREE.SrcColorFactor,769:THREE.OneMinusSrcColorFactor,770:THREE.SrcAlphaFactor,771:THREE.OneMinusSrcAlphaFactor,772:THREE.DstAlphaFactor,773:THREE.OneMinusDstAlphaFactor,774:THREE.DstColorFactor,775:THREE.OneMinusDstColorFactor,776:THREE.SrcAlphaSaturateFactor// The followings are not supported by Three.js yet\n//32769: CONSTANT_COLOR,\n//32770: ONE_MINUS_CONSTANT_COLOR,\n//32771: CONSTANT_ALPHA,\n//32772: ONE_MINUS_CONSTANT_COLOR\n};var WEBGL_TYPE_SIZES={'SCALAR':1,'VEC2':2,'VEC3':3,'VEC4':4,'MAT2':4,'MAT3':9,'MAT4':16};var ATTRIBUTES={POSITION:'position',NORMAL:'normal',TEXCOORD_0:'uv',TEXCOORD_1:'uv2',COLOR_0:'color',WEIGHTS_0:'skinWeight',JOINTS_0:'skinIndex'};var PATH_PROPERTIES={scale:'scale',translation:'position',rotation:'quaternion',weights:'morphTargetInfluences'};var INTERPOLATION={CUBICSPLINE:THREE.InterpolateSmooth,// We use custom interpolation GLTFCubicSplineInterpolation for CUBICSPLINE.\n// KeyframeTrack.optimize() can't handle glTF Cubic Spline output values layout,\n// using THREE.InterpolateSmooth for KeyframeTrack instantiation to prevent optimization.\n// See KeyframeTrack.optimize() for the detail.\nLINEAR:THREE.InterpolateLinear,STEP:THREE.InterpolateDiscrete};var STATES_ENABLES={2884:'CULL_FACE',2929:'DEPTH_TEST',3042:'BLEND',3089:'SCISSOR_TEST',32823:'POLYGON_OFFSET_FILL',32926:'SAMPLE_ALPHA_TO_COVERAGE'};var ALPHA_MODES={OPAQUE:'OPAQUE',MASK:'MASK',BLEND:'BLEND'};var MIME_TYPE_FORMATS={'image/png':THREE.RGBAFormat,'image/jpeg':THREE.RGBFormat};/* UTILITY FUNCTIONS */function resolveURL(url,path){// Invalid URL\nif(typeof url!=='string'||url==='')return'';// Absolute URL http://,https://,//\nif(/^(https?:)?\\/\\//i.test(url))return url;// Data URI\nif(/^data:.*,.*$/i.test(url))return url;// Blob URL\nif(/^blob:.*$/i.test(url))return url;// Relative URL\nreturn path+url;}/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */function createDefaultMaterial(){return new THREE.MeshStandardMaterial({color:0xFFFFFF,emissive:0x000000,metalness:1,roughness:1,transparent:false,depthTest:true,side:THREE.FrontSide});}function addUnknownExtensionsToUserData(knownExtensions,object,objectDef){// Add unknown glTF extensions to an object's userData.\nfor(var name in objectDef.extensions){if(knownExtensions[name]===undefined){object.userData.gltfExtensions=object.userData.gltfExtensions||{};object.userData.gltfExtensions[name]=objectDef.extensions[name];}}}/**\n\t * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object\n\t * @param {GLTF.definition} gltfDef\n\t */function assignExtrasToUserData(object,gltfDef){if(gltfDef.extras!==undefined){if(typeof gltfDef.extras==='object'){object.userData=gltfDef.extras;}else{console.warn('THREE.GLTFLoader: Ignoring primitive type .extras, '+gltfDef.extras);}}}/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {Array<GLTF.Target>} targets\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */function addMorphTargets(geometry,targets,parser){var hasMorphPosition=false;var hasMorphNormal=false;for(var i=0,il=targets.length;i<il;i++){var target=targets[i];if(target.POSITION!==undefined)hasMorphPosition=true;if(target.NORMAL!==undefined)hasMorphNormal=true;if(hasMorphPosition&&hasMorphNormal)break;}if(!hasMorphPosition&&!hasMorphNormal)return Promise.resolve(geometry);var pendingPositionAccessors=[];var pendingNormalAccessors=[];for(var i=0,il=targets.length;i<il;i++){var target=targets[i];if(hasMorphPosition){// TODO: Error-prone use of a callback inside a loop.\nvar accessor=target.POSITION!==undefined?parser.getDependency('accessor',target.POSITION).then(function(accessor){// Cloning not to pollute original accessor below\nreturn cloneBufferAttribute(accessor);}):geometry.attributes.position;pendingPositionAccessors.push(accessor);}if(hasMorphNormal){// TODO: Error-prone use of a callback inside a loop.\nvar accessor=target.NORMAL!==undefined?parser.getDependency('accessor',target.NORMAL).then(function(accessor){return cloneBufferAttribute(accessor);}):geometry.attributes.normal;pendingNormalAccessors.push(accessor);}}return Promise.all([Promise.all(pendingPositionAccessors),Promise.all(pendingNormalAccessors)]).then(function(accessors){var morphPositions=accessors[0];var morphNormals=accessors[1];for(var i=0,il=targets.length;i<il;i++){var target=targets[i];var attributeName='morphTarget'+i;if(hasMorphPosition){// Three.js morph position is absolute value. The formula is\n//   basePosition\n//     + weight0 * ( morphPosition0 - basePosition )\n//     + weight1 * ( morphPosition1 - basePosition )\n//     ...\n// while the glTF one is relative\n//   basePosition\n//     + weight0 * glTFmorphPosition0\n//     + weight1 * glTFmorphPosition1\n//     ...\n// then we need to convert from relative to absolute here.\nif(target.POSITION!==undefined){var positionAttribute=morphPositions[i];positionAttribute.name=attributeName;var position=geometry.attributes.position;for(var j=0,jl=positionAttribute.count;j<jl;j++){positionAttribute.setXYZ(j,positionAttribute.getX(j)+position.getX(j),positionAttribute.getY(j)+position.getY(j),positionAttribute.getZ(j)+position.getZ(j));}}}if(hasMorphNormal){// see target.POSITION's comment\nif(target.NORMAL!==undefined){var normalAttribute=morphNormals[i];normalAttribute.name=attributeName;var normal=geometry.attributes.normal;for(var j=0,jl=normalAttribute.count;j<jl;j++){normalAttribute.setXYZ(j,normalAttribute.getX(j)+normal.getX(j),normalAttribute.getY(j)+normal.getY(j),normalAttribute.getZ(j)+normal.getZ(j));}}}}if(hasMorphPosition)geometry.morphAttributes.position=morphPositions;if(hasMorphNormal)geometry.morphAttributes.normal=morphNormals;return geometry;});}/**\n\t * @param {THREE.Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t */function updateMorphTargets(mesh,meshDef){mesh.updateMorphTargets();if(meshDef.weights!==undefined){for(var i=0,il=meshDef.weights.length;i<il;i++){mesh.morphTargetInfluences[i]=meshDef.weights[i];}}// .extras has user-defined data, so check that .extras.targetNames is an array.\nif(meshDef.extras&&Array.isArray(meshDef.extras.targetNames)){var targetNames=meshDef.extras.targetNames;if(mesh.morphTargetInfluences.length===targetNames.length){mesh.morphTargetDictionary={};for(var i=0,il=targetNames.length;i<il;i++){mesh.morphTargetDictionary[targetNames[i]]=i;}}else{console.warn('THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.');}}}function isPrimitiveEqual(a,b){var dracoExtA=a.extensions?a.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]:undefined;var dracoExtB=b.extensions?b.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]:undefined;if(dracoExtA&&dracoExtB){if(dracoExtA.bufferView!==dracoExtB.bufferView)return false;return isObjectEqual(dracoExtA.attributes,dracoExtB.attributes);}if(a.indices!==b.indices){return false;}return isObjectEqual(a.attributes,b.attributes);}function isObjectEqual(a,b){if(Object.keys(a).length!==Object.keys(b).length)return false;for(var key in a){if(a[key]!==b[key])return false;}return true;}function isArrayEqual(a,b){if(a.length!==b.length)return false;for(var i=0,il=a.length;i<il;i++){if(a[i]!==b[i])return false;}return true;}function getCachedGeometry(cache,newPrimitive){for(var i=0,il=cache.length;i<il;i++){var cached=cache[i];if(isPrimitiveEqual(cached.primitive,newPrimitive))return cached.promise;}return null;}function getCachedCombinedGeometry(cache,geometries){for(var i=0,il=cache.length;i<il;i++){var cached=cache[i];if(isArrayEqual(geometries,cached.baseGeometries))return cached.geometry;}return null;}function getCachedMultiPassGeometry(cache,geometry,primitives){for(var i=0,il=cache.length;i<il;i++){var cached=cache[i];if(geometry===cached.baseGeometry&&isArrayEqual(primitives,cached.primitives))return cached.geometry;}return null;}function cloneBufferAttribute(attribute){if(attribute.isInterleavedBufferAttribute){var count=attribute.count;var itemSize=attribute.itemSize;var array=attribute.array.slice(0,count*itemSize);for(var i=0,j=0;i<count;++i){array[j++]=attribute.getX(i);if(itemSize>=2)array[j++]=attribute.getY(i);if(itemSize>=3)array[j++]=attribute.getZ(i);if(itemSize>=4)array[j++]=attribute.getW(i);}return new THREE.BufferAttribute(array,itemSize,attribute.normalized);}return attribute.clone();}/**\n\t * Checks if we can build a single Mesh with MultiMaterial from multiple primitives.\n\t * Returns true if all primitives use the same attributes/morphAttributes/mode\n\t * and also have index. Otherwise returns false.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Boolean}\n\t */function isMultiPassGeometry(primitives){if(primitives.length<2)return false;var primitive0=primitives[0];var targets0=primitive0.targets||[];if(primitive0.indices===undefined)return false;for(var i=1,il=primitives.length;i<il;i++){var primitive=primitives[i];if(primitive0.mode!==primitive.mode)return false;if(primitive.indices===undefined)return false;if(primitive.extensions&&primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION])return false;if(!isObjectEqual(primitive0.attributes,primitive.attributes))return false;var targets=primitive.targets||[];if(targets0.length!==targets.length)return false;for(var j=0,jl=targets0.length;j<jl;j++){if(!isObjectEqual(targets0[j],targets[j]))return false;}}return true;}/* GLTF PARSER */function GLTFParser(json,extensions,options){this.json=json||{};this.extensions=extensions||{};this.options=options||{};// loader object cache\nthis.cache=new GLTFRegistry();// BufferGeometry caching\nthis.primitiveCache=[];this.multiplePrimitivesCache=[];this.multiPassGeometryCache=[];this.textureLoader=new THREE.TextureLoader(this.options.manager);this.textureLoader.setCrossOrigin(this.options.crossOrigin);this.fileLoader=new THREE.FileLoader(this.options.manager);this.fileLoader.setResponseType('arraybuffer');}GLTFParser.prototype.parse=function(onLoad,onError){var json=this.json;// Clear the loader cache\nthis.cache.removeAll();// Mark the special nodes/meshes in json for efficient parse\nthis.markDefs();// Fire the callback on complete\nthis.getMultiDependencies(['scene','animation','camera']).then(function(dependencies){var scenes=dependencies.scenes||[];var scene=scenes[json.scene||0];var animations=dependencies.animations||[];var cameras=dependencies.cameras||[];onLoad(scene,scenes,cameras,animations,json);}).catch(onError);};/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */GLTFParser.prototype.markDefs=function(){var nodeDefs=this.json.nodes||[];var skinDefs=this.json.skins||[];var meshDefs=this.json.meshes||[];var meshReferences={};var meshUses={};// Nothing in the node definition indicates whether it is a Bone or an\n// Object3D. Use the skins' joint references to mark bones.\nfor(var skinIndex=0,skinLength=skinDefs.length;skinIndex<skinLength;skinIndex++){var joints=skinDefs[skinIndex].joints;for(var i=0,il=joints.length;i<il;i++){nodeDefs[joints[i]].isBone=true;}}// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n// avoid having more than one THREE.Mesh with the same name, count\n// references and rename instances below.\n//\n// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\nfor(var nodeIndex=0,nodeLength=nodeDefs.length;nodeIndex<nodeLength;nodeIndex++){var nodeDef=nodeDefs[nodeIndex];if(nodeDef.mesh!==undefined){if(meshReferences[nodeDef.mesh]===undefined){meshReferences[nodeDef.mesh]=meshUses[nodeDef.mesh]=0;}meshReferences[nodeDef.mesh]++;// Nothing in the mesh definition indicates whether it is\n// a SkinnedMesh or Mesh. Use the node's mesh reference\n// to mark SkinnedMesh if node has skin.\nif(nodeDef.skin!==undefined){meshDefs[nodeDef.mesh].isSkinnedMesh=true;}}}this.json.meshReferences=meshReferences;this.json.meshUses=meshUses;};/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<THREE.Object3D|THREE.Material|THREE.Texture|THREE.AnimationClip|ArrayBuffer|Object>}\n\t */GLTFParser.prototype.getDependency=function(type,index){var cacheKey=type+':'+index;var dependency=this.cache.get(cacheKey);if(!dependency){switch(type){case'scene':dependency=this.loadScene(index);break;case'node':dependency=this.loadNode(index);break;case'mesh':dependency=this.loadMesh(index);break;case'accessor':dependency=this.loadAccessor(index);break;case'bufferView':dependency=this.loadBufferView(index);break;case'buffer':dependency=this.loadBuffer(index);break;case'material':dependency=this.loadMaterial(index);break;case'texture':dependency=this.loadTexture(index);break;case'skin':dependency=this.loadSkin(index);break;case'animation':dependency=this.loadAnimation(index);break;case'camera':dependency=this.loadCamera(index);break;case'light':dependency=this.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].loadLight(index);break;default:throw new Error('Unknown type: '+type);}this.cache.add(cacheKey,dependency);}return dependency;};/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */GLTFParser.prototype.getDependencies=function(type){var dependencies=this.cache.get(type);if(!dependencies){var parser=this;var defs=this.json[type+(type==='mesh'?'es':'s')]||[];dependencies=Promise.all(defs.map(function(def,index){return parser.getDependency(type,index);}));this.cache.add(type,dependencies);}return dependencies;};/**\n\t * Requests all multiple dependencies of the specified types asynchronously, with caching.\n\t * @param {Array<string>} types\n\t * @return {Promise<Object<Array<Object>>>}\n\t */GLTFParser.prototype.getMultiDependencies=function(types){var results={};var pending=[];for(var i=0,il=types.length;i<il;i++){var type=types[i];var value=this.getDependencies(type);// TODO: Error-prone use of a callback inside a loop.\nvalue=value.then(function(key,value){results[key]=value;}.bind(this,type+(type==='mesh'?'es':'s')));pending.push(value);}return Promise.all(pending).then(function(){return results;});};/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */GLTFParser.prototype.loadBuffer=function(bufferIndex){var bufferDef=this.json.buffers[bufferIndex];var loader=this.fileLoader;if(bufferDef.type&&bufferDef.type!=='arraybuffer'){throw new Error('THREE.GLTFLoader: '+bufferDef.type+' buffer type is not supported.');}// If present, GLB container is required to be the first buffer.\nif(bufferDef.uri===undefined&&bufferIndex===0){return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);}var options=this.options;return new Promise(function(resolve,reject){loader.load(resolveURL(bufferDef.uri,options.path),resolve,undefined,function(){reject(new Error('THREE.GLTFLoader: Failed to load buffer \"'+bufferDef.uri+'\".'));});});};/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */GLTFParser.prototype.loadBufferView=function(bufferViewIndex){var bufferViewDef=this.json.bufferViews[bufferViewIndex];return this.getDependency('buffer',bufferViewDef.buffer).then(function(buffer){var byteLength=bufferViewDef.byteLength||0;var byteOffset=bufferViewDef.byteOffset||0;return buffer.slice(byteOffset,byteOffset+byteLength);});};/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\n\t */GLTFParser.prototype.loadAccessor=function(accessorIndex){var parser=this;var json=this.json;var accessorDef=this.json.accessors[accessorIndex];if(accessorDef.bufferView===undefined&&accessorDef.sparse===undefined){// Ignore empty accessors, which may be used to declare runtime\n// information about attributes coming from another source (e.g. Draco\n// compression extension).\nreturn Promise.resolve(null);}var pendingBufferViews=[];if(accessorDef.bufferView!==undefined){pendingBufferViews.push(this.getDependency('bufferView',accessorDef.bufferView));}else{pendingBufferViews.push(null);}if(accessorDef.sparse!==undefined){pendingBufferViews.push(this.getDependency('bufferView',accessorDef.sparse.indices.bufferView));pendingBufferViews.push(this.getDependency('bufferView',accessorDef.sparse.values.bufferView));}return Promise.all(pendingBufferViews).then(function(bufferViews){var bufferView=bufferViews[0];var itemSize=WEBGL_TYPE_SIZES[accessorDef.type];var TypedArray=WEBGL_COMPONENT_TYPES[accessorDef.componentType];// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\nvar elementBytes=TypedArray.BYTES_PER_ELEMENT;var itemBytes=elementBytes*itemSize;var byteOffset=accessorDef.byteOffset||0;var byteStride=accessorDef.bufferView!==undefined?json.bufferViews[accessorDef.bufferView].byteStride:undefined;var normalized=accessorDef.normalized===true;var array,bufferAttribute;// The buffer is not interleaved if the stride is the item size in bytes.\nif(byteStride&&byteStride!==itemBytes){var ibCacheKey='InterleavedBuffer:'+accessorDef.bufferView+':'+accessorDef.componentType;var ib=parser.cache.get(ibCacheKey);if(!ib){// Use the full buffer if it's interleaved.\narray=new TypedArray(bufferView);// Integer parameters to IB/IBA are in array elements, not bytes.\nib=new THREE.InterleavedBuffer(array,byteStride/elementBytes);parser.cache.add(ibCacheKey,ib);}bufferAttribute=new THREE.InterleavedBufferAttribute(ib,itemSize,byteOffset/elementBytes,normalized);}else{if(bufferView===null){array=new TypedArray(accessorDef.count*itemSize);}else{array=new TypedArray(bufferView,byteOffset,accessorDef.count*itemSize);}bufferAttribute=new THREE.BufferAttribute(array,itemSize,normalized);}// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\nif(accessorDef.sparse!==undefined){var itemSizeIndices=WEBGL_TYPE_SIZES.SCALAR;var TypedArrayIndices=WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];var byteOffsetIndices=accessorDef.sparse.indices.byteOffset||0;var byteOffsetValues=accessorDef.sparse.values.byteOffset||0;var sparseIndices=new TypedArrayIndices(bufferViews[1],byteOffsetIndices,accessorDef.sparse.count*itemSizeIndices);var sparseValues=new TypedArray(bufferViews[2],byteOffsetValues,accessorDef.sparse.count*itemSize);if(bufferView!==null){// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\nbufferAttribute.setArray(bufferAttribute.array.slice());}for(var i=0,il=sparseIndices.length;i<il;i++){var index=sparseIndices[i];bufferAttribute.setX(index,sparseValues[i*itemSize]);if(itemSize>=2)bufferAttribute.setY(index,sparseValues[i*itemSize+1]);if(itemSize>=3)bufferAttribute.setZ(index,sparseValues[i*itemSize+2]);if(itemSize>=4)bufferAttribute.setW(index,sparseValues[i*itemSize+3]);if(itemSize>=5)throw new Error('THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');}}return bufferAttribute;});};/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */GLTFParser.prototype.loadTexture=function(textureIndex){var parser=this;var json=this.json;var options=this.options;var textureLoader=this.textureLoader;var URL=window.URL||window.webkitURL;var textureDef=json.textures[textureIndex];var textureExtensions=textureDef.extensions||{};var source;if(textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]){source=json.images[textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS].source];}else{source=json.images[textureDef.source];}var sourceURI=source.uri;var isObjectURL=false;if(source.bufferView!==undefined){// Load binary image data from bufferView, if provided.\nsourceURI=parser.getDependency('bufferView',source.bufferView).then(function(bufferView){isObjectURL=true;var blob=new Blob([bufferView],{type:source.mimeType});sourceURI=URL.createObjectURL(blob);return sourceURI;});}return Promise.resolve(sourceURI).then(function(sourceURI){// Load Texture resource.\nvar loader=THREE.Loader.Handlers.get(sourceURI);if(!loader){loader=textureExtensions[EXTENSIONS.MSFT_TEXTURE_DDS]?parser.extensions[EXTENSIONS.MSFT_TEXTURE_DDS].ddsLoader:textureLoader;}return new Promise(function(resolve,reject){loader.load(resolveURL(sourceURI,options.path),resolve,undefined,reject);});}).then(function(texture){// Clean up resources and configure Texture.\nif(isObjectURL===true){URL.revokeObjectURL(sourceURI);}texture.flipY=false;if(textureDef.name!==undefined)texture.name=textureDef.name;// Ignore unknown mime types, like DDS files.\nif(source.mimeType in MIME_TYPE_FORMATS){texture.format=MIME_TYPE_FORMATS[source.mimeType];}var samplers=json.samplers||{};var sampler=samplers[textureDef.sampler]||{};texture.magFilter=WEBGL_FILTERS[sampler.magFilter]||THREE.LinearFilter;texture.minFilter=WEBGL_FILTERS[sampler.minFilter]||THREE.LinearMipMapLinearFilter;texture.wrapS=WEBGL_WRAPPINGS[sampler.wrapS]||THREE.RepeatWrapping;texture.wrapT=WEBGL_WRAPPINGS[sampler.wrapT]||THREE.RepeatWrapping;return texture;});};/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} mapName\n\t * @param {Object} mapDef\n\t * @return {Promise}\n\t */GLTFParser.prototype.assignTexture=function(materialParams,mapName,mapDef){var parser=this;return this.getDependency('texture',mapDef.index).then(function(texture){if(parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]){var transform=mapDef.extensions!==undefined?mapDef.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM]:undefined;if(transform){texture=parser.extensions[EXTENSIONS.KHR_TEXTURE_TRANSFORM].extendTexture(texture,transform);}}materialParams[mapName]=texture;});};/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<THREE.Material>}\n\t */GLTFParser.prototype.loadMaterial=function(materialIndex){var parser=this;var json=this.json;var extensions=this.extensions;var materialDef=json.materials[materialIndex];var materialType;var materialParams={};var materialExtensions=materialDef.extensions||{};var pending=[];if(materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]){var sgExtension=extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];materialType=sgExtension.getMaterialType(materialDef);pending.push(sgExtension.extendParams(materialParams,materialDef,parser));}else if(materialExtensions[EXTENSIONS.KHR_MATERIALS_UNLIT]){var kmuExtension=extensions[EXTENSIONS.KHR_MATERIALS_UNLIT];materialType=kmuExtension.getMaterialType(materialDef);pending.push(kmuExtension.extendParams(materialParams,materialDef,parser));}else{// Specification:\n// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\nmaterialType=THREE.MeshStandardMaterial;var metallicRoughness=materialDef.pbrMetallicRoughness||{};materialParams.color=new THREE.Color(1.0,1.0,1.0);materialParams.opacity=1.0;if(Array.isArray(metallicRoughness.baseColorFactor)){var array=metallicRoughness.baseColorFactor;materialParams.color.fromArray(array);materialParams.opacity=array[3];}if(metallicRoughness.baseColorTexture!==undefined){pending.push(parser.assignTexture(materialParams,'map',metallicRoughness.baseColorTexture));}materialParams.metalness=metallicRoughness.metallicFactor!==undefined?metallicRoughness.metallicFactor:1.0;materialParams.roughness=metallicRoughness.roughnessFactor!==undefined?metallicRoughness.roughnessFactor:1.0;if(metallicRoughness.metallicRoughnessTexture!==undefined){pending.push(parser.assignTexture(materialParams,'metalnessMap',metallicRoughness.metallicRoughnessTexture));pending.push(parser.assignTexture(materialParams,'roughnessMap',metallicRoughness.metallicRoughnessTexture));}}if(materialDef.doubleSided===true){materialParams.side=THREE.DoubleSide;}var alphaMode=materialDef.alphaMode||ALPHA_MODES.OPAQUE;if(alphaMode===ALPHA_MODES.BLEND){materialParams.transparent=true;}else{materialParams.transparent=false;if(alphaMode===ALPHA_MODES.MASK){materialParams.alphaTest=materialDef.alphaCutoff!==undefined?materialDef.alphaCutoff:0.5;}}if(materialDef.normalTexture!==undefined&&materialType!==THREE.MeshBasicMaterial){pending.push(parser.assignTexture(materialParams,'normalMap',materialDef.normalTexture));materialParams.normalScale=new THREE.Vector2(1,1);if(materialDef.normalTexture.scale!==undefined){materialParams.normalScale.set(materialDef.normalTexture.scale,materialDef.normalTexture.scale);}}if(materialDef.occlusionTexture!==undefined&&materialType!==THREE.MeshBasicMaterial){pending.push(parser.assignTexture(materialParams,'aoMap',materialDef.occlusionTexture));if(materialDef.occlusionTexture.strength!==undefined){materialParams.aoMapIntensity=materialDef.occlusionTexture.strength;}}if(materialDef.emissiveFactor!==undefined&&materialType!==THREE.MeshBasicMaterial){materialParams.emissive=new THREE.Color().fromArray(materialDef.emissiveFactor);}if(materialDef.emissiveTexture!==undefined&&materialType!==THREE.MeshBasicMaterial){pending.push(parser.assignTexture(materialParams,'emissiveMap',materialDef.emissiveTexture));}return Promise.all(pending).then(function(){var material;if(materialType===THREE.ShaderMaterial){material=extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);}else{material=new materialType(materialParams);}if(materialDef.name!==undefined)material.name=materialDef.name;// Normal map textures use OpenGL conventions:\n// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#materialnormaltexture\nif(material.normalScale){material.normalScale.y=-material.normalScale.y;}// baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\nif(material.map)material.map.encoding=THREE.sRGBEncoding;if(material.emissiveMap)material.emissiveMap.encoding=THREE.sRGBEncoding;if(material.specularMap)material.specularMap.encoding=THREE.sRGBEncoding;assignExtrasToUserData(material,materialDef);if(materialDef.extensions)addUnknownExtensionsToUserData(extensions,material,materialDef);return material;});};/**\n\t * @param {THREE.BufferGeometry} geometry\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {GLTFParser} parser\n\t * @return {Promise<THREE.BufferGeometry>}\n\t */function addPrimitiveAttributes(geometry,primitiveDef,parser){var attributes=primitiveDef.attributes;var pending=[];function assignAttributeAccessor(accessorIndex,attributeName){return parser.getDependency('accessor',accessorIndex).then(function(accessor){geometry.addAttribute(attributeName,accessor);});}for(var gltfAttributeName in attributes){var threeAttributeName=ATTRIBUTES[gltfAttributeName];if(!threeAttributeName)continue;// Skip attributes already provided by e.g. Draco extension.\nif(threeAttributeName in geometry.attributes)continue;pending.push(assignAttributeAccessor(attributes[gltfAttributeName],threeAttributeName));}if(primitiveDef.indices!==undefined&&!geometry.index){var accessor=parser.getDependency('accessor',primitiveDef.indices).then(function(accessor){geometry.setIndex(accessor);});pending.push(accessor);}assignExtrasToUserData(geometry,primitiveDef);return Promise.all(pending).then(function(){return primitiveDef.targets!==undefined?addMorphTargets(geometry,primitiveDef.targets,parser):geometry;});}/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t *\n\t * Creates BufferGeometries from primitives.\n\t * If we can build a single BufferGeometry with .groups from multiple primitives, returns one BufferGeometry.\n\t * Otherwise, returns BufferGeometries without .groups as many as primitives.\n\t *\n\t * @param {Array<GLTF.Primitive>} primitives\n\t * @return {Promise<Array<THREE.BufferGeometry>>}\n\t */GLTFParser.prototype.loadGeometries=function(primitives){var parser=this;var extensions=this.extensions;var cache=this.primitiveCache;var isMultiPass=isMultiPassGeometry(primitives);var originalPrimitives;if(isMultiPass){originalPrimitives=primitives;// save original primitives and use later\n// We build a single BufferGeometry with .groups from multiple primitives\n// because all primitives share the same attributes/morph/mode and have indices.\nprimitives=[primitives[0]];// Sets .groups and combined indices to a geometry later in this method.\n}function createDracoPrimitive(primitive){return extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(primitive,parser).then(function(geometry){return addPrimitiveAttributes(geometry,primitive,parser);});}var pending=[];for(var i=0,il=primitives.length;i<il;i++){var primitive=primitives[i];// See if we've already created this geometry\nvar cached=getCachedGeometry(cache,primitive);if(cached){// Use the cached geometry if it exists\npending.push(cached);}else{var geometryPromise;if(primitive.extensions&&primitive.extensions[EXTENSIONS.KHR_DRACO_MESH_COMPRESSION]){// Use DRACO geometry if available\ngeometryPromise=createDracoPrimitive(primitive);}else{// Otherwise create a new geometry\ngeometryPromise=addPrimitiveAttributes(new THREE.BufferGeometry(),primitive,parser);}// Cache this geometry\ncache.push({primitive:primitive,promise:geometryPromise});pending.push(geometryPromise);}}return Promise.all(pending).then(function(geometries){if(isMultiPass){var baseGeometry=geometries[0];// See if we've already created this combined geometry\nvar cache=parser.multiPassGeometryCache;var cached=getCachedMultiPassGeometry(cache,baseGeometry,originalPrimitives);if(cached!==null)return[cached.geometry];// Cloning geometry because of index override.\n// Attributes can be reused so cloning by myself here.\nvar geometry=new THREE.BufferGeometry();geometry.name=baseGeometry.name;geometry.userData=baseGeometry.userData;for(var key in baseGeometry.attributes)geometry.addAttribute(key,baseGeometry.attributes[key]);for(var key in baseGeometry.morphAttributes)geometry.morphAttributes[key]=baseGeometry.morphAttributes[key];var pendingIndices=[];for(var i=0,il=originalPrimitives.length;i<il;i++){pendingIndices.push(parser.getDependency('accessor',originalPrimitives[i].indices));}return Promise.all(pendingIndices).then(function(accessors){var indices=[];var offset=0;for(var i=0,il=originalPrimitives.length;i<il;i++){var accessor=accessors[i];for(var j=0,jl=accessor.count;j<jl;j++)indices.push(accessor.array[j]);geometry.addGroup(offset,accessor.count,i);offset+=accessor.count;}geometry.setIndex(indices);cache.push({geometry:geometry,baseGeometry:baseGeometry,primitives:originalPrimitives});return[geometry];});}else if(geometries.length>1&&THREE.BufferGeometryUtils!==undefined){// Tries to merge geometries with BufferGeometryUtils if possible\nfor(var i=1,il=primitives.length;i<il;i++){// can't merge if draw mode is different\nif(primitives[0].mode!==primitives[i].mode)return geometries;}// See if we've already created this combined geometry\nvar cache=parser.multiplePrimitivesCache;var cached=getCachedCombinedGeometry(cache,geometries);if(cached){if(cached.geometry!==null)return[cached.geometry];}else{var geometry=THREE.BufferGeometryUtils.mergeBufferGeometries(geometries,true);cache.push({geometry:geometry,baseGeometries:geometries});if(geometry!==null)return[geometry];}}return geometries;});};/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\n\t */GLTFParser.prototype.loadMesh=function(meshIndex){var parser=this;var json=this.json;var extensions=this.extensions;var meshDef=json.meshes[meshIndex];var primitives=meshDef.primitives;var pending=[];for(var i=0,il=primitives.length;i<il;i++){var material=primitives[i].material===undefined?createDefaultMaterial():this.getDependency('material',primitives[i].material);pending.push(material);}return Promise.all(pending).then(function(originalMaterials){return parser.loadGeometries(primitives).then(function(geometries){var isMultiMaterial=geometries.length===1&&geometries[0].groups.length>0;var meshes=[];for(var i=0,il=geometries.length;i<il;i++){var geometry=geometries[i];var primitive=primitives[i];// 1. create Mesh\nvar mesh;var material=isMultiMaterial?originalMaterials:originalMaterials[i];if(primitive.mode===WEBGL_CONSTANTS.TRIANGLES||primitive.mode===WEBGL_CONSTANTS.TRIANGLE_STRIP||primitive.mode===WEBGL_CONSTANTS.TRIANGLE_FAN||primitive.mode===undefined){// .isSkinnedMesh isn't in glTF spec. See .markDefs()\nmesh=meshDef.isSkinnedMesh===true?new THREE.SkinnedMesh(geometry,material):new THREE.Mesh(geometry,material);if(mesh.isSkinnedMesh===true)mesh.normalizeSkinWeights();// #15319\nif(primitive.mode===WEBGL_CONSTANTS.TRIANGLE_STRIP){mesh.drawMode=THREE.TriangleStripDrawMode;}else if(primitive.mode===WEBGL_CONSTANTS.TRIANGLE_FAN){mesh.drawMode=THREE.TriangleFanDrawMode;}}else if(primitive.mode===WEBGL_CONSTANTS.LINES){mesh=new THREE.LineSegments(geometry,material);}else if(primitive.mode===WEBGL_CONSTANTS.LINE_STRIP){mesh=new THREE.Line(geometry,material);}else if(primitive.mode===WEBGL_CONSTANTS.LINE_LOOP){mesh=new THREE.LineLoop(geometry,material);}else if(primitive.mode===WEBGL_CONSTANTS.POINTS){mesh=new THREE.Points(geometry,material);}else{throw new Error('THREE.GLTFLoader: Primitive mode unsupported: '+primitive.mode);}if(Object.keys(mesh.geometry.morphAttributes).length>0){updateMorphTargets(mesh,meshDef);}mesh.name=meshDef.name||'mesh_'+meshIndex;if(geometries.length>1)mesh.name+='_'+i;assignExtrasToUserData(mesh,meshDef);meshes.push(mesh);// 2. update Material depending on Mesh and BufferGeometry\nvar materials=isMultiMaterial?mesh.material:[mesh.material];var useVertexColors=geometry.attributes.color!==undefined;var useFlatShading=geometry.attributes.normal===undefined;var useSkinning=mesh.isSkinnedMesh===true;var useMorphTargets=Object.keys(geometry.morphAttributes).length>0;var useMorphNormals=useMorphTargets&&geometry.morphAttributes.normal!==undefined;for(var j=0,jl=materials.length;j<jl;j++){var material=materials[j];if(mesh.isPoints){var cacheKey='PointsMaterial:'+material.uuid;var pointsMaterial=parser.cache.get(cacheKey);if(!pointsMaterial){pointsMaterial=new THREE.PointsMaterial();THREE.Material.prototype.copy.call(pointsMaterial,material);pointsMaterial.color.copy(material.color);pointsMaterial.map=material.map;pointsMaterial.lights=false;// PointsMaterial doesn't support lights yet\nparser.cache.add(cacheKey,pointsMaterial);}material=pointsMaterial;}else if(mesh.isLine){var cacheKey='LineBasicMaterial:'+material.uuid;var lineMaterial=parser.cache.get(cacheKey);if(!lineMaterial){lineMaterial=new THREE.LineBasicMaterial();THREE.Material.prototype.copy.call(lineMaterial,material);lineMaterial.color.copy(material.color);lineMaterial.lights=false;// LineBasicMaterial doesn't support lights yet\nparser.cache.add(cacheKey,lineMaterial);}material=lineMaterial;}// Clone the material if it will be modified\nif(useVertexColors||useFlatShading||useSkinning||useMorphTargets){var cacheKey='ClonedMaterial:'+material.uuid+':';if(material.isGLTFSpecularGlossinessMaterial)cacheKey+='specular-glossiness:';if(useSkinning)cacheKey+='skinning:';if(useVertexColors)cacheKey+='vertex-colors:';if(useFlatShading)cacheKey+='flat-shading:';if(useMorphTargets)cacheKey+='morph-targets:';if(useMorphNormals)cacheKey+='morph-normals:';var cachedMaterial=parser.cache.get(cacheKey);if(!cachedMaterial){cachedMaterial=material.isGLTFSpecularGlossinessMaterial?extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].cloneMaterial(material):material.clone();if(useSkinning)cachedMaterial.skinning=true;if(useVertexColors)cachedMaterial.vertexColors=THREE.VertexColors;if(useFlatShading)cachedMaterial.flatShading=true;if(useMorphTargets)cachedMaterial.morphTargets=true;if(useMorphNormals)cachedMaterial.morphNormals=true;parser.cache.add(cacheKey,cachedMaterial);}material=cachedMaterial;}materials[j]=material;// workarounds for mesh and geometry\nif(material.aoMap&&geometry.attributes.uv2===undefined&&geometry.attributes.uv!==undefined){console.log('THREE.GLTFLoader: Duplicating UVs to support aoMap.');geometry.addAttribute('uv2',new THREE.BufferAttribute(geometry.attributes.uv.array,2));}if(material.isGLTFSpecularGlossinessMaterial){// for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\nmesh.onBeforeRender=extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms;}}mesh.material=isMultiMaterial?materials:materials[0];}if(meshes.length===1){return meshes[0];}var group=new THREE.Group();for(var i=0,il=meshes.length;i<il;i++){group.add(meshes[i]);}return group;});});};/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */GLTFParser.prototype.loadCamera=function(cameraIndex){var camera;var cameraDef=this.json.cameras[cameraIndex];var params=cameraDef[cameraDef.type];if(!params){console.warn('THREE.GLTFLoader: Missing camera parameters.');return;}if(cameraDef.type==='perspective'){camera=new THREE.PerspectiveCamera(THREE.Math.radToDeg(params.yfov),params.aspectRatio||1,params.znear||1,params.zfar||2e6);}else if(cameraDef.type==='orthographic'){camera=new THREE.OrthographicCamera(params.xmag/-2,params.xmag/2,params.ymag/2,params.ymag/-2,params.znear,params.zfar);}if(cameraDef.name!==undefined)camera.name=cameraDef.name;assignExtrasToUserData(camera,cameraDef);return Promise.resolve(camera);};/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */GLTFParser.prototype.loadSkin=function(skinIndex){var skinDef=this.json.skins[skinIndex];var skinEntry={joints:skinDef.joints};if(skinDef.inverseBindMatrices===undefined){return Promise.resolve(skinEntry);}return this.getDependency('accessor',skinDef.inverseBindMatrices).then(function(accessor){skinEntry.inverseBindMatrices=accessor;return skinEntry;});};/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<THREE.AnimationClip>}\n\t */GLTFParser.prototype.loadAnimation=function(animationIndex){var json=this.json;var animationDef=json.animations[animationIndex];var pendingNodes=[];var pendingInputAccessors=[];var pendingOutputAccessors=[];var pendingSamplers=[];var pendingTargets=[];for(var i=0,il=animationDef.channels.length;i<il;i++){var channel=animationDef.channels[i];var sampler=animationDef.samplers[channel.sampler];var target=channel.target;var name=target.node!==undefined?target.node:target.id;// NOTE: target.id is deprecated.\nvar input=animationDef.parameters!==undefined?animationDef.parameters[sampler.input]:sampler.input;var output=animationDef.parameters!==undefined?animationDef.parameters[sampler.output]:sampler.output;pendingNodes.push(this.getDependency('node',name));pendingInputAccessors.push(this.getDependency('accessor',input));pendingOutputAccessors.push(this.getDependency('accessor',output));pendingSamplers.push(sampler);pendingTargets.push(target);}return Promise.all([Promise.all(pendingNodes),Promise.all(pendingInputAccessors),Promise.all(pendingOutputAccessors),Promise.all(pendingSamplers),Promise.all(pendingTargets)]).then(function(dependencies){var nodes=dependencies[0];var inputAccessors=dependencies[1];var outputAccessors=dependencies[2];var samplers=dependencies[3];var targets=dependencies[4];var tracks=[];for(var i=0,il=nodes.length;i<il;i++){var node=nodes[i];var inputAccessor=inputAccessors[i];var outputAccessor=outputAccessors[i];var sampler=samplers[i];var target=targets[i];if(node===undefined)continue;node.updateMatrix();node.matrixAutoUpdate=true;var TypedKeyframeTrack;switch(PATH_PROPERTIES[target.path]){case PATH_PROPERTIES.weights:TypedKeyframeTrack=THREE.NumberKeyframeTrack;break;case PATH_PROPERTIES.rotation:TypedKeyframeTrack=THREE.QuaternionKeyframeTrack;break;case PATH_PROPERTIES.position:case PATH_PROPERTIES.scale:default:TypedKeyframeTrack=THREE.VectorKeyframeTrack;break;}var targetName=node.name?node.name:node.uuid;var interpolation=sampler.interpolation!==undefined?INTERPOLATION[sampler.interpolation]:THREE.InterpolateLinear;var targetNames=[];if(PATH_PROPERTIES[target.path]===PATH_PROPERTIES.weights){// node can be THREE.Group here but\n// PATH_PROPERTIES.weights(morphTargetInfluences) should be\n// the property of a mesh object under group.\nnode.traverse(function(object){if(object.isMesh===true&&object.morphTargetInfluences){targetNames.push(object.name?object.name:object.uuid);}});}else{targetNames.push(targetName);}// KeyframeTrack.optimize() will modify given 'times' and 'values'\n// buffers before creating a truncated copy to keep. Because buffers may\n// be reused by other tracks, make copies here.\nfor(var j=0,jl=targetNames.length;j<jl;j++){var track=new TypedKeyframeTrack(targetNames[j]+'.'+PATH_PROPERTIES[target.path],THREE.AnimationUtils.arraySlice(inputAccessor.array,0),THREE.AnimationUtils.arraySlice(outputAccessor.array,0),interpolation);// Here is the trick to enable custom interpolation.\n// Overrides .createInterpolant in a factory method which creates custom interpolation.\nif(sampler.interpolation==='CUBICSPLINE'){track.createInterpolant=function InterpolantFactoryMethodGLTFCubicSpline(result){// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n// must be divided by three to get the interpolant's sampleSize argument.\nreturn new GLTFCubicSplineInterpolant(this.times,this.values,this.getValueSize()/3,result);};// Workaround, provide an alternate way to know if the interpolant type is cubis spline to track.\n// track.getInterpolation() doesn't return valid value for custom interpolant.\ntrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=true;}tracks.push(track);}}var name=animationDef.name!==undefined?animationDef.name:'animation_'+animationIndex;return new THREE.AnimationClip(name,undefined,tracks);});};/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<THREE.Object3D>}\n\t */GLTFParser.prototype.loadNode=function(nodeIndex){var json=this.json;var extensions=this.extensions;var parser=this;var meshReferences=json.meshReferences;var meshUses=json.meshUses;var nodeDef=json.nodes[nodeIndex];return function(){// .isBone isn't in glTF spec. See .markDefs\nif(nodeDef.isBone===true){return Promise.resolve(new THREE.Bone());}else if(nodeDef.mesh!==undefined){return parser.getDependency('mesh',nodeDef.mesh).then(function(mesh){var node;if(meshReferences[nodeDef.mesh]>1){var instanceNum=meshUses[nodeDef.mesh]++;node=mesh.clone();node.name+='_instance_'+instanceNum;// onBeforeRender copy for Specular-Glossiness\nnode.onBeforeRender=mesh.onBeforeRender;for(var i=0,il=node.children.length;i<il;i++){node.children[i].name+='_instance_'+instanceNum;node.children[i].onBeforeRender=mesh.children[i].onBeforeRender;}}else{node=mesh;}// if weights are provided on the node, override weights on the mesh.\nif(nodeDef.weights!==undefined){node.traverse(function(o){if(!o.isMesh)return;for(var i=0,il=nodeDef.weights.length;i<il;i++){o.morphTargetInfluences[i]=nodeDef.weights[i];}});}return node;});}else if(nodeDef.camera!==undefined){return parser.getDependency('camera',nodeDef.camera);}else if(nodeDef.extensions&&nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL]&&nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light!==undefined){return parser.getDependency('light',nodeDef.extensions[EXTENSIONS.KHR_LIGHTS_PUNCTUAL].light);}else{return Promise.resolve(new THREE.Object3D());}}().then(function(node){if(nodeDef.name!==undefined){node.name=THREE.PropertyBinding.sanitizeNodeName(nodeDef.name);}assignExtrasToUserData(node,nodeDef);if(nodeDef.extensions)addUnknownExtensionsToUserData(extensions,node,nodeDef);if(nodeDef.matrix!==undefined){var matrix=new THREE.Matrix4();matrix.fromArray(nodeDef.matrix);node.applyMatrix(matrix);}else{if(nodeDef.translation!==undefined){node.position.fromArray(nodeDef.translation);}if(nodeDef.rotation!==undefined){node.quaternion.fromArray(nodeDef.rotation);}if(nodeDef.scale!==undefined){node.scale.fromArray(nodeDef.scale);}}return node;});};/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<THREE.Scene>}\n\t */GLTFParser.prototype.loadScene=function(){// scene node hierachy builder\nfunction buildNodeHierachy(nodeId,parentObject,json,parser){var nodeDef=json.nodes[nodeId];return parser.getDependency('node',nodeId).then(function(node){if(nodeDef.skin===undefined)return node;// build skeleton here as well\nvar skinEntry;return parser.getDependency('skin',nodeDef.skin).then(function(skin){skinEntry=skin;var pendingJoints=[];for(var i=0,il=skinEntry.joints.length;i<il;i++){pendingJoints.push(parser.getDependency('node',skinEntry.joints[i]));}return Promise.all(pendingJoints);}).then(function(jointNodes){var meshes=node.isGroup===true?node.children:[node];for(var i=0,il=meshes.length;i<il;i++){var mesh=meshes[i];var bones=[];var boneInverses=[];for(var j=0,jl=jointNodes.length;j<jl;j++){var jointNode=jointNodes[j];if(jointNode){bones.push(jointNode);var mat=new THREE.Matrix4();if(skinEntry.inverseBindMatrices!==undefined){mat.fromArray(skinEntry.inverseBindMatrices.array,j*16);}boneInverses.push(mat);}else{console.warn('THREE.GLTFLoader: Joint \"%s\" could not be found.',skinEntry.joints[j]);}}mesh.bind(new THREE.Skeleton(bones,boneInverses),mesh.matrixWorld);};return node;});}).then(function(node){// build node hierachy\nparentObject.add(node);var pending=[];if(nodeDef.children){var children=nodeDef.children;for(var i=0,il=children.length;i<il;i++){var child=children[i];pending.push(buildNodeHierachy(child,node,json,parser));}}return Promise.all(pending);});}return function loadScene(sceneIndex){var json=this.json;var extensions=this.extensions;var sceneDef=this.json.scenes[sceneIndex];var parser=this;var scene=new THREE.Scene();if(sceneDef.name!==undefined)scene.name=sceneDef.name;assignExtrasToUserData(scene,sceneDef);if(sceneDef.extensions)addUnknownExtensionsToUserData(extensions,scene,sceneDef);var nodeIds=sceneDef.nodes||[];var pending=[];for(var i=0,il=nodeIds.length;i<il;i++){pending.push(buildNodeHierachy(nodeIds[i],scene,json,parser));}return Promise.all(pending).then(function(){return scene;});};}();return GLTFLoader;}();},{}],39:[function(_dereq_,module,exports){/**\n * Loads a Wavefront .mtl file specifying materials\n *\n * @author angelxuanchang\n */THREE.MTLLoader=function(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager;};THREE.MTLLoader.prototype={constructor:THREE.MTLLoader,/**\n\t * Loads and parses a MTL asset from a URL.\n\t *\n\t * @param {String} url - URL to the MTL file.\n\t * @param {Function} [onLoad] - Callback invoked with the loaded object.\n\t * @param {Function} [onProgress] - Callback for download progress.\n\t * @param {Function} [onError] - Callback for download errors.\n\t *\n\t * @see setPath setResourcePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setResourcePath() explicitly prior to load.\n\t */load:function(url,onLoad,onProgress,onError){var scope=this;var path=this.path===undefined?THREE.LoaderUtils.extractUrlBase(url):this.path;var loader=new THREE.FileLoader(this.manager);loader.setPath(this.path);loader.load(url,function(text){onLoad(scope.parse(text,path));},onProgress,onError);},/**\n\t * Set base path for resolving references.\n\t * If set this path will be prepended to each loaded and found reference.\n\t *\n\t * @see setResourcePath\n\t * @param {String} path\n\t * @return {THREE.MTLLoader}\n\t *\n\t * @example\n\t *     mtlLoader.setPath( 'assets/obj/' );\n\t *     mtlLoader.load( 'my.mtl', ... );\n\t */setPath:function(path){this.path=path;return this;},/**\n\t * Set base path for additional resources like textures.\n\t *\n\t * @see setPath\n\t * @param {String} path\n\t * @return {THREE.MTLLoader}\n\t *\n\t * @example\n\t *     mtlLoader.setPath( 'assets/obj/' );\n\t *     mtlLoader.setResourcePath( 'assets/textures/' );\n\t *     mtlLoader.load( 'my.mtl', ... );\n\t */setResourcePath:function(path){this.resourcePath=path;return this;},setTexturePath:function(path){console.warn('THREE.MTLLoader: .setTexturePath() has been renamed to .setResourcePath().');return this.setResourcePath(path);},setCrossOrigin:function(value){this.crossOrigin=value;return this;},setMaterialOptions:function(value){this.materialOptions=value;return this;},/**\n\t * Parses a MTL file.\n\t *\n\t * @param {String} text - Content of MTL file\n\t * @return {THREE.MTLLoader.MaterialCreator}\n\t *\n\t * @see setPath setResourcePath\n\t *\n\t * @note In order for relative texture references to resolve correctly\n\t * you must call setResourcePath() explicitly prior to parse.\n\t */parse:function(text,path){var lines=text.split('\\n');var info={};var delimiter_pattern=/\\s+/;var materialsInfo={};for(var i=0;i<lines.length;i++){var line=lines[i];line=line.trim();if(line.length===0||line.charAt(0)==='#'){// Blank line or comment ignore\ncontinue;}var pos=line.indexOf(' ');var key=pos>=0?line.substring(0,pos):line;key=key.toLowerCase();var value=pos>=0?line.substring(pos+1):'';value=value.trim();if(key==='newmtl'){// New material\ninfo={name:value};materialsInfo[value]=info;}else{if(key==='ka'||key==='kd'||key==='ks'||key==='ke'){var ss=value.split(delimiter_pattern,3);info[key]=[parseFloat(ss[0]),parseFloat(ss[1]),parseFloat(ss[2])];}else{info[key]=value;}}}var materialCreator=new THREE.MTLLoader.MaterialCreator(this.resourcePath||path,this.materialOptions);materialCreator.setCrossOrigin(this.crossOrigin);materialCreator.setManager(this.manager);materialCreator.setMaterials(materialsInfo);return materialCreator;}};/**\n * Create a new THREE-MTLLoader.MaterialCreator\n * @param baseUrl - Url relative to which textures are loaded\n * @param options - Set of options on how to construct the materials\n *                  side: Which side to apply the material\n *                        THREE.FrontSide (default), THREE.BackSide, THREE.DoubleSide\n *                  wrap: What type of wrapping to apply for textures\n *                        THREE.RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\n *                                Default: false, assumed to be already normalized\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\n *                                  Default: false\n * @constructor\n */THREE.MTLLoader.MaterialCreator=function(baseUrl,options){this.baseUrl=baseUrl||'';this.options=options;this.materialsInfo={};this.materials={};this.materialsArray=[];this.nameLookup={};this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide;this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping;};THREE.MTLLoader.MaterialCreator.prototype={constructor:THREE.MTLLoader.MaterialCreator,crossOrigin:'anonymous',setCrossOrigin:function(value){this.crossOrigin=value;return this;},setManager:function(value){this.manager=value;},setMaterials:function(materialsInfo){this.materialsInfo=this.convert(materialsInfo);this.materials={};this.materialsArray=[];this.nameLookup={};},convert:function(materialsInfo){if(!this.options)return materialsInfo;var converted={};for(var mn in materialsInfo){// Convert materials info into normalized form based on options\nvar mat=materialsInfo[mn];var covmat={};converted[mn]=covmat;for(var prop in mat){var save=true;var value=mat[prop];var lprop=prop.toLowerCase();switch(lprop){case'kd':case'ka':case'ks':// Diffuse color (color under white light) using RGB values\nif(this.options&&this.options.normalizeRGB){value=[value[0]/255,value[1]/255,value[2]/255];}if(this.options&&this.options.ignoreZeroRGBs){if(value[0]===0&&value[1]===0&&value[2]===0){// ignore\nsave=false;}}break;default:break;}if(save){covmat[lprop]=value;}}}return converted;},preload:function(){for(var mn in this.materialsInfo){this.create(mn);}},getIndex:function(materialName){return this.nameLookup[materialName];},getAsArray:function(){var index=0;for(var mn in this.materialsInfo){this.materialsArray[index]=this.create(mn);this.nameLookup[mn]=index;index++;}return this.materialsArray;},create:function(materialName){if(this.materials[materialName]===undefined){this.createMaterial_(materialName);}return this.materials[materialName];},createMaterial_:function(materialName){// Create material\nvar scope=this;var mat=this.materialsInfo[materialName];var params={name:materialName,side:this.side};function resolveURL(baseUrl,url){if(typeof url!=='string'||url==='')return'';// Absolute URL\nif(/^https?:\\/\\//i.test(url))return url;return baseUrl+url;}function setMapForType(mapType,value){if(params[mapType])return;// Keep the first encountered texture\nvar texParams=scope.getTextureParams(value,params);var map=scope.loadTexture(resolveURL(scope.baseUrl,texParams.url));map.repeat.copy(texParams.scale);map.offset.copy(texParams.offset);map.wrapS=scope.wrap;map.wrapT=scope.wrap;params[mapType]=map;}for(var prop in mat){var value=mat[prop];var n;if(value==='')continue;switch(prop.toLowerCase()){// Ns is material specular exponent\ncase'kd':// Diffuse color (color under white light) using RGB values\nparams.color=new THREE.Color().fromArray(value);break;case'ks':// Specular color (color when light is reflected from shiny surface) using RGB values\nparams.specular=new THREE.Color().fromArray(value);break;case'ke':// Emissive using RGB values\nparams.emissive=new THREE.Color().fromArray(value);break;case'map_kd':// Diffuse texture map\nsetMapForType(\"map\",value);break;case'map_ks':// Specular map\nsetMapForType(\"specularMap\",value);break;case'map_ke':// Emissive map\nsetMapForType(\"emissiveMap\",value);break;case'norm':setMapForType(\"normalMap\",value);break;case'map_bump':case'bump':// Bump texture map\nsetMapForType(\"bumpMap\",value);break;case'map_d':// Alpha map\nsetMapForType(\"alphaMap\",value);params.transparent=true;break;case'ns':// The specular exponent (defines the focus of the specular highlight)\n// A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\nparams.shininess=parseFloat(value);break;case'd':n=parseFloat(value);if(n<1){params.opacity=n;params.transparent=true;}break;case'tr':n=parseFloat(value);if(this.options&&this.options.invertTrProperty)n=1-n;if(n>0){params.opacity=1-n;params.transparent=true;}break;default:break;}}this.materials[materialName]=new THREE.MeshPhongMaterial(params);return this.materials[materialName];},getTextureParams:function(value,matParams){var texParams={scale:new THREE.Vector2(1,1),offset:new THREE.Vector2(0,0)};var items=value.split(/\\s+/);var pos;pos=items.indexOf('-bm');if(pos>=0){matParams.bumpScale=parseFloat(items[pos+1]);items.splice(pos,2);}pos=items.indexOf('-s');if(pos>=0){texParams.scale.set(parseFloat(items[pos+1]),parseFloat(items[pos+2]));items.splice(pos,4);// we expect 3 parameters here!\n}pos=items.indexOf('-o');if(pos>=0){texParams.offset.set(parseFloat(items[pos+1]),parseFloat(items[pos+2]));items.splice(pos,4);// we expect 3 parameters here!\n}texParams.url=items.join(' ').trim();return texParams;},loadTexture:function(url,mapping,onLoad,onProgress,onError){var texture;var loader=THREE.Loader.Handlers.get(url);var manager=this.manager!==undefined?this.manager:THREE.DefaultLoadingManager;if(loader===null){loader=new THREE.TextureLoader(manager);}if(loader.setCrossOrigin)loader.setCrossOrigin(this.crossOrigin);texture=loader.load(url,onLoad,onProgress,onError);if(mapping!==undefined)texture.mapping=mapping;return texture;}};},{}],40:[function(_dereq_,module,exports){/**\n * @author mrdoob / http://mrdoob.com/\n */THREE.OBJLoader=function(){// o object_name | g group_name\nvar object_pattern=/^[og]\\s*(.+)?/;// mtllib file_reference\nvar material_library_pattern=/^mtllib /;// usemtl material_name\nvar material_use_pattern=/^usemtl /;function ParserState(){var state={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materialLibraries:[],startObject:function(name,fromDeclaration){// If the current object (initial from reset) is not from a g/o declaration in the parsed\n// file. We need to use it for the first parsed g/o to keep things in sync.\nif(this.object&&this.object.fromDeclaration===false){this.object.name=name;this.object.fromDeclaration=fromDeclaration!==false;return;}var previousMaterial=this.object&&typeof this.object.currentMaterial==='function'?this.object.currentMaterial():undefined;if(this.object&&typeof this.object._finalize==='function'){this.object._finalize(true);}this.object={name:name||'',fromDeclaration:fromDeclaration!==false,geometry:{vertices:[],normals:[],colors:[],uvs:[]},materials:[],smooth:true,startMaterial:function(name,libraries){var previous=this._finalize(false);// New usemtl declaration overwrites an inherited material, except if faces were declared\n// after the material, then it must be preserved for proper MultiMaterial continuation.\nif(previous&&(previous.inherited||previous.groupCount<=0)){this.materials.splice(previous.index,1);}var material={index:this.materials.length,name:name||'',mtllib:Array.isArray(libraries)&&libraries.length>0?libraries[libraries.length-1]:'',smooth:previous!==undefined?previous.smooth:this.smooth,groupStart:previous!==undefined?previous.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:false,clone:function(index){var cloned={index:typeof index==='number'?index:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:false};cloned.clone=this.clone.bind(cloned);return cloned;}};this.materials.push(material);return material;},currentMaterial:function(){if(this.materials.length>0){return this.materials[this.materials.length-1];}return undefined;},_finalize:function(end){var lastMultiMaterial=this.currentMaterial();if(lastMultiMaterial&&lastMultiMaterial.groupEnd===-1){lastMultiMaterial.groupEnd=this.geometry.vertices.length/3;lastMultiMaterial.groupCount=lastMultiMaterial.groupEnd-lastMultiMaterial.groupStart;lastMultiMaterial.inherited=false;}// Ignore objects tail materials if no face declarations followed them before a new o/g started.\nif(end&&this.materials.length>1){for(var mi=this.materials.length-1;mi>=0;mi--){if(this.materials[mi].groupCount<=0){this.materials.splice(mi,1);}}}// Guarantee at least one empty material, this makes the creation later more straight forward.\nif(end&&this.materials.length===0){this.materials.push({name:'',smooth:this.smooth});}return lastMultiMaterial;}};// Inherit previous objects material.\n// Spec tells us that a declared material must be set to all objects until a new material is declared.\n// If a usemtl declaration is encountered while this new object is being parsed, it will\n// overwrite the inherited material. Exception being that there was already face declarations\n// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\nif(previousMaterial&&previousMaterial.name&&typeof previousMaterial.clone==='function'){var declared=previousMaterial.clone(0);declared.inherited=true;this.object.materials.push(declared);}this.objects.push(this.object);},finalize:function(){if(this.object&&typeof this.object._finalize==='function'){this.object._finalize(true);}},parseVertexIndex:function(value,len){var index=parseInt(value,10);return(index>=0?index-1:index+len/3)*3;},parseNormalIndex:function(value,len){var index=parseInt(value,10);return(index>=0?index-1:index+len/3)*3;},parseUVIndex:function(value,len){var index=parseInt(value,10);return(index>=0?index-1:index+len/2)*2;},addVertex:function(a,b,c){var src=this.vertices;var dst=this.object.geometry.vertices;dst.push(src[a+0],src[a+1],src[a+2]);dst.push(src[b+0],src[b+1],src[b+2]);dst.push(src[c+0],src[c+1],src[c+2]);},addVertexPoint:function(a){var src=this.vertices;var dst=this.object.geometry.vertices;dst.push(src[a+0],src[a+1],src[a+2]);},addVertexLine:function(a){var src=this.vertices;var dst=this.object.geometry.vertices;dst.push(src[a+0],src[a+1],src[a+2]);},addNormal:function(a,b,c){var src=this.normals;var dst=this.object.geometry.normals;dst.push(src[a+0],src[a+1],src[a+2]);dst.push(src[b+0],src[b+1],src[b+2]);dst.push(src[c+0],src[c+1],src[c+2]);},addColor:function(a,b,c){var src=this.colors;var dst=this.object.geometry.colors;dst.push(src[a+0],src[a+1],src[a+2]);dst.push(src[b+0],src[b+1],src[b+2]);dst.push(src[c+0],src[c+1],src[c+2]);},addUV:function(a,b,c){var src=this.uvs;var dst=this.object.geometry.uvs;dst.push(src[a+0],src[a+1]);dst.push(src[b+0],src[b+1]);dst.push(src[c+0],src[c+1]);},addUVLine:function(a){var src=this.uvs;var dst=this.object.geometry.uvs;dst.push(src[a+0],src[a+1]);},addFace:function(a,b,c,ua,ub,uc,na,nb,nc){var vLen=this.vertices.length;var ia=this.parseVertexIndex(a,vLen);var ib=this.parseVertexIndex(b,vLen);var ic=this.parseVertexIndex(c,vLen);this.addVertex(ia,ib,ic);if(ua!==undefined&&ua!==''){var uvLen=this.uvs.length;ia=this.parseUVIndex(ua,uvLen);ib=this.parseUVIndex(ub,uvLen);ic=this.parseUVIndex(uc,uvLen);this.addUV(ia,ib,ic);}if(na!==undefined&&na!==''){// Normals are many times the same. If so, skip function call and parseInt.\nvar nLen=this.normals.length;ia=this.parseNormalIndex(na,nLen);ib=na===nb?ia:this.parseNormalIndex(nb,nLen);ic=na===nc?ia:this.parseNormalIndex(nc,nLen);this.addNormal(ia,ib,ic);}if(this.colors.length>0){this.addColor(ia,ib,ic);}},addPointGeometry:function(vertices){this.object.geometry.type='Points';var vLen=this.vertices.length;for(var vi=0,l=vertices.length;vi<l;vi++){this.addVertexPoint(this.parseVertexIndex(vertices[vi],vLen));}},addLineGeometry:function(vertices,uvs){this.object.geometry.type='Line';var vLen=this.vertices.length;var uvLen=this.uvs.length;for(var vi=0,l=vertices.length;vi<l;vi++){this.addVertexLine(this.parseVertexIndex(vertices[vi],vLen));}for(var uvi=0,l=uvs.length;uvi<l;uvi++){this.addUVLine(this.parseUVIndex(uvs[uvi],uvLen));}}};state.startObject('',false);return state;}//\nfunction OBJLoader(manager){this.manager=manager!==undefined?manager:THREE.DefaultLoadingManager;this.materials=null;}OBJLoader.prototype={constructor:OBJLoader,load:function(url,onLoad,onProgress,onError){var scope=this;var loader=new THREE.FileLoader(scope.manager);loader.setPath(this.path);loader.load(url,function(text){onLoad(scope.parse(text));},onProgress,onError);},setPath:function(value){this.path=value;return this;},setMaterials:function(materials){this.materials=materials;return this;},parse:function(text){console.time('OBJLoader');var state=new ParserState();if(text.indexOf('\\r\\n')!==-1){// This is faster than String.split with regex that splits on both\ntext=text.replace(/\\r\\n/g,'\\n');}if(text.indexOf('\\\\\\n')!==-1){// join lines separated by a line continuation character (\\)\ntext=text.replace(/\\\\\\n/g,'');}var lines=text.split('\\n');var line='',lineFirstChar='';var lineLength=0;var result=[];// Faster to just trim left side of the line. Use if available.\nvar trimLeft=typeof''.trimLeft==='function';for(var i=0,l=lines.length;i<l;i++){line=lines[i];line=trimLeft?line.trimLeft():line.trim();lineLength=line.length;if(lineLength===0)continue;lineFirstChar=line.charAt(0);// @todo invoke passed in handler if any\nif(lineFirstChar==='#')continue;if(lineFirstChar==='v'){var data=line.split(/\\s+/);switch(data[0]){case'v':state.vertices.push(parseFloat(data[1]),parseFloat(data[2]),parseFloat(data[3]));if(data.length===8){state.colors.push(parseFloat(data[4]),parseFloat(data[5]),parseFloat(data[6]));}break;case'vn':state.normals.push(parseFloat(data[1]),parseFloat(data[2]),parseFloat(data[3]));break;case'vt':state.uvs.push(parseFloat(data[1]),parseFloat(data[2]));break;}}else if(lineFirstChar==='f'){var lineData=line.substr(1).trim();var vertexData=lineData.split(/\\s+/);var faceVertices=[];// Parse the face vertex data into an easy to work with format\nfor(var j=0,jl=vertexData.length;j<jl;j++){var vertex=vertexData[j];if(vertex.length>0){var vertexParts=vertex.split('/');faceVertices.push(vertexParts);}}// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\nvar v1=faceVertices[0];for(var j=1,jl=faceVertices.length-1;j<jl;j++){var v2=faceVertices[j];var v3=faceVertices[j+1];state.addFace(v1[0],v2[0],v3[0],v1[1],v2[1],v3[1],v1[2],v2[2],v3[2]);}}else if(lineFirstChar==='l'){var lineParts=line.substring(1).trim().split(\" \");var lineVertices=[],lineUVs=[];if(line.indexOf(\"/\")===-1){lineVertices=lineParts;}else{for(var li=0,llen=lineParts.length;li<llen;li++){var parts=lineParts[li].split(\"/\");if(parts[0]!==\"\")lineVertices.push(parts[0]);if(parts[1]!==\"\")lineUVs.push(parts[1]);}}state.addLineGeometry(lineVertices,lineUVs);}else if(lineFirstChar==='p'){var lineData=line.substr(1).trim();var pointData=lineData.split(\" \");state.addPointGeometry(pointData);}else if((result=object_pattern.exec(line))!==null){// o object_name\n// or\n// g group_name\n// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n// var name = result[ 0 ].substr( 1 ).trim();\nvar name=(\" \"+result[0].substr(1).trim()).substr(1);state.startObject(name);}else if(material_use_pattern.test(line)){// material\nstate.object.startMaterial(line.substring(7).trim(),state.materialLibraries);}else if(material_library_pattern.test(line)){// mtl file\nstate.materialLibraries.push(line.substring(7).trim());}else if(lineFirstChar==='s'){result=line.split(' ');// smooth shading\n// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n// but does not define a usemtl for each face set.\n// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n// where explicit usemtl defines geometry groups.\n// Example asset: examples/models/obj/cerberus/Cerberus.obj\n/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t * or\n\t\t\t\t\t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */if(result.length>1){var value=result[1].trim().toLowerCase();state.object.smooth=value!=='0'&&value!=='off';}else{// ZBrush can produce \"s\" lines #11707\nstate.object.smooth=true;}var material=state.object.currentMaterial();if(material)material.smooth=state.object.smooth;}else{// Handle null terminated files without exception\nif(line==='\\0')continue;throw new Error('THREE.OBJLoader: Unexpected line: \"'+line+'\"');}}state.finalize();var container=new THREE.Group();container.materialLibraries=[].concat(state.materialLibraries);for(var i=0,l=state.objects.length;i<l;i++){var object=state.objects[i];var geometry=object.geometry;var materials=object.materials;var isLine=geometry.type==='Line';var isPoints=geometry.type==='Points';var hasVertexColors=false;// Skip o/g line declarations that did not follow with any faces\nif(geometry.vertices.length===0)continue;var buffergeometry=new THREE.BufferGeometry();buffergeometry.addAttribute('position',new THREE.Float32BufferAttribute(geometry.vertices,3));if(geometry.normals.length>0){buffergeometry.addAttribute('normal',new THREE.Float32BufferAttribute(geometry.normals,3));}else{buffergeometry.computeVertexNormals();}if(geometry.colors.length>0){hasVertexColors=true;buffergeometry.addAttribute('color',new THREE.Float32BufferAttribute(geometry.colors,3));}if(geometry.uvs.length>0){buffergeometry.addAttribute('uv',new THREE.Float32BufferAttribute(geometry.uvs,2));}// Create materials\nvar createdMaterials=[];for(var mi=0,miLen=materials.length;mi<miLen;mi++){var sourceMaterial=materials[mi];var material=undefined;if(this.materials!==null){material=this.materials.create(sourceMaterial.name);// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\nif(isLine&&material&&!(material instanceof THREE.LineBasicMaterial)){var materialLine=new THREE.LineBasicMaterial();THREE.Material.prototype.copy.call(materialLine,material);materialLine.color.copy(material.color);materialLine.lights=false;material=materialLine;}else if(isPoints&&material&&!(material instanceof THREE.PointsMaterial)){var materialPoints=new THREE.PointsMaterial({size:10,sizeAttenuation:false});THREE.Material.prototype.copy.call(materialPoints,material);materialPoints.color.copy(material.color);materialPoints.map=material.map;materialPoints.lights=false;material=materialPoints;}}if(!material){if(isLine){material=new THREE.LineBasicMaterial();}else if(isPoints){material=new THREE.PointsMaterial({size:1,sizeAttenuation:false});}else{material=new THREE.MeshPhongMaterial();}material.name=sourceMaterial.name;}material.flatShading=sourceMaterial.smooth?false:true;material.vertexColors=hasVertexColors?THREE.VertexColors:THREE.NoColors;createdMaterials.push(material);}// Create mesh\nvar mesh;if(createdMaterials.length>1){for(var mi=0,miLen=materials.length;mi<miLen;mi++){var sourceMaterial=materials[mi];buffergeometry.addGroup(sourceMaterial.groupStart,sourceMaterial.groupCount,mi);}if(isLine){mesh=new THREE.LineSegments(buffergeometry,createdMaterials);}else if(isPoints){mesh=new THREE.Points(buffergeometry,createdMaterials);}else{mesh=new THREE.Mesh(buffergeometry,createdMaterials);}}else{if(isLine){mesh=new THREE.LineSegments(buffergeometry,createdMaterials[0]);}else if(isPoints){mesh=new THREE.Points(buffergeometry,createdMaterials[0]);}else{mesh=new THREE.Mesh(buffergeometry,createdMaterials[0]);}}mesh.name=object.name;container.add(mesh);}console.timeEnd('OBJLoader');return container;}};return OBJLoader;}();},{}],41:[function(_dereq_,module,exports){var createLayout=_dereq_('layout-bmfont-text');var inherits=_dereq_('inherits');var createIndices=_dereq_('quad-indices');var buffer=_dereq_('three-buffer-vertex-data');var assign=_dereq_('object-assign');var vertices=_dereq_('./lib/vertices');var utils=_dereq_('./lib/utils');var Base=THREE.BufferGeometry;module.exports=function createTextGeometry(opt){return new TextGeometry(opt);};function TextGeometry(opt){Base.call(this);if(typeof opt==='string'){opt={text:opt};}// use these as default values for any subsequent\n// calls to update()\nthis._opt=assign({},opt);// also do an initial setup...\nif(opt)this.update(opt);}inherits(TextGeometry,Base);TextGeometry.prototype.update=function(opt){if(typeof opt==='string'){opt={text:opt};}// use constructor defaults\nopt=assign({},this._opt,opt);if(!opt.font){throw new TypeError('must specify a { font } in options');}this.layout=createLayout(opt);// get vec2 texcoords\nvar flipY=opt.flipY!==false;// the desired BMFont data\nvar font=opt.font;// determine texture size from font file\nvar texWidth=font.common.scaleW;var texHeight=font.common.scaleH;// get visible glyphs\nvar glyphs=this.layout.glyphs.filter(function(glyph){var bitmap=glyph.data;return bitmap.width*bitmap.height>0;});// provide visible glyphs for convenience\nthis.visibleGlyphs=glyphs;// get common vertex data\nvar positions=vertices.positions(glyphs);var uvs=vertices.uvs(glyphs,texWidth,texHeight,flipY);var indices=createIndices({clockwise:true,type:'uint16',count:glyphs.length});// update vertex data\nbuffer.index(this,indices,1,'uint16');buffer.attr(this,'position',positions,2);buffer.attr(this,'uv',uvs,2);// update multipage data\nif(!opt.multipage&&'page'in this.attributes){// disable multipage rendering\nthis.removeAttribute('page');}else if(opt.multipage){var pages=vertices.pages(glyphs);// enable multipage rendering\nbuffer.attr(this,'page',pages,1);}};TextGeometry.prototype.computeBoundingSphere=function(){if(this.boundingSphere===null){this.boundingSphere=new THREE.Sphere();}var positions=this.attributes.position.array;var itemSize=this.attributes.position.itemSize;if(!positions||!itemSize||positions.length<2){this.boundingSphere.radius=0;this.boundingSphere.center.set(0,0,0);return;}utils.computeSphere(positions,this.boundingSphere);if(isNaN(this.boundingSphere.radius)){console.error('THREE.BufferGeometry.computeBoundingSphere(): '+'Computed radius is NaN. The '+'\"position\" attribute is likely to have NaN values.');}};TextGeometry.prototype.computeBoundingBox=function(){if(this.boundingBox===null){this.boundingBox=new THREE.Box3();}var bbox=this.boundingBox;var positions=this.attributes.position.array;var itemSize=this.attributes.position.itemSize;if(!positions||!itemSize||positions.length<2){bbox.makeEmpty();return;}utils.computeBox(positions,bbox);};},{\"./lib/utils\":42,\"./lib/vertices\":43,\"inherits\":18,\"layout-bmfont-text\":23,\"object-assign\":26,\"quad-indices\":35,\"three-buffer-vertex-data\":44}],42:[function(_dereq_,module,exports){var itemSize=2;var box={min:[0,0],max:[0,0]};function bounds(positions){var count=positions.length/itemSize;box.min[0]=positions[0];box.min[1]=positions[1];box.max[0]=positions[0];box.max[1]=positions[1];for(var i=0;i<count;i++){var x=positions[i*itemSize+0];var y=positions[i*itemSize+1];box.min[0]=Math.min(x,box.min[0]);box.min[1]=Math.min(y,box.min[1]);box.max[0]=Math.max(x,box.max[0]);box.max[1]=Math.max(y,box.max[1]);}}module.exports.computeBox=function(positions,output){bounds(positions);output.min.set(box.min[0],box.min[1],0);output.max.set(box.max[0],box.max[1],0);};module.exports.computeSphere=function(positions,output){bounds(positions);var minX=box.min[0];var minY=box.min[1];var maxX=box.max[0];var maxY=box.max[1];var width=maxX-minX;var height=maxY-minY;var length=Math.sqrt(width*width+height*height);output.center.set(minX+width/2,minY+height/2,0);output.radius=length/2;};},{}],43:[function(_dereq_,module,exports){module.exports.pages=function pages(glyphs){var pages=new Float32Array(glyphs.length*4*1);var i=0;glyphs.forEach(function(glyph){var id=glyph.data.page||0;pages[i++]=id;pages[i++]=id;pages[i++]=id;pages[i++]=id;});return pages;};module.exports.uvs=function uvs(glyphs,texWidth,texHeight,flipY){var uvs=new Float32Array(glyphs.length*4*2);var i=0;glyphs.forEach(function(glyph){var bitmap=glyph.data;var bw=bitmap.x+bitmap.width;var bh=bitmap.y+bitmap.height;// top left position\nvar u0=bitmap.x/texWidth;var v1=bitmap.y/texHeight;var u1=bw/texWidth;var v0=bh/texHeight;if(flipY){v1=(texHeight-bitmap.y)/texHeight;v0=(texHeight-bh)/texHeight;}// BL\nuvs[i++]=u0;uvs[i++]=v1;// TL\nuvs[i++]=u0;uvs[i++]=v0;// TR\nuvs[i++]=u1;uvs[i++]=v0;// BR\nuvs[i++]=u1;uvs[i++]=v1;});return uvs;};module.exports.positions=function positions(glyphs){var positions=new Float32Array(glyphs.length*4*2);var i=0;glyphs.forEach(function(glyph){var bitmap=glyph.data;// bottom left position\nvar x=glyph.position[0]+bitmap.xoffset;var y=glyph.position[1]+bitmap.yoffset;// quad size\nvar w=bitmap.width;var h=bitmap.height;// BL\npositions[i++]=x;positions[i++]=y;// TL\npositions[i++]=x;positions[i++]=y+h;// TR\npositions[i++]=x+w;positions[i++]=y+h;// BR\npositions[i++]=x+w;positions[i++]=y;});return positions;};},{}],44:[function(_dereq_,module,exports){var flatten=_dereq_('flatten-vertex-data');var warned=false;module.exports.attr=setAttribute;module.exports.index=setIndex;function setIndex(geometry,data,itemSize,dtype){if(typeof itemSize!=='number')itemSize=1;if(typeof dtype!=='string')dtype='uint16';var isR69=!geometry.index&&typeof geometry.setIndex!=='function';var attrib=isR69?geometry.getAttribute('index'):geometry.index;var newAttrib=updateAttribute(attrib,data,itemSize,dtype);if(newAttrib){if(isR69)geometry.addAttribute('index',newAttrib);else geometry.index=newAttrib;}}function setAttribute(geometry,key,data,itemSize,dtype){if(typeof itemSize!=='number')itemSize=3;if(typeof dtype!=='string')dtype='float32';if(Array.isArray(data)&&Array.isArray(data[0])&&data[0].length!==itemSize){throw new Error('Nested vertex array has unexpected size; expected '+itemSize+' but found '+data[0].length);}var attrib=geometry.getAttribute(key);var newAttrib=updateAttribute(attrib,data,itemSize,dtype);if(newAttrib){geometry.addAttribute(key,newAttrib);}}function updateAttribute(attrib,data,itemSize,dtype){data=data||[];if(!attrib||rebuildAttribute(attrib,data,itemSize)){// create a new array with desired type\ndata=flatten(data,dtype);var needsNewBuffer=attrib&&typeof attrib.setArray!=='function';if(!attrib||needsNewBuffer){// We are on an old version of ThreeJS which can't\n// support growing / shrinking buffers, so we need\n// to build a new buffer\nif(needsNewBuffer&&!warned){warned=true;console.warn(['A WebGL buffer is being updated with a new size or itemSize, ','however this version of ThreeJS only supports fixed-size buffers.','\\nThe old buffer may still be kept in memory.\\n','To avoid memory leaks, it is recommended that you dispose ','your geometries and create new ones, or update to ThreeJS r82 or newer.\\n','See here for discussion:\\n','https://github.com/mrdoob/three.js/pull/9631'].join(''));}// Build a new attribute\nattrib=new THREE.BufferAttribute(data,itemSize);}attrib.itemSize=itemSize;attrib.needsUpdate=true;// New versions of ThreeJS suggest using setArray\n// to change the data. It will use bufferData internally,\n// so you can change the array size without any issues\nif(typeof attrib.setArray==='function'){attrib.setArray(data);}return attrib;}else{// copy data into the existing array\nflatten(data,attrib.array);attrib.needsUpdate=true;return null;}}// Test whether the attribute needs to be re-created,\n// returns false if we can re-use it as-is.\nfunction rebuildAttribute(attrib,data,itemSize){if(attrib.itemSize!==itemSize)return true;if(!attrib.array)return true;var attribLength=attrib.array.length;if(Array.isArray(data)&&Array.isArray(data[0])){// [ [ x, y, z ] ]\nreturn attribLength!==data.length*itemSize;}else{// [ x, y, z ]\nreturn attribLength!==data.length;}return false;}},{\"flatten-vertex-data\":14}],45:[function(_dereq_,module,exports){exports=module.exports=trim;function trim(str){return str.replace(/^\\s*|\\s*$/g,'');}exports.left=function(str){return str.replace(/^\\s*/,'');};exports.right=function(str){return str.replace(/\\s*$/,'');};},{}],46:[function(_dereq_,module,exports){(function(global){/**\n * @license\n * webvr-polyfill\n * Copyright (c) 2015-2017 Google\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ /**\n * @license\n * cardboard-vr-display\n * Copyright (c) 2015-2017 Google\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ /**\n * @license\n * webvr-polyfill-dpdb \n * Copyright (c) 2017 Google\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ /**\n * @license\n * wglu-preserve-state\n * Copyright (c) 2016, Brandon Jones.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */ /**\n * @license\n * nosleep.js\n * Copyright (c) 2017, Rich Tibbett\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():typeof define==='function'&&define.amd?define(factory):global.WebVRPolyfill=factory();})(this,function(){'use strict';var commonjsGlobal=typeof window!=='undefined'?window:typeof global!=='undefined'?global:typeof self!=='undefined'?self:{};function unwrapExports(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,'default')?x['default']:x;}function createCommonjsModule(fn,module){return module={exports:{}},fn(module,module.exports),module.exports;}var isMobile=function isMobile(){return /Android/i.test(navigator.userAgent)||/iPhone|iPad|iPod/i.test(navigator.userAgent);};var copyArray=function copyArray(source,dest){for(var i=0,n=source.length;i<n;i++){dest[i]=source[i];}};var extend=function extend(dest,src){for(var key in src){if(src.hasOwnProperty(key)){dest[key]=src[key];}}return dest;};var cardboardVrDisplay=createCommonjsModule(function(module,exports){/**\n * @license\n * cardboard-vr-display\n * Copyright (c) 2015-2017 Google\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ /**\n * @license\n * gl-preserve-state\n * Copyright (c) 2016, Brandon Jones.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */ /**\n * @license\n * webvr-polyfill-dpdb\n * Copyright (c) 2015-2017 Google\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ /**\n * @license\n * nosleep.js\n * Copyright (c) 2017, Rich Tibbett\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */(function(global,factory){module.exports=factory();})(commonjsGlobal,function(){var classCallCheck=function(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}};var createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i[\"return\"])_i[\"return\"]();}finally{if(_d)throw _e;}}return _arr;}return function(arr,i){if(Array.isArray(arr)){return arr;}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i);}else{throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");}};}();var MIN_TIMESTEP=0.001;var MAX_TIMESTEP=1;var dataUri=function dataUri(mimeType,svg){return'data:'+mimeType+','+encodeURIComponent(svg);};var lerp=function lerp(a,b,t){return a+(b-a)*t;};var isIOS=function(){var isIOS=/iPad|iPhone|iPod/.test(navigator.platform);return function(){return isIOS;};}();var isWebViewAndroid=function(){var isWebViewAndroid=navigator.userAgent.indexOf('Version')!==-1&&navigator.userAgent.indexOf('Android')!==-1&&navigator.userAgent.indexOf('Chrome')!==-1;return function(){return isWebViewAndroid;};}();var isSafari=function(){var isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);return function(){return isSafari;};}();var isFirefoxAndroid=function(){var isFirefoxAndroid=navigator.userAgent.indexOf('Firefox')!==-1&&navigator.userAgent.indexOf('Android')!==-1;return function(){return isFirefoxAndroid;};}();var getChromeVersion=function(){var match=navigator.userAgent.match(/.*Chrome\\/([0-9]+)/);var value=match?parseInt(match[1],10):null;return function(){return value;};}();var isChromeWithoutDeviceMotion=function(){var value=false;if(getChromeVersion()===65){var match=navigator.userAgent.match(/.*Chrome\\/([0-9\\.]*)/);if(match){var _match$1$split=match[1].split('.'),_match$1$split2=slicedToArray(_match$1$split,4),major=_match$1$split2[0],minor=_match$1$split2[1],branch=_match$1$split2[2],build=_match$1$split2[3];value=parseInt(branch,10)===3325&&parseInt(build,10)<148;}}return function(){return value;};}();var isR7=function(){var isR7=navigator.userAgent.indexOf('R7 Build')!==-1;return function(){return isR7;};}();var isLandscapeMode=function isLandscapeMode(){var rtn=window.orientation==90||window.orientation==-90;return isR7()?!rtn:rtn;};var isTimestampDeltaValid=function isTimestampDeltaValid(timestampDeltaS){if(isNaN(timestampDeltaS)){return false;}if(timestampDeltaS<=MIN_TIMESTEP){return false;}if(timestampDeltaS>MAX_TIMESTEP){return false;}return true;};var getScreenWidth=function getScreenWidth(){return Math.max(window.screen.width,window.screen.height)*window.devicePixelRatio;};var getScreenHeight=function getScreenHeight(){return Math.min(window.screen.width,window.screen.height)*window.devicePixelRatio;};var requestFullscreen=function requestFullscreen(element){if(isWebViewAndroid()){return false;}if(element.requestFullscreen){element.requestFullscreen();}else if(element.webkitRequestFullscreen){element.webkitRequestFullscreen();}else if(element.mozRequestFullScreen){element.mozRequestFullScreen();}else if(element.msRequestFullscreen){element.msRequestFullscreen();}else{return false;}return true;};var exitFullscreen=function exitFullscreen(){if(document.exitFullscreen){document.exitFullscreen();}else if(document.webkitExitFullscreen){document.webkitExitFullscreen();}else if(document.mozCancelFullScreen){document.mozCancelFullScreen();}else if(document.msExitFullscreen){document.msExitFullscreen();}else{return false;}return true;};var getFullscreenElement=function getFullscreenElement(){return document.fullscreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.msFullscreenElement;};var linkProgram=function linkProgram(gl,vertexSource,fragmentSource,attribLocationMap){var vertexShader=gl.createShader(gl.VERTEX_SHADER);gl.shaderSource(vertexShader,vertexSource);gl.compileShader(vertexShader);var fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);gl.shaderSource(fragmentShader,fragmentSource);gl.compileShader(fragmentShader);var program=gl.createProgram();gl.attachShader(program,vertexShader);gl.attachShader(program,fragmentShader);for(var attribName in attribLocationMap){gl.bindAttribLocation(program,attribLocationMap[attribName],attribName);}gl.linkProgram(program);gl.deleteShader(vertexShader);gl.deleteShader(fragmentShader);return program;};var getProgramUniforms=function getProgramUniforms(gl,program){var uniforms={};var uniformCount=gl.getProgramParameter(program,gl.ACTIVE_UNIFORMS);var uniformName='';for(var i=0;i<uniformCount;i++){var uniformInfo=gl.getActiveUniform(program,i);uniformName=uniformInfo.name.replace('[0]','');uniforms[uniformName]=gl.getUniformLocation(program,uniformName);}return uniforms;};var orthoMatrix=function orthoMatrix(out,left,right,bottom,top,near,far){var lr=1/(left-right),bt=1/(bottom-top),nf=1/(near-far);out[0]=-2*lr;out[1]=0;out[2]=0;out[3]=0;out[4]=0;out[5]=-2*bt;out[6]=0;out[7]=0;out[8]=0;out[9]=0;out[10]=2*nf;out[11]=0;out[12]=(left+right)*lr;out[13]=(top+bottom)*bt;out[14]=(far+near)*nf;out[15]=1;return out;};var isMobile=function isMobile(){var check=false;(function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check=true;})(navigator.userAgent||navigator.vendor||window.opera);return check;};var extend=function extend(dest,src){for(var key in src){if(src.hasOwnProperty(key)){dest[key]=src[key];}}return dest;};var safariCssSizeWorkaround=function safariCssSizeWorkaround(canvas){if(isIOS()){var width=canvas.style.width;var height=canvas.style.height;canvas.style.width=parseInt(width)+1+'px';canvas.style.height=parseInt(height)+'px';setTimeout(function(){canvas.style.width=width;canvas.style.height=height;},100);}window.canvas=canvas;};var frameDataFromPose=function(){var piOver180=Math.PI/180.0;var rad45=Math.PI*0.25;function mat4_perspectiveFromFieldOfView(out,fov,near,far){var upTan=Math.tan(fov?fov.upDegrees*piOver180:rad45),downTan=Math.tan(fov?fov.downDegrees*piOver180:rad45),leftTan=Math.tan(fov?fov.leftDegrees*piOver180:rad45),rightTan=Math.tan(fov?fov.rightDegrees*piOver180:rad45),xScale=2.0/(leftTan+rightTan),yScale=2.0/(upTan+downTan);out[0]=xScale;out[1]=0.0;out[2]=0.0;out[3]=0.0;out[4]=0.0;out[5]=yScale;out[6]=0.0;out[7]=0.0;out[8]=-((leftTan-rightTan)*xScale*0.5);out[9]=(upTan-downTan)*yScale*0.5;out[10]=far/(near-far);out[11]=-1.0;out[12]=0.0;out[13]=0.0;out[14]=far*near/(near-far);out[15]=0.0;return out;}function mat4_fromRotationTranslation(out,q,v){var x=q[0],y=q[1],z=q[2],w=q[3],x2=x+x,y2=y+y,z2=z+z,xx=x*x2,xy=x*y2,xz=x*z2,yy=y*y2,yz=y*z2,zz=z*z2,wx=w*x2,wy=w*y2,wz=w*z2;out[0]=1-(yy+zz);out[1]=xy+wz;out[2]=xz-wy;out[3]=0;out[4]=xy-wz;out[5]=1-(xx+zz);out[6]=yz+wx;out[7]=0;out[8]=xz+wy;out[9]=yz-wx;out[10]=1-(xx+yy);out[11]=0;out[12]=v[0];out[13]=v[1];out[14]=v[2];out[15]=1;return out;}function mat4_translate(out,a,v){var x=v[0],y=v[1],z=v[2],a00,a01,a02,a03,a10,a11,a12,a13,a20,a21,a22,a23;if(a===out){out[12]=a[0]*x+a[4]*y+a[8]*z+a[12];out[13]=a[1]*x+a[5]*y+a[9]*z+a[13];out[14]=a[2]*x+a[6]*y+a[10]*z+a[14];out[15]=a[3]*x+a[7]*y+a[11]*z+a[15];}else{a00=a[0];a01=a[1];a02=a[2];a03=a[3];a10=a[4];a11=a[5];a12=a[6];a13=a[7];a20=a[8];a21=a[9];a22=a[10];a23=a[11];out[0]=a00;out[1]=a01;out[2]=a02;out[3]=a03;out[4]=a10;out[5]=a11;out[6]=a12;out[7]=a13;out[8]=a20;out[9]=a21;out[10]=a22;out[11]=a23;out[12]=a00*x+a10*y+a20*z+a[12];out[13]=a01*x+a11*y+a21*z+a[13];out[14]=a02*x+a12*y+a22*z+a[14];out[15]=a03*x+a13*y+a23*z+a[15];}return out;}function mat4_invert(out,a){var a00=a[0],a01=a[1],a02=a[2],a03=a[3],a10=a[4],a11=a[5],a12=a[6],a13=a[7],a20=a[8],a21=a[9],a22=a[10],a23=a[11],a30=a[12],a31=a[13],a32=a[14],a33=a[15],b00=a00*a11-a01*a10,b01=a00*a12-a02*a10,b02=a00*a13-a03*a10,b03=a01*a12-a02*a11,b04=a01*a13-a03*a11,b05=a02*a13-a03*a12,b06=a20*a31-a21*a30,b07=a20*a32-a22*a30,b08=a20*a33-a23*a30,b09=a21*a32-a22*a31,b10=a21*a33-a23*a31,b11=a22*a33-a23*a32,det=b00*b11-b01*b10+b02*b09+b03*b08-b04*b07+b05*b06;if(!det){return null;}det=1.0/det;out[0]=(a11*b11-a12*b10+a13*b09)*det;out[1]=(a02*b10-a01*b11-a03*b09)*det;out[2]=(a31*b05-a32*b04+a33*b03)*det;out[3]=(a22*b04-a21*b05-a23*b03)*det;out[4]=(a12*b08-a10*b11-a13*b07)*det;out[5]=(a00*b11-a02*b08+a03*b07)*det;out[6]=(a32*b02-a30*b05-a33*b01)*det;out[7]=(a20*b05-a22*b02+a23*b01)*det;out[8]=(a10*b10-a11*b08+a13*b06)*det;out[9]=(a01*b08-a00*b10-a03*b06)*det;out[10]=(a30*b04-a31*b02+a33*b00)*det;out[11]=(a21*b02-a20*b04-a23*b00)*det;out[12]=(a11*b07-a10*b09-a12*b06)*det;out[13]=(a00*b09-a01*b07+a02*b06)*det;out[14]=(a31*b01-a30*b03-a32*b00)*det;out[15]=(a20*b03-a21*b01+a22*b00)*det;return out;}var defaultOrientation=new Float32Array([0,0,0,1]);var defaultPosition=new Float32Array([0,0,0]);function updateEyeMatrices(projection,view,pose,fov,offset,vrDisplay){mat4_perspectiveFromFieldOfView(projection,fov||null,vrDisplay.depthNear,vrDisplay.depthFar);var orientation=pose.orientation||defaultOrientation;var position=pose.position||defaultPosition;mat4_fromRotationTranslation(view,orientation,position);if(offset)mat4_translate(view,view,offset);mat4_invert(view,view);}return function(frameData,pose,vrDisplay){if(!frameData||!pose)return false;frameData.pose=pose;frameData.timestamp=pose.timestamp;updateEyeMatrices(frameData.leftProjectionMatrix,frameData.leftViewMatrix,pose,vrDisplay._getFieldOfView(\"left\"),vrDisplay._getEyeOffset(\"left\"),vrDisplay);updateEyeMatrices(frameData.rightProjectionMatrix,frameData.rightViewMatrix,pose,vrDisplay._getFieldOfView(\"right\"),vrDisplay._getEyeOffset(\"right\"),vrDisplay);return true;};}();var isInsideCrossOriginIFrame=function isInsideCrossOriginIFrame(){var isFramed=window.self!==window.top;var refOrigin=getOriginFromUrl(document.referrer);var thisOrigin=getOriginFromUrl(window.location.href);return isFramed&&refOrigin!==thisOrigin;};var getOriginFromUrl=function getOriginFromUrl(url){var domainIdx;var protoSepIdx=url.indexOf(\"://\");if(protoSepIdx!==-1){domainIdx=protoSepIdx+3;}else{domainIdx=0;}var domainEndIdx=url.indexOf('/',domainIdx);if(domainEndIdx===-1){domainEndIdx=url.length;}return url.substring(0,domainEndIdx);};var getQuaternionAngle=function getQuaternionAngle(quat){if(quat.w>1){console.warn('getQuaternionAngle: w > 1');return 0;}var angle=2*Math.acos(quat.w);return angle;};var warnOnce=function(){var observedWarnings={};return function(key,message){if(observedWarnings[key]===undefined){console.warn('webvr-polyfill: '+message);observedWarnings[key]=true;}};}();var deprecateWarning=function deprecateWarning(deprecated,suggested){var alternative=suggested?'Please use '+suggested+' instead.':'';warnOnce(deprecated,deprecated+' has been deprecated. '+'This may not work on native WebVR displays. '+alternative);};function WGLUPreserveGLState(gl,bindings,callback){if(!bindings){callback(gl);return;}var boundValues=[];var activeTexture=null;for(var i=0;i<bindings.length;++i){var binding=bindings[i];switch(binding){case gl.TEXTURE_BINDING_2D:case gl.TEXTURE_BINDING_CUBE_MAP:var textureUnit=bindings[++i];if(textureUnit<gl.TEXTURE0||textureUnit>gl.TEXTURE31){console.error(\"TEXTURE_BINDING_2D or TEXTURE_BINDING_CUBE_MAP must be followed by a valid texture unit\");boundValues.push(null,null);break;}if(!activeTexture){activeTexture=gl.getParameter(gl.ACTIVE_TEXTURE);}gl.activeTexture(textureUnit);boundValues.push(gl.getParameter(binding),null);break;case gl.ACTIVE_TEXTURE:activeTexture=gl.getParameter(gl.ACTIVE_TEXTURE);boundValues.push(null);break;default:boundValues.push(gl.getParameter(binding));break;}}callback(gl);for(var i=0;i<bindings.length;++i){var binding=bindings[i];var boundValue=boundValues[i];switch(binding){case gl.ACTIVE_TEXTURE:break;case gl.ARRAY_BUFFER_BINDING:gl.bindBuffer(gl.ARRAY_BUFFER,boundValue);break;case gl.COLOR_CLEAR_VALUE:gl.clearColor(boundValue[0],boundValue[1],boundValue[2],boundValue[3]);break;case gl.COLOR_WRITEMASK:gl.colorMask(boundValue[0],boundValue[1],boundValue[2],boundValue[3]);break;case gl.CURRENT_PROGRAM:gl.useProgram(boundValue);break;case gl.ELEMENT_ARRAY_BUFFER_BINDING:gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,boundValue);break;case gl.FRAMEBUFFER_BINDING:gl.bindFramebuffer(gl.FRAMEBUFFER,boundValue);break;case gl.RENDERBUFFER_BINDING:gl.bindRenderbuffer(gl.RENDERBUFFER,boundValue);break;case gl.TEXTURE_BINDING_2D:var textureUnit=bindings[++i];if(textureUnit<gl.TEXTURE0||textureUnit>gl.TEXTURE31)break;gl.activeTexture(textureUnit);gl.bindTexture(gl.TEXTURE_2D,boundValue);break;case gl.TEXTURE_BINDING_CUBE_MAP:var textureUnit=bindings[++i];if(textureUnit<gl.TEXTURE0||textureUnit>gl.TEXTURE31)break;gl.activeTexture(textureUnit);gl.bindTexture(gl.TEXTURE_CUBE_MAP,boundValue);break;case gl.VIEWPORT:gl.viewport(boundValue[0],boundValue[1],boundValue[2],boundValue[3]);break;case gl.BLEND:case gl.CULL_FACE:case gl.DEPTH_TEST:case gl.SCISSOR_TEST:case gl.STENCIL_TEST:if(boundValue){gl.enable(binding);}else{gl.disable(binding);}break;default:console.log(\"No GL restore behavior for 0x\"+binding.toString(16));break;}if(activeTexture){gl.activeTexture(activeTexture);}}}var glPreserveState=WGLUPreserveGLState;var distortionVS=['attribute vec2 position;','attribute vec3 texCoord;','varying vec2 vTexCoord;','uniform vec4 viewportOffsetScale[2];','void main() {','  vec4 viewport = viewportOffsetScale[int(texCoord.z)];','  vTexCoord = (texCoord.xy * viewport.zw) + viewport.xy;','  gl_Position = vec4( position, 1.0, 1.0 );','}'].join('\\n');var distortionFS=['precision mediump float;','uniform sampler2D diffuse;','varying vec2 vTexCoord;','void main() {','  gl_FragColor = texture2D(diffuse, vTexCoord);','}'].join('\\n');function CardboardDistorter(gl,cardboardUI,bufferScale,dirtySubmitFrameBindings){this.gl=gl;this.cardboardUI=cardboardUI;this.bufferScale=bufferScale;this.dirtySubmitFrameBindings=dirtySubmitFrameBindings;this.ctxAttribs=gl.getContextAttributes();this.meshWidth=20;this.meshHeight=20;this.bufferWidth=gl.drawingBufferWidth;this.bufferHeight=gl.drawingBufferHeight;this.realBindFramebuffer=gl.bindFramebuffer;this.realEnable=gl.enable;this.realDisable=gl.disable;this.realColorMask=gl.colorMask;this.realClearColor=gl.clearColor;this.realViewport=gl.viewport;if(!isIOS()){this.realCanvasWidth=Object.getOwnPropertyDescriptor(gl.canvas.__proto__,'width');this.realCanvasHeight=Object.getOwnPropertyDescriptor(gl.canvas.__proto__,'height');}this.isPatched=false;this.lastBoundFramebuffer=null;this.cullFace=false;this.depthTest=false;this.blend=false;this.scissorTest=false;this.stencilTest=false;this.viewport=[0,0,0,0];this.colorMask=[true,true,true,true];this.clearColor=[0,0,0,0];this.attribs={position:0,texCoord:1};this.program=linkProgram(gl,distortionVS,distortionFS,this.attribs);this.uniforms=getProgramUniforms(gl,this.program);this.viewportOffsetScale=new Float32Array(8);this.setTextureBounds();this.vertexBuffer=gl.createBuffer();this.indexBuffer=gl.createBuffer();this.indexCount=0;this.renderTarget=gl.createTexture();this.framebuffer=gl.createFramebuffer();this.depthStencilBuffer=null;this.depthBuffer=null;this.stencilBuffer=null;if(this.ctxAttribs.depth&&this.ctxAttribs.stencil){this.depthStencilBuffer=gl.createRenderbuffer();}else if(this.ctxAttribs.depth){this.depthBuffer=gl.createRenderbuffer();}else if(this.ctxAttribs.stencil){this.stencilBuffer=gl.createRenderbuffer();}this.patch();this.onResize();}CardboardDistorter.prototype.destroy=function(){var gl=this.gl;this.unpatch();gl.deleteProgram(this.program);gl.deleteBuffer(this.vertexBuffer);gl.deleteBuffer(this.indexBuffer);gl.deleteTexture(this.renderTarget);gl.deleteFramebuffer(this.framebuffer);if(this.depthStencilBuffer){gl.deleteRenderbuffer(this.depthStencilBuffer);}if(this.depthBuffer){gl.deleteRenderbuffer(this.depthBuffer);}if(this.stencilBuffer){gl.deleteRenderbuffer(this.stencilBuffer);}if(this.cardboardUI){this.cardboardUI.destroy();}};CardboardDistorter.prototype.onResize=function(){var gl=this.gl;var self=this;var glState=[gl.RENDERBUFFER_BINDING,gl.TEXTURE_BINDING_2D,gl.TEXTURE0];glPreserveState(gl,glState,function(gl){self.realBindFramebuffer.call(gl,gl.FRAMEBUFFER,null);if(self.scissorTest){self.realDisable.call(gl,gl.SCISSOR_TEST);}self.realColorMask.call(gl,true,true,true,true);self.realViewport.call(gl,0,0,gl.drawingBufferWidth,gl.drawingBufferHeight);self.realClearColor.call(gl,0,0,0,1);gl.clear(gl.COLOR_BUFFER_BIT);self.realBindFramebuffer.call(gl,gl.FRAMEBUFFER,self.framebuffer);gl.bindTexture(gl.TEXTURE_2D,self.renderTarget);gl.texImage2D(gl.TEXTURE_2D,0,self.ctxAttribs.alpha?gl.RGBA:gl.RGB,self.bufferWidth,self.bufferHeight,0,self.ctxAttribs.alpha?gl.RGBA:gl.RGB,gl.UNSIGNED_BYTE,null);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.LINEAR);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,self.renderTarget,0);if(self.ctxAttribs.depth&&self.ctxAttribs.stencil){gl.bindRenderbuffer(gl.RENDERBUFFER,self.depthStencilBuffer);gl.renderbufferStorage(gl.RENDERBUFFER,gl.DEPTH_STENCIL,self.bufferWidth,self.bufferHeight);gl.framebufferRenderbuffer(gl.FRAMEBUFFER,gl.DEPTH_STENCIL_ATTACHMENT,gl.RENDERBUFFER,self.depthStencilBuffer);}else if(self.ctxAttribs.depth){gl.bindRenderbuffer(gl.RENDERBUFFER,self.depthBuffer);gl.renderbufferStorage(gl.RENDERBUFFER,gl.DEPTH_COMPONENT16,self.bufferWidth,self.bufferHeight);gl.framebufferRenderbuffer(gl.FRAMEBUFFER,gl.DEPTH_ATTACHMENT,gl.RENDERBUFFER,self.depthBuffer);}else if(self.ctxAttribs.stencil){gl.bindRenderbuffer(gl.RENDERBUFFER,self.stencilBuffer);gl.renderbufferStorage(gl.RENDERBUFFER,gl.STENCIL_INDEX8,self.bufferWidth,self.bufferHeight);gl.framebufferRenderbuffer(gl.FRAMEBUFFER,gl.STENCIL_ATTACHMENT,gl.RENDERBUFFER,self.stencilBuffer);}if(!gl.checkFramebufferStatus(gl.FRAMEBUFFER)===gl.FRAMEBUFFER_COMPLETE){console.error('Framebuffer incomplete!');}self.realBindFramebuffer.call(gl,gl.FRAMEBUFFER,self.lastBoundFramebuffer);if(self.scissorTest){self.realEnable.call(gl,gl.SCISSOR_TEST);}self.realColorMask.apply(gl,self.colorMask);self.realViewport.apply(gl,self.viewport);self.realClearColor.apply(gl,self.clearColor);});if(this.cardboardUI){this.cardboardUI.onResize();}};CardboardDistorter.prototype.patch=function(){if(this.isPatched){return;}var self=this;var canvas=this.gl.canvas;var gl=this.gl;if(!isIOS()){canvas.width=getScreenWidth()*this.bufferScale;canvas.height=getScreenHeight()*this.bufferScale;Object.defineProperty(canvas,'width',{configurable:true,enumerable:true,get:function get(){return self.bufferWidth;},set:function set(value){self.bufferWidth=value;self.realCanvasWidth.set.call(canvas,value);self.onResize();}});Object.defineProperty(canvas,'height',{configurable:true,enumerable:true,get:function get(){return self.bufferHeight;},set:function set(value){self.bufferHeight=value;self.realCanvasHeight.set.call(canvas,value);self.onResize();}});}this.lastBoundFramebuffer=gl.getParameter(gl.FRAMEBUFFER_BINDING);if(this.lastBoundFramebuffer==null){this.lastBoundFramebuffer=this.framebuffer;this.gl.bindFramebuffer(gl.FRAMEBUFFER,this.framebuffer);}this.gl.bindFramebuffer=function(target,framebuffer){self.lastBoundFramebuffer=framebuffer?framebuffer:self.framebuffer;self.realBindFramebuffer.call(gl,target,self.lastBoundFramebuffer);};this.cullFace=gl.getParameter(gl.CULL_FACE);this.depthTest=gl.getParameter(gl.DEPTH_TEST);this.blend=gl.getParameter(gl.BLEND);this.scissorTest=gl.getParameter(gl.SCISSOR_TEST);this.stencilTest=gl.getParameter(gl.STENCIL_TEST);gl.enable=function(pname){switch(pname){case gl.CULL_FACE:self.cullFace=true;break;case gl.DEPTH_TEST:self.depthTest=true;break;case gl.BLEND:self.blend=true;break;case gl.SCISSOR_TEST:self.scissorTest=true;break;case gl.STENCIL_TEST:self.stencilTest=true;break;}self.realEnable.call(gl,pname);};gl.disable=function(pname){switch(pname){case gl.CULL_FACE:self.cullFace=false;break;case gl.DEPTH_TEST:self.depthTest=false;break;case gl.BLEND:self.blend=false;break;case gl.SCISSOR_TEST:self.scissorTest=false;break;case gl.STENCIL_TEST:self.stencilTest=false;break;}self.realDisable.call(gl,pname);};this.colorMask=gl.getParameter(gl.COLOR_WRITEMASK);gl.colorMask=function(r,g,b,a){self.colorMask[0]=r;self.colorMask[1]=g;self.colorMask[2]=b;self.colorMask[3]=a;self.realColorMask.call(gl,r,g,b,a);};this.clearColor=gl.getParameter(gl.COLOR_CLEAR_VALUE);gl.clearColor=function(r,g,b,a){self.clearColor[0]=r;self.clearColor[1]=g;self.clearColor[2]=b;self.clearColor[3]=a;self.realClearColor.call(gl,r,g,b,a);};this.viewport=gl.getParameter(gl.VIEWPORT);gl.viewport=function(x,y,w,h){self.viewport[0]=x;self.viewport[1]=y;self.viewport[2]=w;self.viewport[3]=h;self.realViewport.call(gl,x,y,w,h);};this.isPatched=true;safariCssSizeWorkaround(canvas);};CardboardDistorter.prototype.unpatch=function(){if(!this.isPatched){return;}var gl=this.gl;var canvas=this.gl.canvas;if(!isIOS()){Object.defineProperty(canvas,'width',this.realCanvasWidth);Object.defineProperty(canvas,'height',this.realCanvasHeight);}canvas.width=this.bufferWidth;canvas.height=this.bufferHeight;gl.bindFramebuffer=this.realBindFramebuffer;gl.enable=this.realEnable;gl.disable=this.realDisable;gl.colorMask=this.realColorMask;gl.clearColor=this.realClearColor;gl.viewport=this.realViewport;if(this.lastBoundFramebuffer==this.framebuffer){gl.bindFramebuffer(gl.FRAMEBUFFER,null);}this.isPatched=false;setTimeout(function(){safariCssSizeWorkaround(canvas);},1);};CardboardDistorter.prototype.setTextureBounds=function(leftBounds,rightBounds){if(!leftBounds){leftBounds=[0,0,0.5,1];}if(!rightBounds){rightBounds=[0.5,0,0.5,1];}this.viewportOffsetScale[0]=leftBounds[0];this.viewportOffsetScale[1]=leftBounds[1];this.viewportOffsetScale[2]=leftBounds[2];this.viewportOffsetScale[3]=leftBounds[3];this.viewportOffsetScale[4]=rightBounds[0];this.viewportOffsetScale[5]=rightBounds[1];this.viewportOffsetScale[6]=rightBounds[2];this.viewportOffsetScale[7]=rightBounds[3];};CardboardDistorter.prototype.submitFrame=function(){var gl=this.gl;var self=this;var glState=[];if(!this.dirtySubmitFrameBindings){glState.push(gl.CURRENT_PROGRAM,gl.ARRAY_BUFFER_BINDING,gl.ELEMENT_ARRAY_BUFFER_BINDING,gl.TEXTURE_BINDING_2D,gl.TEXTURE0);}glPreserveState(gl,glState,function(gl){self.realBindFramebuffer.call(gl,gl.FRAMEBUFFER,null);if(self.cullFace){self.realDisable.call(gl,gl.CULL_FACE);}if(self.depthTest){self.realDisable.call(gl,gl.DEPTH_TEST);}if(self.blend){self.realDisable.call(gl,gl.BLEND);}if(self.scissorTest){self.realDisable.call(gl,gl.SCISSOR_TEST);}if(self.stencilTest){self.realDisable.call(gl,gl.STENCIL_TEST);}self.realColorMask.call(gl,true,true,true,true);self.realViewport.call(gl,0,0,gl.drawingBufferWidth,gl.drawingBufferHeight);if(self.ctxAttribs.alpha||isIOS()){self.realClearColor.call(gl,0,0,0,1);gl.clear(gl.COLOR_BUFFER_BIT);}gl.useProgram(self.program);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,self.indexBuffer);gl.bindBuffer(gl.ARRAY_BUFFER,self.vertexBuffer);gl.enableVertexAttribArray(self.attribs.position);gl.enableVertexAttribArray(self.attribs.texCoord);gl.vertexAttribPointer(self.attribs.position,2,gl.FLOAT,false,20,0);gl.vertexAttribPointer(self.attribs.texCoord,3,gl.FLOAT,false,20,8);gl.activeTexture(gl.TEXTURE0);gl.uniform1i(self.uniforms.diffuse,0);gl.bindTexture(gl.TEXTURE_2D,self.renderTarget);gl.uniform4fv(self.uniforms.viewportOffsetScale,self.viewportOffsetScale);gl.drawElements(gl.TRIANGLES,self.indexCount,gl.UNSIGNED_SHORT,0);if(self.cardboardUI){self.cardboardUI.renderNoState();}self.realBindFramebuffer.call(self.gl,gl.FRAMEBUFFER,self.framebuffer);if(!self.ctxAttribs.preserveDrawingBuffer){self.realClearColor.call(gl,0,0,0,0);gl.clear(gl.COLOR_BUFFER_BIT);}if(!self.dirtySubmitFrameBindings){self.realBindFramebuffer.call(gl,gl.FRAMEBUFFER,self.lastBoundFramebuffer);}if(self.cullFace){self.realEnable.call(gl,gl.CULL_FACE);}if(self.depthTest){self.realEnable.call(gl,gl.DEPTH_TEST);}if(self.blend){self.realEnable.call(gl,gl.BLEND);}if(self.scissorTest){self.realEnable.call(gl,gl.SCISSOR_TEST);}if(self.stencilTest){self.realEnable.call(gl,gl.STENCIL_TEST);}self.realColorMask.apply(gl,self.colorMask);self.realViewport.apply(gl,self.viewport);if(self.ctxAttribs.alpha||!self.ctxAttribs.preserveDrawingBuffer){self.realClearColor.apply(gl,self.clearColor);}});if(isIOS()){var canvas=gl.canvas;if(canvas.width!=self.bufferWidth||canvas.height!=self.bufferHeight){self.bufferWidth=canvas.width;self.bufferHeight=canvas.height;self.onResize();}}};CardboardDistorter.prototype.updateDeviceInfo=function(deviceInfo){var gl=this.gl;var self=this;var glState=[gl.ARRAY_BUFFER_BINDING,gl.ELEMENT_ARRAY_BUFFER_BINDING];glPreserveState(gl,glState,function(gl){var vertices=self.computeMeshVertices_(self.meshWidth,self.meshHeight,deviceInfo);gl.bindBuffer(gl.ARRAY_BUFFER,self.vertexBuffer);gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);if(!self.indexCount){var indices=self.computeMeshIndices_(self.meshWidth,self.meshHeight);gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,self.indexBuffer);gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,indices,gl.STATIC_DRAW);self.indexCount=indices.length;}});};CardboardDistorter.prototype.computeMeshVertices_=function(width,height,deviceInfo){var vertices=new Float32Array(2*width*height*5);var lensFrustum=deviceInfo.getLeftEyeVisibleTanAngles();var noLensFrustum=deviceInfo.getLeftEyeNoLensTanAngles();var viewport=deviceInfo.getLeftEyeVisibleScreenRect(noLensFrustum);var vidx=0;for(var e=0;e<2;e++){for(var j=0;j<height;j++){for(var i=0;i<width;i++,vidx++){var u=i/(width-1);var v=j/(height-1);var s=u;var t=v;var x=lerp(lensFrustum[0],lensFrustum[2],u);var y=lerp(lensFrustum[3],lensFrustum[1],v);var d=Math.sqrt(x*x+y*y);var r=deviceInfo.distortion.distortInverse(d);var p=x*r/d;var q=y*r/d;u=(p-noLensFrustum[0])/(noLensFrustum[2]-noLensFrustum[0]);v=(q-noLensFrustum[3])/(noLensFrustum[1]-noLensFrustum[3]);u=(viewport.x+u*viewport.width-0.5)*2.0;v=(viewport.y+v*viewport.height-0.5)*2.0;vertices[vidx*5+0]=u;vertices[vidx*5+1]=v;vertices[vidx*5+2]=s;vertices[vidx*5+3]=t;vertices[vidx*5+4]=e;}}var w=lensFrustum[2]-lensFrustum[0];lensFrustum[0]=-(w+lensFrustum[0]);lensFrustum[2]=w-lensFrustum[2];w=noLensFrustum[2]-noLensFrustum[0];noLensFrustum[0]=-(w+noLensFrustum[0]);noLensFrustum[2]=w-noLensFrustum[2];viewport.x=1-(viewport.x+viewport.width);}return vertices;};CardboardDistorter.prototype.computeMeshIndices_=function(width,height){var indices=new Uint16Array(2*(width-1)*(height-1)*6);var halfwidth=width/2;var halfheight=height/2;var vidx=0;var iidx=0;for(var e=0;e<2;e++){for(var j=0;j<height;j++){for(var i=0;i<width;i++,vidx++){if(i==0||j==0)continue;if(i<=halfwidth==j<=halfheight){indices[iidx++]=vidx;indices[iidx++]=vidx-width-1;indices[iidx++]=vidx-width;indices[iidx++]=vidx-width-1;indices[iidx++]=vidx;indices[iidx++]=vidx-1;}else{indices[iidx++]=vidx-1;indices[iidx++]=vidx-width;indices[iidx++]=vidx;indices[iidx++]=vidx-width;indices[iidx++]=vidx-1;indices[iidx++]=vidx-width-1;}}}}return indices;};CardboardDistorter.prototype.getOwnPropertyDescriptor_=function(proto,attrName){var descriptor=Object.getOwnPropertyDescriptor(proto,attrName);if(descriptor.get===undefined||descriptor.set===undefined){descriptor.configurable=true;descriptor.enumerable=true;descriptor.get=function(){return this.getAttribute(attrName);};descriptor.set=function(val){this.setAttribute(attrName,val);};}return descriptor;};var uiVS=['attribute vec2 position;','uniform mat4 projectionMat;','void main() {','  gl_Position = projectionMat * vec4( position, -1.0, 1.0 );','}'].join('\\n');var uiFS=['precision mediump float;','uniform vec4 color;','void main() {','  gl_FragColor = color;','}'].join('\\n');var DEG2RAD=Math.PI/180.0;var kAnglePerGearSection=60;var kOuterRimEndAngle=12;var kInnerRimBeginAngle=20;var kOuterRadius=1;var kMiddleRadius=0.75;var kInnerRadius=0.3125;var kCenterLineThicknessDp=4;var kButtonWidthDp=28;var kTouchSlopFactor=1.5;function CardboardUI(gl){this.gl=gl;this.attribs={position:0};this.program=linkProgram(gl,uiVS,uiFS,this.attribs);this.uniforms=getProgramUniforms(gl,this.program);this.vertexBuffer=gl.createBuffer();this.gearOffset=0;this.gearVertexCount=0;this.arrowOffset=0;this.arrowVertexCount=0;this.projMat=new Float32Array(16);this.listener=null;this.onResize();}CardboardUI.prototype.destroy=function(){var gl=this.gl;if(this.listener){gl.canvas.removeEventListener('click',this.listener,false);}gl.deleteProgram(this.program);gl.deleteBuffer(this.vertexBuffer);};CardboardUI.prototype.listen=function(optionsCallback,backCallback){var canvas=this.gl.canvas;this.listener=function(event){var midline=canvas.clientWidth/2;var buttonSize=kButtonWidthDp*kTouchSlopFactor;if(event.clientX>midline-buttonSize&&event.clientX<midline+buttonSize&&event.clientY>canvas.clientHeight-buttonSize){optionsCallback(event);}else if(event.clientX<buttonSize&&event.clientY<buttonSize){backCallback(event);}};canvas.addEventListener('click',this.listener,false);};CardboardUI.prototype.onResize=function(){var gl=this.gl;var self=this;var glState=[gl.ARRAY_BUFFER_BINDING];glPreserveState(gl,glState,function(gl){var vertices=[];var midline=gl.drawingBufferWidth/2;var physicalPixels=Math.max(screen.width,screen.height)*window.devicePixelRatio;var scalingRatio=gl.drawingBufferWidth/physicalPixels;var dps=scalingRatio*window.devicePixelRatio;var lineWidth=kCenterLineThicknessDp*dps/2;var buttonSize=kButtonWidthDp*kTouchSlopFactor*dps;var buttonScale=kButtonWidthDp*dps/2;var buttonBorder=(kButtonWidthDp*kTouchSlopFactor-kButtonWidthDp)*dps;vertices.push(midline-lineWidth,buttonSize);vertices.push(midline-lineWidth,gl.drawingBufferHeight);vertices.push(midline+lineWidth,buttonSize);vertices.push(midline+lineWidth,gl.drawingBufferHeight);self.gearOffset=vertices.length/2;function addGearSegment(theta,r){var angle=(90-theta)*DEG2RAD;var x=Math.cos(angle);var y=Math.sin(angle);vertices.push(kInnerRadius*x*buttonScale+midline,kInnerRadius*y*buttonScale+buttonScale);vertices.push(r*x*buttonScale+midline,r*y*buttonScale+buttonScale);}for(var i=0;i<=6;i++){var segmentTheta=i*kAnglePerGearSection;addGearSegment(segmentTheta,kOuterRadius);addGearSegment(segmentTheta+kOuterRimEndAngle,kOuterRadius);addGearSegment(segmentTheta+kInnerRimBeginAngle,kMiddleRadius);addGearSegment(segmentTheta+(kAnglePerGearSection-kInnerRimBeginAngle),kMiddleRadius);addGearSegment(segmentTheta+(kAnglePerGearSection-kOuterRimEndAngle),kOuterRadius);}self.gearVertexCount=vertices.length/2-self.gearOffset;self.arrowOffset=vertices.length/2;function addArrowVertex(x,y){vertices.push(buttonBorder+x,gl.drawingBufferHeight-buttonBorder-y);}var angledLineWidth=lineWidth/Math.sin(45*DEG2RAD);addArrowVertex(0,buttonScale);addArrowVertex(buttonScale,0);addArrowVertex(buttonScale+angledLineWidth,angledLineWidth);addArrowVertex(angledLineWidth,buttonScale+angledLineWidth);addArrowVertex(angledLineWidth,buttonScale-angledLineWidth);addArrowVertex(0,buttonScale);addArrowVertex(buttonScale,buttonScale*2);addArrowVertex(buttonScale+angledLineWidth,buttonScale*2-angledLineWidth);addArrowVertex(angledLineWidth,buttonScale-angledLineWidth);addArrowVertex(0,buttonScale);addArrowVertex(angledLineWidth,buttonScale-lineWidth);addArrowVertex(kButtonWidthDp*dps,buttonScale-lineWidth);addArrowVertex(angledLineWidth,buttonScale+lineWidth);addArrowVertex(kButtonWidthDp*dps,buttonScale+lineWidth);self.arrowVertexCount=vertices.length/2-self.arrowOffset;gl.bindBuffer(gl.ARRAY_BUFFER,self.vertexBuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(vertices),gl.STATIC_DRAW);});};CardboardUI.prototype.render=function(){var gl=this.gl;var self=this;var glState=[gl.CULL_FACE,gl.DEPTH_TEST,gl.BLEND,gl.SCISSOR_TEST,gl.STENCIL_TEST,gl.COLOR_WRITEMASK,gl.VIEWPORT,gl.CURRENT_PROGRAM,gl.ARRAY_BUFFER_BINDING];glPreserveState(gl,glState,function(gl){gl.disable(gl.CULL_FACE);gl.disable(gl.DEPTH_TEST);gl.disable(gl.BLEND);gl.disable(gl.SCISSOR_TEST);gl.disable(gl.STENCIL_TEST);gl.colorMask(true,true,true,true);gl.viewport(0,0,gl.drawingBufferWidth,gl.drawingBufferHeight);self.renderNoState();});};CardboardUI.prototype.renderNoState=function(){var gl=this.gl;gl.useProgram(this.program);gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexBuffer);gl.enableVertexAttribArray(this.attribs.position);gl.vertexAttribPointer(this.attribs.position,2,gl.FLOAT,false,8,0);gl.uniform4f(this.uniforms.color,1.0,1.0,1.0,1.0);orthoMatrix(this.projMat,0,gl.drawingBufferWidth,0,gl.drawingBufferHeight,0.1,1024.0);gl.uniformMatrix4fv(this.uniforms.projectionMat,false,this.projMat);gl.drawArrays(gl.TRIANGLE_STRIP,0,4);gl.drawArrays(gl.TRIANGLE_STRIP,this.gearOffset,this.gearVertexCount);gl.drawArrays(gl.TRIANGLE_STRIP,this.arrowOffset,this.arrowVertexCount);};function Distortion(coefficients){this.coefficients=coefficients;}Distortion.prototype.distortInverse=function(radius){var r0=0;var r1=1;var dr0=radius-this.distort(r0);while(Math.abs(r1-r0)>0.0001){var dr1=radius-this.distort(r1);var r2=r1-dr1*((r1-r0)/(dr1-dr0));r0=r1;r1=r2;dr0=dr1;}return r1;};Distortion.prototype.distort=function(radius){var r2=radius*radius;var ret=0;for(var i=0;i<this.coefficients.length;i++){ret=r2*(ret+this.coefficients[i]);}return(ret+1)*radius;};var degToRad=Math.PI/180;var radToDeg=180/Math.PI;var Vector3=function Vector3(x,y,z){this.x=x||0;this.y=y||0;this.z=z||0;};Vector3.prototype={constructor:Vector3,set:function set(x,y,z){this.x=x;this.y=y;this.z=z;return this;},copy:function copy(v){this.x=v.x;this.y=v.y;this.z=v.z;return this;},length:function length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);},normalize:function normalize(){var scalar=this.length();if(scalar!==0){var invScalar=1/scalar;this.multiplyScalar(invScalar);}else{this.x=0;this.y=0;this.z=0;}return this;},multiplyScalar:function multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;},applyQuaternion:function applyQuaternion(q){var x=this.x;var y=this.y;var z=this.z;var qx=q.x;var qy=q.y;var qz=q.z;var qw=q.w;var ix=qw*x+qy*z-qz*y;var iy=qw*y+qz*x-qx*z;var iz=qw*z+qx*y-qy*x;var iw=-qx*x-qy*y-qz*z;this.x=ix*qw+iw*-qx+iy*-qz-iz*-qy;this.y=iy*qw+iw*-qy+iz*-qx-ix*-qz;this.z=iz*qw+iw*-qz+ix*-qy-iy*-qx;return this;},dot:function dot(v){return this.x*v.x+this.y*v.y+this.z*v.z;},crossVectors:function crossVectors(a,b){var ax=a.x,ay=a.y,az=a.z;var bx=b.x,by=b.y,bz=b.z;this.x=ay*bz-az*by;this.y=az*bx-ax*bz;this.z=ax*by-ay*bx;return this;}};var Quaternion=function Quaternion(x,y,z,w){this.x=x||0;this.y=y||0;this.z=z||0;this.w=w!==undefined?w:1;};Quaternion.prototype={constructor:Quaternion,set:function set(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w;return this;},copy:function copy(quaternion){this.x=quaternion.x;this.y=quaternion.y;this.z=quaternion.z;this.w=quaternion.w;return this;},setFromEulerXYZ:function setFromEulerXYZ(x,y,z){var c1=Math.cos(x/2);var c2=Math.cos(y/2);var c3=Math.cos(z/2);var s1=Math.sin(x/2);var s2=Math.sin(y/2);var s3=Math.sin(z/2);this.x=s1*c2*c3+c1*s2*s3;this.y=c1*s2*c3-s1*c2*s3;this.z=c1*c2*s3+s1*s2*c3;this.w=c1*c2*c3-s1*s2*s3;return this;},setFromEulerYXZ:function setFromEulerYXZ(x,y,z){var c1=Math.cos(x/2);var c2=Math.cos(y/2);var c3=Math.cos(z/2);var s1=Math.sin(x/2);var s2=Math.sin(y/2);var s3=Math.sin(z/2);this.x=s1*c2*c3+c1*s2*s3;this.y=c1*s2*c3-s1*c2*s3;this.z=c1*c2*s3-s1*s2*c3;this.w=c1*c2*c3+s1*s2*s3;return this;},setFromAxisAngle:function setFromAxisAngle(axis,angle){var halfAngle=angle/2,s=Math.sin(halfAngle);this.x=axis.x*s;this.y=axis.y*s;this.z=axis.z*s;this.w=Math.cos(halfAngle);return this;},multiply:function multiply(q){return this.multiplyQuaternions(this,q);},multiplyQuaternions:function multiplyQuaternions(a,b){var qax=a.x,qay=a.y,qaz=a.z,qaw=a.w;var qbx=b.x,qby=b.y,qbz=b.z,qbw=b.w;this.x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby;this.y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz;this.z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx;this.w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz;return this;},inverse:function inverse(){this.x*=-1;this.y*=-1;this.z*=-1;this.normalize();return this;},normalize:function normalize(){var l=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);if(l===0){this.x=0;this.y=0;this.z=0;this.w=1;}else{l=1/l;this.x=this.x*l;this.y=this.y*l;this.z=this.z*l;this.w=this.w*l;}return this;},slerp:function slerp(qb,t){if(t===0)return this;if(t===1)return this.copy(qb);var x=this.x,y=this.y,z=this.z,w=this.w;var cosHalfTheta=w*qb.w+x*qb.x+y*qb.y+z*qb.z;if(cosHalfTheta<0){this.w=-qb.w;this.x=-qb.x;this.y=-qb.y;this.z=-qb.z;cosHalfTheta=-cosHalfTheta;}else{this.copy(qb);}if(cosHalfTheta>=1.0){this.w=w;this.x=x;this.y=y;this.z=z;return this;}var halfTheta=Math.acos(cosHalfTheta);var sinHalfTheta=Math.sqrt(1.0-cosHalfTheta*cosHalfTheta);if(Math.abs(sinHalfTheta)<0.001){this.w=0.5*(w+this.w);this.x=0.5*(x+this.x);this.y=0.5*(y+this.y);this.z=0.5*(z+this.z);return this;}var ratioA=Math.sin((1-t)*halfTheta)/sinHalfTheta,ratioB=Math.sin(t*halfTheta)/sinHalfTheta;this.w=w*ratioA+this.w*ratioB;this.x=x*ratioA+this.x*ratioB;this.y=y*ratioA+this.y*ratioB;this.z=z*ratioA+this.z*ratioB;return this;},setFromUnitVectors:function(){var v1,r;var EPS=0.000001;return function(vFrom,vTo){if(v1===undefined)v1=new Vector3();r=vFrom.dot(vTo)+1;if(r<EPS){r=0;if(Math.abs(vFrom.x)>Math.abs(vFrom.z)){v1.set(-vFrom.y,vFrom.x,0);}else{v1.set(0,-vFrom.z,vFrom.y);}}else{v1.crossVectors(vFrom,vTo);}this.x=v1.x;this.y=v1.y;this.z=v1.z;this.w=r;this.normalize();return this;};}()};function Device(params){this.width=params.width||getScreenWidth();this.height=params.height||getScreenHeight();this.widthMeters=params.widthMeters;this.heightMeters=params.heightMeters;this.bevelMeters=params.bevelMeters;}var DEFAULT_ANDROID=new Device({widthMeters:0.110,heightMeters:0.062,bevelMeters:0.004});var DEFAULT_IOS=new Device({widthMeters:0.1038,heightMeters:0.0584,bevelMeters:0.004});var Viewers={CardboardV1:new CardboardViewer({id:'CardboardV1',label:'Cardboard I/O 2014',fov:40,interLensDistance:0.060,baselineLensDistance:0.035,screenLensDistance:0.042,distortionCoefficients:[0.441,0.156],inverseCoefficients:[-0.4410035,0.42756155,-0.4804439,0.5460139,-0.58821183,0.5733938,-0.48303202,0.33299083,-0.17573841,0.0651772,-0.01488963,0.001559834]}),CardboardV2:new CardboardViewer({id:'CardboardV2',label:'Cardboard I/O 2015',fov:60,interLensDistance:0.064,baselineLensDistance:0.035,screenLensDistance:0.039,distortionCoefficients:[0.34,0.55],inverseCoefficients:[-0.33836704,-0.18162185,0.862655,-1.2462051,1.0560602,-0.58208317,0.21609078,-0.05444823,0.009177956,-9.904169E-4,6.183535E-5,-1.6981803E-6]})};function DeviceInfo(deviceParams,additionalViewers){this.viewer=Viewers.CardboardV2;this.updateDeviceParams(deviceParams);this.distortion=new Distortion(this.viewer.distortionCoefficients);for(var i=0;i<additionalViewers.length;i++){var viewer=additionalViewers[i];Viewers[viewer.id]=new CardboardViewer(viewer);}}DeviceInfo.prototype.updateDeviceParams=function(deviceParams){this.device=this.determineDevice_(deviceParams)||this.device;};DeviceInfo.prototype.getDevice=function(){return this.device;};DeviceInfo.prototype.setViewer=function(viewer){this.viewer=viewer;this.distortion=new Distortion(this.viewer.distortionCoefficients);};DeviceInfo.prototype.determineDevice_=function(deviceParams){if(!deviceParams){if(isIOS()){console.warn('Using fallback iOS device measurements.');return DEFAULT_IOS;}else{console.warn('Using fallback Android device measurements.');return DEFAULT_ANDROID;}}var METERS_PER_INCH=0.0254;var metersPerPixelX=METERS_PER_INCH/deviceParams.xdpi;var metersPerPixelY=METERS_PER_INCH/deviceParams.ydpi;var width=getScreenWidth();var height=getScreenHeight();return new Device({widthMeters:metersPerPixelX*width,heightMeters:metersPerPixelY*height,bevelMeters:deviceParams.bevelMm*0.001});};DeviceInfo.prototype.getDistortedFieldOfViewLeftEye=function(){var viewer=this.viewer;var device=this.device;var distortion=this.distortion;var eyeToScreenDistance=viewer.screenLensDistance;var outerDist=(device.widthMeters-viewer.interLensDistance)/2;var innerDist=viewer.interLensDistance/2;var bottomDist=viewer.baselineLensDistance-device.bevelMeters;var topDist=device.heightMeters-bottomDist;var outerAngle=radToDeg*Math.atan(distortion.distort(outerDist/eyeToScreenDistance));var innerAngle=radToDeg*Math.atan(distortion.distort(innerDist/eyeToScreenDistance));var bottomAngle=radToDeg*Math.atan(distortion.distort(bottomDist/eyeToScreenDistance));var topAngle=radToDeg*Math.atan(distortion.distort(topDist/eyeToScreenDistance));return{leftDegrees:Math.min(outerAngle,viewer.fov),rightDegrees:Math.min(innerAngle,viewer.fov),downDegrees:Math.min(bottomAngle,viewer.fov),upDegrees:Math.min(topAngle,viewer.fov)};};DeviceInfo.prototype.getLeftEyeVisibleTanAngles=function(){var viewer=this.viewer;var device=this.device;var distortion=this.distortion;var fovLeft=Math.tan(-degToRad*viewer.fov);var fovTop=Math.tan(degToRad*viewer.fov);var fovRight=Math.tan(degToRad*viewer.fov);var fovBottom=Math.tan(-degToRad*viewer.fov);var halfWidth=device.widthMeters/4;var halfHeight=device.heightMeters/2;var verticalLensOffset=viewer.baselineLensDistance-device.bevelMeters-halfHeight;var centerX=viewer.interLensDistance/2-halfWidth;var centerY=-verticalLensOffset;var centerZ=viewer.screenLensDistance;var screenLeft=distortion.distort((centerX-halfWidth)/centerZ);var screenTop=distortion.distort((centerY+halfHeight)/centerZ);var screenRight=distortion.distort((centerX+halfWidth)/centerZ);var screenBottom=distortion.distort((centerY-halfHeight)/centerZ);var result=new Float32Array(4);result[0]=Math.max(fovLeft,screenLeft);result[1]=Math.min(fovTop,screenTop);result[2]=Math.min(fovRight,screenRight);result[3]=Math.max(fovBottom,screenBottom);return result;};DeviceInfo.prototype.getLeftEyeNoLensTanAngles=function(){var viewer=this.viewer;var device=this.device;var distortion=this.distortion;var result=new Float32Array(4);var fovLeft=distortion.distortInverse(Math.tan(-degToRad*viewer.fov));var fovTop=distortion.distortInverse(Math.tan(degToRad*viewer.fov));var fovRight=distortion.distortInverse(Math.tan(degToRad*viewer.fov));var fovBottom=distortion.distortInverse(Math.tan(-degToRad*viewer.fov));var halfWidth=device.widthMeters/4;var halfHeight=device.heightMeters/2;var verticalLensOffset=viewer.baselineLensDistance-device.bevelMeters-halfHeight;var centerX=viewer.interLensDistance/2-halfWidth;var centerY=-verticalLensOffset;var centerZ=viewer.screenLensDistance;var screenLeft=(centerX-halfWidth)/centerZ;var screenTop=(centerY+halfHeight)/centerZ;var screenRight=(centerX+halfWidth)/centerZ;var screenBottom=(centerY-halfHeight)/centerZ;result[0]=Math.max(fovLeft,screenLeft);result[1]=Math.min(fovTop,screenTop);result[2]=Math.min(fovRight,screenRight);result[3]=Math.max(fovBottom,screenBottom);return result;};DeviceInfo.prototype.getLeftEyeVisibleScreenRect=function(undistortedFrustum){var viewer=this.viewer;var device=this.device;var dist=viewer.screenLensDistance;var eyeX=(device.widthMeters-viewer.interLensDistance)/2;var eyeY=viewer.baselineLensDistance-device.bevelMeters;var left=(undistortedFrustum[0]*dist+eyeX)/device.widthMeters;var top=(undistortedFrustum[1]*dist+eyeY)/device.heightMeters;var right=(undistortedFrustum[2]*dist+eyeX)/device.widthMeters;var bottom=(undistortedFrustum[3]*dist+eyeY)/device.heightMeters;return{x:left,y:bottom,width:right-left,height:top-bottom};};DeviceInfo.prototype.getFieldOfViewLeftEye=function(opt_isUndistorted){return opt_isUndistorted?this.getUndistortedFieldOfViewLeftEye():this.getDistortedFieldOfViewLeftEye();};DeviceInfo.prototype.getFieldOfViewRightEye=function(opt_isUndistorted){var fov=this.getFieldOfViewLeftEye(opt_isUndistorted);return{leftDegrees:fov.rightDegrees,rightDegrees:fov.leftDegrees,upDegrees:fov.upDegrees,downDegrees:fov.downDegrees};};DeviceInfo.prototype.getUndistortedFieldOfViewLeftEye=function(){var p=this.getUndistortedParams_();return{leftDegrees:radToDeg*Math.atan(p.outerDist),rightDegrees:radToDeg*Math.atan(p.innerDist),downDegrees:radToDeg*Math.atan(p.bottomDist),upDegrees:radToDeg*Math.atan(p.topDist)};};DeviceInfo.prototype.getUndistortedViewportLeftEye=function(){var p=this.getUndistortedParams_();var viewer=this.viewer;var device=this.device;var eyeToScreenDistance=viewer.screenLensDistance;var screenWidth=device.widthMeters/eyeToScreenDistance;var screenHeight=device.heightMeters/eyeToScreenDistance;var xPxPerTanAngle=device.width/screenWidth;var yPxPerTanAngle=device.height/screenHeight;var x=Math.round((p.eyePosX-p.outerDist)*xPxPerTanAngle);var y=Math.round((p.eyePosY-p.bottomDist)*yPxPerTanAngle);return{x:x,y:y,width:Math.round((p.eyePosX+p.innerDist)*xPxPerTanAngle)-x,height:Math.round((p.eyePosY+p.topDist)*yPxPerTanAngle)-y};};DeviceInfo.prototype.getUndistortedParams_=function(){var viewer=this.viewer;var device=this.device;var distortion=this.distortion;var eyeToScreenDistance=viewer.screenLensDistance;var halfLensDistance=viewer.interLensDistance/2/eyeToScreenDistance;var screenWidth=device.widthMeters/eyeToScreenDistance;var screenHeight=device.heightMeters/eyeToScreenDistance;var eyePosX=screenWidth/2-halfLensDistance;var eyePosY=(viewer.baselineLensDistance-device.bevelMeters)/eyeToScreenDistance;var maxFov=viewer.fov;var viewerMax=distortion.distortInverse(Math.tan(degToRad*maxFov));var outerDist=Math.min(eyePosX,viewerMax);var innerDist=Math.min(halfLensDistance,viewerMax);var bottomDist=Math.min(eyePosY,viewerMax);var topDist=Math.min(screenHeight-eyePosY,viewerMax);return{outerDist:outerDist,innerDist:innerDist,topDist:topDist,bottomDist:bottomDist,eyePosX:eyePosX,eyePosY:eyePosY};};function CardboardViewer(params){this.id=params.id;this.label=params.label;this.fov=params.fov;this.interLensDistance=params.interLensDistance;this.baselineLensDistance=params.baselineLensDistance;this.screenLensDistance=params.screenLensDistance;this.distortionCoefficients=params.distortionCoefficients;this.inverseCoefficients=params.inverseCoefficients;}DeviceInfo.Viewers=Viewers;var format=1;var last_updated=\"2018-12-10T17:01:42Z\";var devices=[{\"type\":\"android\",\"rules\":[{\"mdmh\":\"asus/*/Nexus 7/*\"},{\"ua\":\"Nexus 7\"}],\"dpi\":[320.8,323],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"asus/*/ASUS_Z00AD/*\"},{\"ua\":\"ASUS_Z00AD\"}],\"dpi\":[403,404.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Google/*/Pixel 2 XL/*\"},{\"ua\":\"Pixel 2 XL\"}],\"dpi\":537.9,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Google/*/Pixel 3 XL/*\"},{\"ua\":\"Pixel 3 XL\"}],\"dpi\":[558.5,553.8],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Google/*/Pixel XL/*\"},{\"ua\":\"Pixel XL\"}],\"dpi\":[537.9,533],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Google/*/Pixel 3/*\"},{\"ua\":\"Pixel 3\"}],\"dpi\":442.4,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Google/*/Pixel 2/*\"},{\"ua\":\"Pixel 2\"}],\"dpi\":441,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Google/*/Pixel/*\"},{\"ua\":\"Pixel\"}],\"dpi\":[432.6,436.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"HTC/*/HTC6435LVW/*\"},{\"ua\":\"HTC6435LVW\"}],\"dpi\":[449.7,443.3],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"HTC/*/HTC One XL/*\"},{\"ua\":\"HTC One XL\"}],\"dpi\":[315.3,314.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"htc/*/Nexus 9/*\"},{\"ua\":\"Nexus 9\"}],\"dpi\":289,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"HTC/*/HTC One M9/*\"},{\"ua\":\"HTC One M9\"}],\"dpi\":[442.5,443.3],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"HTC/*/HTC One_M8/*\"},{\"ua\":\"HTC One_M8\"}],\"dpi\":[449.7,447.4],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"HTC/*/HTC One/*\"},{\"ua\":\"HTC One\"}],\"dpi\":472.8,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Huawei/*/Nexus 6P/*\"},{\"ua\":\"Nexus 6P\"}],\"dpi\":[515.1,518],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Huawei/*/BLN-L24/*\"},{\"ua\":\"HONORBLN-L24\"}],\"dpi\":480,\"bw\":4,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Huawei/*/BKL-L09/*\"},{\"ua\":\"BKL-L09\"}],\"dpi\":403,\"bw\":3.47,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LENOVO/*/Lenovo PB2-690Y/*\"},{\"ua\":\"Lenovo PB2-690Y\"}],\"dpi\":[457.2,454.713],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/Nexus 5X/*\"},{\"ua\":\"Nexus 5X\"}],\"dpi\":[422,419.9],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LGMS345/*\"},{\"ua\":\"LGMS345\"}],\"dpi\":[221.7,219.1],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LG-D800/*\"},{\"ua\":\"LG-D800\"}],\"dpi\":[422,424.1],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LG-D850/*\"},{\"ua\":\"LG-D850\"}],\"dpi\":[537.9,541.9],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/VS985 4G/*\"},{\"ua\":\"VS985 4G\"}],\"dpi\":[537.9,535.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/Nexus 5/*\"},{\"ua\":\"Nexus 5 B\"}],\"dpi\":[442.4,444.8],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/Nexus 4/*\"},{\"ua\":\"Nexus 4\"}],\"dpi\":[319.8,318.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LG-P769/*\"},{\"ua\":\"LG-P769\"}],\"dpi\":[240.6,247.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LGMS323/*\"},{\"ua\":\"LGMS323\"}],\"dpi\":[206.6,204.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"LGE/*/LGLS996/*\"},{\"ua\":\"LGLS996\"}],\"dpi\":[403.4,401.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Micromax/*/4560MMX/*\"},{\"ua\":\"4560MMX\"}],\"dpi\":[240,219.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Micromax/*/A250/*\"},{\"ua\":\"Micromax A250\"}],\"dpi\":[480,446.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Micromax/*/Micromax AQ4501/*\"},{\"ua\":\"Micromax AQ4501\"}],\"dpi\":240,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/G5/*\"},{\"ua\":\"Moto G (5) Plus\"}],\"dpi\":[403.4,403],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/DROID RAZR/*\"},{\"ua\":\"DROID RAZR\"}],\"dpi\":[368.1,256.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT830C/*\"},{\"ua\":\"XT830C\"}],\"dpi\":[254,255.9],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1021/*\"},{\"ua\":\"XT1021\"}],\"dpi\":[254,256.7],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1023/*\"},{\"ua\":\"XT1023\"}],\"dpi\":[254,256.7],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1028/*\"},{\"ua\":\"XT1028\"}],\"dpi\":[326.6,327.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1034/*\"},{\"ua\":\"XT1034\"}],\"dpi\":[326.6,328.4],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1053/*\"},{\"ua\":\"XT1053\"}],\"dpi\":[315.3,316.1],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1562/*\"},{\"ua\":\"XT1562\"}],\"dpi\":[403.4,402.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/Nexus 6/*\"},{\"ua\":\"Nexus 6 B\"}],\"dpi\":[494.3,489.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1063/*\"},{\"ua\":\"XT1063\"}],\"dpi\":[295,296.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1064/*\"},{\"ua\":\"XT1064\"}],\"dpi\":[295,295.6],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1092/*\"},{\"ua\":\"XT1092\"}],\"dpi\":[422,424.1],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/XT1095/*\"},{\"ua\":\"XT1095\"}],\"dpi\":[422,423.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"motorola/*/G4/*\"},{\"ua\":\"Moto G (4)\"}],\"dpi\":401,\"bw\":4,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/A0001/*\"},{\"ua\":\"A0001\"}],\"dpi\":[403.4,401],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONE E1005/*\"},{\"ua\":\"ONE E1005\"}],\"dpi\":[442.4,441.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONE A2005/*\"},{\"ua\":\"ONE A2005\"}],\"dpi\":[391.9,405.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONEPLUS A5000/*\"},{\"ua\":\"ONEPLUS A5000 \"}],\"dpi\":[403.411,399.737],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OnePlus/*/ONE A5010/*\"},{\"ua\":\"ONEPLUS A5010\"}],\"dpi\":[403,400],\"bw\":2,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"OPPO/*/X909/*\"},{\"ua\":\"X909\"}],\"dpi\":[442.4,444.1],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9082/*\"},{\"ua\":\"GT-I9082\"}],\"dpi\":[184.7,185.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G360P/*\"},{\"ua\":\"SM-G360P\"}],\"dpi\":[196.7,205.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/Nexus S/*\"},{\"ua\":\"Nexus S\"}],\"dpi\":[234.5,229.8],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9300/*\"},{\"ua\":\"GT-I9300\"}],\"dpi\":[304.8,303.9],\"bw\":5,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-T230NU/*\"},{\"ua\":\"SM-T230NU\"}],\"dpi\":216,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SGH-T399/*\"},{\"ua\":\"SGH-T399\"}],\"dpi\":[217.7,231.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SGH-M919/*\"},{\"ua\":\"SGH-M919\"}],\"dpi\":[440.8,437.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N9005/*\"},{\"ua\":\"SM-N9005\"}],\"dpi\":[386.4,387],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SAMSUNG-SM-N900A/*\"},{\"ua\":\"SAMSUNG-SM-N900A\"}],\"dpi\":[386.4,387.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9500/*\"},{\"ua\":\"GT-I9500\"}],\"dpi\":[442.5,443.3],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9505/*\"},{\"ua\":\"GT-I9505\"}],\"dpi\":439.4,\"bw\":4,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G900F/*\"},{\"ua\":\"SM-G900F\"}],\"dpi\":[415.6,431.6],\"bw\":5,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G900M/*\"},{\"ua\":\"SM-G900M\"}],\"dpi\":[415.6,431.6],\"bw\":5,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G800F/*\"},{\"ua\":\"SM-G800F\"}],\"dpi\":326.8,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G906S/*\"},{\"ua\":\"SM-G906S\"}],\"dpi\":[562.7,572.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9300/*\"},{\"ua\":\"GT-I9300\"}],\"dpi\":[306.7,304.8],\"bw\":5,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-T535/*\"},{\"ua\":\"SM-T535\"}],\"dpi\":[142.6,136.4],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N920C/*\"},{\"ua\":\"SM-N920C\"}],\"dpi\":[515.1,518.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N920P/*\"},{\"ua\":\"SM-N920P\"}],\"dpi\":[386.3655,390.144],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N920W8/*\"},{\"ua\":\"SM-N920W8\"}],\"dpi\":[515.1,518.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9300I/*\"},{\"ua\":\"GT-I9300I\"}],\"dpi\":[304.8,305.8],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-I9195/*\"},{\"ua\":\"GT-I9195\"}],\"dpi\":[249.4,256.7],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SPH-L520/*\"},{\"ua\":\"SPH-L520\"}],\"dpi\":[249.4,255.9],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SAMSUNG-SGH-I717/*\"},{\"ua\":\"SAMSUNG-SGH-I717\"}],\"dpi\":285.8,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SPH-D710/*\"},{\"ua\":\"SPH-D710\"}],\"dpi\":[217.7,204.2],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/GT-N7100/*\"},{\"ua\":\"GT-N7100\"}],\"dpi\":265.1,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SCH-I605/*\"},{\"ua\":\"SCH-I605\"}],\"dpi\":265.1,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/Galaxy Nexus/*\"},{\"ua\":\"Galaxy Nexus\"}],\"dpi\":[315.3,314.2],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N910H/*\"},{\"ua\":\"SM-N910H\"}],\"dpi\":[515.1,518],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-N910C/*\"},{\"ua\":\"SM-N910C\"}],\"dpi\":[515.2,520.2],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G130M/*\"},{\"ua\":\"SM-G130M\"}],\"dpi\":[165.9,164.8],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G928I/*\"},{\"ua\":\"SM-G928I\"}],\"dpi\":[515.1,518.4],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G920F/*\"},{\"ua\":\"SM-G920F\"}],\"dpi\":580.6,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G920P/*\"},{\"ua\":\"SM-G920P\"}],\"dpi\":[522.5,577],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G925F/*\"},{\"ua\":\"SM-G925F\"}],\"dpi\":580.6,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G925V/*\"},{\"ua\":\"SM-G925V\"}],\"dpi\":[522.5,576.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G930F/*\"},{\"ua\":\"SM-G930F\"}],\"dpi\":576.6,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G935F/*\"},{\"ua\":\"SM-G935F\"}],\"dpi\":533,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G950F/*\"},{\"ua\":\"SM-G950F\"}],\"dpi\":[562.707,565.293],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G955U/*\"},{\"ua\":\"SM-G955U\"}],\"dpi\":[522.514,525.762],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"samsung/*/SM-G955F/*\"},{\"ua\":\"SM-G955F\"}],\"dpi\":[522.514,525.762],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Sony/*/C6903/*\"},{\"ua\":\"C6903\"}],\"dpi\":[442.5,443.3],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Sony/*/D6653/*\"},{\"ua\":\"D6653\"}],\"dpi\":[428.6,427.6],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Sony/*/E6653/*\"},{\"ua\":\"E6653\"}],\"dpi\":[428.6,425.7],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Sony/*/E6853/*\"},{\"ua\":\"E6853\"}],\"dpi\":[403.4,401.9],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Sony/*/SGP321/*\"},{\"ua\":\"SGP321\"}],\"dpi\":[224.7,224.1],\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"TCT/*/ALCATEL ONE TOUCH Fierce/*\"},{\"ua\":\"ALCATEL ONE TOUCH Fierce\"}],\"dpi\":[240,247.5],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"THL/*/thl 5000/*\"},{\"ua\":\"thl 5000\"}],\"dpi\":[480,443.3],\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"Fly/*/IQ4412/*\"},{\"ua\":\"IQ4412\"}],\"dpi\":307.9,\"bw\":3,\"ac\":1000},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"ZTE/*/ZTE Blade L2/*\"},{\"ua\":\"ZTE Blade L2\"}],\"dpi\":240,\"bw\":3,\"ac\":500},{\"type\":\"android\",\"rules\":[{\"mdmh\":\"BENEVE/*/VR518/*\"},{\"ua\":\"VR518\"}],\"dpi\":480,\"bw\":3,\"ac\":500},{\"type\":\"ios\",\"rules\":[{\"res\":[640,960]}],\"dpi\":[325.1,328.4],\"bw\":4,\"ac\":1000},{\"type\":\"ios\",\"rules\":[{\"res\":[640,1136]}],\"dpi\":[317.1,320.2],\"bw\":3,\"ac\":1000},{\"type\":\"ios\",\"rules\":[{\"res\":[750,1334]}],\"dpi\":326.4,\"bw\":4,\"ac\":1000},{\"type\":\"ios\",\"rules\":[{\"res\":[1242,2208]}],\"dpi\":[453.6,458.4],\"bw\":4,\"ac\":1000},{\"type\":\"ios\",\"rules\":[{\"res\":[1125,2001]}],\"dpi\":[410.9,415.4],\"bw\":4,\"ac\":1000},{\"type\":\"ios\",\"rules\":[{\"res\":[1125,2436]}],\"dpi\":458,\"bw\":4,\"ac\":1000}];var DPDB_CACHE={format:format,last_updated:last_updated,devices:devices};function Dpdb(url,onDeviceParamsUpdated){this.dpdb=DPDB_CACHE;this.recalculateDeviceParams_();if(url){this.onDeviceParamsUpdated=onDeviceParamsUpdated;var xhr=new XMLHttpRequest();var obj=this;xhr.open('GET',url,true);xhr.addEventListener('load',function(){obj.loading=false;if(xhr.status>=200&&xhr.status<=299){obj.dpdb=JSON.parse(xhr.response);obj.recalculateDeviceParams_();}else{console.error('Error loading online DPDB!');}});xhr.send();}}Dpdb.prototype.getDeviceParams=function(){return this.deviceParams;};Dpdb.prototype.recalculateDeviceParams_=function(){var newDeviceParams=this.calcDeviceParams_();if(newDeviceParams){this.deviceParams=newDeviceParams;if(this.onDeviceParamsUpdated){this.onDeviceParamsUpdated(this.deviceParams);}}else{console.error('Failed to recalculate device parameters.');}};Dpdb.prototype.calcDeviceParams_=function(){var db=this.dpdb;if(!db){console.error('DPDB not available.');return null;}if(db.format!=1){console.error('DPDB has unexpected format version.');return null;}if(!db.devices||!db.devices.length){console.error('DPDB does not have a devices section.');return null;}var userAgent=navigator.userAgent||navigator.vendor||window.opera;var width=getScreenWidth();var height=getScreenHeight();if(!db.devices){console.error('DPDB has no devices section.');return null;}for(var i=0;i<db.devices.length;i++){var device=db.devices[i];if(!device.rules){console.warn('Device['+i+'] has no rules section.');continue;}if(device.type!='ios'&&device.type!='android'){console.warn('Device['+i+'] has invalid type.');continue;}if(isIOS()!=(device.type=='ios'))continue;var matched=false;for(var j=0;j<device.rules.length;j++){var rule=device.rules[j];if(this.ruleMatches_(rule,userAgent,width,height)){matched=true;break;}}if(!matched)continue;var xdpi=device.dpi[0]||device.dpi;var ydpi=device.dpi[1]||device.dpi;return new DeviceParams({xdpi:xdpi,ydpi:ydpi,bevelMm:device.bw});}console.warn('No DPDB device match.');return null;};Dpdb.prototype.ruleMatches_=function(rule,ua,screenWidth,screenHeight){if(!rule.ua&&!rule.res)return false;if(rule.ua&&rule.ua.substring(0,2)==='SM')rule.ua=rule.ua.substring(0,7);if(rule.ua&&ua.indexOf(rule.ua)<0)return false;if(rule.res){if(!rule.res[0]||!rule.res[1])return false;var resX=rule.res[0];var resY=rule.res[1];if(Math.min(screenWidth,screenHeight)!=Math.min(resX,resY)||Math.max(screenWidth,screenHeight)!=Math.max(resX,resY)){return false;}}return true;};function DeviceParams(params){this.xdpi=params.xdpi;this.ydpi=params.ydpi;this.bevelMm=params.bevelMm;}function SensorSample(sample,timestampS){this.set(sample,timestampS);}SensorSample.prototype.set=function(sample,timestampS){this.sample=sample;this.timestampS=timestampS;};SensorSample.prototype.copy=function(sensorSample){this.set(sensorSample.sample,sensorSample.timestampS);};function ComplementaryFilter(kFilter,isDebug){this.kFilter=kFilter;this.isDebug=isDebug;this.currentAccelMeasurement=new SensorSample();this.currentGyroMeasurement=new SensorSample();this.previousGyroMeasurement=new SensorSample();if(isIOS()){this.filterQ=new Quaternion(-1,0,0,1);}else{this.filterQ=new Quaternion(1,0,0,1);}this.previousFilterQ=new Quaternion();this.previousFilterQ.copy(this.filterQ);this.accelQ=new Quaternion();this.isOrientationInitialized=false;this.estimatedGravity=new Vector3();this.measuredGravity=new Vector3();this.gyroIntegralQ=new Quaternion();}ComplementaryFilter.prototype.addAccelMeasurement=function(vector,timestampS){this.currentAccelMeasurement.set(vector,timestampS);};ComplementaryFilter.prototype.addGyroMeasurement=function(vector,timestampS){this.currentGyroMeasurement.set(vector,timestampS);var deltaT=timestampS-this.previousGyroMeasurement.timestampS;if(isTimestampDeltaValid(deltaT)){this.run_();}this.previousGyroMeasurement.copy(this.currentGyroMeasurement);};ComplementaryFilter.prototype.run_=function(){if(!this.isOrientationInitialized){this.accelQ=this.accelToQuaternion_(this.currentAccelMeasurement.sample);this.previousFilterQ.copy(this.accelQ);this.isOrientationInitialized=true;return;}var deltaT=this.currentGyroMeasurement.timestampS-this.previousGyroMeasurement.timestampS;var gyroDeltaQ=this.gyroToQuaternionDelta_(this.currentGyroMeasurement.sample,deltaT);this.gyroIntegralQ.multiply(gyroDeltaQ);this.filterQ.copy(this.previousFilterQ);this.filterQ.multiply(gyroDeltaQ);var invFilterQ=new Quaternion();invFilterQ.copy(this.filterQ);invFilterQ.inverse();this.estimatedGravity.set(0,0,-1);this.estimatedGravity.applyQuaternion(invFilterQ);this.estimatedGravity.normalize();this.measuredGravity.copy(this.currentAccelMeasurement.sample);this.measuredGravity.normalize();var deltaQ=new Quaternion();deltaQ.setFromUnitVectors(this.estimatedGravity,this.measuredGravity);deltaQ.inverse();if(this.isDebug){console.log('Delta: %d deg, G_est: (%s, %s, %s), G_meas: (%s, %s, %s)',radToDeg*getQuaternionAngle(deltaQ),this.estimatedGravity.x.toFixed(1),this.estimatedGravity.y.toFixed(1),this.estimatedGravity.z.toFixed(1),this.measuredGravity.x.toFixed(1),this.measuredGravity.y.toFixed(1),this.measuredGravity.z.toFixed(1));}var targetQ=new Quaternion();targetQ.copy(this.filterQ);targetQ.multiply(deltaQ);this.filterQ.slerp(targetQ,1-this.kFilter);this.previousFilterQ.copy(this.filterQ);};ComplementaryFilter.prototype.getOrientation=function(){return this.filterQ;};ComplementaryFilter.prototype.accelToQuaternion_=function(accel){var normAccel=new Vector3();normAccel.copy(accel);normAccel.normalize();var quat=new Quaternion();quat.setFromUnitVectors(new Vector3(0,0,-1),normAccel);quat.inverse();return quat;};ComplementaryFilter.prototype.gyroToQuaternionDelta_=function(gyro,dt){var quat=new Quaternion();var axis=new Vector3();axis.copy(gyro);axis.normalize();quat.setFromAxisAngle(axis,gyro.length()*dt);return quat;};function PosePredictor(predictionTimeS,isDebug){this.predictionTimeS=predictionTimeS;this.isDebug=isDebug;this.previousQ=new Quaternion();this.previousTimestampS=null;this.deltaQ=new Quaternion();this.outQ=new Quaternion();}PosePredictor.prototype.getPrediction=function(currentQ,gyro,timestampS){if(!this.previousTimestampS){this.previousQ.copy(currentQ);this.previousTimestampS=timestampS;return currentQ;}var axis=new Vector3();axis.copy(gyro);axis.normalize();var angularSpeed=gyro.length();if(angularSpeed<degToRad*20){if(this.isDebug){console.log('Moving slowly, at %s deg/s: no prediction',(radToDeg*angularSpeed).toFixed(1));}this.outQ.copy(currentQ);this.previousQ.copy(currentQ);return this.outQ;}var predictAngle=angularSpeed*this.predictionTimeS;this.deltaQ.setFromAxisAngle(axis,predictAngle);this.outQ.copy(this.previousQ);this.outQ.multiply(this.deltaQ);this.previousQ.copy(currentQ);this.previousTimestampS=timestampS;return this.outQ;};function FusionPoseSensor(kFilter,predictionTime,yawOnly,isDebug){this.yawOnly=yawOnly;this.accelerometer=new Vector3();this.gyroscope=new Vector3();this.filter=new ComplementaryFilter(kFilter,isDebug);this.posePredictor=new PosePredictor(predictionTime,isDebug);this.isFirefoxAndroid=isFirefoxAndroid();this.isIOS=isIOS();var chromeVersion=getChromeVersion();this.isDeviceMotionInRadians=!this.isIOS&&chromeVersion&&chromeVersion<66;this.isWithoutDeviceMotion=isChromeWithoutDeviceMotion();this.filterToWorldQ=new Quaternion();if(isIOS()){this.filterToWorldQ.setFromAxisAngle(new Vector3(1,0,0),Math.PI/2);}else{this.filterToWorldQ.setFromAxisAngle(new Vector3(1,0,0),-Math.PI/2);}this.inverseWorldToScreenQ=new Quaternion();this.worldToScreenQ=new Quaternion();this.originalPoseAdjustQ=new Quaternion();this.originalPoseAdjustQ.setFromAxisAngle(new Vector3(0,0,1),-window.orientation*Math.PI/180);this.setScreenTransform_();if(isLandscapeMode()){this.filterToWorldQ.multiply(this.inverseWorldToScreenQ);}this.resetQ=new Quaternion();this.orientationOut_=new Float32Array(4);this.start();}FusionPoseSensor.prototype.getPosition=function(){return null;};FusionPoseSensor.prototype.getOrientation=function(){var orientation=void 0;if(this.isWithoutDeviceMotion&&this._deviceOrientationQ){this.deviceOrientationFixQ=this.deviceOrientationFixQ||function(){var z=new Quaternion().setFromAxisAngle(new Vector3(0,0,-1),0);var y=new Quaternion();if(window.orientation===-90){y.setFromAxisAngle(new Vector3(0,1,0),Math.PI/-2);}else{y.setFromAxisAngle(new Vector3(0,1,0),Math.PI/2);}return z.multiply(y);}();this.deviceOrientationFilterToWorldQ=this.deviceOrientationFilterToWorldQ||function(){var q=new Quaternion();q.setFromAxisAngle(new Vector3(1,0,0),-Math.PI/2);return q;}();orientation=this._deviceOrientationQ;var out=new Quaternion();out.copy(orientation);out.multiply(this.deviceOrientationFilterToWorldQ);out.multiply(this.resetQ);out.multiply(this.worldToScreenQ);out.multiplyQuaternions(this.deviceOrientationFixQ,out);if(this.yawOnly){out.x=0;out.z=0;out.normalize();}this.orientationOut_[0]=out.x;this.orientationOut_[1]=out.y;this.orientationOut_[2]=out.z;this.orientationOut_[3]=out.w;return this.orientationOut_;}else{var filterOrientation=this.filter.getOrientation();orientation=this.posePredictor.getPrediction(filterOrientation,this.gyroscope,this.previousTimestampS);}var out=new Quaternion();out.copy(this.filterToWorldQ);out.multiply(this.resetQ);out.multiply(orientation);out.multiply(this.worldToScreenQ);if(this.yawOnly){out.x=0;out.z=0;out.normalize();}this.orientationOut_[0]=out.x;this.orientationOut_[1]=out.y;this.orientationOut_[2]=out.z;this.orientationOut_[3]=out.w;return this.orientationOut_;};FusionPoseSensor.prototype.resetPose=function(){this.resetQ.copy(this.filter.getOrientation());this.resetQ.x=0;this.resetQ.y=0;this.resetQ.z*=-1;this.resetQ.normalize();if(isLandscapeMode()){this.resetQ.multiply(this.inverseWorldToScreenQ);}this.resetQ.multiply(this.originalPoseAdjustQ);};FusionPoseSensor.prototype.onDeviceOrientation_=function(e){this._deviceOrientationQ=this._deviceOrientationQ||new Quaternion();var alpha=e.alpha,beta=e.beta,gamma=e.gamma;alpha=(alpha||0)*Math.PI/180;beta=(beta||0)*Math.PI/180;gamma=(gamma||0)*Math.PI/180;this._deviceOrientationQ.setFromEulerYXZ(beta,alpha,-gamma);};FusionPoseSensor.prototype.onDeviceMotion_=function(deviceMotion){this.updateDeviceMotion_(deviceMotion);};FusionPoseSensor.prototype.updateDeviceMotion_=function(deviceMotion){var accGravity=deviceMotion.accelerationIncludingGravity;var rotRate=deviceMotion.rotationRate;var timestampS=deviceMotion.timeStamp/1000;var deltaS=timestampS-this.previousTimestampS;if(deltaS<0){warnOnce('fusion-pose-sensor:invalid:non-monotonic','Invalid timestamps detected: non-monotonic timestamp from devicemotion');this.previousTimestampS=timestampS;return;}else if(deltaS<=MIN_TIMESTEP||deltaS>MAX_TIMESTEP){warnOnce('fusion-pose-sensor:invalid:outside-threshold','Invalid timestamps detected: Timestamp from devicemotion outside expected range.');this.previousTimestampS=timestampS;return;}this.accelerometer.set(-accGravity.x,-accGravity.y,-accGravity.z);if(isR7()){this.gyroscope.set(-rotRate.beta,rotRate.alpha,rotRate.gamma);}else{this.gyroscope.set(rotRate.alpha,rotRate.beta,rotRate.gamma);}if(!this.isDeviceMotionInRadians){this.gyroscope.multiplyScalar(Math.PI/180);}this.filter.addAccelMeasurement(this.accelerometer,timestampS);this.filter.addGyroMeasurement(this.gyroscope,timestampS);this.previousTimestampS=timestampS;};FusionPoseSensor.prototype.onOrientationChange_=function(screenOrientation){this.setScreenTransform_();};FusionPoseSensor.prototype.onMessage_=function(event){var message=event.data;if(!message||!message.type){return;}var type=message.type.toLowerCase();if(type!=='devicemotion'){return;}this.updateDeviceMotion_(message.deviceMotionEvent);};FusionPoseSensor.prototype.setScreenTransform_=function(){this.worldToScreenQ.set(0,0,0,1);switch(window.orientation){case 0:break;case 90:this.worldToScreenQ.setFromAxisAngle(new Vector3(0,0,1),-Math.PI/2);break;case-90:this.worldToScreenQ.setFromAxisAngle(new Vector3(0,0,1),Math.PI/2);break;case 180:break;}this.inverseWorldToScreenQ.copy(this.worldToScreenQ);this.inverseWorldToScreenQ.inverse();};FusionPoseSensor.prototype.start=function(){this.onDeviceMotionCallback_=this.onDeviceMotion_.bind(this);this.onOrientationChangeCallback_=this.onOrientationChange_.bind(this);this.onMessageCallback_=this.onMessage_.bind(this);this.onDeviceOrientationCallback_=this.onDeviceOrientation_.bind(this);if(isIOS()&&isInsideCrossOriginIFrame()){window.addEventListener('message',this.onMessageCallback_);}window.addEventListener('orientationchange',this.onOrientationChangeCallback_);if(this.isWithoutDeviceMotion){window.addEventListener('deviceorientation',this.onDeviceOrientationCallback_);}else{window.addEventListener('devicemotion',this.onDeviceMotionCallback_);}};FusionPoseSensor.prototype.stop=function(){window.removeEventListener('devicemotion',this.onDeviceMotionCallback_);window.removeEventListener('deviceorientation',this.onDeviceOrientationCallback_);window.removeEventListener('orientationchange',this.onOrientationChangeCallback_);window.removeEventListener('message',this.onMessageCallback_);};var SENSOR_FREQUENCY=60;var X_AXIS=new Vector3(1,0,0);var Z_AXIS=new Vector3(0,0,1);var SENSOR_TO_VR=new Quaternion();SENSOR_TO_VR.setFromAxisAngle(X_AXIS,-Math.PI/2);SENSOR_TO_VR.multiply(new Quaternion().setFromAxisAngle(Z_AXIS,Math.PI/2));var PoseSensor=function(){function PoseSensor(config){classCallCheck(this,PoseSensor);this.config=config;this.sensor=null;this.fusionSensor=null;this._out=new Float32Array(4);this.api=null;this.errors=[];this._sensorQ=new Quaternion();this._outQ=new Quaternion();this._onSensorRead=this._onSensorRead.bind(this);this._onSensorError=this._onSensorError.bind(this);this.init();}createClass(PoseSensor,[{key:'init',value:function init(){var sensor=null;try{sensor=new RelativeOrientationSensor({frequency:SENSOR_FREQUENCY,referenceFrame:'screen'});sensor.addEventListener('error',this._onSensorError);}catch(error){this.errors.push(error);if(error.name==='SecurityError'){console.error('Cannot construct sensors due to the Feature Policy');console.warn('Attempting to fall back using \"devicemotion\"; however this will '+'fail in the future without correct permissions.');this.useDeviceMotion();}else if(error.name==='ReferenceError'){this.useDeviceMotion();}else{console.error(error);}}if(sensor){this.api='sensor';this.sensor=sensor;this.sensor.addEventListener('reading',this._onSensorRead);this.sensor.start();}}},{key:'useDeviceMotion',value:function useDeviceMotion(){this.api='devicemotion';this.fusionSensor=new FusionPoseSensor(this.config.K_FILTER,this.config.PREDICTION_TIME_S,this.config.YAW_ONLY,this.config.DEBUG);if(this.sensor){this.sensor.removeEventListener('reading',this._onSensorRead);this.sensor.removeEventListener('error',this._onSensorError);this.sensor=null;}}},{key:'getOrientation',value:function getOrientation(){if(this.fusionSensor){return this.fusionSensor.getOrientation();}if(!this.sensor||!this.sensor.quaternion){this._out[0]=this._out[1]=this._out[2]=0;this._out[3]=1;return this._out;}var q=this.sensor.quaternion;this._sensorQ.set(q[0],q[1],q[2],q[3]);var out=this._outQ;out.copy(SENSOR_TO_VR);out.multiply(this._sensorQ);if(this.config.YAW_ONLY){out.x=out.z=0;out.normalize();}this._out[0]=out.x;this._out[1]=out.y;this._out[2]=out.z;this._out[3]=out.w;return this._out;}},{key:'_onSensorError',value:function _onSensorError(event){this.errors.push(event.error);if(event.error.name==='NotAllowedError'){console.error('Permission to access sensor was denied');}else if(event.error.name==='NotReadableError'){console.error('Sensor could not be read');}else{console.error(event.error);}this.useDeviceMotion();}},{key:'_onSensorRead',value:function _onSensorRead(){}}]);return PoseSensor;}();var rotateInstructionsAsset=\"<svg width='198' height='240' viewBox='0 0 198 240' xmlns='http://www.w3.org/2000/svg'><g fill='none' fill-rule='evenodd'><path d='M149.625 109.527l6.737 3.891v.886c0 .177.013.36.038.549.01.081.02.162.027.242.14 1.415.974 2.998 2.105 3.999l5.72 5.062.081-.09s4.382-2.53 5.235-3.024l25.97 14.993v54.001c0 .771-.386 1.217-.948 1.217-.233 0-.495-.076-.772-.236l-23.967-13.838-.014.024-27.322 15.775-.85-1.323c-4.731-1.529-9.748-2.74-14.951-3.61a.27.27 0 0 0-.007.024l-5.067 16.961-7.891 4.556-.037-.063v27.59c0 .772-.386 1.217-.948 1.217-.232 0-.495-.076-.772-.236l-42.473-24.522c-.95-.549-1.72-1.877-1.72-2.967v-1.035l-.021.047a5.111 5.111 0 0 0-1.816-.399 5.682 5.682 0 0 0-.546.001 13.724 13.724 0 0 1-1.918-.041c-1.655-.153-3.2-.6-4.404-1.296l-46.576-26.89.005.012-10.278-18.75c-1.001-1.827-.241-4.216 1.698-5.336l56.011-32.345a4.194 4.194 0 0 1 2.099-.572c1.326 0 2.572.659 3.227 1.853l.005-.003.227.413-.006.004a9.63 9.63 0 0 0 1.477 2.018l.277.27c1.914 1.85 4.468 2.801 7.113 2.801 1.949 0 3.948-.517 5.775-1.572.013 0 7.319-4.219 7.319-4.219a4.194 4.194 0 0 1 2.099-.572c1.326 0 2.572.658 3.226 1.853l3.25 5.928.022-.018 6.785 3.917-.105-.182 46.881-26.965m0-1.635c-.282 0-.563.073-.815.218l-46.169 26.556-5.41-3.124-3.005-5.481c-.913-1.667-2.699-2.702-4.66-2.703-1.011 0-2.02.274-2.917.792a3825 3825 0 0 1-7.275 4.195l-.044.024a9.937 9.937 0 0 1-4.957 1.353c-2.292 0-4.414-.832-5.976-2.342l-.252-.245a7.992 7.992 0 0 1-1.139-1.534 1.379 1.379 0 0 0-.06-.122l-.227-.414a1.718 1.718 0 0 0-.095-.154c-.938-1.574-2.673-2.545-4.571-2.545-1.011 0-2.02.274-2.917.792L3.125 155.502c-2.699 1.559-3.738 4.94-2.314 7.538l10.278 18.75c.177.323.448.563.761.704l46.426 26.804c1.403.81 3.157 1.332 5.072 1.508a15.661 15.661 0 0 0 2.146.046 4.766 4.766 0 0 1 .396 0c.096.004.19.011.283.022.109 1.593 1.159 3.323 2.529 4.114l42.472 24.522c.524.302 1.058.455 1.59.455 1.497 0 2.583-1.2 2.583-2.852v-26.562l7.111-4.105a1.64 1.64 0 0 0 .749-.948l4.658-15.593c4.414.797 8.692 1.848 12.742 3.128l.533.829a1.634 1.634 0 0 0 2.193.531l26.532-15.317L193 192.433c.523.302 1.058.455 1.59.455 1.497 0 2.583-1.199 2.583-2.852v-54.001c0-.584-.312-1.124-.818-1.416l-25.97-14.993a1.633 1.633 0 0 0-1.636.001c-.606.351-2.993 1.73-4.325 2.498l-4.809-4.255c-.819-.725-1.461-1.933-1.561-2.936a7.776 7.776 0 0 0-.033-.294 2.487 2.487 0 0 1-.023-.336v-.886c0-.584-.312-1.123-.817-1.416l-6.739-3.891a1.633 1.633 0 0 0-.817-.219' fill='#455A64'/><path d='M96.027 132.636l46.576 26.891c1.204.695 1.979 1.587 2.242 2.541l-.01.007-81.374 46.982h-.001c-1.654-.152-3.199-.6-4.403-1.295l-46.576-26.891 83.546-48.235' fill='#FAFAFA'/><path d='M63.461 209.174c-.008 0-.015 0-.022-.002-1.693-.156-3.228-.609-4.441-1.309l-46.576-26.89a.118.118 0 0 1 0-.203l83.546-48.235a.117.117 0 0 1 .117 0l46.576 26.891c1.227.708 2.021 1.612 2.296 2.611a.116.116 0 0 1-.042.124l-.021.016-81.375 46.981a.11.11 0 0 1-.058.016zm-50.747-28.303l46.401 26.79c1.178.68 2.671 1.121 4.32 1.276l81.272-46.922c-.279-.907-1.025-1.73-2.163-2.387l-46.517-26.857-83.313 48.1z' fill='#607D8B'/><path d='M148.327 165.471a5.85 5.85 0 0 1-.546.001c-1.894-.083-3.302-1.038-3.145-2.132a2.693 2.693 0 0 0-.072-1.105l-81.103 46.822c.628.058 1.272.073 1.918.042.182-.009.364-.009.546-.001 1.894.083 3.302 1.038 3.145 2.132l79.257-45.759' fill='#FFF'/><path d='M69.07 211.347a.118.118 0 0 1-.115-.134c.045-.317-.057-.637-.297-.925-.505-.61-1.555-1.022-2.738-1.074a5.966 5.966 0 0 0-.535.001 14.03 14.03 0 0 1-1.935-.041.117.117 0 0 1-.103-.092.116.116 0 0 1 .055-.126l81.104-46.822a.117.117 0 0 1 .171.07c.104.381.129.768.074 1.153-.045.316.057.637.296.925.506.61 1.555 1.021 2.739 1.073.178.008.357.008.535-.001a.117.117 0 0 1 .064.218l-79.256 45.759a.114.114 0 0 1-.059.016zm-3.405-2.372c.089 0 .177.002.265.006 1.266.056 2.353.488 2.908 1.158.227.274.35.575.36.882l78.685-45.429c-.036 0-.072-.001-.107-.003-1.267-.056-2.354-.489-2.909-1.158-.282-.34-.402-.724-.347-1.107a2.604 2.604 0 0 0-.032-.91L63.846 208.97a13.91 13.91 0 0 0 1.528.012c.097-.005.194-.007.291-.007z' fill='#607D8B'/><path d='M2.208 162.134c-1.001-1.827-.241-4.217 1.698-5.337l56.011-32.344c1.939-1.12 4.324-.546 5.326 1.281l.232.41a9.344 9.344 0 0 0 1.47 2.021l.278.27c3.325 3.214 8.583 3.716 12.888 1.23l7.319-4.22c1.94-1.119 4.324-.546 5.325 1.282l3.25 5.928-83.519 48.229-10.278-18.75z' fill='#FAFAFA'/><path d='M12.486 181.001a.112.112 0 0 1-.031-.005.114.114 0 0 1-.071-.056L2.106 162.19c-1.031-1.88-.249-4.345 1.742-5.494l56.01-32.344a4.328 4.328 0 0 1 2.158-.588c1.415 0 2.65.702 3.311 1.882.01.008.018.017.024.028l.227.414a.122.122 0 0 1 .013.038 9.508 9.508 0 0 0 1.439 1.959l.275.266c1.846 1.786 4.344 2.769 7.031 2.769 1.977 0 3.954-.538 5.717-1.557a.148.148 0 0 1 .035-.013l7.284-4.206a4.321 4.321 0 0 1 2.157-.588c1.427 0 2.672.716 3.329 1.914l3.249 5.929a.116.116 0 0 1-.044.157l-83.518 48.229a.116.116 0 0 1-.059.016zm49.53-57.004c-.704 0-1.41.193-2.041.557l-56.01 32.345c-1.882 1.086-2.624 3.409-1.655 5.179l10.221 18.645 83.317-48.112-3.195-5.829c-.615-1.122-1.783-1.792-3.124-1.792a4.08 4.08 0 0 0-2.04.557l-7.317 4.225a.148.148 0 0 1-.035.013 11.7 11.7 0 0 1-5.801 1.569c-2.748 0-5.303-1.007-7.194-2.835l-.278-.27a9.716 9.716 0 0 1-1.497-2.046.096.096 0 0 1-.013-.037l-.191-.347a.11.11 0 0 1-.023-.029c-.615-1.123-1.783-1.793-3.124-1.793z' fill='#607D8B'/><path d='M42.434 155.808c-2.51-.001-4.697-1.258-5.852-3.365-1.811-3.304-.438-7.634 3.059-9.654l12.291-7.098a7.599 7.599 0 0 1 3.789-1.033c2.51 0 4.697 1.258 5.852 3.365 1.811 3.304.439 7.634-3.059 9.654l-12.291 7.098a7.606 7.606 0 0 1-3.789 1.033zm13.287-20.683a7.128 7.128 0 0 0-3.555.971l-12.291 7.098c-3.279 1.893-4.573 5.942-2.883 9.024 1.071 1.955 3.106 3.122 5.442 3.122a7.13 7.13 0 0 0 3.556-.97l12.291-7.098c3.279-1.893 4.572-5.942 2.883-9.024-1.072-1.955-3.106-3.123-5.443-3.123z' fill='#607D8B'/><path d='M149.588 109.407l6.737 3.89v.887c0 .176.013.36.037.549.011.081.02.161.028.242.14 1.415.973 2.998 2.105 3.999l7.396 6.545c.177.156.358.295.541.415 1.579 1.04 2.95.466 3.062-1.282.049-.784.057-1.595.023-2.429l-.003-.16v-1.151l25.987 15.003v54c0 1.09-.77 1.53-1.72.982l-42.473-24.523c-.95-.548-1.72-1.877-1.72-2.966v-34.033' fill='#FAFAFA'/><path d='M194.553 191.25c-.257 0-.54-.085-.831-.253l-42.472-24.521c-.981-.567-1.779-1.943-1.779-3.068v-34.033h.234v34.033c0 1.051.745 2.336 1.661 2.866l42.473 24.521c.424.245.816.288 1.103.122.285-.164.442-.52.442-1.002v-53.933l-25.753-14.868.003 1.106c.034.832.026 1.654-.024 2.439-.054.844-.396 1.464-.963 1.746-.619.309-1.45.173-2.28-.373a5.023 5.023 0 0 1-.553-.426l-7.397-6.544c-1.158-1.026-1.999-2.625-2.143-4.076a9.624 9.624 0 0 0-.027-.238 4.241 4.241 0 0 1-.038-.564v-.82l-6.68-3.856.117-.202 6.738 3.89.058.034v.954c0 .171.012.351.036.533.011.083.021.165.029.246.138 1.395.948 2.935 2.065 3.923l7.397 6.545c.173.153.35.289.527.406.758.499 1.504.63 2.047.359.49-.243.786-.795.834-1.551.05-.778.057-1.591.024-2.417l-.004-.163v-1.355l.175.1 25.987 15.004.059.033v54.068c0 .569-.198.996-.559 1.204a1.002 1.002 0 0 1-.506.131' fill='#607D8B'/><path d='M145.685 163.161l24.115 13.922-25.978 14.998-1.462-.307c-6.534-2.17-13.628-3.728-21.019-4.616-4.365-.524-8.663 1.096-9.598 3.62a2.746 2.746 0 0 0-.011 1.928c1.538 4.267 4.236 8.363 7.995 12.135l.532.845-25.977 14.997-24.115-13.922 75.518-43.6' fill='#FFF'/><path d='M94.282 220.818l-.059-.033-24.29-14.024.175-.101 75.577-43.634.058.033 24.29 14.024-26.191 15.122-.045-.01-1.461-.307c-6.549-2.174-13.613-3.725-21.009-4.614a13.744 13.744 0 0 0-1.638-.097c-3.758 0-7.054 1.531-7.837 3.642a2.62 2.62 0 0 0-.01 1.848c1.535 4.258 4.216 8.326 7.968 12.091l.016.021.526.835.006.01.064.102-.105.061-25.977 14.998-.058.033zm-23.881-14.057l23.881 13.788 24.802-14.32c.546-.315.846-.489 1.017-.575l-.466-.74c-3.771-3.787-6.467-7.881-8.013-12.168a2.851 2.851 0 0 1 .011-2.008c.815-2.199 4.203-3.795 8.056-3.795.557 0 1.117.033 1.666.099 7.412.891 14.491 2.445 21.041 4.621.836.175 1.215.254 1.39.304l25.78-14.884-23.881-13.788-75.284 43.466z' fill='#607D8B'/><path d='M167.23 125.979v50.871l-27.321 15.773-6.461-14.167c-.91-1.996-3.428-1.738-5.624.574a10.238 10.238 0 0 0-2.33 4.018l-6.46 21.628-27.322 15.774v-50.871l75.518-43.6' fill='#FFF'/><path d='M91.712 220.567a.127.127 0 0 1-.059-.016.118.118 0 0 1-.058-.101v-50.871c0-.042.023-.08.058-.101l75.519-43.6a.117.117 0 0 1 .175.101v50.871c0 .041-.023.08-.059.1l-27.321 15.775a.118.118 0 0 1-.094.01.12.12 0 0 1-.071-.063l-6.46-14.168c-.375-.822-1.062-1.275-1.934-1.275-1.089 0-2.364.686-3.5 1.881a10.206 10.206 0 0 0-2.302 3.972l-6.46 21.627a.118.118 0 0 1-.054.068L91.77 220.551a.12.12 0 0 1-.058.016zm.117-50.92v50.601l27.106-15.65 6.447-21.583a10.286 10.286 0 0 1 2.357-4.065c1.18-1.242 2.517-1.954 3.669-1.954.969 0 1.731.501 2.146 1.411l6.407 14.051 27.152-15.676v-50.601l-75.284 43.466z' fill='#607D8B'/><path d='M168.543 126.213v50.87l-27.322 15.774-6.46-14.168c-.91-1.995-3.428-1.738-5.624.574a10.248 10.248 0 0 0-2.33 4.019l-6.461 21.627-27.321 15.774v-50.87l75.518-43.6' fill='#FFF'/><path d='M93.025 220.8a.123.123 0 0 1-.059-.015.12.12 0 0 1-.058-.101v-50.871c0-.042.023-.08.058-.101l75.518-43.6a.112.112 0 0 1 .117 0c.036.02.059.059.059.1v50.871a.116.116 0 0 1-.059.101l-27.321 15.774a.111.111 0 0 1-.094.01.115.115 0 0 1-.071-.062l-6.46-14.168c-.375-.823-1.062-1.275-1.935-1.275-1.088 0-2.363.685-3.499 1.881a10.19 10.19 0 0 0-2.302 3.971l-6.461 21.628a.108.108 0 0 1-.053.067l-27.322 15.775a.12.12 0 0 1-.058.015zm.117-50.919v50.6l27.106-15.649 6.447-21.584a10.293 10.293 0 0 1 2.357-4.065c1.179-1.241 2.516-1.954 3.668-1.954.969 0 1.732.502 2.147 1.412l6.407 14.051 27.152-15.676v-50.601l-75.284 43.466z' fill='#607D8B'/><path d='M169.8 177.083l-27.322 15.774-6.46-14.168c-.91-1.995-3.428-1.738-5.625.574a10.246 10.246 0 0 0-2.329 4.019l-6.461 21.627-27.321 15.774v-50.87l75.518-43.6v50.87z' fill='#FAFAFA'/><path d='M94.282 220.917a.234.234 0 0 1-.234-.233v-50.871c0-.083.045-.161.117-.202l75.518-43.601a.234.234 0 1 1 .35.202v50.871a.233.233 0 0 1-.116.202l-27.322 15.775a.232.232 0 0 1-.329-.106l-6.461-14.168c-.36-.789-.992-1.206-1.828-1.206-1.056 0-2.301.672-3.415 1.844a10.099 10.099 0 0 0-2.275 3.924l-6.46 21.628a.235.235 0 0 1-.107.136l-27.322 15.774a.23.23 0 0 1-.116.031zm.233-50.969v50.331l26.891-15.525 6.434-21.539a10.41 10.41 0 0 1 2.384-4.112c1.201-1.265 2.569-1.991 3.753-1.991 1.018 0 1.818.526 2.253 1.48l6.354 13.934 26.982-15.578v-50.331l-75.051 43.331z' fill='#607D8B'/><path d='M109.894 199.943c-1.774 0-3.241-.725-4.244-2.12a.224.224 0 0 1 .023-.294.233.233 0 0 1 .301-.023c.78.547 1.705.827 2.75.827 1.323 0 2.754-.439 4.256-1.306 5.311-3.067 9.631-10.518 9.631-16.611 0-1.927-.442-3.56-1.278-4.724a.232.232 0 0 1 .323-.327c1.671 1.172 2.591 3.381 2.591 6.219 0 6.242-4.426 13.863-9.865 17.003-1.574.908-3.084 1.356-4.488 1.356zm-2.969-1.542c.813.651 1.82.877 2.968.877h.001c1.321 0 2.753-.327 4.254-1.194 5.311-3.067 9.632-10.463 9.632-16.556 0-1.979-.463-3.599-1.326-4.761.411 1.035.625 2.275.625 3.635 0 6.243-4.426 13.883-9.865 17.023-1.574.909-3.084 1.317-4.49 1.317-.641 0-1.243-.149-1.799-.341z' fill='#607D8B'/><path d='M113.097 197.23c5.384-3.108 9.748-10.636 9.748-16.814 0-2.051-.483-3.692-1.323-4.86-1.784-1.252-4.374-1.194-7.257.47-5.384 3.108-9.748 10.636-9.748 16.814 0 2.051.483 3.692 1.323 4.86 1.784 1.252 4.374 1.194 7.257-.47' fill='#FAFAFA'/><path d='M108.724 198.614c-1.142 0-2.158-.213-3.019-.817-.021-.014-.04.014-.055-.007-.894-1.244-1.367-2.948-1.367-4.973 0-6.242 4.426-13.864 9.865-17.005 1.574-.908 3.084-1.363 4.49-1.363 1.142 0 2.158.309 3.018.913a.23.23 0 0 1 .056.056c.894 1.244 1.367 2.972 1.367 4.997 0 6.243-4.426 13.783-9.865 16.923-1.574.909-3.084 1.276-4.49 1.276zm-2.718-1.109c.774.532 1.688.776 2.718.776 1.323 0 2.754-.413 4.256-1.28 5.311-3.066 9.631-10.505 9.631-16.598 0-1.909-.434-3.523-1.255-4.685-.774-.533-1.688-.799-2.718-.799-1.323 0-2.755.441-4.256 1.308-5.311 3.066-9.631 10.506-9.631 16.599 0 1.909.434 3.517 1.255 4.679z' fill='#607D8B'/><path d='M149.318 114.262l-9.984 8.878 15.893 11.031 5.589-6.112-11.498-13.797' fill='#FAFAFA'/><path d='M169.676 120.84l-9.748 5.627c-3.642 2.103-9.528 2.113-13.147.024-3.62-2.089-3.601-5.488.041-7.591l9.495-5.608-6.729-3.885-81.836 47.071 45.923 26.514 3.081-1.779c.631-.365.869-.898.618-1.39-2.357-4.632-2.593-9.546-.683-14.262 5.638-13.92 24.509-24.815 48.618-28.07 8.169-1.103 16.68-.967 24.704.394.852.145 1.776.008 2.407-.357l3.081-1.778-25.825-14.91' fill='#FAFAFA'/><path d='M113.675 183.459a.47.47 0 0 1-.233-.062l-45.924-26.515a.468.468 0 0 1 .001-.809l81.836-47.071a.467.467 0 0 1 .466 0l6.729 3.885a.467.467 0 0 1-.467.809l-6.496-3.75-80.9 46.533 44.988 25.973 2.848-1.644c.192-.111.62-.409.435-.773-2.416-4.748-2.658-9.814-.7-14.65 2.806-6.927 8.885-13.242 17.582-18.263 8.657-4.998 19.518-8.489 31.407-10.094 8.198-1.107 16.79-.97 24.844.397.739.125 1.561.007 2.095-.301l2.381-1.374-25.125-14.506a.467.467 0 0 1 .467-.809l25.825 14.91a.467.467 0 0 1 0 .809l-3.081 1.779c-.721.417-1.763.575-2.718.413-7.963-1.351-16.457-1.486-24.563-.392-11.77 1.589-22.512 5.039-31.065 9.977-8.514 4.916-14.456 11.073-17.183 17.805-1.854 4.578-1.623 9.376.666 13.875.37.725.055 1.513-.8 2.006l-3.081 1.78a.476.476 0 0 1-.234.062' fill='#455A64'/><path d='M153.316 128.279c-2.413 0-4.821-.528-6.652-1.586-1.818-1.049-2.82-2.461-2.82-3.975 0-1.527 1.016-2.955 2.861-4.02l9.493-5.607a.233.233 0 1 1 .238.402l-9.496 5.609c-1.696.979-2.628 2.263-2.628 3.616 0 1.34.918 2.608 2.585 3.571 3.549 2.049 9.343 2.038 12.914-.024l9.748-5.628a.234.234 0 0 1 .234.405l-9.748 5.628c-1.858 1.072-4.296 1.609-6.729 1.609' fill='#607D8B'/><path d='M113.675 182.992l-45.913-26.508M113.675 183.342a.346.346 0 0 1-.175-.047l-45.913-26.508a.35.35 0 1 1 .35-.607l45.913 26.508a.35.35 0 0 1-.175.654' fill='#455A64'/><path d='M67.762 156.484v54.001c0 1.09.77 2.418 1.72 2.967l42.473 24.521c.95.549 1.72.11 1.72-.98v-54.001' fill='#FAFAFA'/><path d='M112.727 238.561c-.297 0-.62-.095-.947-.285l-42.473-24.521c-1.063-.613-1.895-2.05-1.895-3.27v-54.001a.35.35 0 1 1 .701 0v54.001c0 .96.707 2.18 1.544 2.663l42.473 24.522c.344.198.661.243.87.122.206-.119.325-.411.325-.799v-54.001a.35.35 0 1 1 .7 0v54.001c0 .655-.239 1.154-.675 1.406a1.235 1.235 0 0 1-.623.162' fill='#455A64'/><path d='M112.86 147.512h-.001c-2.318 0-4.499-.522-6.142-1.471-1.705-.984-2.643-2.315-2.643-3.749 0-1.445.952-2.791 2.68-3.788l12.041-6.953c1.668-.962 3.874-1.493 6.212-1.493 2.318 0 4.499.523 6.143 1.472 1.704.984 2.643 2.315 2.643 3.748 0 1.446-.952 2.791-2.68 3.789l-12.042 6.952c-1.668.963-3.874 1.493-6.211 1.493zm12.147-16.753c-2.217 0-4.298.497-5.861 1.399l-12.042 6.952c-1.502.868-2.33 1.998-2.33 3.182 0 1.173.815 2.289 2.293 3.142 1.538.889 3.596 1.378 5.792 1.378h.001c2.216 0 4.298-.497 5.861-1.399l12.041-6.953c1.502-.867 2.33-1.997 2.33-3.182 0-1.172-.814-2.288-2.292-3.142-1.539-.888-3.596-1.377-5.793-1.377z' fill='#607D8B'/><path d='M165.63 123.219l-5.734 3.311c-3.167 1.828-8.286 1.837-11.433.02-3.147-1.817-3.131-4.772.036-6.601l5.734-3.31 11.397 6.58' fill='#FAFAFA'/><path d='M154.233 117.448l9.995 5.771-4.682 2.704c-1.434.827-3.352 1.283-5.399 1.283-2.029 0-3.923-.449-5.333-1.263-1.29-.744-2-1.694-2-2.674 0-.991.723-1.955 2.036-2.713l5.383-3.108m0-.809l-5.734 3.31c-3.167 1.829-3.183 4.784-.036 6.601 1.568.905 3.623 1.357 5.684 1.357 2.077 0 4.159-.46 5.749-1.377l5.734-3.311-11.397-6.58M145.445 179.667c-1.773 0-3.241-.85-4.243-2.245-.067-.092-.057-.275.023-.356.08-.081.207-.12.3-.055.781.548 1.706.812 2.751.811 1.322 0 2.754-.446 4.256-1.313 5.31-3.066 9.631-10.522 9.631-16.615 0-1.927-.442-3.562-1.279-4.726a.235.235 0 0 1 .024-.301.232.232 0 0 1 .3-.027c1.67 1.172 2.59 3.38 2.59 6.219 0 6.242-4.425 13.987-9.865 17.127-1.573.908-3.083 1.481-4.488 1.481zM142.476 178c.814.651 1.82 1.002 2.969 1.002 1.322 0 2.753-.452 4.255-1.32 5.31-3.065 9.631-10.523 9.631-16.617 0-1.98-.463-3.63-1.325-4.793.411 1.035.624 2.26.624 3.62 0 6.242-4.425 13.875-9.865 17.015-1.573.909-3.084 1.376-4.489 1.376a5.49 5.49 0 0 1-1.8-.283z' fill='#607D8B'/><path d='M148.648 176.704c5.384-3.108 9.748-10.636 9.748-16.813 0-2.052-.483-3.693-1.322-4.861-1.785-1.252-4.375-1.194-7.258.471-5.383 3.108-9.748 10.636-9.748 16.813 0 2.051.484 3.692 1.323 4.86 1.785 1.253 4.374 1.195 7.257-.47' fill='#FAFAFA'/><path d='M144.276 178.276c-1.143 0-2.158-.307-3.019-.911a.217.217 0 0 1-.055-.054c-.895-1.244-1.367-2.972-1.367-4.997 0-6.241 4.425-13.875 9.865-17.016 1.573-.908 3.084-1.369 4.489-1.369 1.143 0 2.158.307 3.019.91a.24.24 0 0 1 .055.055c.894 1.244 1.367 2.971 1.367 4.997 0 6.241-4.425 13.875-9.865 17.016-1.573.908-3.084 1.369-4.489 1.369zm-2.718-1.172c.773.533 1.687.901 2.718.901 1.322 0 2.754-.538 4.256-1.405 5.31-3.066 9.631-10.567 9.631-16.661 0-1.908-.434-3.554-1.256-4.716-.774-.532-1.688-.814-2.718-.814-1.322 0-2.754.433-4.256 1.3-5.31 3.066-9.631 10.564-9.631 16.657 0 1.91.434 3.576 1.256 4.738z' fill='#607D8B'/><path d='M150.72 172.361l-.363-.295a24.105 24.105 0 0 0 2.148-3.128 24.05 24.05 0 0 0 1.977-4.375l.443.149a24.54 24.54 0 0 1-2.015 4.46 24.61 24.61 0 0 1-2.19 3.189M115.917 191.514l-.363-.294a24.174 24.174 0 0 0 2.148-3.128 24.038 24.038 0 0 0 1.976-4.375l.443.148a24.48 24.48 0 0 1-2.015 4.461 24.662 24.662 0 0 1-2.189 3.188M114 237.476V182.584 237.476' fill='#607D8B'/><g><path d='M81.822 37.474c.017-.135-.075-.28-.267-.392-.327-.188-.826-.21-1.109-.045l-6.012 3.471c-.131.076-.194.178-.191.285.002.132.002.461.002.578v.043l-.007.128-6.591 3.779c-.001 0-2.077 1.046-2.787 5.192 0 0-.912 6.961-.898 19.745.015 12.57.606 17.07 1.167 21.351.22 1.684 3.001 2.125 3.001 2.125.331.04.698-.027 1.08-.248l75.273-43.551c1.808-1.069 2.667-3.719 3.056-6.284 1.213-7.99 1.675-32.978-.275-39.878-.196-.693-.51-1.083-.868-1.282l-2.086-.79c-.727.028-1.416.467-1.534.535L82.032 37.072l-.21.402' fill='#FFF'/><path d='M144.311 1.701l2.085.79c.358.199.672.589.868 1.282 1.949 6.9 1.487 31.887.275 39.878-.39 2.565-1.249 5.215-3.056 6.284L69.21 93.486a1.78 1.78 0 0 1-.896.258l-.183-.011c0 .001-2.782-.44-3.003-2.124-.56-4.282-1.151-8.781-1.165-21.351-.015-12.784.897-19.745.897-19.745.71-4.146 2.787-5.192 2.787-5.192l6.591-3.779.007-.128v-.043c0-.117 0-.446-.002-.578-.003-.107.059-.21.191-.285l6.012-3.472a.98.98 0 0 1 .481-.11c.218 0 .449.053.627.156.193.112.285.258.268.392l.211-.402 60.744-34.836c.117-.068.806-.507 1.534-.535m0-.997l-.039.001c-.618.023-1.283.244-1.974.656l-.021.012-60.519 34.706a2.358 2.358 0 0 0-.831-.15c-.365 0-.704.084-.98.244l-6.012 3.471c-.442.255-.699.69-.689 1.166l.001.15-6.08 3.487c-.373.199-2.542 1.531-3.29 5.898l-.006.039c-.009.07-.92 7.173-.906 19.875.014 12.62.603 17.116 1.172 21.465l.002.015c.308 2.355 3.475 2.923 3.836 2.98l.034.004c.101.013.204.019.305.019a2.77 2.77 0 0 0 1.396-.392l75.273-43.552c1.811-1.071 2.999-3.423 3.542-6.997 1.186-7.814 1.734-33.096-.301-40.299-.253-.893-.704-1.527-1.343-1.882l-.132-.062-2.085-.789a.973.973 0 0 0-.353-.065' fill='#455A64'/><path d='M128.267 11.565l1.495.434-56.339 32.326' fill='#FFF'/><path d='M74.202 90.545a.5.5 0 0 1-.25-.931l18.437-10.645a.499.499 0 1 1 .499.864L74.451 90.478l-.249.067M75.764 42.654l-.108-.062.046-.171 5.135-2.964.17.045-.045.171-5.135 2.964-.063.017M70.52 90.375V46.421l.063-.036L137.84 7.554v43.954l-.062.036L70.52 90.375zm.25-43.811v43.38l66.821-38.579V7.985L70.77 46.564z' fill='#607D8B'/><path d='M86.986 83.182c-.23.149-.612.384-.849.523l-11.505 6.701c-.237.139-.206.252.068.252h.565c.275 0 .693-.113.93-.252L87.7 83.705c.237-.139.428-.253.425-.256a11.29 11.29 0 0 1-.006-.503c0-.274-.188-.377-.418-.227l-.715.463' fill='#607D8B'/><path d='M75.266 90.782H74.7c-.2 0-.316-.056-.346-.166-.03-.11.043-.217.215-.317l11.505-6.702c.236-.138.615-.371.844-.519l.715-.464a.488.488 0 0 1 .266-.089c.172 0 .345.13.345.421 0 .214.001.363.003.437l.006.004-.004.069c-.003.075-.003.075-.486.356l-11.505 6.702a2.282 2.282 0 0 1-.992.268zm-.6-.25l.034.001h.566c.252 0 .649-.108.866-.234l11.505-6.702c.168-.098.294-.173.361-.214-.004-.084-.004-.218-.004-.437l-.095-.171-.131.049-.714.463c-.232.15-.616.386-.854.525l-11.505 6.702-.029.018z' fill='#607D8B'/><path d='M75.266 89.871H74.7c-.2 0-.316-.056-.346-.166-.03-.11.043-.217.215-.317l11.505-6.702c.258-.151.694-.268.993-.268h.565c.2 0 .316.056.346.166.03.11-.043.217-.215.317l-11.505 6.702a2.282 2.282 0 0 1-.992.268zm-.6-.25l.034.001h.566c.252 0 .649-.107.866-.234l11.505-6.702.03-.018-.035-.001h-.565c-.252 0-.649.108-.867.234l-11.505 6.702-.029.018zM74.37 90.801v-1.247 1.247' fill='#607D8B'/><path d='M68.13 93.901c-.751-.093-1.314-.737-1.439-1.376-.831-4.238-1.151-8.782-1.165-21.352-.015-12.784.897-19.745.897-19.745.711-4.146 2.787-5.192 2.787-5.192l74.859-43.219c.223-.129 2.487-1.584 3.195.923 1.95 6.9 1.488 31.887.275 39.878-.389 2.565-1.248 5.215-3.056 6.283L69.21 93.653c-.382.221-.749.288-1.08.248 0 0-2.781-.441-3.001-2.125-.561-4.281-1.152-8.781-1.167-21.351-.014-12.784.898-19.745.898-19.745.71-4.146 2.787-5.191 2.787-5.191l6.598-3.81.871-.119 6.599-3.83.046-.461L68.13 93.901' fill='#FAFAFA'/><path d='M68.317 94.161l-.215-.013h-.001l-.244-.047c-.719-.156-2.772-.736-2.976-2.292-.568-4.34-1.154-8.813-1.168-21.384-.014-12.654.891-19.707.9-19.777.725-4.231 2.832-5.338 2.922-5.382l6.628-3.827.87-.119 6.446-3.742.034-.334a.248.248 0 0 1 .273-.223.248.248 0 0 1 .223.272l-.059.589-6.752 3.919-.87.118-6.556 3.785c-.031.016-1.99 1.068-2.666 5.018-.007.06-.908 7.086-.894 19.702.014 12.539.597 16.996 1.161 21.305.091.691.689 1.154 1.309 1.452a1.95 1.95 0 0 1-.236-.609c-.781-3.984-1.155-8.202-1.17-21.399-.014-12.653.891-19.707.9-19.777.725-4.231 2.832-5.337 2.922-5.382-.004.001 74.444-42.98 74.846-43.212l.028-.017c.904-.538 1.72-.688 2.36-.433.555.221.949.733 1.172 1.52 2.014 7.128 1.46 32.219.281 39.983-.507 3.341-1.575 5.515-3.175 6.462L69.335 93.869a2.023 2.023 0 0 1-1.018.292zm-.147-.507c.293.036.604-.037.915-.217l75.273-43.551c1.823-1.078 2.602-3.915 2.934-6.106 1.174-7.731 1.731-32.695-.268-39.772-.178-.631-.473-1.032-.876-1.192-.484-.193-1.166-.052-1.921.397l-.034.021-74.858 43.218c-.031.017-1.989 1.069-2.666 5.019-.007.059-.908 7.085-.894 19.702.015 13.155.386 17.351 1.161 21.303.09.461.476.983 1.037 1.139.114.025.185.037.196.039h.001z' fill='#455A64'/><path d='M69.317 68.982c.489-.281.885-.056.885.505 0 .56-.396 1.243-.885 1.525-.488.282-.884.057-.884-.504 0-.56.396-1.243.884-1.526' fill='#FFF'/><path d='M68.92 71.133c-.289 0-.487-.228-.487-.625 0-.56.396-1.243.884-1.526a.812.812 0 0 1 .397-.121c.289 0 .488.229.488.626 0 .56-.396 1.243-.885 1.525a.812.812 0 0 1-.397.121m.794-2.459a.976.976 0 0 0-.49.147c-.548.317-.978 1.058-.978 1.687 0 .486.271.812.674.812a.985.985 0 0 0 .491-.146c.548-.317.978-1.057.978-1.687 0-.486-.272-.813-.675-.813' fill='#8097A2'/><path d='M68.92 70.947c-.271 0-.299-.307-.299-.439 0-.491.361-1.116.79-1.363a.632.632 0 0 1 .303-.096c.272 0 .301.306.301.438 0 .491-.363 1.116-.791 1.364a.629.629 0 0 1-.304.096m.794-2.086a.812.812 0 0 0-.397.121c-.488.283-.884.966-.884 1.526 0 .397.198.625.487.625a.812.812 0 0 0 .397-.121c.489-.282.885-.965.885-1.525 0-.397-.199-.626-.488-.626' fill='#8097A2'/><path d='M69.444 85.35c.264-.152.477-.031.477.272 0 .303-.213.67-.477.822-.263.153-.477.031-.477-.271 0-.302.214-.671.477-.823' fill='#FFF'/><path d='M69.23 86.51c-.156 0-.263-.123-.263-.337 0-.302.214-.671.477-.823a.431.431 0 0 1 .214-.066c.156 0 .263.124.263.338 0 .303-.213.67-.477.822a.431.431 0 0 1-.214.066m.428-1.412c-.1 0-.203.029-.307.09-.32.185-.57.618-.57.985 0 .309.185.524.449.524a.63.63 0 0 0 .308-.09c.32-.185.57-.618.57-.985 0-.309-.185-.524-.45-.524' fill='#8097A2'/><path d='M69.23 86.322l-.076-.149c0-.235.179-.544.384-.661l.12-.041.076.151c0 .234-.179.542-.383.66l-.121.04m.428-1.038a.431.431 0 0 0-.214.066c-.263.152-.477.521-.477.823 0 .214.107.337.263.337a.431.431 0 0 0 .214-.066c.264-.152.477-.519.477-.822 0-.214-.107-.338-.263-.338' fill='#8097A2'/><path d='M139.278 7.769v43.667L72.208 90.16V46.493l67.07-38.724' fill='#455A64'/><path d='M72.083 90.375V46.421l.063-.036 67.257-38.831v43.954l-.062.036-67.258 38.831zm.25-43.811v43.38l66.821-38.579V7.985L72.333 46.564z' fill='#607D8B'/></g><path d='M125.737 88.647l-7.639 3.334V84l-11.459 4.713v8.269L99 100.315l13.369 3.646 13.368-15.314' fill='#455A64'/></g></svg>\";function RotateInstructions(){this.loadIcon_();var overlay=document.createElement('div');var s=overlay.style;s.position='fixed';s.top=0;s.right=0;s.bottom=0;s.left=0;s.backgroundColor='gray';s.fontFamily='sans-serif';s.zIndex=1000000;var img=document.createElement('img');img.src=this.icon;var s=img.style;s.marginLeft='25%';s.marginTop='25%';s.width='50%';overlay.appendChild(img);var text=document.createElement('div');var s=text.style;s.textAlign='center';s.fontSize='16px';s.lineHeight='24px';s.margin='24px 25%';s.width='50%';text.innerHTML='Place your phone into your Cardboard viewer.';overlay.appendChild(text);var snackbar=document.createElement('div');var s=snackbar.style;s.backgroundColor='#CFD8DC';s.position='fixed';s.bottom=0;s.width='100%';s.height='48px';s.padding='14px 24px';s.boxSizing='border-box';s.color='#656A6B';overlay.appendChild(snackbar);var snackbarText=document.createElement('div');snackbarText.style.float='left';snackbarText.innerHTML='No Cardboard viewer?';var snackbarButton=document.createElement('a');snackbarButton.href='https://www.google.com/get/cardboard/get-cardboard/';snackbarButton.innerHTML='get one';snackbarButton.target='_blank';var s=snackbarButton.style;s.float='right';s.fontWeight=600;s.textTransform='uppercase';s.borderLeft='1px solid gray';s.paddingLeft='24px';s.textDecoration='none';s.color='#656A6B';snackbar.appendChild(snackbarText);snackbar.appendChild(snackbarButton);this.overlay=overlay;this.text=text;this.hide();}RotateInstructions.prototype.show=function(parent){if(!parent&&!this.overlay.parentElement){document.body.appendChild(this.overlay);}else if(parent){if(this.overlay.parentElement&&this.overlay.parentElement!=parent)this.overlay.parentElement.removeChild(this.overlay);parent.appendChild(this.overlay);}this.overlay.style.display='block';var img=this.overlay.querySelector('img');var s=img.style;if(isLandscapeMode()){s.width='20%';s.marginLeft='40%';s.marginTop='3%';}else{s.width='50%';s.marginLeft='25%';s.marginTop='25%';}};RotateInstructions.prototype.hide=function(){this.overlay.style.display='none';};RotateInstructions.prototype.showTemporarily=function(ms,parent){this.show(parent);this.timer=setTimeout(this.hide.bind(this),ms);};RotateInstructions.prototype.disableShowTemporarily=function(){clearTimeout(this.timer);};RotateInstructions.prototype.update=function(){this.disableShowTemporarily();if(!isLandscapeMode()&&isMobile()){this.show();}else{this.hide();}};RotateInstructions.prototype.loadIcon_=function(){this.icon=dataUri('image/svg+xml',rotateInstructionsAsset);};var DEFAULT_VIEWER='CardboardV1';var VIEWER_KEY='WEBVR_CARDBOARD_VIEWER';var CLASS_NAME='webvr-polyfill-viewer-selector';function ViewerSelector(defaultViewer){try{this.selectedKey=localStorage.getItem(VIEWER_KEY);}catch(error){console.error('Failed to load viewer profile: %s',error);}if(!this.selectedKey){this.selectedKey=defaultViewer||DEFAULT_VIEWER;}this.dialog=this.createDialog_(DeviceInfo.Viewers);this.root=null;this.onChangeCallbacks_=[];}ViewerSelector.prototype.show=function(root){this.root=root;root.appendChild(this.dialog);var selected=this.dialog.querySelector('#'+this.selectedKey);selected.checked=true;this.dialog.style.display='block';};ViewerSelector.prototype.hide=function(){if(this.root&&this.root.contains(this.dialog)){this.root.removeChild(this.dialog);}this.dialog.style.display='none';};ViewerSelector.prototype.getCurrentViewer=function(){return DeviceInfo.Viewers[this.selectedKey];};ViewerSelector.prototype.getSelectedKey_=function(){var input=this.dialog.querySelector('input[name=field]:checked');if(input){return input.id;}return null;};ViewerSelector.prototype.onChange=function(cb){this.onChangeCallbacks_.push(cb);};ViewerSelector.prototype.fireOnChange_=function(viewer){for(var i=0;i<this.onChangeCallbacks_.length;i++){this.onChangeCallbacks_[i](viewer);}};ViewerSelector.prototype.onSave_=function(){this.selectedKey=this.getSelectedKey_();if(!this.selectedKey||!DeviceInfo.Viewers[this.selectedKey]){console.error('ViewerSelector.onSave_: this should never happen!');return;}this.fireOnChange_(DeviceInfo.Viewers[this.selectedKey]);try{localStorage.setItem(VIEWER_KEY,this.selectedKey);}catch(error){console.error('Failed to save viewer profile: %s',error);}this.hide();};ViewerSelector.prototype.createDialog_=function(options){var container=document.createElement('div');container.classList.add(CLASS_NAME);container.style.display='none';var overlay=document.createElement('div');var s=overlay.style;s.position='fixed';s.left=0;s.top=0;s.width='100%';s.height='100%';s.background='rgba(0, 0, 0, 0.3)';overlay.addEventListener('click',this.hide.bind(this));var width=280;var dialog=document.createElement('div');var s=dialog.style;s.boxSizing='border-box';s.position='fixed';s.top='24px';s.left='50%';s.marginLeft=-width/2+'px';s.width=width+'px';s.padding='24px';s.overflow='hidden';s.background='#fafafa';s.fontFamily=\"'Roboto', sans-serif\";s.boxShadow='0px 5px 20px #666';dialog.appendChild(this.createH1_('Select your viewer'));for(var id in options){dialog.appendChild(this.createChoice_(id,options[id].label));}dialog.appendChild(this.createButton_('Save',this.onSave_.bind(this)));container.appendChild(overlay);container.appendChild(dialog);return container;};ViewerSelector.prototype.createH1_=function(name){var h1=document.createElement('h1');var s=h1.style;s.color='black';s.fontSize='20px';s.fontWeight='bold';s.marginTop=0;s.marginBottom='24px';h1.innerHTML=name;return h1;};ViewerSelector.prototype.createChoice_=function(id,name){var div=document.createElement('div');div.style.marginTop='8px';div.style.color='black';var input=document.createElement('input');input.style.fontSize='30px';input.setAttribute('id',id);input.setAttribute('type','radio');input.setAttribute('value',id);input.setAttribute('name','field');var label=document.createElement('label');label.style.marginLeft='4px';label.setAttribute('for',id);label.innerHTML=name;div.appendChild(input);div.appendChild(label);return div;};ViewerSelector.prototype.createButton_=function(label,onclick){var button=document.createElement('button');button.innerHTML=label;var s=button.style;s.float='right';s.textTransform='uppercase';s.color='#1094f7';s.fontSize='14px';s.letterSpacing=0;s.border=0;s.background='none';s.marginTop='16px';button.addEventListener('click',onclick);return button;};var commonjsGlobal$$1=typeof window!=='undefined'?window:typeof commonjsGlobal!=='undefined'?commonjsGlobal:typeof self!=='undefined'?self:{};function unwrapExports$$1(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,'default')?x['default']:x;}function createCommonjsModule$$1(fn,module){return module={exports:{}},fn(module,module.exports),module.exports;}var NoSleep=createCommonjsModule$$1(function(module,exports){(function webpackUniversalModuleDefinition(root,factory){module.exports=factory();})(commonjsGlobal$$1,function(){return function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports;}var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports;}__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{configurable:false,enumerable:true,get:getter});}};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module['default'];}:function getModuleExports(){return module;};__webpack_require__.d(getter,'a',getter);return getter;};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};__webpack_require__.p=\"\";return __webpack_require__(__webpack_require__.s=0);}([function(module,exports,__webpack_require__){var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var mediaFile=__webpack_require__(1);var oldIOS=typeof navigator!=='undefined'&&parseFloat((''+(/CPU.*OS ([0-9_]{3,4})[0-9_]{0,1}|(CPU like).*AppleWebKit.*Mobile/i.exec(navigator.userAgent)||[0,''])[1]).replace('undefined','3_2').replace('_','.').replace('_',''))<10&&!window.MSStream;var NoSleep=function(){function NoSleep(){_classCallCheck(this,NoSleep);if(oldIOS){this.noSleepTimer=null;}else{this.noSleepVideo=document.createElement('video');this.noSleepVideo.setAttribute('playsinline','');this.noSleepVideo.setAttribute('src',mediaFile);this.noSleepVideo.addEventListener('timeupdate',function(e){if(this.noSleepVideo.currentTime>0.5){this.noSleepVideo.currentTime=Math.random();}}.bind(this));}}_createClass(NoSleep,[{key:'enable',value:function enable(){if(oldIOS){this.disable();this.noSleepTimer=window.setInterval(function(){window.location.href='/';window.setTimeout(window.stop,0);},15000);}else{this.noSleepVideo.play();}}},{key:'disable',value:function disable(){if(oldIOS){if(this.noSleepTimer){window.clearInterval(this.noSleepTimer);this.noSleepTimer=null;}}else{this.noSleepVideo.pause();}}}]);return NoSleep;}();module.exports=NoSleep;},function(module,exports,__webpack_require__){module.exports='data:video/mp4;base64,AAAAIGZ0eXBtcDQyAAACAGlzb21pc28yYXZjMW1wNDEAAAAIZnJlZQAACKBtZGF0AAAC8wYF///v3EXpvebZSLeWLNgg2SPu73gyNjQgLSBjb3JlIDE0MiByMjQ3OSBkZDc5YTYxIC0gSC4yNjQvTVBFRy00IEFWQyBjb2RlYyAtIENvcHlsZWZ0IDIwMDMtMjAxNCAtIGh0dHA6Ly93d3cudmlkZW9sYW4ub3JnL3gyNjQuaHRtbCAtIG9wdGlvbnM6IGNhYmFjPTEgcmVmPTEgZGVibG9jaz0xOjA6MCBhbmFseXNlPTB4MToweDExMSBtZT1oZXggc3VibWU9MiBwc3k9MSBwc3lfcmQ9MS4wMDowLjAwIG1peGVkX3JlZj0wIG1lX3JhbmdlPTE2IGNocm9tYV9tZT0xIHRyZWxsaXM9MCA4eDhkY3Q9MCBjcW09MCBkZWFkem9uZT0yMSwxMSBmYXN0X3Bza2lwPTEgY2hyb21hX3FwX29mZnNldD0wIHRocmVhZHM9NiBsb29rYWhlYWRfdGhyZWFkcz0xIHNsaWNlZF90aHJlYWRzPTAgbnI9MCBkZWNpbWF0ZT0xIGludGVybGFjZWQ9MCBibHVyYXlfY29tcGF0PTAgY29uc3RyYWluZWRfaW50cmE9MCBiZnJhbWVzPTMgYl9weXJhbWlkPTIgYl9hZGFwdD0xIGJfYmlhcz0wIGRpcmVjdD0xIHdlaWdodGI9MSBvcGVuX2dvcD0wIHdlaWdodHA9MSBrZXlpbnQ9MzAwIGtleWludF9taW49MzAgc2NlbmVjdXQ9NDAgaW50cmFfcmVmcmVzaD0wIHJjX2xvb2thaGVhZD0xMCByYz1jcmYgbWJ0cmVlPTEgY3JmPTIwLjAgcWNvbXA9MC42MCBxcG1pbj0wIHFwbWF4PTY5IHFwc3RlcD00IHZidl9tYXhyYXRlPTIwMDAwIHZidl9idWZzaXplPTI1MDAwIGNyZl9tYXg9MC4wIG5hbF9ocmQ9bm9uZSBmaWxsZXI9MCBpcF9yYXRpbz0xLjQwIGFxPTE6MS4wMACAAAAAOWWIhAA3//p+C7v8tDDSTjf97w55i3SbRPO4ZY+hkjD5hbkAkL3zpJ6h/LR1CAABzgB1kqqzUorlhQAAAAxBmiQYhn/+qZYADLgAAAAJQZ5CQhX/AAj5IQADQGgcIQADQGgcAAAACQGeYUQn/wALKCEAA0BoHAAAAAkBnmNEJ/8ACykhAANAaBwhAANAaBwAAAANQZpoNExDP/6plgAMuSEAA0BoHAAAAAtBnoZFESwr/wAI+SEAA0BoHCEAA0BoHAAAAAkBnqVEJ/8ACykhAANAaBwAAAAJAZ6nRCf/AAsoIQADQGgcIQADQGgcAAAADUGarDRMQz/+qZYADLghAANAaBwAAAALQZ7KRRUsK/8ACPkhAANAaBwAAAAJAZ7pRCf/AAsoIQADQGgcIQADQGgcAAAACQGe60Qn/wALKCEAA0BoHAAAAA1BmvA0TEM//qmWAAy5IQADQGgcIQADQGgcAAAAC0GfDkUVLCv/AAj5IQADQGgcAAAACQGfLUQn/wALKSEAA0BoHCEAA0BoHAAAAAkBny9EJ/8ACyghAANAaBwAAAANQZs0NExDP/6plgAMuCEAA0BoHAAAAAtBn1JFFSwr/wAI+SEAA0BoHCEAA0BoHAAAAAkBn3FEJ/8ACyghAANAaBwAAAAJAZ9zRCf/AAsoIQADQGgcIQADQGgcAAAADUGbeDRMQz/+qZYADLkhAANAaBwAAAALQZ+WRRUsK/8ACPghAANAaBwhAANAaBwAAAAJAZ+1RCf/AAspIQADQGgcAAAACQGft0Qn/wALKSEAA0BoHCEAA0BoHAAAAA1Bm7w0TEM//qmWAAy4IQADQGgcAAAAC0Gf2kUVLCv/AAj5IQADQGgcAAAACQGf+UQn/wALKCEAA0BoHCEAA0BoHAAAAAkBn/tEJ/8ACykhAANAaBwAAAANQZvgNExDP/6plgAMuSEAA0BoHCEAA0BoHAAAAAtBnh5FFSwr/wAI+CEAA0BoHAAAAAkBnj1EJ/8ACyghAANAaBwhAANAaBwAAAAJAZ4/RCf/AAspIQADQGgcAAAADUGaJDRMQz/+qZYADLghAANAaBwAAAALQZ5CRRUsK/8ACPkhAANAaBwhAANAaBwAAAAJAZ5hRCf/AAsoIQADQGgcAAAACQGeY0Qn/wALKSEAA0BoHCEAA0BoHAAAAA1Bmmg0TEM//qmWAAy5IQADQGgcAAAAC0GehkUVLCv/AAj5IQADQGgcIQADQGgcAAAACQGepUQn/wALKSEAA0BoHAAAAAkBnqdEJ/8ACyghAANAaBwAAAANQZqsNExDP/6plgAMuCEAA0BoHCEAA0BoHAAAAAtBnspFFSwr/wAI+SEAA0BoHAAAAAkBnulEJ/8ACyghAANAaBwhAANAaBwAAAAJAZ7rRCf/AAsoIQADQGgcAAAADUGa8DRMQz/+qZYADLkhAANAaBwhAANAaBwAAAALQZ8ORRUsK/8ACPkhAANAaBwAAAAJAZ8tRCf/AAspIQADQGgcIQADQGgcAAAACQGfL0Qn/wALKCEAA0BoHAAAAA1BmzQ0TEM//qmWAAy4IQADQGgcAAAAC0GfUkUVLCv/AAj5IQADQGgcIQADQGgcAAAACQGfcUQn/wALKCEAA0BoHAAAAAkBn3NEJ/8ACyghAANAaBwhAANAaBwAAAANQZt4NExC//6plgAMuSEAA0BoHAAAAAtBn5ZFFSwr/wAI+CEAA0BoHCEAA0BoHAAAAAkBn7VEJ/8ACykhAANAaBwAAAAJAZ+3RCf/AAspIQADQGgcAAAADUGbuzRMQn/+nhAAYsAhAANAaBwhAANAaBwAAAAJQZ/aQhP/AAspIQADQGgcAAAACQGf+UQn/wALKCEAA0BoHCEAA0BoHCEAA0BoHCEAA0BoHCEAA0BoHCEAA0BoHAAACiFtb292AAAAbG12aGQAAAAA1YCCX9WAgl8AAAPoAAAH/AABAAABAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAGGlvZHMAAAAAEICAgAcAT////v7/AAAF+XRyYWsAAABcdGtoZAAAAAPVgIJf1YCCXwAAAAEAAAAAAAAH0AAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAygAAAMoAAAAAACRlZHRzAAAAHGVsc3QAAAAAAAAAAQAAB9AAABdwAAEAAAAABXFtZGlhAAAAIG1kaGQAAAAA1YCCX9WAgl8AAV+QAAK/IFXEAAAAAAAtaGRscgAAAAAAAAAAdmlkZQAAAAAAAAAAAAAAAFZpZGVvSGFuZGxlcgAAAAUcbWluZgAAABR2bWhkAAAAAQAAAAAAAAAAAAAAJGRpbmYAAAAcZHJlZgAAAAAAAAABAAAADHVybCAAAAABAAAE3HN0YmwAAACYc3RzZAAAAAAAAAABAAAAiGF2YzEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAygDKAEgAAABIAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY//8AAAAyYXZjQwFNQCj/4QAbZ01AKOyho3ySTUBAQFAAAAMAEAAr8gDxgxlgAQAEaO+G8gAAABhzdHRzAAAAAAAAAAEAAAA8AAALuAAAABRzdHNzAAAAAAAAAAEAAAABAAAB8GN0dHMAAAAAAAAAPAAAAAEAABdwAAAAAQAAOpgAAAABAAAXcAAAAAEAAAAAAAAAAQAAC7gAAAABAAA6mAAAAAEAABdwAAAAAQAAAAAAAAABAAALuAAAAAEAADqYAAAAAQAAF3AAAAABAAAAAAAAAAEAAAu4AAAAAQAAOpgAAAABAAAXcAAAAAEAAAAAAAAAAQAAC7gAAAABAAA6mAAAAAEAABdwAAAAAQAAAAAAAAABAAALuAAAAAEAADqYAAAAAQAAF3AAAAABAAAAAAAAAAEAAAu4AAAAAQAAOpgAAAABAAAXcAAAAAEAAAAAAAAAAQAAC7gAAAABAAA6mAAAAAEAABdwAAAAAQAAAAAAAAABAAALuAAAAAEAADqYAAAAAQAAF3AAAAABAAAAAAAAAAEAAAu4AAAAAQAAOpgAAAABAAAXcAAAAAEAAAAAAAAAAQAAC7gAAAABAAA6mAAAAAEAABdwAAAAAQAAAAAAAAABAAALuAAAAAEAADqYAAAAAQAAF3AAAAABAAAAAAAAAAEAAAu4AAAAAQAAOpgAAAABAAAXcAAAAAEAAAAAAAAAAQAAC7gAAAABAAA6mAAAAAEAABdwAAAAAQAAAAAAAAABAAALuAAAAAEAAC7gAAAAAQAAF3AAAAABAAAAAAAAABxzdHNjAAAAAAAAAAEAAAABAAAAAQAAAAEAAAEEc3RzegAAAAAAAAAAAAAAPAAAAzQAAAAQAAAADQAAAA0AAAANAAAAEQAAAA8AAAANAAAADQAAABEAAAAPAAAADQAAAA0AAAARAAAADwAAAA0AAAANAAAAEQAAAA8AAAANAAAADQAAABEAAAAPAAAADQAAAA0AAAARAAAADwAAAA0AAAANAAAAEQAAAA8AAAANAAAADQAAABEAAAAPAAAADQAAAA0AAAARAAAADwAAAA0AAAANAAAAEQAAAA8AAAANAAAADQAAABEAAAAPAAAADQAAAA0AAAARAAAADwAAAA0AAAANAAAAEQAAAA8AAAANAAAADQAAABEAAAANAAAADQAAAQBzdGNvAAAAAAAAADwAAAAwAAADZAAAA3QAAAONAAADoAAAA7kAAAPQAAAD6wAAA/4AAAQXAAAELgAABEMAAARcAAAEbwAABIwAAAShAAAEugAABM0AAATkAAAE/wAABRIAAAUrAAAFQgAABV0AAAVwAAAFiQAABaAAAAW1AAAFzgAABeEAAAX+AAAGEwAABiwAAAY/AAAGVgAABnEAAAaEAAAGnQAABrQAAAbPAAAG4gAABvUAAAcSAAAHJwAAB0AAAAdTAAAHcAAAB4UAAAeeAAAHsQAAB8gAAAfjAAAH9gAACA8AAAgmAAAIQQAACFQAAAhnAAAIhAAACJcAAAMsdHJhawAAAFx0a2hkAAAAA9WAgl/VgIJfAAAAAgAAAAAAAAf8AAAAAAAAAAAAAAABAQAAAAABAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAACsm1kaWEAAAAgbWRoZAAAAADVgIJf1YCCXwAArEQAAWAAVcQAAAAAACdoZGxyAAAAAAAAAABzb3VuAAAAAAAAAAAAAAAAU3RlcmVvAAAAAmNtaW5mAAAAEHNtaGQAAAAAAAAAAAAAACRkaW5mAAAAHGRyZWYAAAAAAAAAAQAAAAx1cmwgAAAAAQAAAidzdGJsAAAAZ3N0c2QAAAAAAAAAAQAAAFdtcDRhAAAAAAAAAAEAAAAAAAAAAAACABAAAAAArEQAAAAAADNlc2RzAAAAAAOAgIAiAAIABICAgBRAFQAAAAADDUAAAAAABYCAgAISEAaAgIABAgAAABhzdHRzAAAAAAAAAAEAAABYAAAEAAAAABxzdHNjAAAAAAAAAAEAAAABAAAAAQAAAAEAAAAUc3RzegAAAAAAAAAGAAAAWAAAAXBzdGNvAAAAAAAAAFgAAAOBAAADhwAAA5oAAAOtAAADswAAA8oAAAPfAAAD5QAAA/gAAAQLAAAEEQAABCgAAAQ9AAAEUAAABFYAAARpAAAEgAAABIYAAASbAAAErgAABLQAAATHAAAE3gAABPMAAAT5AAAFDAAABR8AAAUlAAAFPAAABVEAAAVXAAAFagAABX0AAAWDAAAFmgAABa8AAAXCAAAFyAAABdsAAAXyAAAF+AAABg0AAAYgAAAGJgAABjkAAAZQAAAGZQAABmsAAAZ+AAAGkQAABpcAAAauAAAGwwAABskAAAbcAAAG7wAABwYAAAcMAAAHIQAABzQAAAc6AAAHTQAAB2QAAAdqAAAHfwAAB5IAAAeYAAAHqwAAB8IAAAfXAAAH3QAAB/AAAAgDAAAICQAACCAAAAg1AAAIOwAACE4AAAhhAAAIeAAACH4AAAiRAAAIpAAACKoAAAiwAAAItgAACLwAAAjCAAAAFnVkdGEAAAAObmFtZVN0ZXJlbwAAAHB1ZHRhAAAAaG1ldGEAAAAAAAAAIWhkbHIAAAAAAAAAAG1kaXJhcHBsAAAAAAAAAAAAAAAAO2lsc3QAAAAzqXRvbwAAACtkYXRhAAAAAQAAAABIYW5kQnJha2UgMC4xMC4yIDIwMTUwNjExMDA=';}]);});});var NoSleep$1=unwrapExports$$1(NoSleep);var nextDisplayId=1000;var defaultLeftBounds=[0,0,0.5,1];var defaultRightBounds=[0.5,0,0.5,1];var raf=window.requestAnimationFrame;var caf=window.cancelAnimationFrame;function VRFrameData(){this.leftProjectionMatrix=new Float32Array(16);this.leftViewMatrix=new Float32Array(16);this.rightProjectionMatrix=new Float32Array(16);this.rightViewMatrix=new Float32Array(16);this.pose=null;}function VRDisplayCapabilities(config){Object.defineProperties(this,{hasPosition:{writable:false,enumerable:true,value:config.hasPosition},hasExternalDisplay:{writable:false,enumerable:true,value:config.hasExternalDisplay},canPresent:{writable:false,enumerable:true,value:config.canPresent},maxLayers:{writable:false,enumerable:true,value:config.maxLayers},hasOrientation:{enumerable:true,get:function get(){deprecateWarning('VRDisplayCapabilities.prototype.hasOrientation','VRDisplay.prototype.getFrameData');return config.hasOrientation;}}});}function VRDisplay(config){config=config||{};var USE_WAKELOCK='wakelock'in config?config.wakelock:true;this.isPolyfilled=true;this.displayId=nextDisplayId++;this.displayName='';this.depthNear=0.01;this.depthFar=10000.0;this.isPresenting=false;Object.defineProperty(this,'isConnected',{get:function get(){deprecateWarning('VRDisplay.prototype.isConnected','VRDisplayCapabilities.prototype.hasExternalDisplay');return false;}});this.capabilities=new VRDisplayCapabilities({hasPosition:false,hasOrientation:false,hasExternalDisplay:false,canPresent:false,maxLayers:1});this.stageParameters=null;this.waitingForPresent_=false;this.layer_=null;this.originalParent_=null;this.fullscreenElement_=null;this.fullscreenWrapper_=null;this.fullscreenElementCachedStyle_=null;this.fullscreenEventTarget_=null;this.fullscreenChangeHandler_=null;this.fullscreenErrorHandler_=null;if(USE_WAKELOCK&&isMobile()){this.wakelock_=new NoSleep$1();}}VRDisplay.prototype.getFrameData=function(frameData){return frameDataFromPose(frameData,this._getPose(),this);};VRDisplay.prototype.getPose=function(){deprecateWarning('VRDisplay.prototype.getPose','VRDisplay.prototype.getFrameData');return this._getPose();};VRDisplay.prototype.resetPose=function(){deprecateWarning('VRDisplay.prototype.resetPose');return this._resetPose();};VRDisplay.prototype.getImmediatePose=function(){deprecateWarning('VRDisplay.prototype.getImmediatePose','VRDisplay.prototype.getFrameData');return this._getPose();};VRDisplay.prototype.requestAnimationFrame=function(callback){return raf(callback);};VRDisplay.prototype.cancelAnimationFrame=function(id){return caf(id);};VRDisplay.prototype.wrapForFullscreen=function(element){if(isIOS()){return element;}if(!this.fullscreenWrapper_){this.fullscreenWrapper_=document.createElement('div');var cssProperties=['height: '+Math.min(screen.height,screen.width)+'px !important','top: 0 !important','left: 0 !important','right: 0 !important','border: 0','margin: 0','padding: 0','z-index: 999999 !important','position: fixed'];this.fullscreenWrapper_.setAttribute('style',cssProperties.join('; ')+';');this.fullscreenWrapper_.classList.add('webvr-polyfill-fullscreen-wrapper');}if(this.fullscreenElement_==element){return this.fullscreenWrapper_;}if(this.fullscreenElement_){if(this.originalParent_){this.originalParent_.appendChild(this.fullscreenElement_);}else{this.fullscreenElement_.parentElement.removeChild(this.fullscreenElement_);}}this.fullscreenElement_=element;this.originalParent_=element.parentElement;if(!this.originalParent_){document.body.appendChild(element);}if(!this.fullscreenWrapper_.parentElement){var parent=this.fullscreenElement_.parentElement;parent.insertBefore(this.fullscreenWrapper_,this.fullscreenElement_);parent.removeChild(this.fullscreenElement_);}this.fullscreenWrapper_.insertBefore(this.fullscreenElement_,this.fullscreenWrapper_.firstChild);this.fullscreenElementCachedStyle_=this.fullscreenElement_.getAttribute('style');var self=this;function applyFullscreenElementStyle(){if(!self.fullscreenElement_){return;}var cssProperties=['position: absolute','top: 0','left: 0','width: '+Math.max(screen.width,screen.height)+'px','height: '+Math.min(screen.height,screen.width)+'px','border: 0','margin: 0','padding: 0'];self.fullscreenElement_.setAttribute('style',cssProperties.join('; ')+';');}applyFullscreenElementStyle();return this.fullscreenWrapper_;};VRDisplay.prototype.removeFullscreenWrapper=function(){if(!this.fullscreenElement_){return;}var element=this.fullscreenElement_;if(this.fullscreenElementCachedStyle_){element.setAttribute('style',this.fullscreenElementCachedStyle_);}else{element.removeAttribute('style');}this.fullscreenElement_=null;this.fullscreenElementCachedStyle_=null;var parent=this.fullscreenWrapper_.parentElement;this.fullscreenWrapper_.removeChild(element);if(this.originalParent_===parent){parent.insertBefore(element,this.fullscreenWrapper_);}else if(this.originalParent_){this.originalParent_.appendChild(element);}parent.removeChild(this.fullscreenWrapper_);return element;};VRDisplay.prototype.requestPresent=function(layers){var wasPresenting=this.isPresenting;var self=this;if(!(layers instanceof Array)){deprecateWarning('VRDisplay.prototype.requestPresent with non-array argument','an array of VRLayers as the first argument');layers=[layers];}return new Promise(function(resolve,reject){if(!self.capabilities.canPresent){reject(new Error('VRDisplay is not capable of presenting.'));return;}if(layers.length==0||layers.length>self.capabilities.maxLayers){reject(new Error('Invalid number of layers.'));return;}var incomingLayer=layers[0];if(!incomingLayer.source){resolve();return;}var leftBounds=incomingLayer.leftBounds||defaultLeftBounds;var rightBounds=incomingLayer.rightBounds||defaultRightBounds;if(wasPresenting){var layer=self.layer_;if(layer.source!==incomingLayer.source){layer.source=incomingLayer.source;}for(var i=0;i<4;i++){layer.leftBounds[i]=leftBounds[i];layer.rightBounds[i]=rightBounds[i];}self.wrapForFullscreen(self.layer_.source);self.updatePresent_();resolve();return;}self.layer_={predistorted:incomingLayer.predistorted,source:incomingLayer.source,leftBounds:leftBounds.slice(0),rightBounds:rightBounds.slice(0)};self.waitingForPresent_=false;if(self.layer_&&self.layer_.source){var fullscreenElement=self.wrapForFullscreen(self.layer_.source);var onFullscreenChange=function onFullscreenChange(){var actualFullscreenElement=getFullscreenElement();self.isPresenting=fullscreenElement===actualFullscreenElement;if(self.isPresenting){if(screen.orientation&&screen.orientation.lock){screen.orientation.lock('landscape-primary').catch(function(error){console.error('screen.orientation.lock() failed due to',error.message);});}self.waitingForPresent_=false;self.beginPresent_();resolve();}else{if(screen.orientation&&screen.orientation.unlock){screen.orientation.unlock();}self.removeFullscreenWrapper();self.disableWakeLock();self.endPresent_();self.removeFullscreenListeners_();}self.fireVRDisplayPresentChange_();};var onFullscreenError=function onFullscreenError(){if(!self.waitingForPresent_){return;}self.removeFullscreenWrapper();self.removeFullscreenListeners_();self.disableWakeLock();self.waitingForPresent_=false;self.isPresenting=false;reject(new Error('Unable to present.'));};self.addFullscreenListeners_(fullscreenElement,onFullscreenChange,onFullscreenError);if(requestFullscreen(fullscreenElement)){self.enableWakeLock();self.waitingForPresent_=true;}else if(isIOS()||isWebViewAndroid()){self.enableWakeLock();self.isPresenting=true;self.beginPresent_();self.fireVRDisplayPresentChange_();resolve();}}if(!self.waitingForPresent_&&!isIOS()){exitFullscreen();reject(new Error('Unable to present.'));}});};VRDisplay.prototype.exitPresent=function(){var wasPresenting=this.isPresenting;var self=this;this.isPresenting=false;this.layer_=null;this.disableWakeLock();return new Promise(function(resolve,reject){if(wasPresenting){if(!exitFullscreen()&&isIOS()){self.endPresent_();self.fireVRDisplayPresentChange_();}if(isWebViewAndroid()){self.removeFullscreenWrapper();self.removeFullscreenListeners_();self.endPresent_();self.fireVRDisplayPresentChange_();}resolve();}else{reject(new Error('Was not presenting to VRDisplay.'));}});};VRDisplay.prototype.getLayers=function(){if(this.layer_){return[this.layer_];}return[];};VRDisplay.prototype.fireVRDisplayPresentChange_=function(){var event=new CustomEvent('vrdisplaypresentchange',{detail:{display:this}});window.dispatchEvent(event);};VRDisplay.prototype.fireVRDisplayConnect_=function(){var event=new CustomEvent('vrdisplayconnect',{detail:{display:this}});window.dispatchEvent(event);};VRDisplay.prototype.addFullscreenListeners_=function(element,changeHandler,errorHandler){this.removeFullscreenListeners_();this.fullscreenEventTarget_=element;this.fullscreenChangeHandler_=changeHandler;this.fullscreenErrorHandler_=errorHandler;if(changeHandler){if(document.fullscreenEnabled){element.addEventListener('fullscreenchange',changeHandler,false);}else if(document.webkitFullscreenEnabled){element.addEventListener('webkitfullscreenchange',changeHandler,false);}else if(document.mozFullScreenEnabled){document.addEventListener('mozfullscreenchange',changeHandler,false);}else if(document.msFullscreenEnabled){element.addEventListener('msfullscreenchange',changeHandler,false);}}if(errorHandler){if(document.fullscreenEnabled){element.addEventListener('fullscreenerror',errorHandler,false);}else if(document.webkitFullscreenEnabled){element.addEventListener('webkitfullscreenerror',errorHandler,false);}else if(document.mozFullScreenEnabled){document.addEventListener('mozfullscreenerror',errorHandler,false);}else if(document.msFullscreenEnabled){element.addEventListener('msfullscreenerror',errorHandler,false);}}};VRDisplay.prototype.removeFullscreenListeners_=function(){if(!this.fullscreenEventTarget_)return;var element=this.fullscreenEventTarget_;if(this.fullscreenChangeHandler_){var changeHandler=this.fullscreenChangeHandler_;element.removeEventListener('fullscreenchange',changeHandler,false);element.removeEventListener('webkitfullscreenchange',changeHandler,false);document.removeEventListener('mozfullscreenchange',changeHandler,false);element.removeEventListener('msfullscreenchange',changeHandler,false);}if(this.fullscreenErrorHandler_){var errorHandler=this.fullscreenErrorHandler_;element.removeEventListener('fullscreenerror',errorHandler,false);element.removeEventListener('webkitfullscreenerror',errorHandler,false);document.removeEventListener('mozfullscreenerror',errorHandler,false);element.removeEventListener('msfullscreenerror',errorHandler,false);}this.fullscreenEventTarget_=null;this.fullscreenChangeHandler_=null;this.fullscreenErrorHandler_=null;};VRDisplay.prototype.enableWakeLock=function(){if(this.wakelock_){this.wakelock_.enable();}};VRDisplay.prototype.disableWakeLock=function(){if(this.wakelock_){this.wakelock_.disable();}};VRDisplay.prototype.beginPresent_=function(){};VRDisplay.prototype.endPresent_=function(){};VRDisplay.prototype.submitFrame=function(pose){};VRDisplay.prototype.getEyeParameters=function(whichEye){return null;};var config={ADDITIONAL_VIEWERS:[],DEFAULT_VIEWER:'',MOBILE_WAKE_LOCK:true,DEBUG:false,DPDB_URL:'https://dpdb.webvr.rocks/dpdb.json',K_FILTER:0.98,PREDICTION_TIME_S:0.040,CARDBOARD_UI_DISABLED:false,ROTATE_INSTRUCTIONS_DISABLED:false,YAW_ONLY:false,BUFFER_SCALE:0.5,DIRTY_SUBMIT_FRAME_BINDINGS:false};var Eye={LEFT:'left',RIGHT:'right'};function CardboardVRDisplay(config$$1){var defaults=extend({},config);config$$1=extend(defaults,config$$1||{});VRDisplay.call(this,{wakelock:config$$1.MOBILE_WAKE_LOCK});this.config=config$$1;this.displayName='Cardboard VRDisplay';this.capabilities=new VRDisplayCapabilities({hasPosition:false,hasOrientation:true,hasExternalDisplay:false,canPresent:true,maxLayers:1});this.stageParameters=null;this.bufferScale_=this.config.BUFFER_SCALE;this.poseSensor_=new PoseSensor(this.config);this.distorter_=null;this.cardboardUI_=null;this.dpdb_=new Dpdb(this.config.DPDB_URL,this.onDeviceParamsUpdated_.bind(this));this.deviceInfo_=new DeviceInfo(this.dpdb_.getDeviceParams(),config$$1.ADDITIONAL_VIEWERS);this.viewerSelector_=new ViewerSelector(config$$1.DEFAULT_VIEWER);this.viewerSelector_.onChange(this.onViewerChanged_.bind(this));this.deviceInfo_.setViewer(this.viewerSelector_.getCurrentViewer());if(!this.config.ROTATE_INSTRUCTIONS_DISABLED){this.rotateInstructions_=new RotateInstructions();}if(isIOS()){window.addEventListener('resize',this.onResize_.bind(this));}}CardboardVRDisplay.prototype=Object.create(VRDisplay.prototype);CardboardVRDisplay.prototype._getPose=function(){return{position:null,orientation:this.poseSensor_.getOrientation(),linearVelocity:null,linearAcceleration:null,angularVelocity:null,angularAcceleration:null};};CardboardVRDisplay.prototype._resetPose=function(){if(this.poseSensor_.resetPose){this.poseSensor_.resetPose();}};CardboardVRDisplay.prototype._getFieldOfView=function(whichEye){var fieldOfView;if(whichEye==Eye.LEFT){fieldOfView=this.deviceInfo_.getFieldOfViewLeftEye();}else if(whichEye==Eye.RIGHT){fieldOfView=this.deviceInfo_.getFieldOfViewRightEye();}else{console.error('Invalid eye provided: %s',whichEye);return null;}return fieldOfView;};CardboardVRDisplay.prototype._getEyeOffset=function(whichEye){var offset;if(whichEye==Eye.LEFT){offset=[-this.deviceInfo_.viewer.interLensDistance*0.5,0.0,0.0];}else if(whichEye==Eye.RIGHT){offset=[this.deviceInfo_.viewer.interLensDistance*0.5,0.0,0.0];}else{console.error('Invalid eye provided: %s',whichEye);return null;}return offset;};CardboardVRDisplay.prototype.getEyeParameters=function(whichEye){var offset=this._getEyeOffset(whichEye);var fieldOfView=this._getFieldOfView(whichEye);var eyeParams={offset:offset,renderWidth:this.deviceInfo_.device.width*0.5*this.bufferScale_,renderHeight:this.deviceInfo_.device.height*this.bufferScale_};Object.defineProperty(eyeParams,'fieldOfView',{enumerable:true,get:function get(){deprecateWarning('VRFieldOfView','VRFrameData\\'s projection matrices');return fieldOfView;}});return eyeParams;};CardboardVRDisplay.prototype.onDeviceParamsUpdated_=function(newParams){if(this.config.DEBUG){console.log('DPDB reported that device params were updated.');}this.deviceInfo_.updateDeviceParams(newParams);if(this.distorter_){this.distorter_.updateDeviceInfo(this.deviceInfo_);}};CardboardVRDisplay.prototype.updateBounds_=function(){if(this.layer_&&this.distorter_&&(this.layer_.leftBounds||this.layer_.rightBounds)){this.distorter_.setTextureBounds(this.layer_.leftBounds,this.layer_.rightBounds);}};CardboardVRDisplay.prototype.beginPresent_=function(){var gl=this.layer_.source.getContext('webgl');if(!gl)gl=this.layer_.source.getContext('experimental-webgl');if(!gl)gl=this.layer_.source.getContext('webgl2');if(!gl)return;if(this.layer_.predistorted){if(!this.config.CARDBOARD_UI_DISABLED){gl.canvas.width=getScreenWidth()*this.bufferScale_;gl.canvas.height=getScreenHeight()*this.bufferScale_;this.cardboardUI_=new CardboardUI(gl);}}else{if(!this.config.CARDBOARD_UI_DISABLED){this.cardboardUI_=new CardboardUI(gl);}this.distorter_=new CardboardDistorter(gl,this.cardboardUI_,this.config.BUFFER_SCALE,this.config.DIRTY_SUBMIT_FRAME_BINDINGS);this.distorter_.updateDeviceInfo(this.deviceInfo_);}if(this.cardboardUI_){this.cardboardUI_.listen(function(e){this.viewerSelector_.show(this.layer_.source.parentElement);e.stopPropagation();e.preventDefault();}.bind(this),function(e){this.exitPresent();e.stopPropagation();e.preventDefault();}.bind(this));}if(this.rotateInstructions_){if(isLandscapeMode()&&isMobile()){this.rotateInstructions_.showTemporarily(3000,this.layer_.source.parentElement);}else{this.rotateInstructions_.update();}}this.orientationHandler=this.onOrientationChange_.bind(this);window.addEventListener('orientationchange',this.orientationHandler);this.vrdisplaypresentchangeHandler=this.updateBounds_.bind(this);window.addEventListener('vrdisplaypresentchange',this.vrdisplaypresentchangeHandler);this.fireVRDisplayDeviceParamsChange_();};CardboardVRDisplay.prototype.endPresent_=function(){if(this.distorter_){this.distorter_.destroy();this.distorter_=null;}if(this.cardboardUI_){this.cardboardUI_.destroy();this.cardboardUI_=null;}if(this.rotateInstructions_){this.rotateInstructions_.hide();}this.viewerSelector_.hide();window.removeEventListener('orientationchange',this.orientationHandler);window.removeEventListener('vrdisplaypresentchange',this.vrdisplaypresentchangeHandler);};CardboardVRDisplay.prototype.updatePresent_=function(){this.endPresent_();this.beginPresent_();};CardboardVRDisplay.prototype.submitFrame=function(pose){if(this.distorter_){this.updateBounds_();this.distorter_.submitFrame();}else if(this.cardboardUI_&&this.layer_){var canvas=this.layer_.source.getContext('webgl').canvas;if(canvas.width!=this.lastWidth||canvas.height!=this.lastHeight){this.cardboardUI_.onResize();}this.lastWidth=canvas.width;this.lastHeight=canvas.height;this.cardboardUI_.render();}};CardboardVRDisplay.prototype.onOrientationChange_=function(e){this.viewerSelector_.hide();if(this.rotateInstructions_){this.rotateInstructions_.update();}this.onResize_();};CardboardVRDisplay.prototype.onResize_=function(e){if(this.layer_){var gl=this.layer_.source.getContext('webgl');var cssProperties=['position: absolute','top: 0','left: 0','width: 100vw','height: 100vh','border: 0','margin: 0','padding: 0px','box-sizing: content-box'];gl.canvas.setAttribute('style',cssProperties.join('; ')+';');safariCssSizeWorkaround(gl.canvas);}};CardboardVRDisplay.prototype.onViewerChanged_=function(viewer){this.deviceInfo_.setViewer(viewer);if(this.distorter_){this.distorter_.updateDeviceInfo(this.deviceInfo_);}this.fireVRDisplayDeviceParamsChange_();};CardboardVRDisplay.prototype.fireVRDisplayDeviceParamsChange_=function(){var event=new CustomEvent('vrdisplaydeviceparamschange',{detail:{vrdisplay:this,deviceInfo:this.deviceInfo_}});window.dispatchEvent(event);};CardboardVRDisplay.VRFrameData=VRFrameData;CardboardVRDisplay.VRDisplay=VRDisplay;return CardboardVRDisplay;});});var CardboardVRDisplay=unwrapExports(cardboardVrDisplay);var version=\"0.10.10\";var DefaultConfig={ADDITIONAL_VIEWERS:[],DEFAULT_VIEWER:'',PROVIDE_MOBILE_VRDISPLAY:true,MOBILE_WAKE_LOCK:true,DEBUG:false,DPDB_URL:'https://dpdb.webvr.rocks/dpdb.json',K_FILTER:0.98,PREDICTION_TIME_S:0.040,CARDBOARD_UI_DISABLED:false,ROTATE_INSTRUCTIONS_DISABLED:false,YAW_ONLY:false,BUFFER_SCALE:0.5,DIRTY_SUBMIT_FRAME_BINDINGS:false};function WebVRPolyfill(config){this.config=extend(extend({},DefaultConfig),config);this.polyfillDisplays=[];this.enabled=false;this.hasNative='getVRDisplays'in navigator;this.native={};this.native.getVRDisplays=navigator.getVRDisplays;this.native.VRFrameData=window.VRFrameData;this.native.VRDisplay=window.VRDisplay;if(!this.hasNative||this.config.PROVIDE_MOBILE_VRDISPLAY&&isMobile()){this.enable();this.getVRDisplays().then(function(displays){if(displays&&displays[0]&&displays[0].fireVRDisplayConnect_){displays[0].fireVRDisplayConnect_();}});}}WebVRPolyfill.prototype.getPolyfillDisplays=function(){if(this._polyfillDisplaysPopulated){return this.polyfillDisplays;}if(isMobile()){var vrDisplay=new CardboardVRDisplay({ADDITIONAL_VIEWERS:this.config.ADDITIONAL_VIEWERS,DEFAULT_VIEWER:this.config.DEFAULT_VIEWER,MOBILE_WAKE_LOCK:this.config.MOBILE_WAKE_LOCK,DEBUG:this.config.DEBUG,DPDB_URL:this.config.DPDB_URL,CARDBOARD_UI_DISABLED:this.config.CARDBOARD_UI_DISABLED,K_FILTER:this.config.K_FILTER,PREDICTION_TIME_S:this.config.PREDICTION_TIME_S,ROTATE_INSTRUCTIONS_DISABLED:this.config.ROTATE_INSTRUCTIONS_DISABLED,YAW_ONLY:this.config.YAW_ONLY,BUFFER_SCALE:this.config.BUFFER_SCALE,DIRTY_SUBMIT_FRAME_BINDINGS:this.config.DIRTY_SUBMIT_FRAME_BINDINGS});this.polyfillDisplays.push(vrDisplay);}this._polyfillDisplaysPopulated=true;return this.polyfillDisplays;};WebVRPolyfill.prototype.enable=function(){this.enabled=true;if(this.hasNative&&this.native.VRFrameData){var NativeVRFrameData=this.native.VRFrameData;var nativeFrameData=new this.native.VRFrameData();var nativeGetFrameData=this.native.VRDisplay.prototype.getFrameData;window.VRDisplay.prototype.getFrameData=function(frameData){if(frameData instanceof NativeVRFrameData){nativeGetFrameData.call(this,frameData);return;}nativeGetFrameData.call(this,nativeFrameData);frameData.pose=nativeFrameData.pose;copyArray(nativeFrameData.leftProjectionMatrix,frameData.leftProjectionMatrix);copyArray(nativeFrameData.rightProjectionMatrix,frameData.rightProjectionMatrix);copyArray(nativeFrameData.leftViewMatrix,frameData.leftViewMatrix);copyArray(nativeFrameData.rightViewMatrix,frameData.rightViewMatrix);};}navigator.getVRDisplays=this.getVRDisplays.bind(this);window.VRDisplay=CardboardVRDisplay.VRDisplay;window.VRFrameData=CardboardVRDisplay.VRFrameData;};WebVRPolyfill.prototype.getVRDisplays=function(){var _this=this;var config=this.config;if(!this.hasNative){return Promise.resolve(this.getPolyfillDisplays());}return this.native.getVRDisplays.call(navigator).then(function(nativeDisplays){return nativeDisplays.length>0?nativeDisplays:_this.getPolyfillDisplays();});};WebVRPolyfill.version=version;WebVRPolyfill.VRFrameData=CardboardVRDisplay.VRFrameData;WebVRPolyfill.VRDisplay=CardboardVRDisplay.VRDisplay;var webvrPolyfill=Object.freeze({default:WebVRPolyfill});var require$$0=webvrPolyfill&&WebVRPolyfill||webvrPolyfill;if(typeof commonjsGlobal!=='undefined'&&commonjsGlobal.window){if(!commonjsGlobal.document){commonjsGlobal.document=commonjsGlobal.window.document;}if(!commonjsGlobal.navigator){commonjsGlobal.navigator=commonjsGlobal.window.navigator;}}var src=require$$0;return src;});}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});},{}],47:[function(_dereq_,module,exports){var newline=/\\n/;var newlineChar='\\n';var whitespace=/\\s/;module.exports=function(text,opt){var lines=module.exports.lines(text,opt);return lines.map(function(line){return text.substring(line.start,line.end);}).join('\\n');};module.exports.lines=function wordwrap(text,opt){opt=opt||{};//zero width results in nothing visible\nif(opt.width===0&&opt.mode!=='nowrap')return[];text=text||'';var width=typeof opt.width==='number'?opt.width:Number.MAX_VALUE;var start=Math.max(0,opt.start||0);var end=typeof opt.end==='number'?opt.end:text.length;var mode=opt.mode;var measure=opt.measure||monospace;if(mode==='pre')return pre(measure,text,start,end,width);else return greedy(measure,text,start,end,width,mode);};function idxOf(text,chr,start,end){var idx=text.indexOf(chr,start);if(idx===-1||idx>end)return end;return idx;}function isWhitespace(chr){return whitespace.test(chr);}function pre(measure,text,start,end,width){var lines=[];var lineStart=start;for(var i=start;i<end&&i<text.length;i++){var chr=text.charAt(i);var isNewline=newline.test(chr);//If we've reached a newline, then step down a line\n//Or if we've reached the EOF\nif(isNewline||i===end-1){var lineEnd=isNewline?i:i+1;var measured=measure(text,lineStart,lineEnd,width);lines.push(measured);lineStart=i+1;}}return lines;}function greedy(measure,text,start,end,width,mode){//A greedy word wrapper based on LibGDX algorithm\n//https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\nvar lines=[];var testWidth=width;//if 'nowrap' is specified, we only wrap on newline chars\nif(mode==='nowrap')testWidth=Number.MAX_VALUE;while(start<end&&start<text.length){//get next newline position\nvar newLine=idxOf(text,newlineChar,start,end);//eat whitespace at start of line\nwhile(start<newLine){if(!isWhitespace(text.charAt(start)))break;start++;}//determine visible # of glyphs for the available width\nvar measured=measure(text,start,newLine,testWidth);var lineEnd=start+(measured.end-measured.start);var nextStart=lineEnd+newlineChar.length;//if we had to cut the line before the next newline...\nif(lineEnd<newLine){//find char to break on\nwhile(lineEnd>start){if(isWhitespace(text.charAt(lineEnd)))break;lineEnd--;}if(lineEnd===start){if(nextStart>start+newlineChar.length)nextStart--;lineEnd=nextStart;// If no characters to break, show all.\n}else{nextStart=lineEnd;//eat whitespace at end of line\nwhile(lineEnd>start){if(!isWhitespace(text.charAt(lineEnd-newlineChar.length)))break;lineEnd--;}}}if(lineEnd>=start){var result=measure(text,start,lineEnd,testWidth);lines.push(result);}start=nextStart;}return lines;}//determines the visible number of glyphs within a given width\nfunction monospace(text,start,end,width){var glyphs=Math.min(width,end-start);return{start:start,end:start+glyphs};}},{}],48:[function(_dereq_,module,exports){\"use strict\";var window=_dereq_(\"global/window\");var isFunction=_dereq_(\"is-function\");var parseHeaders=_dereq_(\"parse-headers\");var xtend=_dereq_(\"xtend\");module.exports=createXHR;createXHR.XMLHttpRequest=window.XMLHttpRequest||noop;createXHR.XDomainRequest=\"withCredentials\"in new createXHR.XMLHttpRequest()?createXHR.XMLHttpRequest:window.XDomainRequest;forEachArray([\"get\",\"put\",\"post\",\"patch\",\"head\",\"delete\"],function(method){createXHR[method===\"delete\"?\"del\":method]=function(uri,options,callback){options=initParams(uri,options,callback);options.method=method.toUpperCase();return _createXHR(options);};});function forEachArray(array,iterator){for(var i=0;i<array.length;i++){iterator(array[i]);}}function isEmpty(obj){for(var i in obj){if(obj.hasOwnProperty(i))return false;}return true;}function initParams(uri,options,callback){var params=uri;if(isFunction(options)){callback=options;if(typeof uri===\"string\"){params={uri:uri};}}else{params=xtend(options,{uri:uri});}params.callback=callback;return params;}function createXHR(uri,options,callback){options=initParams(uri,options,callback);return _createXHR(options);}function _createXHR(options){if(typeof options.callback===\"undefined\"){throw new Error(\"callback argument missing\");}var called=false;var callback=function cbOnce(err,response,body){if(!called){called=true;options.callback(err,response,body);}};function readystatechange(){if(xhr.readyState===4){setTimeout(loadFunc,0);}}function getBody(){// Chrome with requestType=blob throws errors arround when even testing access to responseText\nvar body=undefined;if(xhr.response){body=xhr.response;}else{body=xhr.responseText||getXml(xhr);}if(isJson){try{body=JSON.parse(body);}catch(e){}}return body;}function errorFunc(evt){clearTimeout(timeoutTimer);if(!(evt instanceof Error)){evt=new Error(\"\"+(evt||\"Unknown XMLHttpRequest Error\"));}evt.statusCode=0;return callback(evt,failureResponse);}// will load the data & process the response in a special response object\nfunction loadFunc(){if(aborted)return;var status;clearTimeout(timeoutTimer);if(options.useXDR&&xhr.status===undefined){//IE8 CORS GET successful response doesn't have a status field, but body is fine\nstatus=200;}else{status=xhr.status===1223?204:xhr.status;}var response=failureResponse;var err=null;if(status!==0){response={body:getBody(),statusCode:status,method:method,headers:{},url:uri,rawRequest:xhr};if(xhr.getAllResponseHeaders){//remember xhr can in fact be XDR for CORS in IE\nresponse.headers=parseHeaders(xhr.getAllResponseHeaders());}}else{err=new Error(\"Internal XMLHttpRequest Error\");}return callback(err,response,response.body);}var xhr=options.xhr||null;if(!xhr){if(options.cors||options.useXDR){xhr=new createXHR.XDomainRequest();}else{xhr=new createXHR.XMLHttpRequest();}}var key;var aborted;var uri=xhr.url=options.uri||options.url;var method=xhr.method=options.method||\"GET\";var body=options.body||options.data;var headers=xhr.headers=options.headers||{};var sync=!!options.sync;var isJson=false;var timeoutTimer;var failureResponse={body:undefined,headers:{},statusCode:0,method:method,url:uri,rawRequest:xhr};if(\"json\"in options&&options.json!==false){isJson=true;headers[\"accept\"]||headers[\"Accept\"]||(headers[\"Accept\"]=\"application/json\");//Don't override existing accept header declared by user\nif(method!==\"GET\"&&method!==\"HEAD\"){headers[\"content-type\"]||headers[\"Content-Type\"]||(headers[\"Content-Type\"]=\"application/json\");//Don't override existing accept header declared by user\nbody=JSON.stringify(options.json===true?body:options.json);}}xhr.onreadystatechange=readystatechange;xhr.onload=loadFunc;xhr.onerror=errorFunc;// IE9 must have onprogress be set to a unique function.\nxhr.onprogress=function(){// IE must die\n};xhr.onabort=function(){aborted=true;};xhr.ontimeout=errorFunc;xhr.open(method,uri,!sync,options.username,options.password);//has to be after open\nif(!sync){xhr.withCredentials=!!options.withCredentials;}// Cannot set timeout with sync request\n// not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n// both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\nif(!sync&&options.timeout>0){timeoutTimer=setTimeout(function(){if(aborted)return;aborted=true;//IE9 may still call readystatechange\nxhr.abort(\"timeout\");var e=new Error(\"XMLHttpRequest timeout\");e.code=\"ETIMEDOUT\";errorFunc(e);},options.timeout);}if(xhr.setRequestHeader){for(key in headers){if(headers.hasOwnProperty(key)){xhr.setRequestHeader(key,headers[key]);}}}else if(options.headers&&!isEmpty(options.headers)){throw new Error(\"Headers cannot be set on an XDomainRequest object\");}if(\"responseType\"in options){xhr.responseType=options.responseType;}if(\"beforeSend\"in options&&typeof options.beforeSend===\"function\"){options.beforeSend(xhr);}// Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n// XMLHttpRequest spec says to pass null as body to indicate no body\n// See https://github.com/naugtur/xhr/issues/100.\nxhr.send(body||null);return xhr;}function getXml(xhr){// xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n// See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\ntry{if(xhr.responseType===\"document\"){return xhr.responseXML;}var firefoxBugTakenEffect=xhr.responseXML&&xhr.responseXML.documentElement.nodeName===\"parsererror\";if(xhr.responseType===\"\"&&!firefoxBugTakenEffect){return xhr.responseXML;}}catch(e){}return null;}function noop(){}},{\"global/window\":16,\"is-function\":20,\"parse-headers\":31,\"xtend\":50}],49:[function(_dereq_,module,exports){module.exports=function xmlparser(){//common browsers\nif(typeof self.DOMParser!=='undefined'){return function(str){var parser=new self.DOMParser();return parser.parseFromString(str,'application/xml');};}//IE8 fallback\nif(typeof self.ActiveXObject!=='undefined'&&new self.ActiveXObject('Microsoft.XMLDOM')){return function(str){var xmlDoc=new self.ActiveXObject(\"Microsoft.XMLDOM\");xmlDoc.async=\"false\";xmlDoc.loadXML(str);return xmlDoc;};}//last resort fallback\nreturn function(str){var div=document.createElement('div');div.innerHTML=str;return div;};}();},{}],50:[function(_dereq_,module,exports){module.exports=extend;var hasOwnProperty=Object.prototype.hasOwnProperty;function extend(){var target={};for(var i=0;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;}},{}],51:[function(_dereq_,module,exports){module.exports={\"name\":\"aframe\",\"version\":\"0.9.0\",\"description\":\"A web framework for building virtual reality experiences.\",\"homepage\":\"https://aframe.io/\",\"main\":\"dist/aframe-master.js\",\"scripts\":{\"browserify\":\"browserify src/index.js -s 'AFRAME' -p browserify-derequire\",\"build\":\"shx mkdir -p build/ && npm run browserify -- --debug -t [envify --INSPECTOR_VERSION dev] -o build/aframe.js\",\"codecov\":\"codecov\",\"dev\":\"npm run build && cross-env INSPECTOR_VERSION=dev node ./scripts/budo -t envify\",\"dist\":\"node scripts/updateVersionLog.js && npm run dist:min && npm run dist:max\",\"dist:max\":\"npm run browserify -s -- --debug | exorcist dist/aframe-master.js.map > dist/aframe-master.js\",\"dist:min\":\"npm run browserify -s -- --debug -p [minifyify --map aframe-master.min.js.map --output dist/aframe-master.min.js.map] -o dist/aframe-master.min.js\",\"docs\":\"markserv --dir docs --port 9001\",\"preghpages\":\"node ./scripts/preghpages.js\",\"ghpages\":\"ghpages -p gh-pages/\",\"lint\":\"semistandard -v | snazzy\",\"lint:fix\":\"semistandard --fix\",\"precommit\":\"npm run lint\",\"prepush\":\"node scripts/testOnlyCheck.js\",\"prerelease\":\"node scripts/release.js 0.8.2 0.9.0\",\"start\":\"npm run dev\",\"start:https\":\"cross-env SSL=true npm run dev\",\"test\":\"karma start ./tests/karma.conf.js\",\"test:docs\":\"node scripts/docsLint.js\",\"test:firefox\":\"npm test -- --browsers Firefox\",\"test:chrome\":\"npm test -- --browsers Chrome\",\"test:nobrowser\":\"NO_BROWSER=true npm test\",\"test:node\":\"mocha --ui tdd tests/node\"},\"repository\":\"aframevr/aframe\",\"license\":\"MIT\",\"files\":[\"dist/*\",\"docs/**/*\",\"src/**/*\",\"vendor/**/*\"],\"dependencies\":{\"animejs\":\"^2.2.0\",\"browserify-css\":\"^0.8.4\",\"custom-event-polyfill\":\"^1.0.6\",\"debug\":\"ngokevin/debug#noTimestamp\",\"deep-assign\":\"^2.0.0\",\"document-register-element\":\"dmarcos/document-register-element#8ccc532b7f3744be954574caf3072a5fd260ca90\",\"envify\":\"^3.4.1\",\"load-bmfont\":\"^1.2.3\",\"object-assign\":\"^4.0.1\",\"present\":\"0.0.6\",\"promise-polyfill\":\"^3.1.0\",\"style-attr\":\"^1.0.2\",\"super-three\":\"^0.101.0\",\"three-bmfont-text\":\"^2.1.0\",\"webvr-polyfill\":\"^0.10.10\"},\"devDependencies\":{\"browserify\":\"^13.1.0\",\"browserify-derequire\":\"^0.9.4\",\"browserify-istanbul\":\"^2.0.0\",\"budo\":\"^9.2.0\",\"chai\":\"^3.5.0\",\"chai-shallow-deep-equal\":\"^1.4.0\",\"chalk\":\"^1.1.3\",\"codecov\":\"^1.0.1\",\"cross-env\":\"^5.0.1\",\"exorcist\":\"^0.4.0\",\"ghpages\":\"0.0.8\",\"git-rev\":\"^0.2.1\",\"glob\":\"^7.1.1\",\"husky\":\"^0.11.7\",\"istanbul\":\"^0.4.5\",\"jsdom\":\"^9.11.0\",\"karma\":\"1.4.1\",\"karma-browserify\":\"^5.1.0\",\"karma-chai-shallow-deep-equal\":\"0.0.4\",\"karma-chrome-launcher\":\"^2.0.0\",\"karma-coverage\":\"^1.1.1\",\"karma-env-preprocessor\":\"^0.1.1\",\"karma-firefox-launcher\":\"^1.0.0\",\"karma-mocha\":\"^1.1.1\",\"karma-mocha-reporter\":\"^2.1.0\",\"karma-sinon-chai\":\"1.2.4\",\"lolex\":\"^1.5.1\",\"markserv\":\"github:sukima/markserv#feature/fix-broken-websoketio-link\",\"minifyify\":\"^7.3.3\",\"mocha\":\"^3.0.2\",\"mozilla-download\":\"^1.1.1\",\"replace-in-file\":\"^2.5.3\",\"semistandard\":\"^9.0.0\",\"shelljs\":\"^0.7.7\",\"shx\":\"^0.2.2\",\"sinon\":\"^1.17.5\",\"sinon-chai\":\"2.8.0\",\"snazzy\":\"^5.0.0\",\"too-wordy\":\"ngokevin/too-wordy\",\"uglifyjs\":\"^2.4.10\",\"write-good\":\"^0.9.1\"},\"link\":true,\"browserify\":{\"transform\":[\"browserify-css\",\"envify\"]},\"semistandard\":{\"ignore\":[\"build/**\",\"dist/**\",\"examples/**/shaders/*.js\",\"**/vendor/**\"]},\"keywords\":[\"3d\",\"aframe\",\"cardboard\",\"components\",\"oculus\",\"three\",\"three.js\",\"rift\",\"vive\",\"vr\",\"web-components\",\"webvr\"],\"browserify-css\":{\"minify\":true},\"engines\":{\"node\":\">= 4.6.0\",\"npm\":\"^2.15.9\"}};},{}],52:[function(_dereq_,module,exports){var anime=_dereq_('animejs');var components=_dereq_('../core/component').components;var registerComponent=_dereq_('../core/component').registerComponent;var THREE=_dereq_('../lib/three');var utils=_dereq_('../utils');var colorHelperFrom=new THREE.Color();var colorHelperTo=new THREE.Color();var getComponentProperty=utils.entity.getComponentProperty;var setComponentProperty=utils.entity.setComponentProperty;var splitCache={};var TYPE_COLOR='color';var PROP_POSITION='position';var PROP_ROTATION='rotation';var PROP_SCALE='scale';var STRING_COMPONENTS='components';var STRING_OBJECT3D='object3D';/**\n * Animation component for A-Frame using anime.js.\n *\n * The component manually controls the tick by setting `autoplay: false` on anime.js and\n * manually * calling `animation.tick()` in the tick handler. To pause or resume, we toggle a\n * boolean * flag * `isAnimationPlaying`.\n *\n * anime.js animation config for tweenining Javascript objects and values works as:\n *\n *  config = {\n *    targets: {foo: 0.0, bar: '#000'},\n *    foo: 1.0,\n *    bar: '#FFF'\n *  }\n *\n * The above will tween each property in `targets`. The `to` values are set in the root of\n * the config.\n *\n * @member {object} animation - anime.js instance.\n * @member {boolean} animationIsPlaying - Control if animation is playing.\n */module.exports.Component=registerComponent('animation',{schema:{autoplay:{default:true},delay:{default:0},dir:{default:''},dur:{default:1000},easing:{default:'easeInQuad'},elasticity:{default:400},enabled:{default:true},from:{default:''},loop:{default:0,parse:function(value){// Boolean or integer.\nif(value===true||value==='true'){return true;}if(value===false||value==='false'){return false;}return parseInt(value,10);}},property:{default:''},startEvents:{type:'array'},pauseEvents:{type:'array'},resumeEvents:{type:'array'},round:{default:false},to:{default:''},type:{default:''},isRawProperty:{default:false}},multiple:true,init:function(){var self=this;this.eventDetail={name:this.attrName};this.time=0;this.animation=null;this.animationIsPlaying=false;this.onStartEvent=this.onStartEvent.bind(this);this.beginAnimation=this.beginAnimation.bind(this);this.pauseAnimation=this.pauseAnimation.bind(this);this.resumeAnimation=this.resumeAnimation.bind(this);this.fromColor={};this.toColor={};this.targets={};this.targetsArray=[];this.updateConfigForDefault=this.updateConfigForDefault.bind(this);this.updateConfigForRawColor=this.updateConfigForRawColor.bind(this);this.config={complete:function(){self.animationIsPlaying=false;self.el.emit('animationcomplete',self.eventDetail,false);if(self.id){self.el.emit('animationcomplete__'+self.id,self.eventDetail,false);}}};},update:function(oldData){var config=this.config;var data=this.data;this.animationIsPlaying=false;if(!this.data.enabled){return;}if(!data.property){return;}// Base config.\nconfig.autoplay=false;config.direction=data.dir;config.duration=data.dur;config.easing=data.easing;config.elasticity=data.elasticity;config.loop=data.loop;config.round=data.round;// Start new animation.\nthis.createAndStartAnimation();},tick:function(t,dt){if(!this.animationIsPlaying){return;}this.time+=dt;this.animation.tick(this.time);},remove:function(){this.pauseAnimation();this.removeEventListeners();},pause:function(){this.paused=true;this.pausedWasPlaying=this.animationIsPlaying;this.pauseAnimation();this.removeEventListeners();},/**\n   * `play` handler only for resuming scene.\n   */play:function(){if(!this.paused){return;}this.paused=false;this.addEventListeners();if(this.pausedWasPlaying){this.resumeAnimation();this.pausedWasPlaying=false;}},/**\n   * Start animation from scratch.\n   */createAndStartAnimation:function(){var data=this.data;this.updateConfig();this.animationIsPlaying=false;this.animation=anime(this.config);this.removeEventListeners();this.addEventListeners();// Wait for start events for animation.\nif(!data.autoplay||data.startEvents&&data.startEvents.length){return;}// Delay animation.\nif(data.delay){setTimeout(this.beginAnimation,data.delay);return;}// Play animation.\nthis.beginAnimation();},/**\n   * This is before animation start (including from startEvents).\n   * Set to initial state (config.from, time = 0, seekTime = 0).\n   */beginAnimation:function(){this.updateConfig();this.time=0;this.animationIsPlaying=true;this.stopRelatedAnimations();this.el.emit('animationbegin',this.eventDetail,false);},pauseAnimation:function(){this.animationIsPlaying=false;},resumeAnimation:function(){this.animationIsPlaying=true;},/**\n   * startEvents callback.\n   */onStartEvent:function(){if(!this.data.enabled){return;}this.updateConfig();if(this.animation){this.animation.pause();}this.animation=anime(this.config);// Include the delay before each start event.\nif(this.data.delay){setTimeout(this.beginAnimation,this.data.delay);return;}this.beginAnimation();},/**\n   * rawProperty: true and type: color;\n   */updateConfigForRawColor:function(){var config=this.config;var data=this.data;var el=this.el;var from;var key;var to;if(this.waitComponentInitRawProperty(this.updateConfigForRawColor)){return;}from=data.from===''?getRawProperty(el,data.property):data.from;to=data.to;// Use r/g/b vector for color type.\nthis.setColorConfig(from,to);from=this.fromColor;to=this.toColor;this.targetsArray.length=0;this.targetsArray.push(from);config.targets=this.targetsArray;for(key in to){config[key]=to[key];}config.update=function(){var lastValue={};return function(anim){var value;value=anim.animatables[0].target;// For animation timeline.\nif(value.r===lastValue.r&&value.g===lastValue.g&&value.b===lastValue.b){return;}setRawProperty(el,data.property,value,data.type);};}();},/**\n   * Stuff property into generic `property` key.\n   */updateConfigForDefault:function(){var config=this.config;var data=this.data;var el=this.el;var from;var isBoolean;var isNumber;var to;if(this.waitComponentInitRawProperty(this.updateConfigForDefault)){return;}if(data.from===''){// Infer from.\nfrom=isRawProperty(data)?getRawProperty(el,data.property):getComponentProperty(el,data.property);}else{// Explicit from.\nfrom=data.from;}to=data.to;isNumber=!isNaN(from||to);if(isNumber){from=parseFloat(from);to=parseFloat(to);}else{from=from?from.toString():from;to=to?to.toString():to;}// Convert booleans to integer to allow boolean flipping.\nisBoolean=data.to==='true'||data.to==='false'||data.to===true||data.to===false;if(isBoolean){from=data.from==='true'||data.from===true?1:0;to=data.to==='true'||data.to===true?1:0;}this.targets.aframeProperty=from;config.targets=this.targets;config.aframeProperty=to;config.update=function(){var lastValue;return function(anim){var value;value=anim.animatables[0].target.aframeProperty;// Need to do a last value check for animation timeline since all the tweening\n// begins simultaenously even if the value has not changed. Also better for perf\n// anyways.\nif(value===lastValue){return;}lastValue=value;if(isBoolean){value=value>=1;}if(isRawProperty(data)){setRawProperty(el,data.property,value,data.type);}else{setComponentProperty(el,data.property,value);}};}();},/**\n   * Extend x/y/z/w onto the config.\n   * Update vector by modifying object3D.\n   */updateConfigForVector:function(){var config=this.config;var data=this.data;var el=this.el;var key;var from;var to;// Parse coordinates.\nfrom=data.from!==''?utils.coordinates.parse(data.from)// If data.from defined, use that.\n:getComponentProperty(el,data.property);// If data.from not defined, get on the fly.\nto=utils.coordinates.parse(data.to);if(data.property===PROP_ROTATION){toRadians(from);toRadians(to);}// Set to and from.\nthis.targetsArray.length=0;this.targetsArray.push(from);config.targets=this.targetsArray;for(key in to){config[key]=to[key];}// If animating object3D transformation, run more optimized updater.\nif(data.property===PROP_POSITION||data.property===PROP_ROTATION||data.property===PROP_SCALE){config.update=function(){var lastValue={};return function(anim){var value=anim.animatables[0].target;if(data.property===PROP_SCALE){value.x=Math.max(0.0001,value.x);value.y=Math.max(0.0001,value.y);value.z=Math.max(0.0001,value.z);}// For animation timeline.\nif(value.x===lastValue.x&&value.y===lastValue.y&&value.z===lastValue.z){return;}lastValue.x=value.x;lastValue.y=value.y;lastValue.z=value.z;el.object3D[data.property].set(value.x,value.y,value.z);};}();return;}// Animating some vector.\nconfig.update=function(){var lastValue={};return function(anim){var value=anim.animations[0].target;// Animate rotation through radians.\n// For animation timeline.\nif(value.x===lastValue.x&&value.y===lastValue.y&&value.z===lastValue.z){return;}lastValue.x=value.x;lastValue.y=value.y;lastValue.z=value.z;setComponentProperty(el,data.property,value);};}();},/**\n   * Update the config before each run.\n   */updateConfig:function(){var propType;// Route config type.\npropType=getPropertyType(this.el,this.data.property);if(isRawProperty(this.data)&&this.data.type===TYPE_COLOR){this.updateConfigForRawColor();}else if(propType==='vec2'||propType==='vec3'||propType==='vec4'){this.updateConfigForVector();}else{this.updateConfigForDefault();}},/**\n   * Wait for component to initialize.\n   */waitComponentInitRawProperty:function(cb){var componentName;var data=this.data;var el=this.el;var self=this;if(data.from!==''){return false;}if(!data.property.startsWith(STRING_COMPONENTS)){return false;}componentName=splitDot(data.property)[1];if(el.components[componentName]){return false;}el.addEventListener('componentinitialized',function wait(evt){if(evt.detail.name!==componentName){return;}cb();// Since the config was created async, create the animation now since we missed it\n// earlier.\nself.animation=anime(self.config);el.removeEventListener('componentinitialized',wait);});return true;},/**\n   * Make sure two animations on the same property don't fight each other.\n   * e.g., animation__mouseenter=\"property: material.opacity\"\n   *       animation__mouseleave=\"property: material.opacity\"\n   */stopRelatedAnimations:function(){var component;var componentName;for(componentName in this.el.components){component=this.el.components[componentName];if(componentName===this.attrName){continue;}if(component.name!=='animation'){continue;}if(!component.animationIsPlaying){continue;}if(component.data.property!==this.data.property){continue;}component.animationIsPlaying=false;}},addEventListeners:function(){var data=this.data;var el=this.el;addEventListeners(el,data.startEvents,this.onStartEvent);addEventListeners(el,data.pauseEvents,this.pauseAnimation);addEventListeners(el,data.resumeEvents,this.resumeAnimation);},removeEventListeners:function(){var data=this.data;var el=this.el;removeEventListeners(el,data.startEvents,this.onStartEvent);removeEventListeners(el,data.pauseEvents,this.pauseAnimation);removeEventListeners(el,data.resumeEvents,this.resumeAnimation);},setColorConfig:function(from,to){colorHelperFrom.set(from);colorHelperTo.set(to);from=this.fromColor;to=this.toColor;from.r=colorHelperFrom.r;from.g=colorHelperFrom.g;from.b=colorHelperFrom.b;to.r=colorHelperTo.r;to.g=colorHelperTo.g;to.b=colorHelperTo.b;}});/**\n * Given property name, check schema to see what type we are animating.\n * We just care whether the property is a vector.\n */function getPropertyType(el,property){var component;var componentName;var split;var propertyName;split=property.split('.');componentName=split[0];propertyName=split[1];component=el.components[componentName]||components[componentName];// Primitives.\nif(!component){return null;}// Dynamic schema. We only care about vectors anyways.\nif(propertyName&&!component.schema[propertyName]){return null;}// Multi-prop.\nif(propertyName){return component.schema[propertyName].type;}// Single-prop.\nreturn component.schema.type;}/**\n * Convert object to radians.\n */function toRadians(obj){obj.x=THREE.Math.degToRad(obj.x);obj.y=THREE.Math.degToRad(obj.y);obj.z=THREE.Math.degToRad(obj.z);}function addEventListeners(el,eventNames,handler){var i;for(i=0;i<eventNames.length;i++){el.addEventListener(eventNames[i],handler);}}function removeEventListeners(el,eventNames,handler){var i;for(i=0;i<eventNames.length;i++){el.removeEventListener(eventNames[i],handler);}}function getRawProperty(el,path){var i;var split;var value;split=splitDot(path);value=el;for(i=0;i<split.length;i++){value=value[split[i]];}return value;}function setRawProperty(el,path,value,type){var i;var split;var propertyName;var targetValue;if(path.startsWith('object3D.rotation')){value=THREE.Math.degToRad(value);}// Walk.\nsplit=splitDot(path);targetValue=el;for(i=0;i<split.length-1;i++){targetValue=targetValue[split[i]];}propertyName=split[split.length-1];// Raw color.\nif(type===TYPE_COLOR){if('r'in targetValue[propertyName]){targetValue[propertyName].r=value.r;targetValue[propertyName].g=value.g;targetValue[propertyName].b=value.b;}else{targetValue[propertyName].x=value.r;targetValue[propertyName].y=value.g;targetValue[propertyName].z=value.b;}return;}targetValue[propertyName]=value;}function splitDot(path){if(path in splitCache){return splitCache[path];}splitCache[path]=path.split('.');return splitCache[path];}function isRawProperty(data){return data.isRawProperty||data.property.startsWith(STRING_COMPONENTS)||data.property.startsWith(STRING_OBJECT3D);}},{\"../core/component\":103,\"../lib/three\":151,\"../utils\":176,\"animejs\":2}],53:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;var THREE=_dereq_('../lib/three');/**\n * Camera component.\n * Pairs along with camera system to handle tracking the active camera.\n */module.exports.Component=registerComponent('camera',{schema:{active:{default:true},far:{default:10000},fov:{default:80,min:0},near:{default:0.005,min:0},spectator:{default:false},zoom:{default:1,min:0}},/**\n   * Initialize three.js camera and add it to the entity.\n   * Add reference from scene to this entity as the camera.\n   */init:function(){var camera;var el=this.el;// Create camera.\ncamera=this.camera=new THREE.PerspectiveCamera();el.setObject3D('camera',camera);},/**\n   * Update three.js camera.\n   */update:function(oldData){var data=this.data;var camera=this.camera;// Update properties.\ncamera.aspect=data.aspect||window.innerWidth/window.innerHeight;camera.far=data.far;camera.fov=data.fov;camera.near=data.near;camera.zoom=data.zoom;camera.updateProjectionMatrix();this.updateActiveCamera(oldData);this.updateSpectatorCamera(oldData);},updateActiveCamera:function(oldData){var data=this.data;var el=this.el;var system=this.system;// Active property did not change.\nif(oldData&&oldData.active===data.active||data.spectator){return;}// If `active` property changes, or first update, handle active camera with system.\nif(data.active&&system.activeCameraEl!==el){// Camera enabled. Set camera to this camera.\nsystem.setActiveCamera(el);}else if(!data.active&&system.activeCameraEl===el){// Camera disabled. Set camera to another camera.\nsystem.disableActiveCamera();}},updateSpectatorCamera:function(oldData){var data=this.data;var el=this.el;var system=this.system;// spectator property did not change.\nif(oldData&&oldData.spectator===data.spectator){return;}// If `spectator` property changes, or first update, handle spectator camera with system.\nif(data.spectator&&system.spectatorCameraEl!==el){// Camera enabled. Set camera to this camera.\nsystem.setSpectatorCamera(el);}else if(!data.spectator&&system.spectatorCameraEl===el){// Camera disabled. Set camera to another camera.\nsystem.disableSpectatorCamera();}},/**\n   * Remove camera on remove (callback).\n   */remove:function(){this.el.removeObject3D('camera');}});},{\"../core/component\":103,\"../lib/three\":151}],54:[function(_dereq_,module,exports){/* global THREE */var registerComponent=_dereq_('../core/component').registerComponent;var utils=_dereq_('../utils/');var bind=utils.bind;var EVENTS={CLICK:'click',FUSING:'fusing',MOUSEENTER:'mouseenter',MOUSEDOWN:'mousedown',MOUSELEAVE:'mouseleave',MOUSEUP:'mouseup'};var STATES={FUSING:'cursor-fusing',HOVERING:'cursor-hovering',HOVERED:'cursor-hovered'};var CANVAS_EVENTS={DOWN:['mousedown','touchstart'],UP:['mouseup','touchend']};var CANVAS_HOVER_CLASS='a-mouse-cursor-hover';/**\n * Cursor component. Applies the raycaster component specifically for starting the raycaster\n * from the camera and pointing from camera's facing direction, and then only returning the\n * closest intersection. Cursor can be fine-tuned by setting raycaster properties.\n *\n * @member {object} fuseTimeout - Timeout to trigger fuse-click.\n * @member {Element} cursorDownEl - Entity that was last mousedowned during current click.\n * @member {object} intersection - Attributes of the current intersection event, including\n *         3D- and 2D-space coordinates. See: http://threejs.org/docs/api/core/Raycaster.html\n * @member {Element} intersectedEl - Currently-intersected entity. Used to keep track to\n *         emit events when unintersecting.\n */module.exports.Component=registerComponent('cursor',{dependencies:['raycaster'],schema:{downEvents:{default:[]},fuse:{default:utils.device.isMobile()},fuseTimeout:{default:1500,min:0},mouseCursorStylesEnabled:{default:true},upEvents:{default:[]},rayOrigin:{default:'entity',oneOf:['mouse','entity']}},init:function(){var self=this;this.fuseTimeout=undefined;this.cursorDownEl=null;this.intersectedEl=null;this.canvasBounds=document.body.getBoundingClientRect();// Debounce.\nthis.updateCanvasBounds=utils.debounce(function updateCanvasBounds(){self.canvasBounds=self.el.sceneEl.canvas.getBoundingClientRect();},500);this.eventDetail={};this.intersectedEventDetail={cursorEl:this.el};// Bind methods.\nthis.onCursorDown=bind(this.onCursorDown,this);this.onCursorUp=bind(this.onCursorUp,this);this.onIntersection=bind(this.onIntersection,this);this.onIntersectionCleared=bind(this.onIntersectionCleared,this);this.onMouseMove=bind(this.onMouseMove,this);},update:function(oldData){if(this.data.rayOrigin===oldData.rayOrigin){return;}this.updateMouseEventListeners();},play:function(){this.addEventListeners();},pause:function(){this.removeEventListeners();},remove:function(){var el=this.el;el.removeState(STATES.HOVERING);el.removeState(STATES.FUSING);clearTimeout(this.fuseTimeout);if(this.intersectedEl){this.intersectedEl.removeState(STATES.HOVERED);}this.removeEventListeners();},addEventListeners:function(){var canvas;var data=this.data;var el=this.el;var self=this;function addCanvasListeners(){canvas=el.sceneEl.canvas;if(data.downEvents.length||data.upEvents.length){return;}CANVAS_EVENTS.DOWN.forEach(function(downEvent){canvas.addEventListener(downEvent,self.onCursorDown);});CANVAS_EVENTS.UP.forEach(function(upEvent){canvas.addEventListener(upEvent,self.onCursorUp);});}canvas=el.sceneEl.canvas;if(canvas){addCanvasListeners();}else{el.sceneEl.addEventListener('render-target-loaded',addCanvasListeners);}data.downEvents.forEach(function(downEvent){el.addEventListener(downEvent,self.onCursorDown);});data.upEvents.forEach(function(upEvent){el.addEventListener(upEvent,self.onCursorUp);});el.addEventListener('raycaster-intersection',this.onIntersection);el.addEventListener('raycaster-intersection-cleared',this.onIntersectionCleared);el.sceneEl.addEventListener('rendererresize',this.updateCanvasBounds);window.addEventListener('resize',this.updateCanvasBounds);window.addEventListener('scroll',this.updateCanvasBounds);this.updateMouseEventListeners();},removeEventListeners:function(){var canvas;var data=this.data;var el=this.el;var self=this;canvas=el.sceneEl.canvas;if(canvas&&!data.downEvents.length&&!data.upEvents.length){CANVAS_EVENTS.DOWN.forEach(function(downEvent){canvas.removeEventListener(downEvent,self.onCursorDown);});CANVAS_EVENTS.UP.forEach(function(upEvent){canvas.removeEventListener(upEvent,self.onCursorUp);});}data.downEvents.forEach(function(downEvent){el.removeEventListener(downEvent,self.onCursorDown);});data.upEvents.forEach(function(upEvent){el.removeEventListener(upEvent,self.onCursorUp);});el.removeEventListener('raycaster-intersection',this.onIntersection);el.removeEventListener('raycaster-intersection-cleared',this.onIntersectionCleared);canvas.removeEventListener('mousemove',this.onMouseMove);canvas.removeEventListener('touchstart',this.onMouseMove);canvas.removeEventListener('touchmove',this.onMouseMove);el.sceneEl.removeEventListener('rendererresize',this.updateCanvasBounds);window.removeEventListener('resize',this.updateCanvasBounds);window.removeEventListener('scroll',this.updateCanvasBounds);},updateMouseEventListeners:function(){var canvas;var el=this.el;canvas=el.sceneEl.canvas;canvas.removeEventListener('mousemove',this.onMouseMove);canvas.removeEventListener('touchmove',this.onMouseMove);el.setAttribute('raycaster','useWorldCoordinates',false);if(this.data.rayOrigin!=='mouse'){return;}canvas.addEventListener('mousemove',this.onMouseMove,false);canvas.addEventListener('touchmove',this.onMouseMove,false);el.setAttribute('raycaster','useWorldCoordinates',true);this.updateCanvasBounds();},onMouseMove:function(){var direction=new THREE.Vector3();var mouse=new THREE.Vector2();var origin=new THREE.Vector3();var rayCasterConfig={origin:origin,direction:direction};return function(evt){var bounds=this.canvasBounds;var camera=this.el.sceneEl.camera;var left;var point;var top;camera.parent.updateMatrixWorld();// Calculate mouse position based on the canvas element\nif(evt.type==='touchmove'||evt.type==='touchstart'){// Track the first touch for simplicity.\npoint=evt.touches.item(0);}else{point=evt;}left=point.clientX-bounds.left;top=point.clientY-bounds.top;mouse.x=left/bounds.width*2-1;mouse.y=-(top/bounds.height)*2+1;origin.setFromMatrixPosition(camera.matrixWorld);direction.set(mouse.x,mouse.y,0.5).unproject(camera).sub(origin).normalize();this.el.setAttribute('raycaster',rayCasterConfig);if(evt.type==='touchmove'){evt.preventDefault();}};}(),/**\n   * Trigger mousedown and keep track of the mousedowned entity.\n   */onCursorDown:function(evt){// Raycast again for touch.\nif(this.data.rayOrigin==='mouse'&&evt.type==='touchstart'){this.onMouseMove(evt);this.el.components.raycaster.checkIntersections();evt.preventDefault();}this.twoWayEmit(EVENTS.MOUSEDOWN);this.cursorDownEl=this.intersectedEl;},/**\n   * Trigger mouseup if:\n   * - Not fusing (mobile has no mouse).\n   * - Currently intersecting an entity.\n   * - Currently-intersected entity is the same as the one when mousedown was triggered,\n   *   in case user mousedowned one entity, dragged to another, and mouseupped.\n   */onCursorUp:function(evt){var data=this.data;this.twoWayEmit(EVENTS.MOUSEUP);// If intersected entity has changed since the cursorDown, still emit mouseUp on the\n// previously cursorUp entity.\nif(this.cursorDownEl&&this.cursorDownEl!==this.intersectedEl){this.intersectedEventDetail.intersection=null;this.cursorDownEl.emit(EVENTS.MOUSEUP,this.intersectedEventDetail);}if((!data.fuse||data.rayOrigin==='mouse')&&this.intersectedEl&&this.cursorDownEl===this.intersectedEl){this.twoWayEmit(EVENTS.CLICK);}this.cursorDownEl=null;if(evt.type==='touchend'){evt.preventDefault();}},/**\n   * Handle intersection.\n   */onIntersection:function(evt){var currentIntersection;var cursorEl=this.el;var index;var intersectedEl;var intersection;// Select closest object, excluding the cursor.\nindex=evt.detail.els[0]===cursorEl?1:0;intersection=evt.detail.intersections[index];intersectedEl=evt.detail.els[index];// If cursor is the only intersected object, ignore the event.\nif(!intersectedEl){return;}// Already intersecting this entity.\nif(this.intersectedEl===intersectedEl){return;}// Ignore events further away than active intersection.\nif(this.intersectedEl){currentIntersection=this.el.components.raycaster.getIntersection(this.intersectedEl);if(currentIntersection&&currentIntersection.distance<=intersection.distance){return;}}// Unset current intersection.\nthis.clearCurrentIntersection(true);this.setIntersection(intersectedEl,intersection);},/**\n   * Handle intersection cleared.\n   */onIntersectionCleared:function(evt){var clearedEls=evt.detail.clearedEls;// Check if the current intersection has ended\nif(clearedEls.indexOf(this.intersectedEl)===-1){return;}this.clearCurrentIntersection();},setIntersection:function(intersectedEl,intersection){var cursorEl=this.el;var data=this.data;var self=this;// Already intersecting.\nif(this.intersectedEl===intersectedEl){return;}// Set new intersection.\nthis.intersectedEl=intersectedEl;// Hovering.\ncursorEl.addState(STATES.HOVERING);intersectedEl.addState(STATES.HOVERED);this.twoWayEmit(EVENTS.MOUSEENTER);if(this.data.mouseCursorStylesEnabled&&this.data.rayOrigin==='mouse'){this.el.sceneEl.canvas.classList.add(CANVAS_HOVER_CLASS);}// Begin fuse if necessary.\nif(data.fuseTimeout===0||!data.fuse){return;}cursorEl.addState(STATES.FUSING);this.twoWayEmit(EVENTS.FUSING);this.fuseTimeout=setTimeout(function fuse(){cursorEl.removeState(STATES.FUSING);self.twoWayEmit(EVENTS.CLICK);},data.fuseTimeout);},clearCurrentIntersection:function(ignoreRemaining){var index;var intersection;var intersections;var cursorEl=this.el;// Nothing to be cleared.\nif(!this.intersectedEl){return;}// No longer hovering (or fusing).\nthis.intersectedEl.removeState(STATES.HOVERED);cursorEl.removeState(STATES.HOVERING);cursorEl.removeState(STATES.FUSING);this.twoWayEmit(EVENTS.MOUSELEAVE);if(this.data.mouseCursorStylesEnabled&&this.data.rayOrigin==='mouse'){this.el.sceneEl.canvas.classList.remove(CANVAS_HOVER_CLASS);}// Unset intersected entity (after emitting the event).\nthis.intersectedEl=null;// Clear fuseTimeout.\nclearTimeout(this.fuseTimeout);// Set intersection to another raycasted element if any.\nif(ignoreRemaining===true){return;}intersections=this.el.components.raycaster.intersections;if(intersections.length===0){return;}// Exclude the cursor.\nindex=intersections[0].object.el===cursorEl?1:0;intersection=intersections[index];if(!intersection){return;}this.setIntersection(intersection.object.el,intersection);},/**\n   * Helper to emit on both the cursor and the intersected entity (if exists).\n   */twoWayEmit:function(evtName){var el=this.el;var intersectedEl=this.intersectedEl;var intersection;intersection=this.el.components.raycaster.getIntersection(intersectedEl);this.eventDetail.intersectedEl=intersectedEl;this.eventDetail.intersection=intersection;el.emit(evtName,this.eventDetail);if(!intersectedEl){return;}this.intersectedEventDetail.intersection=intersection;intersectedEl.emit(evtName,this.intersectedEventDetail);}});},{\"../core/component\":103,\"../utils/\":176}],55:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;var bind=_dereq_('../utils/bind');var checkControllerPresentAndSetup=_dereq_('../utils/tracked-controls').checkControllerPresentAndSetup;var trackedControlsUtils=_dereq_('../utils/tracked-controls');var emitIfAxesChanged=trackedControlsUtils.emitIfAxesChanged;var onButtonEvent=trackedControlsUtils.onButtonEvent;var DAYDREAM_CONTROLLER_MODEL_BASE_URL='https://cdn.aframe.io/controllers/google/';var DAYDREAM_CONTROLLER_MODEL_OBJ_URL=DAYDREAM_CONTROLLER_MODEL_BASE_URL+'vr_controller_daydream.obj';var DAYDREAM_CONTROLLER_MODEL_OBJ_MTL=DAYDREAM_CONTROLLER_MODEL_BASE_URL+'vr_controller_daydream.mtl';var GAMEPAD_ID_PREFIX='Daydream Controller';/**\n * Daydream controls.\n * Interface with Daydream controller and map Gamepad events to\n * controller buttons: trackpad, menu, system\n * Load a controller model and highlight the pressed buttons.\n */module.exports.Component=registerComponent('daydream-controls',{schema:{hand:{default:''},// This informs the degenerate arm model.\nbuttonColor:{type:'color',default:'#000000'},buttonTouchedColor:{type:'color',default:'#777777'},buttonHighlightColor:{type:'color',default:'#FFFFFF'},model:{default:true},orientationOffset:{type:'vec3'},armModel:{default:true}},/**\n   * Button IDs:\n   * 0 - trackpad\n   * 1 - menu (never dispatched on this layer)\n   * 2 - system (never dispatched on this layer)\n   */mapping:{axes:{trackpad:[0,1]},buttons:['trackpad','menu','system']},bindMethods:function(){this.onModelLoaded=bind(this.onModelLoaded,this);this.onControllersUpdate=bind(this.onControllersUpdate,this);this.checkIfControllerPresent=bind(this.checkIfControllerPresent,this);this.removeControllersUpdateListener=bind(this.removeControllersUpdateListener,this);this.onAxisMoved=bind(this.onAxisMoved,this);},init:function(){var self=this;this.animationActive='pointing';this.onButtonChanged=bind(this.onButtonChanged,this);this.onButtonDown=function(evt){onButtonEvent(evt.detail.id,'down',self);};this.onButtonUp=function(evt){onButtonEvent(evt.detail.id,'up',self);};this.onButtonTouchStart=function(evt){onButtonEvent(evt.detail.id,'touchstart',self);};this.onButtonTouchEnd=function(evt){onButtonEvent(evt.detail.id,'touchend',self);};this.onAxisMoved=bind(this.onAxisMoved,this);this.controllerPresent=false;this.lastControllerCheck=0;this.bindMethods();this.checkControllerPresentAndSetup=checkControllerPresentAndSetup;// To allow mock.\nthis.emitIfAxesChanged=emitIfAxesChanged;// To allow mock.\n},addEventListeners:function(){var el=this.el;el.addEventListener('buttonchanged',this.onButtonChanged);el.addEventListener('buttondown',this.onButtonDown);el.addEventListener('buttonup',this.onButtonUp);el.addEventListener('touchstart',this.onButtonTouchStart);el.addEventListener('touchend',this.onButtonTouchEnd);el.addEventListener('model-loaded',this.onModelLoaded);el.addEventListener('axismove',this.onAxisMoved);this.controllerEventsActive=true;},removeEventListeners:function(){var el=this.el;el.removeEventListener('buttonchanged',this.onButtonChanged);el.removeEventListener('buttondown',this.onButtonDown);el.removeEventListener('buttonup',this.onButtonUp);el.removeEventListener('touchstart',this.onButtonTouchStart);el.removeEventListener('touchend',this.onButtonTouchEnd);el.removeEventListener('model-loaded',this.onModelLoaded);el.removeEventListener('axismove',this.onAxisMoved);this.controllerEventsActive=false;},checkIfControllerPresent:function(){this.checkControllerPresentAndSetup(this,GAMEPAD_ID_PREFIX,{hand:this.data.hand});},play:function(){this.checkIfControllerPresent();this.addControllersUpdateListener();},pause:function(){this.removeEventListeners();this.removeControllersUpdateListener();},injectTrackedControls:function(){var el=this.el;var data=this.data;el.setAttribute('tracked-controls',{armModel:data.armModel,hand:data.hand,idPrefix:GAMEPAD_ID_PREFIX,orientationOffset:data.orientationOffset});if(!this.data.model){return;}this.el.setAttribute('obj-model',{obj:DAYDREAM_CONTROLLER_MODEL_OBJ_URL,mtl:DAYDREAM_CONTROLLER_MODEL_OBJ_MTL});},addControllersUpdateListener:function(){this.el.sceneEl.addEventListener('controllersupdated',this.onControllersUpdate,false);},removeControllersUpdateListener:function(){this.el.sceneEl.removeEventListener('controllersupdated',this.onControllersUpdate,false);},onControllersUpdate:function(){this.checkIfControllerPresent();},onModelLoaded:function(evt){var controllerObject3D=evt.detail.model;var buttonMeshes;if(!this.data.model){return;}buttonMeshes=this.buttonMeshes={};buttonMeshes.menu=controllerObject3D.getObjectByName('AppButton_AppButton_Cylinder.004');buttonMeshes.system=controllerObject3D.getObjectByName('HomeButton_HomeButton_Cylinder.005');buttonMeshes.trackpad=controllerObject3D.getObjectByName('TouchPad_TouchPad_Cylinder.003');// Offset pivot point.\ncontrollerObject3D.position.set(0,0,-0.04);},onAxisMoved:function(evt){this.emitIfAxesChanged(this,this.mapping.axes,evt);},onButtonChanged:function(evt){var button=this.mapping.buttons[evt.detail.id];if(!button)return;// Pass along changed event with button state, using button mapping for convenience.\nthis.el.emit(button+'changed',evt.detail.state);},updateModel:function(buttonName,evtName){if(!this.data.model){return;}this.updateButtonModel(buttonName,evtName);},updateButtonModel:function(buttonName,state){var buttonMeshes=this.buttonMeshes;if(!buttonMeshes||!buttonMeshes[buttonName]){return;}var color;switch(state){case'down':color=this.data.buttonHighlightColor;break;case'touchstart':color=this.data.buttonTouchedColor;break;default:color=this.data.buttonColor;}buttonMeshes[buttonName].material.color.set(color);}});},{\"../core/component\":103,\"../utils/bind\":170,\"../utils/tracked-controls\":184}],56:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;var bind=_dereq_('../utils/bind');var trackedControlsUtils=_dereq_('../utils/tracked-controls');var checkControllerPresentAndSetup=trackedControlsUtils.checkControllerPresentAndSetup;var emitIfAxesChanged=trackedControlsUtils.emitIfAxesChanged;var onButtonEvent=trackedControlsUtils.onButtonEvent;var GEARVR_CONTROLLER_MODEL_BASE_URL='https://cdn.aframe.io/controllers/samsung/';var GEARVR_CONTROLLER_MODEL_OBJ_URL=GEARVR_CONTROLLER_MODEL_BASE_URL+'gear_vr_controller.obj';var GEARVR_CONTROLLER_MODEL_OBJ_MTL=GEARVR_CONTROLLER_MODEL_BASE_URL+'gear_vr_controller.mtl';var GAMEPAD_ID_PREFIX='Gear VR';/**\n * Gear VR controls.\n * Interface with Gear VR controller and map Gamepad events to\n * controller buttons: trackpad, trigger\n * Load a controller model and highlight the pressed buttons.\n */module.exports.Component=registerComponent('gearvr-controls',{schema:{hand:{default:''},// This informs the degenerate arm model.\nbuttonColor:{type:'color',default:'#000000'},buttonTouchedColor:{type:'color',default:'#777777'},buttonHighlightColor:{type:'color',default:'#FFFFFF'},model:{default:true},orientationOffset:{type:'vec3'},armModel:{default:true}},/**\n   * Button IDs:\n   * 0 - trackpad\n   * 1 - trigger\n   */mapping:{axes:{trackpad:[0,1]},buttons:['trackpad','trigger']},bindMethods:function(){this.onModelLoaded=bind(this.onModelLoaded,this);this.onControllersUpdate=bind(this.onControllersUpdate,this);this.checkIfControllerPresent=bind(this.checkIfControllerPresent,this);this.removeControllersUpdateListener=bind(this.removeControllersUpdateListener,this);this.onAxisMoved=bind(this.onAxisMoved,this);},init:function(){var self=this;this.animationActive='pointing';this.onButtonChanged=bind(this.onButtonChanged,this);this.onButtonDown=function(evt){onButtonEvent(evt.detail.id,'down',self);};this.onButtonUp=function(evt){onButtonEvent(evt.detail.id,'up',self);};this.onButtonTouchStart=function(evt){onButtonEvent(evt.detail.id,'touchstart',self);};this.onButtonTouchEnd=function(evt){onButtonEvent(evt.detail.id,'touchend',self);};this.onAxisMoved=bind(this.onAxisMoved,this);this.controllerPresent=false;this.lastControllerCheck=0;this.bindMethods();this.checkControllerPresentAndSetup=checkControllerPresentAndSetup;// To allow mock.\nthis.emitIfAxesChanged=emitIfAxesChanged;// To allow mock.\n},addEventListeners:function(){var el=this.el;el.addEventListener('buttonchanged',this.onButtonChanged);el.addEventListener('buttondown',this.onButtonDown);el.addEventListener('buttonup',this.onButtonUp);el.addEventListener('touchstart',this.onButtonTouchStart);el.addEventListener('touchend',this.onButtonTouchEnd);el.addEventListener('model-loaded',this.onModelLoaded);el.addEventListener('axismove',this.onAxisMoved);this.controllerEventsActive=true;},removeEventListeners:function(){var el=this.el;el.removeEventListener('buttonchanged',this.onButtonChanged);el.removeEventListener('buttondown',this.onButtonDown);el.removeEventListener('buttonup',this.onButtonUp);el.removeEventListener('touchstart',this.onButtonTouchStart);el.removeEventListener('touchend',this.onButtonTouchEnd);el.removeEventListener('model-loaded',this.onModelLoaded);el.removeEventListener('axismove',this.onAxisMoved);this.controllerEventsActive=false;},checkIfControllerPresent:function(){this.checkControllerPresentAndSetup(this,GAMEPAD_ID_PREFIX,this.data.hand?{hand:this.data.hand}:{});},play:function(){this.checkIfControllerPresent();this.addControllersUpdateListener();},pause:function(){this.removeEventListeners();this.removeControllersUpdateListener();},injectTrackedControls:function(){var el=this.el;var data=this.data;el.setAttribute('tracked-controls',{armModel:data.armModel,idPrefix:GAMEPAD_ID_PREFIX,orientationOffset:data.orientationOffset});if(!this.data.model){return;}this.el.setAttribute('obj-model',{obj:GEARVR_CONTROLLER_MODEL_OBJ_URL,mtl:GEARVR_CONTROLLER_MODEL_OBJ_MTL});},addControllersUpdateListener:function(){this.el.sceneEl.addEventListener('controllersupdated',this.onControllersUpdate,false);},removeControllersUpdateListener:function(){this.el.sceneEl.removeEventListener('controllersupdated',this.onControllersUpdate,false);},onControllersUpdate:function(){this.checkIfControllerPresent();},// No need for onButtonChanged, since Gear VR controller has no analog buttons.\nonModelLoaded:function(evt){var controllerObject3D=evt.detail.model;var buttonMeshes;if(!this.data.model){return;}buttonMeshes=this.buttonMeshes={};buttonMeshes.trigger=controllerObject3D.children[2];buttonMeshes.trackpad=controllerObject3D.children[1];},onButtonChanged:function(evt){var button=this.mapping.buttons[evt.detail.id];if(!button)return;// Pass along changed event with button state, using button mapping for convenience.\nthis.el.emit(button+'changed',evt.detail.state);},onAxisMoved:function(evt){this.emitIfAxesChanged(this,this.mapping.axes,evt);},updateModel:function(buttonName,evtName){if(!this.data.model){return;}this.updateButtonModel(buttonName,evtName);},updateButtonModel:function(buttonName,state){var buttonMeshes=this.buttonMeshes;if(!buttonMeshes||!buttonMeshes[buttonName]){return;}var color;switch(state){case'down':color=this.data.buttonHighlightColor;break;case'touchstart':color=this.data.buttonTouchedColor;break;default:color=this.data.buttonColor;}buttonMeshes[buttonName].material.color.set(color);}});},{\"../core/component\":103,\"../utils/bind\":170,\"../utils/tracked-controls\":184}],57:[function(_dereq_,module,exports){var geometries=_dereq_('../core/geometry').geometries;var geometryNames=_dereq_('../core/geometry').geometryNames;var registerComponent=_dereq_('../core/component').registerComponent;var THREE=_dereq_('../lib/three');var dummyGeometry=new THREE.Geometry();/**\n * Geometry component. Combined with material component to make a mesh in 3D object.\n * Extended with registered geometries.\n */module.exports.Component=registerComponent('geometry',{schema:{buffer:{default:true},primitive:{default:'box',oneOf:geometryNames,schemaChange:true},skipCache:{default:false}},init:function(){this.geometry=null;},/**\n   * Talk to geometry system to get or create geometry.\n   */update:function(previousData){var data=this.data;var el=this.el;var mesh;var system=this.system;// Dispose old geometry if we created one.\nif(this.geometry){system.unuseGeometry(previousData);this.geometry=null;}// Create new geometry.\nthis.geometry=system.getOrCreateGeometry(data);// Set on mesh. If mesh does not exist, create it.\nmesh=el.getObject3D('mesh');if(mesh){mesh.geometry=this.geometry;}else{mesh=new THREE.Mesh();mesh.geometry=this.geometry;el.setObject3D('mesh',mesh);}},/**\n   * Tell geometry system that entity is no longer using the geometry.\n   * Unset the geometry on the mesh\n   */remove:function(){this.system.unuseGeometry(this.data);this.el.getObject3D('mesh').geometry=dummyGeometry;this.geometry=null;},/**\n   * Update geometry component schema based on geometry type.\n   */updateSchema:function(data){var currentGeometryType=this.oldData&&this.oldData.primitive;var newGeometryType=data.primitive;var schema=geometries[newGeometryType]&&geometries[newGeometryType].schema;// Geometry has no schema.\nif(!schema){throw new Error('Unknown geometry schema `'+newGeometryType+'`');}// Nothing has changed.\nif(currentGeometryType&&currentGeometryType===newGeometryType){return;}this.extendSchema(schema);}});},{\"../core/component\":103,\"../core/geometry\":104,\"../lib/three\":151}],58:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;var THREE=_dereq_('../lib/three');var utils=_dereq_('../utils/');var warn=utils.debug('components:gltf-model:warn');/**\n * glTF model loader.\n */module.exports.Component=registerComponent('gltf-model',{schema:{type:'model'},init:function(){var dracoLoader=this.system.getDRACOLoader();this.model=null;this.loader=new THREE.GLTFLoader();if(dracoLoader){this.loader.setDRACOLoader(dracoLoader);}},update:function(){var self=this;var el=this.el;var src=this.data;if(!src){return;}this.remove();this.loader.load(src,function gltfLoaded(gltfModel){self.model=gltfModel.scene||gltfModel.scenes[0];self.model.animations=gltfModel.animations;el.setObject3D('mesh',self.model);el.emit('model-loaded',{format:'gltf',model:self.model});},undefined/* onProgress */,function gltfFailed(error){var message=error&&error.message?error.message:'Failed to load glTF model';warn(message);el.emit('model-error',{format:'gltf',src:src});});},remove:function(){if(!this.model){return;}this.el.removeObject3D('mesh');}});},{\"../core/component\":103,\"../lib/three\":151,\"../utils/\":176}],59:[function(_dereq_,module,exports){/* global THREE */var registerComponent=_dereq_('../core/component').registerComponent;// Found at https://github.com/aframevr/assets.\nvar MODEL_URLS={left:'https://cdn.aframe.io/controllers/oculus-hands/v2/leftHand.json',right:'https://cdn.aframe.io/controllers/oculus-hands/v2/rightHand.json'};// Poses.\nvar ANIMATIONS={open:'Open',// point: grip active, trackpad surface active, trigger inactive.\npoint:'Point',// pointThumb: grip active, trigger inactive, trackpad surface inactive.\npointThumb:'Point + Thumb',// fist: grip active, trigger active, trackpad surface active.\nfist:'Fist',// hold: trigger active, grip inactive.\nhold:'Hold',// thumbUp: grip active, trigger active, trackpad surface inactive.\nthumbUp:'Thumb Up'};// Map animation to public events for the API.\nvar EVENTS={};EVENTS[ANIMATIONS.fist]='grip';EVENTS[ANIMATIONS.thumbUp]='pistol';EVENTS[ANIMATIONS.point]='pointing';EVENTS[ANIMATIONS.thumb]='thumb';/**\n * Hand controls component that abstracts 6DoF controls:\n *   oculus-touch-controls, vive-controls, windows-motion-controls.\n *\n * Originally meant to be a sample implementation of applications-specific controls that\n * abstracts multiple types of controllers.\n *\n * Auto-detect appropriate controller.\n * Handle common events coming from the detected vendor-specific controls.\n * Translate button events to semantic hand-related event names:\n *   (gripclose, gripopen, thumbup, thumbdown, pointup, pointdown)\n * Load hand model with gestures that are applied based on the button pressed.\n *\n * @property {string} Hand mapping (`left`, `right`).\n */module.exports.Component=registerComponent('hand-controls',{schema:{default:'left'},init:function(){var self=this;var el=this.el;// Current pose.\nthis.gesture=ANIMATIONS.open;// Active buttons populated by events provided by the attached controls.\nthis.pressedButtons={};this.touchedButtons={};this.loader=new THREE.ObjectLoader();this.loader.setCrossOrigin('anonymous');this.onGripDown=function(){self.handleButton('grip','down');};this.onGripUp=function(){self.handleButton('grip','up');};this.onTrackpadDown=function(){self.handleButton('trackpad','down');};this.onTrackpadUp=function(){self.handleButton('trackpad','up');};this.onTrackpadTouchStart=function(){self.handleButton('trackpad','touchstart');};this.onTrackpadTouchEnd=function(){self.handleButton('trackpad','touchend');};this.onTriggerDown=function(){self.handleButton('trigger','down');};this.onTriggerUp=function(){self.handleButton('trigger','up');};this.onTriggerTouchStart=function(){self.handleButton('trigger','touchstart');};this.onTriggerTouchEnd=function(){self.handleButton('trigger','touchend');};this.onGripTouchStart=function(){self.handleButton('grip','touchstart');};this.onGripTouchEnd=function(){self.handleButton('grip','touchend');};this.onThumbstickDown=function(){self.handleButton('thumbstick','down');};this.onThumbstickUp=function(){self.handleButton('thumbstick','up');};this.onAorXTouchStart=function(){self.handleButton('AorX','touchstart');};this.onAorXTouchEnd=function(){self.handleButton('AorX','touchend');};this.onBorYTouchStart=function(){self.handleButton('BorY','touchstart');};this.onBorYTouchEnd=function(){self.handleButton('BorY','touchend');};this.onSurfaceTouchStart=function(){self.handleButton('surface','touchstart');};this.onSurfaceTouchEnd=function(){self.handleButton('surface','touchend');};el.addEventListener('controllerconnected',this.onControllerConnected);el.addEventListener('controllerdisconnected',this.onControllerDisconnected);// Hidden by default.\nel.object3D.visible=false;},play:function(){this.addEventListeners();},pause:function(){this.removeEventListeners();},tick:function(time,delta){var mesh=this.el.getObject3D('mesh');if(!mesh||!mesh.mixer){return;}mesh.mixer.update(delta/1000);},addEventListeners:function(){var el=this.el;el.addEventListener('gripdown',this.onGripDown);el.addEventListener('gripup',this.onGripUp);el.addEventListener('trackpaddown',this.onTrackpadDown);el.addEventListener('trackpadup',this.onTrackpadUp);el.addEventListener('trackpadtouchstart',this.onTrackpadTouchStart);el.addEventListener('trackpadtouchend',this.onTrackpadTouchEnd);el.addEventListener('triggerdown',this.onTriggerDown);el.addEventListener('triggerup',this.onTriggerUp);el.addEventListener('triggertouchstart',this.onTriggerTouchStart);el.addEventListener('triggertouchend',this.onTriggerTouchEnd);el.addEventListener('griptouchstart',this.onGripTouchStart);el.addEventListener('griptouchend',this.onGripTouchEnd);el.addEventListener('thumbstickdown',this.onThumbstickDown);el.addEventListener('thumbstickup',this.onThumbstickUp);el.addEventListener('abuttontouchstart',this.onAorXTouchStart);el.addEventListener('abuttontouchend',this.onAorXTouchEnd);el.addEventListener('bbuttontouchstart',this.onBorYTouchStart);el.addEventListener('bbuttontouchend',this.onBorYTouchEnd);el.addEventListener('xbuttontouchstart',this.onAorXTouchStart);el.addEventListener('xbuttontouchend',this.onAorXTouchEnd);el.addEventListener('ybuttontouchstart',this.onBorYTouchStart);el.addEventListener('ybuttontouchend',this.onBorYTouchEnd);el.addEventListener('surfacetouchstart',this.onSurfaceTouchStart);el.addEventListener('surfacetouchend',this.onSurfaceTouchEnd);},removeEventListeners:function(){var el=this.el;el.removeEventListener('gripdown',this.onGripDown);el.removeEventListener('gripup',this.onGripUp);el.removeEventListener('trackpaddown',this.onTrackpadDown);el.removeEventListener('trackpadup',this.onTrackpadUp);el.removeEventListener('trackpadtouchstart',this.onTrackpadTouchStart);el.removeEventListener('trackpadtouchend',this.onTrackpadTouchEnd);el.removeEventListener('triggerdown',this.onTriggerDown);el.removeEventListener('triggerup',this.onTriggerUp);el.removeEventListener('triggertouchstart',this.onTriggerTouchStart);el.removeEventListener('triggertouchend',this.onTriggerTouchEnd);el.removeEventListener('griptouchstart',this.onGripTouchStart);el.removeEventListener('griptouchend',this.onGripTouchEnd);el.removeEventListener('thumbstickdown',this.onThumbstickDown);el.removeEventListener('thumbstickup',this.onThumbstickUp);el.removeEventListener('abuttontouchstart',this.onAorXTouchStart);el.removeEventListener('abuttontouchend',this.onAorXTouchEnd);el.removeEventListener('bbuttontouchstart',this.onBorYTouchStart);el.removeEventListener('bbuttontouchend',this.onBorYTouchEnd);el.removeEventListener('xbuttontouchstart',this.onAorXTouchStart);el.removeEventListener('xbuttontouchend',this.onAorXTouchEnd);el.removeEventListener('ybuttontouchstart',this.onBorYTouchStart);el.removeEventListener('ybuttontouchend',this.onBorYTouchEnd);el.removeEventListener('surfacetouchstart',this.onSurfaceTouchStart);el.removeEventListener('surfacetouchend',this.onSurfaceTouchEnd);},/**\n   * Update handler. More like the `init` handler since the only property is the hand, and\n   * that won't be changing much.\n   */update:function(previousHand){var controlConfiguration;var el=this.el;var hand=this.data;// Get common configuration to abstract different vendor controls.\ncontrolConfiguration={hand:hand,model:false,orientationOffset:{x:0,y:0,z:hand==='left'?90:-90}};// Set model.\nif(hand!==previousHand){this.loader.load(MODEL_URLS[hand],function(scene){var mesh=scene.getObjectByName('Hand');mesh.material.skinning=true;mesh.mixer=new THREE.AnimationMixer(mesh);el.setObject3D('mesh',mesh);mesh.position.set(0,0,0);mesh.rotation.set(0,0,0);el.setAttribute('vive-controls',controlConfiguration);el.setAttribute('oculus-touch-controls',controlConfiguration);el.setAttribute('windows-motion-controls',controlConfiguration);});}},remove:function(){this.el.removeObject3D('mesh');},/**\n   * Play model animation, based on which button was pressed and which kind of event.\n   *\n   * 1. Process buttons.\n   * 2. Determine gesture (this.determineGesture()).\n   * 3. Animation gesture (this.animationGesture()).\n   * 4. Emit gesture events (this.emitGestureEvents()).\n   *\n   * @param {string} button - Name of the button.\n   * @param {string} evt - Type of event for the button (i.e., down/up/touchstart/touchend).\n   */handleButton:function(button,evt){var lastGesture;var isPressed=evt==='down';var isTouched=evt==='touchstart';// Update objects.\nif(evt.indexOf('touch')===0){// Update touch object.\nif(isTouched===this.touchedButtons[button]){return;}this.touchedButtons[button]=isTouched;}else{// Update button object.\nif(isPressed===this.pressedButtons[button]){return;}this.pressedButtons[button]=isPressed;}// Determine the gesture.\nlastGesture=this.gesture;this.gesture=this.determineGesture();// Same gesture.\nif(this.gesture===lastGesture){return;}// Animate gesture.\nthis.animateGesture(this.gesture,lastGesture);// Emit events.\nthis.emitGestureEvents(this.gesture,lastGesture);},/**\n   * Determine which pose hand should be in considering active and touched buttons.\n   */determineGesture:function(){var gesture;var isGripActive=this.pressedButtons['grip'];var isSurfaceActive=this.pressedButtons['surface']||this.touchedButtons['surface'];var isTrackpadActive=this.pressedButtons['trackpad']||this.touchedButtons['trackpad'];var isTriggerActive=this.pressedButtons['trigger']||this.touchedButtons['trigger'];var isABXYActive=this.touchedButtons['AorX']||this.touchedButtons['BorY'];var isVive=isViveController(this.el.components['tracked-controls']);// Works well with Oculus Touch and Windows Motion Controls, but Vive needs tweaks.\nif(isGripActive){if(isVive){gesture=ANIMATIONS.fist;}else if(isSurfaceActive||isABXYActive||isTrackpadActive){gesture=isTriggerActive?ANIMATIONS.fist:ANIMATIONS.point;}else{gesture=isTriggerActive?ANIMATIONS.thumbUp:ANIMATIONS.pointThumb;}}else{if(isTriggerActive){gesture=!isVive?ANIMATIONS.hold:ANIMATIONS.fist;}else if(isVive&&isTrackpadActive){gesture=ANIMATIONS.point;}}return gesture;},/**\n   * Play gesture animation.\n   *\n   * @param {string} gesture - Which pose to animate to. If absent, then animate to open.\n   * @param {string} lastGesture - Previous gesture, to reverse back to open if needed.\n   */animateGesture:function(gesture,lastGesture){if(gesture){this.playAnimation(gesture||ANIMATIONS.open,lastGesture,false);return;}// If no gesture, then reverse the current gesture back to open pose.\nthis.playAnimation(lastGesture,lastGesture,true);},/**\n   * Emit `hand-controls`-specific events.\n   */emitGestureEvents:function(gesture,lastGesture){var el=this.el;var eventName;if(lastGesture===gesture){return;}// Emit event for lastGesture not inactive.\neventName=getGestureEventName(lastGesture,false);if(eventName){el.emit(eventName);}// Emit event for current gesture now active.\neventName=getGestureEventName(gesture,true);if(eventName){el.emit(eventName);}},/**\n  * Play hand animation based on button state.\n  *\n  * @param {string} gesture - Name of the animation as specified by the model.\n  * @param {string} lastGesture - Previous pose.\n  * @param {boolean} reverse - Whether animation should play in reverse.\n  */playAnimation:function(gesture,lastGesture,reverse){var fromAction;var mesh=this.el.getObject3D('mesh');var toAction;if(!mesh){return;}// Grab clip action.\ntoAction=mesh.mixer.clipAction(gesture);toAction.clampWhenFinished=true;toAction.loop=THREE.LoopRepeat;toAction.repetitions=0;toAction.timeScale=reverse?-1:1;toAction.weight=1;// No gesture to gesture or gesture to no gesture.\nif(!lastGesture||gesture===lastGesture){// Stop all current animations.\nmesh.mixer.stopAllAction();// Play animation.\ntoAction.play();return;}// Animate or crossfade from gesture to gesture.\nfromAction=mesh.mixer.clipAction(lastGesture);mesh.mixer.stopAllAction();fromAction.weight=0.15;fromAction.play();toAction.play();fromAction.crossFadeTo(toAction,0.15,true);}});/**\n * Suffix gestures based on toggle state (e.g., open/close, up/down, start/end).\n *\n * @param {string} gesture\n * @param {boolean} active\n */function getGestureEventName(gesture,active){var eventName;if(!gesture){return;}eventName=EVENTS[gesture];if(eventName==='grip'){return eventName+(active?'close':'open');}if(eventName==='point'||eventName==='thumb'){return eventName+(active?'up':'down');}if(eventName==='pointing'||eventName==='pistol'){return eventName+(active?'start':'end');}return;}function isViveController(trackedControls){var controllerId=trackedControls&&trackedControls.controller&&trackedControls.controller.id;return controllerId&&controllerId.indexOf('OpenVR ')===0;}},{\"../core/component\":103}],60:[function(_dereq_,module,exports){_dereq_('./animation');_dereq_('./camera');_dereq_('./cursor');_dereq_('./daydream-controls');_dereq_('./gearvr-controls');_dereq_('./geometry');_dereq_('./gltf-model');_dereq_('./hand-controls');_dereq_('./laser-controls');_dereq_('./light');_dereq_('./line');_dereq_('./link');_dereq_('./look-controls');_dereq_('./material');_dereq_('./obj-model');_dereq_('./oculus-go-controls');_dereq_('./oculus-touch-controls');_dereq_('./position');_dereq_('./raycaster');_dereq_('./rotation');_dereq_('./scale');_dereq_('./shadow');_dereq_('./sound');_dereq_('./text');_dereq_('./tracked-controls');_dereq_('./tracked-controls-webvr');_dereq_('./tracked-controls-webxr');_dereq_('./visible');_dereq_('./vive-controls');_dereq_('./vive-focus-controls');_dereq_('./wasd-controls');_dereq_('./windows-motion-controls');_dereq_('./scene/background');_dereq_('./scene/debug');_dereq_('./scene/embedded');_dereq_('./scene/inspector');_dereq_('./scene/fog');_dereq_('./scene/keyboard-shortcuts');_dereq_('./scene/pool');_dereq_('./scene/screenshot');_dereq_('./scene/stats');_dereq_('./scene/vr-mode-ui');},{\"./animation\":52,\"./camera\":53,\"./cursor\":54,\"./daydream-controls\":55,\"./gearvr-controls\":56,\"./geometry\":57,\"./gltf-model\":58,\"./hand-controls\":59,\"./laser-controls\":61,\"./light\":62,\"./line\":63,\"./link\":64,\"./look-controls\":65,\"./material\":66,\"./obj-model\":67,\"./oculus-go-controls\":68,\"./oculus-touch-controls\":69,\"./position\":70,\"./raycaster\":71,\"./rotation\":72,\"./scale\":73,\"./scene/background\":74,\"./scene/debug\":75,\"./scene/embedded\":76,\"./scene/fog\":77,\"./scene/inspector\":78,\"./scene/keyboard-shortcuts\":79,\"./scene/pool\":80,\"./scene/screenshot\":81,\"./scene/stats\":82,\"./scene/vr-mode-ui\":83,\"./shadow\":84,\"./sound\":85,\"./text\":86,\"./tracked-controls\":89,\"./tracked-controls-webvr\":87,\"./tracked-controls-webxr\":88,\"./visible\":90,\"./vive-controls\":91,\"./vive-focus-controls\":92,\"./wasd-controls\":93,\"./windows-motion-controls\":94}],61:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;var utils=_dereq_('../utils/');registerComponent('laser-controls',{schema:{hand:{default:'right'},model:{default:true},defaultModelColor:{type:'color',default:'grey'}},init:function(){var config=this.config;var data=this.data;var el=this.el;var self=this;var modelEnabled=this.data.model&&!this.el.sceneEl.hasWebXR;var controlsConfiguration={hand:data.hand,model:modelEnabled};// Set all controller models.\nel.setAttribute('daydream-controls',controlsConfiguration);el.setAttribute('gearvr-controls',controlsConfiguration);el.setAttribute('oculus-go-controls',controlsConfiguration);el.setAttribute('oculus-touch-controls',controlsConfiguration);el.setAttribute('vive-controls',controlsConfiguration);el.setAttribute('vive-focus-controls',controlsConfiguration);el.setAttribute('windows-motion-controls',controlsConfiguration);// WebXR doesn't allow to discriminate between controllers, a default model is used.\nif(this.data.model&&this.el.sceneEl.hasWebXR){this.initDefaultModel();}// Wait for controller to connect, or have a valid pointing pose, before creating ray\nel.addEventListener('controllerconnected',createRay);el.addEventListener('controllerdisconnected',hideRay);el.addEventListener('controllermodelready',function(evt){createRay(evt);self.modelReady=true;});function createRay(evt){var controllerConfig=config[evt.detail.name];if(!controllerConfig){return;}// Show the line unless a particular config opts to hide it, until a controllermodelready\n// event comes through.\nvar raycasterConfig=utils.extend({showLine:true},controllerConfig.raycaster||{});// The controllermodelready event contains a rayOrigin that takes into account\n// offsets specific to the loaded model.\nif(evt.detail.rayOrigin){raycasterConfig.origin=evt.detail.rayOrigin.origin;raycasterConfig.direction=evt.detail.rayOrigin.direction;raycasterConfig.showLine=true;}// Only apply a default raycaster if it does not yet exist. This prevents it overwriting\n// config applied from a controllermodelready event.\nif(evt.detail.rayOrigin||!self.modelReady){el.setAttribute('raycaster',raycasterConfig);}else{el.setAttribute('raycaster','showLine',true);}el.setAttribute('cursor',utils.extend({fuse:false},controllerConfig.cursor));}function hideRay(){el.setAttribute('raycaster','showLine',false);}},config:{'daydream-controls':{cursor:{downEvents:['trackpaddown','triggerdown'],upEvents:['trackpadup','triggerup']}},'gearvr-controls':{cursor:{downEvents:['triggerdown'],upEvents:['triggerup']},raycaster:{origin:{x:0,y:0.0005,z:0}}},'oculus-go-controls':{cursor:{downEvents:['triggerdown'],upEvents:['triggerup']},raycaster:{origin:{x:0,y:0.0005,z:0}}},'oculus-touch-controls':{cursor:{downEvents:['triggerdown'],upEvents:['triggerup']},raycaster:{origin:{x:0,y:0,z:0}}},'vive-controls':{cursor:{downEvents:['triggerdown'],upEvents:['triggerup']}},'vive-focus-controls':{cursor:{downEvents:['trackpaddown','triggerdown'],upEvents:['trackpadup','triggerup']}},'windows-motion-controls':{cursor:{downEvents:['triggerdown'],upEvents:['triggerup']},raycaster:{showLine:false}}},initDefaultModel:function(){var modelEl=this.modelEl=document.createElement('a-entity');modelEl.setAttribute('geometry',{primitive:'sphere',radius:0.03});modelEl.setAttribute('material',{color:this.data.color});this.el.appendChild(modelEl);}});},{\"../core/component\":103,\"../utils/\":176}],62:[function(_dereq_,module,exports){var bind=_dereq_('../utils/bind');var diff=_dereq_('../utils').diff;var debug=_dereq_('../utils/debug');var registerComponent=_dereq_('../core/component').registerComponent;var THREE=_dereq_('../lib/three');var degToRad=THREE.Math.degToRad;var warn=debug('components:light:warn');/**\n * Light component.\n */module.exports.Component=registerComponent('light',{schema:{angle:{default:60,if:{type:['spot']}},color:{type:'color'},groundColor:{type:'color',if:{type:['hemisphere']}},decay:{default:1,if:{type:['point','spot']}},distance:{default:0.0,min:0,if:{type:['point','spot']}},intensity:{default:1.0,min:0,if:{type:['ambient','directional','hemisphere','point','spot']}},penumbra:{default:0,min:0,max:1,if:{type:['spot']}},type:{default:'directional',oneOf:['ambient','directional','hemisphere','point','spot'],schemaChange:true},target:{type:'selector',if:{type:['spot','directional']}},// Shadows.\ncastShadow:{default:false,if:{type:['point','spot','directional']}},shadowBias:{default:0,if:{castShadow:true}},shadowCameraFar:{default:500,if:{castShadow:true}},shadowCameraFov:{default:90,if:{castShadow:true}},shadowCameraNear:{default:0.5,if:{castShadow:true}},shadowCameraTop:{default:5,if:{castShadow:true}},shadowCameraRight:{default:5,if:{castShadow:true}},shadowCameraBottom:{default:-5,if:{castShadow:true}},shadowCameraLeft:{default:-5,if:{castShadow:true}},shadowCameraVisible:{default:false,if:{castShadow:true}},shadowMapHeight:{default:512,if:{castShadow:true}},shadowMapWidth:{default:512,if:{castShadow:true}},shadowRadius:{default:1,if:{castShadow:true}}},/**\n   * Notifies scene a light has been added to remove default lighting.\n   */init:function(){var el=this.el;this.light=null;this.defaultTarget=null;this.rendererSystem=this.el.sceneEl.systems.renderer;this.system.registerLight(el);},/**\n   * (Re)create or update light.\n   */update:function(oldData){var data=this.data;var diffData=diff(data,oldData);var light=this.light;var rendererSystem=this.rendererSystem;var self=this;// Existing light.\nif(light&&!('type'in diffData)){var shadowsLoaded=false;// Light type has not changed. Update light.\nObject.keys(diffData).forEach(function(key){var value=data[key];switch(key){case'color':{light.color.set(value);rendererSystem.applyColorCorrection(light.color);break;}case'groundColor':{light.groundColor.set(value);rendererSystem.applyColorCorrection(light.groundColor);break;}case'angle':{light.angle=degToRad(value);break;}case'target':{// Reset target if selector is null.\nif(value===null){if(data.type==='spot'||data.type==='directional'){light.target=self.defaultTarget;}}else{// Target specified, set target to entity's `object3D` when it is loaded.\nif(value.hasLoaded){self.onSetTarget(value,light);}else{value.addEventListener('loaded',bind(self.onSetTarget,self,value,light));}}break;}case'castShadow':case'shadowBias':case'shadowCameraFar':case'shadowCameraFov':case'shadowCameraNear':case'shadowCameraTop':case'shadowCameraRight':case'shadowCameraBottom':case'shadowCameraLeft':case'shadowCameraVisible':case'shadowMapHeight':case'shadowMapWidth':case'shadowRadius':if(!shadowsLoaded){self.updateShadow();shadowsLoaded=true;}break;default:{light[key]=value;}}});return;}// No light yet or light type has changed. Create and add light.\nthis.setLight(this.data);this.updateShadow();},setLight:function(data){var el=this.el;var newLight=this.getLight(data);if(newLight){if(this.light){el.removeObject3D('light');}this.light=newLight;this.light.el=el;el.setObject3D('light',this.light);// HACK solution for issue #1624\nif(data.type==='spot'||data.type==='directional'||data.type==='hemisphere'){el.getObject3D('light').translateY(-1);}// set and position default lighttarget as a child to enable spotlight orientation\nif(data.type==='spot'){el.setObject3D('light-target',this.defaultTarget);el.getObject3D('light-target').position.set(0,0,-1);}}},/**\n   * Updates shadow-related properties on the current light.\n   */updateShadow:function(){var el=this.el;var data=this.data;var light=this.light;light.castShadow=data.castShadow;// Shadow camera helper.\nvar cameraHelper=el.getObject3D('cameraHelper');if(data.shadowCameraVisible&&!cameraHelper){el.setObject3D('cameraHelper',new THREE.CameraHelper(light.shadow.camera));}else if(!data.shadowCameraVisible&&cameraHelper){el.removeObject3D('cameraHelper');}if(!data.castShadow){return light;}// Shadow appearance.\nlight.shadow.bias=data.shadowBias;light.shadow.radius=data.shadowRadius;light.shadow.mapSize.height=data.shadowMapHeight;light.shadow.mapSize.width=data.shadowMapWidth;// Shadow camera.\nlight.shadow.camera.near=data.shadowCameraNear;light.shadow.camera.far=data.shadowCameraFar;if(light.shadow.camera instanceof THREE.OrthographicCamera){light.shadow.camera.top=data.shadowCameraTop;light.shadow.camera.right=data.shadowCameraRight;light.shadow.camera.bottom=data.shadowCameraBottom;light.shadow.camera.left=data.shadowCameraLeft;}else{light.shadow.camera.fov=data.shadowCameraFov;}light.shadow.camera.updateProjectionMatrix();if(cameraHelper){cameraHelper.update();}},/**\n   * Creates a new three.js light object given data object defining the light.\n   *\n   * @param {object} data\n   */getLight:function(data){var angle=data.angle;var color=new THREE.Color(data.color);this.rendererSystem.applyColorCorrection(color);color=color.getHex();var decay=data.decay;var distance=data.distance;var groundColor=new THREE.Color(data.groundColor);this.rendererSystem.applyColorCorrection(groundColor);groundColor=groundColor.getHex();var intensity=data.intensity;var type=data.type;var target=data.target;var light=null;switch(type.toLowerCase()){case'ambient':{return new THREE.AmbientLight(color,intensity);}case'directional':{light=new THREE.DirectionalLight(color,intensity);this.defaultTarget=light.target;if(target){if(target.hasLoaded){this.onSetTarget(target,light);}else{target.addEventListener('loaded',bind(this.onSetTarget,this,target,light));}}return light;}case'hemisphere':{return new THREE.HemisphereLight(color,groundColor,intensity);}case'point':{return new THREE.PointLight(color,intensity,distance,decay);}case'spot':{light=new THREE.SpotLight(color,intensity,distance,degToRad(angle),data.penumbra,decay);this.defaultTarget=light.target;if(target){if(target.hasLoaded){this.onSetTarget(target,light);}else{target.addEventListener('loaded',bind(this.onSetTarget,this,target,light));}}return light;}default:{warn('%s is not a valid light type. '+'Choose from ambient, directional, hemisphere, point, spot.',type);}}},onSetTarget:function(targetEl,light){light.target=targetEl.object3D;},/**\n   * Remove light on remove (callback).\n   */remove:function(){var el=this.el;el.removeObject3D('light');if(el.getObject3D('cameraHelper')){el.removeObject3D('cameraHelper');}}});},{\"../core/component\":103,\"../lib/three\":151,\"../utils\":176,\"../utils/bind\":170,\"../utils/debug\":172}],63:[function(_dereq_,module,exports){/* global THREE */var registerComponent=_dereq_('../core/component').registerComponent;module.exports.Component=registerComponent('line',{schema:{start:{type:'vec3',default:{x:0,y:0,z:0}},end:{type:'vec3',default:{x:0,y:0,z:0}},color:{type:'color',default:'#74BEC1'},opacity:{type:'number',default:1},visible:{default:true}},multiple:true,init:function(){var data=this.data;var geometry;var material;this.rendererSystem=this.el.sceneEl.systems.renderer;material=this.material=new THREE.LineBasicMaterial({color:data.color,opacity:data.opacity,transparent:data.opacity<1,visible:data.visible});geometry=this.geometry=new THREE.BufferGeometry();geometry.addAttribute('position',new THREE.BufferAttribute(new Float32Array(2*3),3));this.rendererSystem.applyColorCorrection(material.color);this.line=new THREE.Line(geometry,material);this.el.setObject3D(this.attrName,this.line);},update:function(oldData){var data=this.data;var geometry=this.geometry;var geoNeedsUpdate=false;var material=this.material;var positionArray=geometry.attributes.position.array;// Update geometry.\nif(!isEqualVec3(data.start,oldData.start)){positionArray[0]=data.start.x;positionArray[1]=data.start.y;positionArray[2]=data.start.z;geoNeedsUpdate=true;}if(!isEqualVec3(data.end,oldData.end)){positionArray[3]=data.end.x;positionArray[4]=data.end.y;positionArray[5]=data.end.z;geoNeedsUpdate=true;}if(geoNeedsUpdate){geometry.attributes.position.needsUpdate=true;geometry.computeBoundingSphere();}material.color.setStyle(data.color);this.rendererSystem.applyColorCorrection(material.color);material.opacity=data.opacity;material.transparent=data.opacity<1;material.visible=data.visible;},remove:function(){this.el.removeObject3D('line',this.line);}});function isEqualVec3(a,b){if(!a||!b){return false;}return a.x===b.x&&a.y===b.y&&a.z===b.z;}},{\"../core/component\":103}],64:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;var registerShader=_dereq_('../core/shader').registerShader;var THREE=_dereq_('../lib/three');/**\n * Link component. Connect experiences and traverse between them in VR\n *\n * @member {object} hiddenEls - Store the hidden elements during peek mode.\n */module.exports.Component=registerComponent('link',{schema:{backgroundColor:{default:'red',type:'color'},borderColor:{default:'white',type:'color'},highlighted:{default:false},highlightedColor:{default:'#24CAFF',type:'color'},href:{default:''},image:{type:'asset'},on:{default:'click'},peekMode:{default:false},title:{default:''},titleColor:{default:'white',type:'color'},visualAspectEnabled:{default:false}},init:function(){this.navigate=this.navigate.bind(this);this.previousQuaternion=undefined;this.quaternionClone=new THREE.Quaternion();// Store hidden elements during peek mode so we can show them again later.\nthis.hiddenEls=[];},update:function(oldData){var data=this.data;var el=this.el;var backgroundColor;var strokeColor;if(!data.visualAspectEnabled){return;}this.initVisualAspect();backgroundColor=data.highlighted?data.highlightedColor:data.backgroundColor;strokeColor=data.highlighted?data.highlightedColor:data.borderColor;el.setAttribute('material','backgroundColor',backgroundColor);el.setAttribute('material','strokeColor',strokeColor);if(data.on!==oldData.on){this.updateEventListener();}if(oldData.peekMode!==undefined&&data.peekMode!==oldData.peekMode){this.updatePeekMode();}if(!data.image||oldData.image===data.image){return;}el.setAttribute('material','pano',typeof data.image==='string'?data.image:data.image.src);},/*\n   * Toggle all elements and full 360 preview of the linked page.\n   */updatePeekMode:function(){var el=this.el;var sphereEl=this.sphereEl;if(this.data.peekMode){this.hideAll();el.getObject3D('mesh').visible=false;sphereEl.setAttribute('visible',true);}else{this.showAll();el.getObject3D('mesh').visible=true;sphereEl.setAttribute('visible',false);}},play:function(){this.updateEventListener();},pause:function(){this.removeEventListener();},updateEventListener:function(){var el=this.el;if(!el.isPlaying){return;}this.removeEventListener();el.addEventListener(this.data.on,this.navigate);},removeEventListener:function(){var on=this.data.on;if(!on){return;}this.el.removeEventListener(on,this.navigate);},initVisualAspect:function(){var el=this.el;var semiSphereEl;var sphereEl;var textEl;if(!this.data.visualAspectEnabled||this.visualAspectInitialized){return;}textEl=this.textEl=this.textEl||document.createElement('a-entity');sphereEl=this.sphereEl=this.sphereEl||document.createElement('a-entity');semiSphereEl=this.semiSphereEl=this.semiSphereEl||document.createElement('a-entity');// Set portal.\nel.setAttribute('geometry',{primitive:'circle',radius:1.0,segments:64});el.setAttribute('material',{shader:'portal',pano:this.data.image,side:'double'});// Set text that displays the link title and URL.\ntextEl.setAttribute('text',{color:this.data.titleColor,align:'center',font:'kelsonsans',value:this.data.title||this.data.href,width:4});textEl.setAttribute('position','0 1.5 0');el.appendChild(textEl);// Set sphere rendered when camera is close to portal to allow user to peek inside.\nsemiSphereEl.setAttribute('geometry',{primitive:'sphere',radius:1.0,phiStart:0,segmentsWidth:64,segmentsHeight:64,phiLength:180,thetaStart:0,thetaLength:360});semiSphereEl.setAttribute('material',{shader:'portal',borderEnabled:0.0,pano:this.data.image,side:'back'});semiSphereEl.setAttribute('rotation','0 180 0');semiSphereEl.setAttribute('position','0 0 0');semiSphereEl.setAttribute('visible',false);el.appendChild(semiSphereEl);// Set sphere rendered when camera is close to portal to allow user to peek inside.\nsphereEl.setAttribute('geometry',{primitive:'sphere',radius:10,segmentsWidth:64,segmentsHeight:64});sphereEl.setAttribute('material',{shader:'portal',borderEnabled:0.0,pano:this.data.image,side:'back'});sphereEl.setAttribute('visible',false);el.appendChild(sphereEl);this.visualAspectInitialized=true;},navigate:function(){window.location=this.data.href;},/**\n   * 1. Swap plane that represents portal with sphere with a hole when the camera is close\n   * so user can peek inside portal. Sphere is rendered on oposite side of portal\n   * from where user enters.\n   * 2. Place the url/title above or inside portal depending on distance to camera.\n   * 3. Face portal to camera when far away from user.\n   */tick:function(){var cameraWorldPosition=new THREE.Vector3();var elWorldPosition=new THREE.Vector3();var quaternion=new THREE.Quaternion();var scale=new THREE.Vector3();return function(){var el=this.el;var object3D=el.object3D;var camera=el.sceneEl.camera;var cameraPortalOrientation;var distance;var textEl=this.textEl;if(!this.data.visualAspectEnabled){return;}// Update matrices\nobject3D.updateMatrixWorld();camera.parent.updateMatrixWorld();camera.updateMatrixWorld();object3D.matrix.decompose(elWorldPosition,quaternion,scale);elWorldPosition.setFromMatrixPosition(object3D.matrixWorld);cameraWorldPosition.setFromMatrixPosition(camera.matrixWorld);distance=elWorldPosition.distanceTo(cameraWorldPosition);if(distance>20){// Store original orientation to be restored when the portal stops facing the camera.\nif(!this.previousQuaternion){this.quaternionClone.copy(quaternion);this.previousQuaternion=this.quaternionClone;}// If the portal is far away from the user, face portal to camera.\nobject3D.lookAt(cameraWorldPosition);}else{// When portal is close to the user/camera.\ncameraPortalOrientation=this.calculateCameraPortalOrientation();// If user gets very close to portal, replace with holed sphere they can peek in.\nif(distance<0.5){// Configure text size and sphere orientation depending side user approaches portal.\nif(this.semiSphereEl.getAttribute('visible')===true){return;}textEl.setAttribute('text','width',1.5);if(cameraPortalOrientation<=0.0){textEl.setAttribute('position','0 0 0.75');textEl.setAttribute('rotation','0 180 0');this.semiSphereEl.setAttribute('rotation','0 0 0');}else{textEl.setAttribute('position','0 0 -0.75');textEl.setAttribute('rotation','0 0 0');this.semiSphereEl.setAttribute('rotation','0 180 0');}el.getObject3D('mesh').visible=false;this.semiSphereEl.setAttribute('visible',true);this.peekCameraPortalOrientation=cameraPortalOrientation;}else{// Calculate wich side the camera is approaching the camera (back / front).\n// Adjust text orientation based on camera position.\nif(cameraPortalOrientation<=0.0){textEl.setAttribute('rotation','0 180 0');}else{textEl.setAttribute('rotation','0 0 0');}textEl.setAttribute('text','width',5);textEl.setAttribute('position','0 1.5 0');el.getObject3D('mesh').visible=true;this.semiSphereEl.setAttribute('visible',false);this.peekCameraPortalOrientation=undefined;}if(this.previousQuaternion){object3D.quaternion.copy(this.previousQuaternion);this.previousQuaternion=undefined;}}};}(),hideAll:function(){var el=this.el;var hiddenEls=this.hiddenEls;var self=this;if(hiddenEls.length>0){return;}el.sceneEl.object3D.traverse(function(object){if(object&&object.el&&object.el.hasAttribute('link-controls')){return;}if(!object.el||object===el.sceneEl.object3D||object.el===el||object.el===self.sphereEl||object.el===el.sceneEl.cameraEl||object.el.getAttribute('visible')===false||object.el===self.textEl||object.el===self.semiSphereEl){return;}object.el.setAttribute('visible',false);hiddenEls.push(object.el);});},showAll:function(){this.hiddenEls.forEach(function(el){el.setAttribute('visible',true);});this.hiddenEls=[];},/**\n   * Calculate whether the camera faces the front or back face of the portal.\n   * @returns {number} > 0 if camera faces front of portal, < 0 if it faces back of portal.\n   */calculateCameraPortalOrientation:function(){var mat4=new THREE.Matrix4();var cameraPosition=new THREE.Vector3();var portalNormal=new THREE.Vector3(0,0,1);var portalPosition=new THREE.Vector3(0,0,0);return function(){var el=this.el;var camera=el.sceneEl.camera;// Reset tmp variables.\ncameraPosition.set(0,0,0);portalNormal.set(0,0,1);portalPosition.set(0,0,0);// Apply portal orientation to the normal.\nel.object3D.matrixWorld.extractRotation(mat4);portalNormal.applyMatrix4(mat4);// Calculate portal world position.\nel.object3D.updateMatrixWorld();el.object3D.localToWorld(portalPosition);// Calculate camera world position.\ncamera.parent.parent.updateMatrixWorld();camera.parent.updateMatrixWorld();camera.updateMatrixWorld();camera.localToWorld(cameraPosition);// Calculate vector from portal to camera.\n// (portal) -------> (camera)\ncameraPosition.sub(portalPosition).normalize();portalNormal.normalize();// Side where camera approaches portal is given by sign of dot product of portal normal\n// and portal to camera vectors.\nreturn Math.sign(portalNormal.dot(cameraPosition));};}(),remove:function(){this.removeEventListener();}});/* eslint-disable */registerShader('portal',{schema:{borderEnabled:{default:1.0,type:'int',is:'uniform'},backgroundColor:{default:'red',type:'color',is:'uniform'},pano:{type:'map',is:'uniform'},strokeColor:{default:'white',type:'color',is:'uniform'}},vertexShader:['vec3 portalPosition;','varying vec3 vWorldPosition;','varying float vDistanceToCenter;','varying float vDistance;','void main() {','vDistanceToCenter = clamp(length(position - vec3(0.0, 0.0, 0.0)), 0.0, 1.0);','portalPosition = (modelMatrix * vec4(0.0, 0.0, 0.0, 1.0)).xyz;','vDistance = length(portalPosition - cameraPosition);','vWorldPosition = (modelMatrix * vec4(position, 1.0)).xyz;','gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);','}'].join('\\n'),fragmentShader:['#define RECIPROCAL_PI2 0.15915494','uniform sampler2D pano;','uniform vec3 strokeColor;','uniform vec3 backgroundColor;','uniform float borderEnabled;','varying float vDistanceToCenter;','varying float vDistance;','varying vec3 vWorldPosition;','void main() {','vec3 direction = normalize(vWorldPosition - cameraPosition);','vec2 sampleUV;','float borderThickness = clamp(exp(-vDistance / 50.0), 0.6, 0.95);','sampleUV.y = saturate(direction.y * 0.5  + 0.5);','sampleUV.x = atan(direction.z, -direction.x) * -RECIPROCAL_PI2 + 0.5;','if (vDistanceToCenter > borderThickness && borderEnabled == 1.0) {','gl_FragColor = vec4(strokeColor, 1.0);','} else {','gl_FragColor = mix(texture2D(pano, sampleUV), vec4(backgroundColor, 1.0), clamp(pow((vDistance / 15.0), 2.0), 0.0, 1.0));','}','}'].join('\\n')});/* eslint-enable */},{\"../core/component\":103,\"../core/shader\":113,\"../lib/three\":151}],65:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;var THREE=_dereq_('../lib/three');var utils=_dereq_('../utils/');var bind=utils.bind;var PolyfillControls=_dereq_('../utils').device.PolyfillControls;// To avoid recalculation at every mouse movement tick\nvar PI_2=Math.PI/2;/**\n * look-controls. Update entity pose, factoring mouse, touch, and WebVR API data.\n */module.exports.Component=registerComponent('look-controls',{dependencies:['position','rotation'],schema:{enabled:{default:true},hmdEnabled:{default:true},pointerLockEnabled:{default:false},reverseMouseDrag:{default:false},reverseTouchDrag:{default:false},touchEnabled:{default:true}},init:function(){this.previousHMDPosition=new THREE.Vector3();this.hmdQuaternion=new THREE.Quaternion();this.hmdEuler=new THREE.Euler();this.position=new THREE.Vector3();// To save / restore camera pose\nthis.savedRotation=new THREE.Vector3();this.savedPosition=new THREE.Vector3();this.polyfillObject=new THREE.Object3D();this.polyfillControls=new PolyfillControls(this.polyfillObject);this.rotation={};this.deltaRotation={};this.savedPose=null;this.pointerLocked=false;this.setupMouseControls();this.bindMethods();this.el.object3D.matrixAutoUpdate=false;this.savedPose={position:new THREE.Vector3(),rotation:new THREE.Euler()};// Call enter VR handler if the scene has entered VR before the event listeners attached.\nif(this.el.sceneEl.is('vr-mode')){this.onEnterVR();}},update:function(oldData){var data=this.data;// Disable grab cursor classes if no longer enabled.\nif(data.enabled!==oldData.enabled){this.updateGrabCursor(data.enabled);}// Reset pitch and yaw if disabling HMD.\nif(oldData&&!data.hmdEnabled&&!oldData.hmdEnabled){this.pitchObject.rotation.set(0,0,0);this.yawObject.rotation.set(0,0,0);}if(oldData&&!data.pointerLockEnabled!==oldData.pointerLockEnabled){this.removeEventListeners();this.addEventListeners();if(this.pointerLocked){this.exitPointerLock();}}},tick:function(t){var data=this.data;if(!data.enabled){return;}this.updateOrientation();},play:function(){this.addEventListeners();},pause:function(){this.removeEventListeners();if(this.pointerLocked){this.exitPointerLock();}},remove:function(){this.removeEventListeners();if(this.pointerLocked){this.exitPointerLock();}},bindMethods:function(){this.onMouseDown=bind(this.onMouseDown,this);this.onMouseMove=bind(this.onMouseMove,this);this.onMouseUp=bind(this.onMouseUp,this);this.onTouchStart=bind(this.onTouchStart,this);this.onTouchMove=bind(this.onTouchMove,this);this.onTouchEnd=bind(this.onTouchEnd,this);this.onEnterVR=bind(this.onEnterVR,this);this.onExitVR=bind(this.onExitVR,this);this.onPointerLockChange=bind(this.onPointerLockChange,this);this.onPointerLockError=bind(this.onPointerLockError,this);},/**\n  * Set up states and Object3Ds needed to store rotation data.\n  */setupMouseControls:function(){this.mouseDown=false;this.pitchObject=new THREE.Object3D();this.yawObject=new THREE.Object3D();this.yawObject.position.y=10;this.yawObject.add(this.pitchObject);},/**\n   * Add mouse and touch event listeners to canvas.\n   */addEventListeners:function(){var sceneEl=this.el.sceneEl;var canvasEl=sceneEl.canvas;// Wait for canvas to load.\nif(!canvasEl){sceneEl.addEventListener('render-target-loaded',bind(this.addEventListeners,this));return;}// Mouse events.\ncanvasEl.addEventListener('mousedown',this.onMouseDown,false);window.addEventListener('mousemove',this.onMouseMove,false);window.addEventListener('mouseup',this.onMouseUp,false);// Touch events.\ncanvasEl.addEventListener('touchstart',this.onTouchStart);window.addEventListener('touchmove',this.onTouchMove);window.addEventListener('touchend',this.onTouchEnd);// sceneEl events.\nsceneEl.addEventListener('enter-vr',this.onEnterVR);sceneEl.addEventListener('exit-vr',this.onExitVR);// Pointer Lock events.\nif(this.data.pointerLockEnabled){document.addEventListener('pointerlockchange',this.onPointerLockChange,false);document.addEventListener('mozpointerlockchange',this.onPointerLockChange,false);document.addEventListener('pointerlockerror',this.onPointerLockError,false);}},/**\n   * Remove mouse and touch event listeners from canvas.\n   */removeEventListeners:function(){var sceneEl=this.el.sceneEl;var canvasEl=sceneEl&&sceneEl.canvas;if(!canvasEl){return;}// Mouse events.\ncanvasEl.removeEventListener('mousedown',this.onMouseDown);window.removeEventListener('mousemove',this.onMouseMove);window.removeEventListener('mouseup',this.onMouseUp);// Touch events.\ncanvasEl.removeEventListener('touchstart',this.onTouchStart);window.removeEventListener('touchmove',this.onTouchMove);window.removeEventListener('touchend',this.onTouchEnd);// sceneEl events.\nsceneEl.removeEventListener('enter-vr',this.onEnterVR);sceneEl.removeEventListener('exit-vr',this.onExitVR);// Pointer Lock events.\ndocument.removeEventListener('pointerlockchange',this.onPointerLockChange,false);document.removeEventListener('mozpointerlockchange',this.onPointerLockChange,false);document.removeEventListener('pointerlockerror',this.onPointerLockError,false);},/**\n   * Update orientation for mobile, mouse drag, and headset.\n   * Mouse-drag only enabled if HMD is not active.\n   */updateOrientation:function(){var poseMatrix=new THREE.Matrix4();return function(){var hmdEuler=this.hmdEuler;var object3D=this.el.object3D;var pitchObject=this.pitchObject;var yawObject=this.yawObject;var pose;var sceneEl=this.el.sceneEl;// WebXR API updates applies headset pose to the object3D matrixWorld internally.\n// Reflect values back on position, rotation, scale so setAttribute returns expected values.\nif(sceneEl.is('vr-mode')&&sceneEl.hasWebXR){pose=sceneEl.renderer.vr.getCameraPose();if(pose){poseMatrix.elements=pose.poseModelMatrix;poseMatrix.decompose(object3D.position,object3D.rotation,object3D.scale);}}else{object3D.updateMatrix();}// In VR mode, THREE is in charge of updating the camera rotation.\nif(sceneEl.is('vr-mode')&&sceneEl.checkHeadsetConnected()){return;}// Calculate polyfilled HMD quaternion.\nthis.polyfillControls.update();hmdEuler.setFromQuaternion(this.polyfillObject.quaternion,'YXZ');// On mobile, do camera rotation with touch events and sensors.\nobject3D.rotation.x=hmdEuler.x+pitchObject.rotation.x;object3D.rotation.y=hmdEuler.y+yawObject.rotation.y;};}(),/**\n   * Translate mouse drag into rotation.\n   *\n   * Dragging up and down rotates the camera around the X-axis (yaw).\n   * Dragging left and right rotates the camera around the Y-axis (pitch).\n   */onMouseMove:function(event){var direction;var movementX;var movementY;var pitchObject=this.pitchObject;var previousMouseEvent=this.previousMouseEvent;var yawObject=this.yawObject;// Not dragging or not enabled.\nif(!this.data.enabled||!this.mouseDown&&!this.pointerLocked){return;}// Calculate delta.\nif(this.pointerLocked){movementX=event.movementX||event.mozMovementX||0;movementY=event.movementY||event.mozMovementY||0;}else{movementX=event.screenX-previousMouseEvent.screenX;movementY=event.screenY-previousMouseEvent.screenY;}this.previousMouseEvent=event;// Calculate rotation.\ndirection=this.data.reverseMouseDrag?1:-1;yawObject.rotation.y+=movementX*0.002*direction;pitchObject.rotation.x+=movementY*0.002*direction;pitchObject.rotation.x=Math.max(-PI_2,Math.min(PI_2,pitchObject.rotation.x));},/**\n   * Register mouse down to detect mouse drag.\n   */onMouseDown:function(evt){if(!this.data.enabled){return;}// Handle only primary button.\nif(evt.button!==0){return;}var sceneEl=this.el.sceneEl;var canvasEl=sceneEl&&sceneEl.canvas;this.mouseDown=true;this.previousMouseEvent=evt;this.showGrabbingCursor();if(this.data.pointerLockEnabled&&!this.pointerLocked){if(canvasEl.requestPointerLock){canvasEl.requestPointerLock();}else if(canvasEl.mozRequestPointerLock){canvasEl.mozRequestPointerLock();}}},/**\n   * Shows grabbing cursor on scene\n   */showGrabbingCursor:function(){this.el.sceneEl.canvas.style.cursor='grabbing';},/**\n   * Hides grabbing cursor on scene\n   */hideGrabbingCursor:function(){this.el.sceneEl.canvas.style.cursor='';},/**\n   * Register mouse up to detect release of mouse drag.\n   */onMouseUp:function(){this.mouseDown=false;this.hideGrabbingCursor();},/**\n   * Register touch down to detect touch drag.\n   */onTouchStart:function(evt){if(evt.touches.length!==1||!this.data.touchEnabled){return;}this.touchStart={x:evt.touches[0].pageX,y:evt.touches[0].pageY};this.touchStarted=true;},/**\n   * Translate touch move to Y-axis rotation.\n   */onTouchMove:function(evt){var direction;var canvas=this.el.sceneEl.canvas;var deltaY;var yawObject=this.yawObject;if(!this.touchStarted||!this.data.touchEnabled){return;}deltaY=2*Math.PI*(evt.touches[0].pageX-this.touchStart.x)/canvas.clientWidth;direction=this.data.reverseTouchDrag?1:-1;// Limit touch orientaion to to yaw (y axis).\nyawObject.rotation.y-=deltaY*0.5*direction;this.touchStart={x:evt.touches[0].pageX,y:evt.touches[0].pageY};},/**\n   * Register touch end to detect release of touch drag.\n   */onTouchEnd:function(){this.touchStarted=false;},/**\n   * Save pose.\n   */onEnterVR:function(){if(!this.el.sceneEl.checkHeadsetConnected()){return;}this.saveCameraPose();this.el.object3D.position.set(0,0,0);this.el.object3D.updateMatrix();},/**\n   * Restore the pose.\n   */onExitVR:function(){if(!this.el.sceneEl.checkHeadsetConnected()){return;}this.restoreCameraPose();this.previousHMDPosition.set(0,0,0);},/**\n   * Update Pointer Lock state.\n   */onPointerLockChange:function(){this.pointerLocked=!!(document.pointerLockElement||document.mozPointerLockElement);},/**\n   * Recover from Pointer Lock error.\n   */onPointerLockError:function(){this.pointerLocked=false;},// Exits pointer-locked mode.\nexitPointerLock:function(){document.exitPointerLock();this.pointerLocked=false;},/**\n   * Toggle the feature of showing/hiding the grab cursor.\n   */updateGrabCursor:function(enabled){var sceneEl=this.el.sceneEl;function enableGrabCursor(){sceneEl.canvas.classList.add('a-grab-cursor');}function disableGrabCursor(){sceneEl.canvas.classList.remove('a-grab-cursor');}if(!sceneEl.canvas){if(enabled){sceneEl.addEventListener('render-target-loaded',enableGrabCursor);}else{sceneEl.addEventListener('render-target-loaded',disableGrabCursor);}return;}if(enabled){enableGrabCursor();return;}disableGrabCursor();},/**\n   * Save camera pose before entering VR to restore later if exiting.\n   */saveCameraPose:function(){var el=this.el;this.savedPose.position.copy(el.object3D.position);this.savedPose.rotation.copy(el.object3D.rotation);this.hasSavedPose=true;},/**\n   * Reset camera pose to before entering VR.\n   */restoreCameraPose:function(){var el=this.el;var savedPose=this.savedPose;if(!this.hasSavedPose){return;}// Reset camera orientation.\nel.object3D.position.copy(savedPose.position);el.object3D.rotation.copy(savedPose.rotation);this.hasSavedPose=false;}});},{\"../core/component\":103,\"../lib/three\":151,\"../utils\":176,\"../utils/\":176}],66:[function(_dereq_,module,exports){/* global Promise */var utils=_dereq_('../utils/');var component=_dereq_('../core/component');var THREE=_dereq_('../lib/three');var shader=_dereq_('../core/shader');var error=utils.debug('components:material:error');var registerComponent=component.registerComponent;var shaders=shader.shaders;var shaderNames=shader.shaderNames;/**\n * Material component.\n *\n * @member {object} shader - Determines how material is shaded. Defaults to `standard`,\n *         three.js's implementation of PBR. Another standard shading model is `flat` which\n *         uses MeshBasicMaterial.\n */module.exports.Component=registerComponent('material',{schema:{alphaTest:{default:0.0,min:0.0,max:1.0},depthTest:{default:true},depthWrite:{default:true},flatShading:{default:false},npot:{default:false},offset:{type:'vec2',default:{x:0,y:0}},opacity:{default:1.0,min:0.0,max:1.0},repeat:{type:'vec2',default:{x:1,y:1}},shader:{default:'standard',oneOf:shaderNames,schemaChange:true},side:{default:'front',oneOf:['front','back','double']},transparent:{default:false},vertexColors:{type:'string',default:'none',oneOf:['face','vertex']},visible:{default:true},blending:{default:'normal',oneOf:['none','normal','additive','subtractive','multiply']}},init:function(){this.material=null;},/**\n   * Update or create material.\n   *\n   * @param {object|null} oldData\n   */update:function(oldData){var data=this.data;if(!this.shader||data.shader!==oldData.shader){this.updateShader(data.shader);}this.shader.update(this.data);this.updateMaterial(oldData);},updateSchema:function(data){var currentShader;var newShader;var schema;var shader;newShader=data&&data.shader;currentShader=this.oldData&&this.oldData.shader;shader=newShader||currentShader;schema=shaders[shader]&&shaders[shader].schema;if(!schema){error('Unknown shader schema '+shader);}if(currentShader&&newShader===currentShader){return;}this.extendSchema(schema);this.updateBehavior();},updateBehavior:function(){var key;var sceneEl=this.el.sceneEl;var schema=this.schema;var self=this;var tickProperties;function tickTime(time,delta){var key;for(key in tickProperties){tickProperties[key]=time;}self.shader.update(tickProperties);}this.tick=undefined;tickProperties={};for(key in schema){if(schema[key].type==='time'){this.tick=tickTime;tickProperties[key]=true;}}if(!sceneEl){return;}if(this.tick){sceneEl.addBehavior(this);}else{sceneEl.removeBehavior(this);}},updateShader:function(shaderName){var data=this.data;var Shader=shaders[shaderName]&&shaders[shaderName].Shader;var shaderInstance;if(!Shader){throw new Error('Unknown shader '+shaderName);}// Get material from A-Frame shader.\nshaderInstance=this.shader=new Shader();shaderInstance.el=this.el;shaderInstance.init(data);this.setMaterial(shaderInstance.material);this.updateSchema(data);},/**\n   * Set and update base material properties.\n   * Set `needsUpdate` when needed.\n   */updateMaterial:function(oldData){var data=this.data;var material=this.material;var oldDataHasKeys;// Base material properties.\nmaterial.alphaTest=data.alphaTest;material.depthTest=data.depthTest!==false;material.depthWrite=data.depthWrite!==false;material.opacity=data.opacity;material.flatShading=data.flatShading;material.side=parseSide(data.side);material.transparent=data.transparent!==false||data.opacity<1.0;material.vertexColors=parseVertexColors(data.vertexColors);material.visible=data.visible;material.blending=parseBlending(data.blending);// Check if material needs update.\nfor(oldDataHasKeys in oldData){break;}if(oldDataHasKeys&&(oldData.alphaTest!==data.alphaTest||oldData.side!==data.side||oldData.vertexColors!==data.vertexColors)){material.needsUpdate=true;}},/**\n   * Remove material on remove (callback).\n   * Dispose of it from memory and unsubscribe from scene updates.\n   */remove:function(){var defaultMaterial=new THREE.MeshBasicMaterial();var material=this.material;var object3D=this.el.getObject3D('mesh');if(object3D){object3D.material=defaultMaterial;}disposeMaterial(material,this.system);},/**\n   * (Re)create new material. Has side-effects of setting `this.material` and updating\n   * material registration in scene.\n   *\n   * @param {object} data - Material component data.\n   * @param {object} type - Material type to create.\n   * @returns {object} Material.\n   */setMaterial:function(material){var el=this.el;var mesh;var system=this.system;if(this.material){disposeMaterial(this.material,system);}this.material=material;system.registerMaterial(material);// Set on mesh. If mesh does not exist, wait for it.\nmesh=el.getObject3D('mesh');if(mesh){mesh.material=material;}else{el.addEventListener('object3dset',function waitForMesh(evt){if(evt.detail.type!=='mesh'||evt.target!==el){return;}el.getObject3D('mesh').material=material;el.removeEventListener('object3dset',waitForMesh);});}}});/**\n * Return a three.js constant determining which material face sides to render\n * based on the side parameter (passed as a component property).\n *\n * @param {string} [side=front] - `front`, `back`, or `double`.\n * @returns {number} THREE.FrontSide, THREE.BackSide, or THREE.DoubleSide.\n */function parseSide(side){switch(side){case'back':{return THREE.BackSide;}case'double':{return THREE.DoubleSide;}default:{// Including case `front`.\nreturn THREE.FrontSide;}}}/**\n * Return a three.js constant determining vertex coloring.\n */function parseVertexColors(coloring){switch(coloring){case'face':{return THREE.FaceColors;}case'vertex':{return THREE.VertexColors;}default:{return THREE.NoColors;}}}/**\n * Return a three.js constant determining blending\n *\n * @param {string} [blending=normal]\n * - `none`, additive`, `subtractive`,`multiply` or `normal`.\n * @returns {number}\n */function parseBlending(blending){switch(blending){case'none':{return THREE.NoBlending;}case'additive':{return THREE.AdditiveBlending;}case'subtractive':{return THREE.SubtractiveBlending;}case'multiply':{return THREE.MultiplyBlending;}default:{return THREE.NormalBlending;}}}/**\n * Dispose of material from memory and unsubscribe material from scene updates like fog.\n */function disposeMaterial(material,system){material.dispose();system.unregisterMaterial(material);}},{\"../core/component\":103,\"../core/shader\":113,\"../lib/three\":151,\"../utils/\":176}],67:[function(_dereq_,module,exports){var debug=_dereq_('../utils/debug');var registerComponent=_dereq_('../core/component').registerComponent;var THREE=_dereq_('../lib/three');var warn=debug('components:obj-model:warn');module.exports.Component=registerComponent('obj-model',{schema:{mtl:{type:'model'},obj:{type:'model'}},init:function(){this.model=null;this.objLoader=new THREE.OBJLoader();this.mtlLoader=new THREE.MTLLoader(this.objLoader.manager);// Allow cross-origin images to be loaded.\nthis.mtlLoader.crossOrigin='';},update:function(){var data=this.data;if(!data.obj){return;}this.resetMesh();this.loadObj(data.obj,data.mtl);},remove:function(){if(!this.model){return;}this.resetMesh();},resetMesh:function(){this.el.removeObject3D('mesh');},loadObj:function(objUrl,mtlUrl){var self=this;var el=this.el;var mtlLoader=this.mtlLoader;var objLoader=this.objLoader;var rendererSystem=this.el.sceneEl.systems.renderer;if(mtlUrl){// .OBJ with an .MTL.\nif(el.hasAttribute('material')){warn('Material component properties are ignored when a .MTL is provided');}mtlLoader.setTexturePath(mtlUrl.substr(0,mtlUrl.lastIndexOf('/')+1));mtlLoader.load(mtlUrl,function(materials){materials.preload();objLoader.setMaterials(materials);objLoader.load(objUrl,function(objModel){self.model=objModel;self.model.traverse(function(object){if(object.isMesh){var material=object.material;if(material.color)rendererSystem.applyColorCorrection(material.color);if(material.map)rendererSystem.applyColorCorrection(material.map);if(material.emissive)rendererSystem.applyColorCorrection(material.emissive);if(material.emissiveMap)rendererSystem.applyColorCorrection(material.emissiveMap);}});el.setObject3D('mesh',objModel);el.emit('model-loaded',{format:'obj',model:objModel});});});return;}// .OBJ only.\nobjLoader.load(objUrl,function loadObjOnly(objModel){// Apply material.\nvar material=el.components.material;if(material){objModel.traverse(function(child){if(child instanceof THREE.Mesh){child.material=material.material;}});}self.model=objModel;el.setObject3D('mesh',objModel);el.emit('model-loaded',{format:'obj',model:objModel});});}});},{\"../core/component\":103,\"../lib/three\":151,\"../utils/debug\":172}],68:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;var bind=_dereq_('../utils/bind');var trackedControlsUtils=_dereq_('../utils/tracked-controls');var checkControllerPresentAndSetup=trackedControlsUtils.checkControllerPresentAndSetup;var emitIfAxesChanged=trackedControlsUtils.emitIfAxesChanged;var onButtonEvent=trackedControlsUtils.onButtonEvent;var GAMEPAD_ID_PREFIX='Oculus Go';var OCULUS_GO_CONTROLLER_MODEL_URL='https://cdn.aframe.io/controllers/oculus/go/oculus-go-controller.gltf';/**\n * Oculus Go controls.\n * Interface with Oculus Go controller and map Gamepad events to\n * controller buttons: trackpad, trigger\n * Load a controller model and highlight the pressed buttons.\n */module.exports.Component=registerComponent('oculus-go-controls',{schema:{hand:{default:''},// This informs the degenerate arm model.\nbuttonColor:{type:'color',default:'#FFFFFF'},buttonTouchedColor:{type:'color',default:'#BBBBBB'},buttonHighlightColor:{type:'color',default:'#7A7A7A'},model:{default:true},rotationOffset:{default:0},armModel:{default:true}},/**\n   * Button IDs:\n   * 0 - trackpad\n   * 1 - trigger\n   */mapping:{axes:{trackpad:[0,1]},buttons:['trackpad','trigger']},bindMethods:function(){this.onModelLoaded=bind(this.onModelLoaded,this);this.onControllersUpdate=bind(this.onControllersUpdate,this);this.checkIfControllerPresent=bind(this.checkIfControllerPresent,this);this.removeControllersUpdateListener=bind(this.removeControllersUpdateListener,this);this.onAxisMoved=bind(this.onAxisMoved,this);},init:function(){var self=this;this.animationActive='pointing';this.onButtonChanged=bind(this.onButtonChanged,this);this.onButtonDown=function(evt){onButtonEvent(evt.detail.id,'down',self);};this.onButtonUp=function(evt){onButtonEvent(evt.detail.id,'up',self);};this.onButtonTouchStart=function(evt){onButtonEvent(evt.detail.id,'touchstart',self);};this.onButtonTouchEnd=function(evt){onButtonEvent(evt.detail.id,'touchend',self);};this.onAxisMoved=bind(this.onAxisMoved,this);this.controllerPresent=false;this.lastControllerCheck=0;this.rendererSystem=this.el.sceneEl.systems.renderer;this.bindMethods();this.checkControllerPresentAndSetup=checkControllerPresentAndSetup;// To allow mock.\nthis.emitIfAxesChanged=emitIfAxesChanged;// To allow mock.\n},addEventListeners:function(){var el=this.el;el.addEventListener('buttonchanged',this.onButtonChanged);el.addEventListener('buttondown',this.onButtonDown);el.addEventListener('buttonup',this.onButtonUp);el.addEventListener('touchstart',this.onButtonTouchStart);el.addEventListener('touchend',this.onButtonTouchEnd);el.addEventListener('model-loaded',this.onModelLoaded);el.addEventListener('axismove',this.onAxisMoved);this.controllerEventsActive=true;},removeEventListeners:function(){var el=this.el;el.removeEventListener('buttonchanged',this.onButtonChanged);el.removeEventListener('buttondown',this.onButtonDown);el.removeEventListener('buttonup',this.onButtonUp);el.removeEventListener('touchstart',this.onButtonTouchStart);el.removeEventListener('touchend',this.onButtonTouchEnd);el.removeEventListener('model-loaded',this.onModelLoaded);el.removeEventListener('axismove',this.onAxisMoved);this.controllerEventsActive=false;},checkIfControllerPresent:function(){this.checkControllerPresentAndSetup(this,GAMEPAD_ID_PREFIX,this.data.hand?{hand:this.data.hand}:{});},play:function(){this.checkIfControllerPresent();this.addControllersUpdateListener();},pause:function(){this.removeEventListeners();this.removeControllersUpdateListener();},injectTrackedControls:function(){var el=this.el;var data=this.data;el.setAttribute('tracked-controls',{armModel:data.armModel,idPrefix:GAMEPAD_ID_PREFIX,rotationOffset:data.rotationOffset});if(!this.data.model){return;}this.el.setAttribute('gltf-model',OCULUS_GO_CONTROLLER_MODEL_URL);},addControllersUpdateListener:function(){this.el.sceneEl.addEventListener('controllersupdated',this.onControllersUpdate,false);},removeControllersUpdateListener:function(){this.el.sceneEl.removeEventListener('controllersupdated',this.onControllersUpdate,false);},onControllersUpdate:function(){this.checkIfControllerPresent();},// No need for onButtonChanged, since Oculus Go controller has no analog buttons.\nonModelLoaded:function(evt){var controllerObject3D=evt.detail.model;var buttonMeshes;if(!this.data.model){return;}buttonMeshes=this.buttonMeshes={};buttonMeshes.trigger=controllerObject3D.getObjectByName('oculus_go_button_trigger');buttonMeshes.trackpad=controllerObject3D.getObjectByName('oculus_go_touchpad');},onButtonChanged:function(evt){var button=this.mapping.buttons[evt.detail.id];if(!button)return;// Pass along changed event with button state, using button mapping for convenience.\nthis.el.emit(button+'changed',evt.detail.state);},onAxisMoved:function(evt){this.emitIfAxesChanged(this,this.mapping.axes,evt);},updateModel:function(buttonName,evtName){if(!this.data.model){return;}this.updateButtonModel(buttonName,evtName);},updateButtonModel:function(buttonName,state){var buttonMeshes=this.buttonMeshes;if(!buttonMeshes||!buttonMeshes[buttonName]){return;}var color;var button;switch(state){case'down':color=this.data.buttonHighlightColor;break;case'touchstart':color=this.data.buttonTouchedColor;break;default:color=this.data.buttonColor;}button=buttonMeshes[buttonName];button.material.color.set(color);this.rendererSystem.applyColorCorrection(button.material.color);}});},{\"../core/component\":103,\"../utils/bind\":170,\"../utils/tracked-controls\":184}],69:[function(_dereq_,module,exports){var bind=_dereq_('../utils/bind');var registerComponent=_dereq_('../core/component').registerComponent;var trackedControlsUtils=_dereq_('../utils/tracked-controls');var THREE=_dereq_('../lib/three');var onButtonEvent=trackedControlsUtils.onButtonEvent;var TOUCH_CONTROLLER_MODEL_BASE_URL='https://cdn.aframe.io/controllers/oculus/oculus-touch-controller-';var TOUCH_CONTROLLER_MODEL_URL={left:TOUCH_CONTROLLER_MODEL_BASE_URL+'left.gltf',right:TOUCH_CONTROLLER_MODEL_BASE_URL+'right.gltf'};var GAMEPAD_ID_PREFIX='Oculus Touch';var DEFAULT_MODEL_PIVOT_OFFSET=new THREE.Vector3(0,0,-0.053);var RAY_ORIGIN={left:{origin:{x:0.008,y:-0.004,z:0},direction:{x:0,y:-0.8,z:-1}},right:{origin:{x:-0.008,y:-0.004,z:0},direction:{x:0,y:-0.8,z:-1}}};/**\n * Oculus Touch controls.\n * Interface with Oculus Touch controllers and map Gamepad events to\n * controller buttons: thumbstick, trigger, grip, xbutton, ybutton, surface\n * Load a controller model and highlight the pressed buttons.\n */module.exports.Component=registerComponent('oculus-touch-controls',{schema:{hand:{default:'left'},buttonColor:{type:'color',default:'#999'},// Off-white.\nbuttonTouchColor:{type:'color',default:'#8AB'},buttonHighlightColor:{type:'color',default:'#2DF'},// Light blue.\nmodel:{default:true},orientationOffset:{type:'vec3',default:{x:43,y:0,z:0}}},/**\n   * Button IDs:\n   * 0 - thumbstick (which has separate axismove / thumbstickmoved events)\n   * 1 - trigger (with analog value, which goes up to 1)\n   * 2 - grip (with analog value, which goes up to 1)\n   * 3 - X (left) or A (right)\n   * 4 - Y (left) or B (right)\n   * 5 - surface (touch only)\n   */mapping:{left:{axes:{thumbstick:[0,1]},buttons:['thumbstick','trigger','grip','xbutton','ybutton','surface']},right:{axes:{thumbstick:[0,1]},buttons:['thumbstick','trigger','grip','abutton','bbutton','surface']}},bindMethods:function(){this.onModelLoaded=bind(this.onModelLoaded,this);this.onControllersUpdate=bind(this.onControllersUpdate,this);this.checkIfControllerPresent=bind(this.checkIfControllerPresent,this);this.onAxisMoved=bind(this.onAxisMoved,this);},init:function(){var self=this;this.onButtonChanged=bind(this.onButtonChanged,this);this.onButtonDown=function(evt){onButtonEvent(evt.detail.id,'down',self,self.data.hand);};this.onButtonUp=function(evt){onButtonEvent(evt.detail.id,'up',self,self.data.hand);};this.onButtonTouchStart=function(evt){onButtonEvent(evt.detail.id,'touchstart',self,self.data.hand);};this.onButtonTouchEnd=function(evt){onButtonEvent(evt.detail.id,'touchend',self,self.data.hand);};this.controllerPresent=false;this.lastControllerCheck=0;this.previousButtonValues={};this.rendererSystem=this.el.sceneEl.systems.renderer;this.bindMethods();// Allow mock.\nthis.emitIfAxesChanged=trackedControlsUtils.emitIfAxesChanged;this.checkControllerPresentAndSetup=trackedControlsUtils.checkControllerPresentAndSetup;},addEventListeners:function(){var el=this.el;el.addEventListener('buttonchanged',this.onButtonChanged);el.addEventListener('buttondown',this.onButtonDown);el.addEventListener('buttonup',this.onButtonUp);el.addEventListener('touchstart',this.onButtonTouchStart);el.addEventListener('touchend',this.onButtonTouchEnd);el.addEventListener('axismove',this.onAxisMoved);el.addEventListener('model-loaded',this.onModelLoaded);this.controllerEventsActive=true;},removeEventListeners:function(){var el=this.el;el.removeEventListener('buttonchanged',this.onButtonChanged);el.removeEventListener('buttondown',this.onButtonDown);el.removeEventListener('buttonup',this.onButtonUp);el.removeEventListener('touchstart',this.onButtonTouchStart);el.removeEventListener('touchend',this.onButtonTouchEnd);el.removeEventListener('axismove',this.onAxisMoved);el.removeEventListener('model-loaded',this.onModelLoaded);this.controllerEventsActive=false;},checkIfControllerPresent:function(){this.checkControllerPresentAndSetup(this,GAMEPAD_ID_PREFIX,{hand:this.data.hand});},play:function(){this.checkIfControllerPresent();this.addControllersUpdateListener();},pause:function(){this.removeEventListeners();this.removeControllersUpdateListener();},loadModel:function(){var data=this.data;if(!data.model){return;}this.el.setAttribute('gltf-model','url('+TOUCH_CONTROLLER_MODEL_URL[data.hand]+')');},injectTrackedControls:function(){var data=this.data;this.el.setAttribute('tracked-controls',{id:data.hand==='right'?'Oculus Touch (Right)':'Oculus Touch (Left)',controller:0,hand:data.hand,orientationOffset:data.orientationOffset});this.loadModel();},addControllersUpdateListener:function(){this.el.sceneEl.addEventListener('controllersupdated',this.onControllersUpdate,false);},removeControllersUpdateListener:function(){this.el.sceneEl.removeEventListener('controllersupdated',this.onControllersUpdate,false);},onControllersUpdate:function(){// Note that due to gamepadconnected event propagation issues, we don't rely on events.\nthis.checkIfControllerPresent();},onButtonChanged:function(evt){var button=this.mapping[this.data.hand].buttons[evt.detail.id];var buttonMeshes=this.buttonMeshes;var analogValue;if(!button){return;}if(button==='trigger'||button==='grip'){analogValue=evt.detail.state.value;}// Update trigger and/or grip meshes, if any.\nif(buttonMeshes){if(button==='trigger'&&buttonMeshes.trigger){buttonMeshes.trigger.rotation.x=this.originalXRotationTrigger-analogValue*(Math.PI/26);}if(button==='grip'&&buttonMeshes.grip){buttonMeshes.grip.position.x=this.originalXPositionGrip+(this.data.hand==='left'?-1:1)*analogValue*0.004;}}// Pass along changed event with button state, using the buttom mapping for convenience.\nthis.el.emit(button+'changed',evt.detail.state);},onModelLoaded:function(evt){var controllerObject3D=evt.detail.model;var buttonMeshes;if(!this.data.model){return;}buttonMeshes=this.buttonMeshes={};buttonMeshes.grip=controllerObject3D.getObjectByName('buttonHand');this.originalXPositionGrip=buttonMeshes.grip.position.x;buttonMeshes.thumbstick=controllerObject3D.getObjectByName('stick');buttonMeshes.trigger=controllerObject3D.getObjectByName('buttonTrigger');this.originalXRotationTrigger=buttonMeshes.trigger.rotation.x;buttonMeshes.xbutton=controllerObject3D.getObjectByName('buttonX');buttonMeshes.abutton=controllerObject3D.getObjectByName('buttonA');buttonMeshes.ybutton=controllerObject3D.getObjectByName('buttonY');buttonMeshes.bbutton=controllerObject3D.getObjectByName('buttonB');// Offset pivot point\ncontrollerObject3D.position.copy(DEFAULT_MODEL_PIVOT_OFFSET);this.el.emit('controllermodelready',{name:'oculus-touch-controls',model:this.data.model,rayOrigin:RAY_ORIGIN[this.data.hand]});},onAxisMoved:function(evt){this.emitIfAxesChanged(this,this.mapping[this.data.hand].axes,evt);},updateModel:function(buttonName,evtName){if(!this.data.model){return;}this.updateButtonModel(buttonName,evtName);},updateButtonModel:function(buttonName,state){var button;var color=state==='up'||state==='touchend'?this.data.buttonColor:state==='touchstart'?this.data.buttonTouchColor:this.data.buttonHighlightColor;var buttonMeshes=this.buttonMeshes;if(!this.data.model){return;}if(buttonMeshes&&buttonMeshes[buttonName]){button=buttonMeshes[buttonName];button.material.color.set(color);this.rendererSystem.applyColorCorrection(button.material.color);}}});},{\"../core/component\":103,\"../lib/three\":151,\"../utils/bind\":170,\"../utils/tracked-controls\":184}],70:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;module.exports.Component=registerComponent('position',{schema:{type:'vec3'},update:function(){var object3D=this.el.object3D;var data=this.data;object3D.position.set(data.x,data.y,data.z);},remove:function(){// Pretty much for mixins.\nthis.el.object3D.position.set(0,0,0);}});},{\"../core/component\":103}],71:[function(_dereq_,module,exports){/* global MutationObserver */var registerComponent=_dereq_('../core/component').registerComponent;var THREE=_dereq_('../lib/three');var utils=_dereq_('../utils/');var warn=utils.debug('components:raycaster:warn');// Defines selectors that should be 'safe' for the MutationObserver used to\n// refresh the whitelist. Matches classnames, IDs, and presence of attributes.\n// Selectors for the value of an attribute, like [position=0 2 0], cannot be\n// reliably detected and are therefore disallowed.\nvar OBSERVER_SELECTOR_RE=/^[\\w\\s-.,[\\]#]*$/;// Configuration for the MutationObserver used to refresh the whitelist.\n// Listens for addition/removal of elements and attributes within the scene.\nvar OBSERVER_CONFIG={childList:true,attributes:true,subtree:true};var EVENTS={INTERSECT:'raycaster-intersected',INTERSECTION:'raycaster-intersection',INTERSECT_CLEAR:'raycaster-intersected-cleared',INTERSECTION_CLEAR:'raycaster-intersection-cleared'};/**\n * Raycaster component.\n *\n * Pass options to three.js Raycaster including which objects to test.\n * Poll for intersections.\n * Emit event on origin entity and on target entity on intersect.\n *\n * @member {array} intersectedEls - List of currently intersected entities.\n * @member {array} objects - Cached list of meshes to intersect.\n * @member {number} prevCheckTime - Previous time intersection was checked. To help interval.\n * @member {object} raycaster - three.js Raycaster.\n */module.exports.Component=registerComponent('raycaster',{schema:{autoRefresh:{default:true},direction:{type:'vec3',default:{x:0,y:0,z:-1}},enabled:{default:true},far:{default:1000},interval:{default:0},near:{default:0},objects:{default:''},origin:{type:'vec3'},showLine:{default:false},useWorldCoordinates:{default:false}},multiple:true,init:function(){this.clearedIntersectedEls=[];this.unitLineEndVec3=new THREE.Vector3();this.intersectedEls=[];this.intersections=[];this.newIntersectedEls=[];this.newIntersections=[];this.objects=[];this.prevCheckTime=undefined;this.prevIntersectedEls=[];this.rawIntersections=[];this.raycaster=new THREE.Raycaster();this.updateOriginDirection();this.setDirty=this.setDirty.bind(this);this.updateLine=this.updateLine.bind(this);this.observer=new MutationObserver(this.setDirty);this.dirty=true;this.lineEndVec3=new THREE.Vector3();this.otherLineEndVec3=new THREE.Vector3();this.lineData={end:this.lineEndVec3};this.getIntersection=this.getIntersection.bind(this);this.intersectedDetail={el:this.el,getIntersection:this.getIntersection};this.intersectedClearedDetail={el:this.el};this.intersectionClearedDetail={clearedEls:this.clearedIntersectedEls};this.intersectionDetail={};},/**\n   * Create or update raycaster object.\n   */update:function(oldData){var data=this.data;var el=this.el;var raycaster=this.raycaster;// Set raycaster properties.\nraycaster.far=data.far;raycaster.near=data.near;// Draw line.\nif(data.showLine&&(data.far!==oldData.far||data.origin!==oldData.origin||data.direction!==oldData.direction||!oldData.showLine)){// Calculate unit vector for line direction. Can be multiplied via scalar to performantly\n// adjust line length.\nthis.unitLineEndVec3.copy(data.origin).add(data.direction).normalize();this.drawLine();}if(!data.showLine&&oldData.showLine){el.removeAttribute('line');}if(data.objects!==oldData.objects&&!OBSERVER_SELECTOR_RE.test(data.objects)){warn('[raycaster] Selector \"'+data.objects+'\" may not update automatically with DOM changes.');}if(!data.objects){warn('[raycaster] For performance, please define raycaster.objects when using '+'raycaster or cursor components to whitelist which entities to intersect with. '+'e.g., raycaster=\"objects: [data-raycastable]\".');}if(data.autoRefresh!==oldData.autoRefresh&&el.isPlaying){data.autoRefresh?this.addEventListeners():this.removeEventListeners();}if(oldData.enabled&&!data.enabled){this.clearAllIntersections();}this.setDirty();},play:function(){this.addEventListeners();},pause:function(){this.removeEventListeners();},remove:function(){if(this.data.showLine){this.el.removeAttribute('line');}this.clearAllIntersections();},addEventListeners:function(){if(!this.data.autoRefresh){return;}this.observer.observe(this.el.sceneEl,OBSERVER_CONFIG);this.el.sceneEl.addEventListener('object3dset',this.setDirty);this.el.sceneEl.addEventListener('object3dremove',this.setDirty);},removeEventListeners:function(){this.observer.disconnect();this.el.sceneEl.removeEventListener('object3dset',this.setDirty);this.el.sceneEl.removeEventListener('object3dremove',this.setDirty);},/**\n   * Mark the object list as dirty, to be refreshed before next raycast.\n   */setDirty:function(){this.dirty=true;},/**\n   * Update list of objects to test for intersection.\n   */refreshObjects:function(){var data=this.data;var els;// If objects not defined, intersect with everything.\nels=data.objects?this.el.sceneEl.querySelectorAll(data.objects):this.el.sceneEl.querySelectorAll('*');this.objects=this.flattenObject3DMaps(els);this.dirty=false;},/**\n   * Check for intersections and cleared intersections on an interval.\n   */tick:function(time){var data=this.data;var prevCheckTime=this.prevCheckTime;if(!data.enabled){return;}// Only check for intersection if interval time has passed.\nif(prevCheckTime&&time-prevCheckTime<data.interval){return;}// Update check time.\nthis.prevCheckTime=time;this.checkIntersections();},/**\n   * Raycast for intersections and emit events for current and cleared inersections.\n   */checkIntersections:function(){var clearedIntersectedEls=this.clearedIntersectedEls;var el=this.el;var data=this.data;var i;var intersectedEls=this.intersectedEls;var intersection;var intersections=this.intersections;var newIntersectedEls=this.newIntersectedEls;var newIntersections=this.newIntersections;var prevIntersectedEls=this.prevIntersectedEls;var rawIntersections=this.rawIntersections;// Refresh the object whitelist if needed.\nif(this.dirty){this.refreshObjects();}// Store old previously intersected entities.\ncopyArray(this.prevIntersectedEls,this.intersectedEls);// Raycast.\nthis.updateOriginDirection();rawIntersections.length=0;this.raycaster.intersectObjects(this.objects,true,rawIntersections);// Only keep intersections against objects that have a reference to an entity.\nintersections.length=0;intersectedEls.length=0;for(i=0;i<rawIntersections.length;i++){intersection=rawIntersections[i];// Don't intersect with own line.\nif(data.showLine&&intersection.object===el.getObject3D('line')){continue;}if(intersection.object.el){intersections.push(intersection);intersectedEls.push(intersection.object.el);}}// Get newly intersected entities.\nnewIntersections.length=0;newIntersectedEls.length=0;for(i=0;i<intersections.length;i++){if(prevIntersectedEls.indexOf(intersections[i].object.el)===-1){newIntersections.push(intersections[i]);newIntersectedEls.push(intersections[i].object.el);}}// Emit intersection cleared on both entities per formerly intersected entity.\nclearedIntersectedEls.length=0;for(i=0;i<prevIntersectedEls.length;i++){if(intersectedEls.indexOf(prevIntersectedEls[i])!==-1){continue;}prevIntersectedEls[i].emit(EVENTS.INTERSECT_CLEAR,this.intersectedClearedDetail);clearedIntersectedEls.push(prevIntersectedEls[i]);}if(clearedIntersectedEls.length){el.emit(EVENTS.INTERSECTION_CLEAR,this.intersectionClearedDetail);}// Emit intersected on intersected entity per intersected entity.\nfor(i=0;i<newIntersectedEls.length;i++){newIntersectedEls[i].emit(EVENTS.INTERSECT,this.intersectedDetail);}// Emit all intersections at once on raycasting entity.\nif(newIntersections.length){this.intersectionDetail.els=newIntersectedEls;this.intersectionDetail.intersections=newIntersections;el.emit(EVENTS.INTERSECTION,this.intersectionDetail);}// Update line length.\nsetTimeout(this.updateLine);},updateLine:function(){var el=this.el;var intersections=this.intersections;var lineLength;if(this.data.showLine){if(intersections.length){if(intersections[0].object.el===el&&intersections[1]){lineLength=intersections[1].distance;}else{lineLength=intersections[0].distance;}}this.drawLine(lineLength);}},/**\n   * Return the most recent intersection details for a given entity, if any.\n   * @param {AEntity} el\n   * @return {Object}\n   */getIntersection:function(el){var i;var intersection;for(i=0;i<this.intersections.length;i++){intersection=this.intersections[i];if(intersection.object.el===el){return intersection;}}return null;},/**\n   * Update origin and direction of raycaster using entity transforms and supplied origin or\n   * direction offsets.\n   */updateOriginDirection:function(){var direction=new THREE.Vector3();var originVec3=new THREE.Vector3();// Closure to make quaternion/vector3 objects private.\nreturn function updateOriginDirection(){var el=this.el;var data=this.data;if(data.useWorldCoordinates){this.raycaster.set(data.origin,data.direction);return;}// Grab the position and rotation. (As a side effect, this updates el.object3D.matrixWorld.)\nel.object3D.getWorldPosition(originVec3);// If non-zero origin, translate the origin into world space.\nif(data.origin.x!==0||data.origin.y!==0||data.origin.z!==0){originVec3=el.object3D.localToWorld(originVec3.copy(data.origin));}// three.js raycaster direction is relative to 0, 0, 0 NOT the origin / offset we\n// provide. Apply the offset to the direction, then rotation from the object,\n// and normalize.\ndirection.copy(data.direction).transformDirection(el.object3D.matrixWorld).normalize();// Apply offset and direction, in world coordinates.\nthis.raycaster.set(originVec3,direction);};}(),/**\n   * Create or update line to give raycaster visual representation.\n   * Customize the line through through line component.\n   * We draw the line in the raycaster component to customize the line to the\n   * raycaster's origin, direction, and far.\n   *\n   * Unlike the raycaster, we create the line as a child of the object. The line will\n   * be affected by the transforms of the objects, so we don't have to calculate transforms\n   * like we do with the raycaster.\n   *\n   * @param {number} length - Length of line. Pass in to shorten the line to the intersection\n   *   point. If not provided, length will default to the max length, `raycaster.far`.\n   */drawLine:function(length){var data=this.data;var el=this.el;var endVec3;// Switch each time vector so line update triggered and to avoid unnecessary vector clone.\nendVec3=this.lineData.end===this.lineEndVec3?this.otherLineEndVec3:this.lineEndVec3;// Treat Infinity as 1000m for the line.\nif(length===undefined){length=data.far===Infinity?1000:data.far;}// Update the length of the line if given. `unitLineEndVec3` is the direction\n// given by data.direction, then we apply a scalar to give it a length.\nthis.lineData.start=data.origin;this.lineData.end=endVec3.copy(this.unitLineEndVec3).multiplyScalar(length);el.setAttribute('line',this.lineData);},/**\n   * Return A-Frame attachments of each element's object3D group (e.g., mesh).\n   * Children are flattened by one level, removing the THREE.Group wrapper,\n   * so that non-recursive raycasting remains useful.\n   *\n   * Only push children defined as component attachemnts (e.g., setObject3D),\n   * NOT actual children in the scene graph hierarchy.\n   *\n   * @param  {Array<Element>} els\n   * @return {Array<THREE.Object3D>}\n   */flattenObject3DMaps:function(els){var key;var i;var objects=this.objects;// Push meshes and other attachments onto list of objects to intersect.\nobjects.length=0;for(i=0;i<els.length;i++){if(els[i].isEntity&&els[i].object3D){for(key in els[i].object3DMap){objects.push(els[i].getObject3D(key));}}}return objects;},clearAllIntersections:function(){var i;for(i=0;i<this.intersectedEls.length;i++){this.intersectedEls[i].emit(EVENTS.INTERSECT_CLEAR,this.intersectedClearedDetail);}copyArray(this.clearedIntersectedEls,this.intersectedEls);this.intersectedEls.length=0;this.intersections.length=0;this.el.emit(EVENTS.INTERSECTION_CLEAR,this.intersectionClearedDetail);}});/**\n * Copy contents of one array to another without allocating new array.\n */function copyArray(a,b){var i;a.length=b.length;for(i=0;i<b.length;i++){a[i]=b[i];}}},{\"../core/component\":103,\"../lib/three\":151,\"../utils/\":176}],72:[function(_dereq_,module,exports){var degToRad=_dereq_('../lib/three').Math.degToRad;var registerComponent=_dereq_('../core/component').registerComponent;module.exports.Component=registerComponent('rotation',{schema:{type:'vec3'},/**\n   * Updates object3D rotation.\n   */update:function(){var data=this.data;var object3D=this.el.object3D;object3D.rotation.set(degToRad(data.x),degToRad(data.y),degToRad(data.z));object3D.rotation.order='YXZ';},remove:function(){// Pretty much for mixins.\nthis.el.object3D.rotation.set(0,0,0);}});},{\"../core/component\":103,\"../lib/three\":151}],73:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;// Avoids triggering a zero-determinant which makes object3D matrix non-invertible.\nvar zeroScale=0.00001;module.exports.Component=registerComponent('scale',{schema:{type:'vec3',default:{x:1,y:1,z:1}},update:function(){var data=this.data;var object3D=this.el.object3D;var x=data.x===0?zeroScale:data.x;var y=data.y===0?zeroScale:data.y;var z=data.z===0?zeroScale:data.z;object3D.scale.set(x,y,z);},remove:function(){// Pretty much for mixins.\nthis.el.object3D.scale.set(1,1,1);}});},{\"../core/component\":103}],74:[function(_dereq_,module,exports){/* global THREE */var register=_dereq_('../../core/component').registerComponent;module.exports.Component=register('background',{schema:{color:{type:'color',default:'black'},transparent:{default:false}},update:function(){var data=this.data;var object3D=this.el.object3D;if(data.transparent){object3D.background=null;return;}object3D.background=new THREE.Color(data.color);}});},{\"../../core/component\":103}],75:[function(_dereq_,module,exports){var register=_dereq_('../../core/component').registerComponent;module.exports.Component=register('debug',{schema:{default:true}});},{\"../../core/component\":103}],76:[function(_dereq_,module,exports){var registerComponent=_dereq_('../../core/component').registerComponent;/**\n * Component to embed an a-frame scene within the layout of a 2D page.\n */module.exports.Component=registerComponent('embedded',{dependencies:['vr-mode-ui'],schema:{default:true},update:function(){var sceneEl=this.el;var enterVREl=sceneEl.querySelector('.a-enter-vr');if(this.data===true){if(enterVREl){enterVREl.classList.add('embedded');}sceneEl.removeFullScreenStyles();}else{if(enterVREl){enterVREl.classList.remove('embedded');}sceneEl.addFullScreenStyles();}}});},{\"../../core/component\":103}],77:[function(_dereq_,module,exports){var register=_dereq_('../../core/component').registerComponent;var THREE=_dereq_('../../lib/three');var debug=_dereq_('../../utils/debug');var warn=debug('components:fog:warn');/**\n * Fog component.\n * Applies only to the scene entity.\n */module.exports.Component=register('fog',{schema:{color:{type:'color',default:'#000'},density:{default:0.00025},far:{default:1000,min:0},near:{default:1,min:0},type:{default:'linear',oneOf:['linear','exponential']}},update:function(){var data=this.data;var el=this.el;var fog=this.el.object3D.fog;if(!el.isScene){warn('Fog component can only be applied to <a-scene>');return;}// (Re)create fog if fog doesn't exist or fog type changed.\nif(!fog||data.type!==fog.name){el.object3D.fog=getFog(data);el.systems.material.updateMaterials();return;}// Fog data changed. Update fog.\nObject.keys(this.schema).forEach(function(key){var value=data[key];if(key==='color'){value=new THREE.Color(value);}fog[key]=value;});},/**\n   * Remove fog on remove (callback).\n   */remove:function(){var fog=this.el.object3D.fog;if(!fog){return;}fog.far=0;fog.near=0.1;}});/**\n * Creates a fog object. Sets fog.name to be able to detect fog type changes.\n *\n * @param {object} data - Fog data.\n * @returns {object} fog\n */function getFog(data){var fog;if(data.type==='exponential'){fog=new THREE.FogExp2(data.color,data.density);}else{fog=new THREE.Fog(data.color,data.near,data.far);}fog.name=data.type;return fog;}},{\"../../core/component\":103,\"../../lib/three\":151,\"../../utils/debug\":172}],78:[function(_dereq_,module,exports){(function(process){/* global AFRAME */var AFRAME_INJECTED=_dereq_('../../constants').AFRAME_INJECTED;var pkg=_dereq_('../../../package');var registerComponent=_dereq_('../../core/component').registerComponent;var utils=_dereq_('../../utils/');/**\n * 0.4.2 to 0.4.x\n * Will need to update this when A-Frame goes to 1.x.x.\n */function getFuzzyPatchVersion(version){var split=version.split('.');split[2]='x';return split.join('.');}var INSPECTOR_DEV_URL='https://aframe.io/aframe-inspector/dist/aframe-inspector.js';var INSPECTOR_RELEASE_URL='https://unpkg.com/aframe-inspector@'+getFuzzyPatchVersion(pkg.version)+'/dist/aframe-inspector.min.js';var INSPECTOR_URL=process.env.INSPECTOR_VERSION==='dev'?INSPECTOR_DEV_URL:INSPECTOR_RELEASE_URL;var LOADING_MESSAGE='Loading Inspector';var LOADING_ERROR_MESSAGE='Error loading Inspector';module.exports.Component=registerComponent('inspector',{schema:{url:{default:INSPECTOR_URL}},init:function(){this.firstPlay=true;this.onKeydown=this.onKeydown.bind(this);this.onMessage=this.onMessage.bind(this);this.initOverlay();window.addEventListener('keydown',this.onKeydown);window.addEventListener('message',this.onMessage);},play:function(){var urlParam;if(!this.firstPlay){return;}urlParam=utils.getUrlParameter('inspector');if(urlParam!=='false'&&!!urlParam){this.openInspector();this.firstPlay=false;}},initOverlay:function(){var dotsHTML='<span class=\"dots\"><span>.</span><span>.</span><span>.</span></span>';this.loadingMessageEl=document.createElement('div');this.loadingMessageEl.classList.add('a-inspector-loader');this.loadingMessageEl.innerHTML=LOADING_MESSAGE+dotsHTML;},remove:function(){this.removeEventListeners();},/**\n   * <ctrl> + <alt> + i keyboard shortcut.\n   */onKeydown:function(evt){var shortcutPressed=evt.keyCode===73&&evt.ctrlKey&&evt.altKey;if(!shortcutPressed){return;}this.openInspector();},showLoader:function(){document.body.appendChild(this.loadingMessageEl);},hideLoader:function(){document.body.removeChild(this.loadingMessageEl);},/**\n   * postMessage. aframe.io uses this to create a button on examples to open Inspector.\n   */onMessage:function(evt){if(evt.data==='INJECT_AFRAME_INSPECTOR'){this.openInspector();}},openInspector:function(focusEl){var self=this;var script;// Already injected. Open.\nif(AFRAME.INSPECTOR||AFRAME.inspectorInjected){AFRAME.INSPECTOR.open(focusEl);return;}this.showLoader();// Inject.\nscript=document.createElement('script');script.src=this.data.url;script.setAttribute('data-name','aframe-inspector');script.setAttribute(AFRAME_INJECTED,'');script.onload=function(){AFRAME.INSPECTOR.open(focusEl);self.hideLoader();self.removeEventListeners();};script.onerror=function(){self.loadingMessageEl.innerHTML=LOADING_ERROR_MESSAGE;};document.head.appendChild(script);AFRAME.inspectorInjected=true;},removeEventListeners:function(){window.removeEventListener('keydown',this.onKeydown);window.removeEventListener('message',this.onMessage);}});}).call(this,_dereq_('_process'));},{\"../../../package\":51,\"../../constants\":95,\"../../core/component\":103,\"../../utils/\":176,\"_process\":33}],79:[function(_dereq_,module,exports){var registerComponent=_dereq_('../../core/component').registerComponent;var shouldCaptureKeyEvent=_dereq_('../../utils/').shouldCaptureKeyEvent;module.exports.Component=registerComponent('keyboard-shortcuts',{schema:{enterVR:{default:true},exitVR:{default:true}},init:function(){this.onKeyup=this.onKeyup.bind(this);},update:function(oldData){var data=this.data;this.enterVREnabled=data.enterVR;},play:function(){window.addEventListener('keyup',this.onKeyup,false);},pause:function(){window.removeEventListener('keyup',this.onKeyup);},onKeyup:function(evt){var scene=this.el;if(!shouldCaptureKeyEvent(evt)){return;}if(this.enterVREnabled&&evt.keyCode===70){// f.\nscene.enterVR();}if(this.enterVREnabled&&evt.keyCode===27){// escape.\nscene.exitVR();}}});},{\"../../core/component\":103,\"../../utils/\":176}],80:[function(_dereq_,module,exports){var debug=_dereq_('../../utils/debug');var registerComponent=_dereq_('../../core/component').registerComponent;var warn=debug('components:pool:warn');/**\n * Pool component to reuse entities.\n * Avoids creating and destroying the same kind of entities.\n * Helps reduce GC pauses. For example in a game to reuse enemies entities.\n *\n * @member {array} availableEls - Available entities in the pool.\n * @member {array} usedEls - Entities of the pool in use.\n */module.exports.Component=registerComponent('pool',{schema:{container:{default:''},mixin:{default:''},size:{default:0},dynamic:{default:false}},multiple:true,initPool:function(){var i;this.availableEls=[];this.usedEls=[];if(!this.data.mixin){warn('No mixin provided for pool component.');}if(this.data.container){this.container=document.querySelector(this.data.container);if(!this.container){warn('Container '+this.data.container+' not found.');}}this.container=this.container||this.el;for(i=0;i<this.data.size;++i){this.createEntity();}},update:function(oldData){var data=this.data;if(oldData.mixin!==data.mixin||oldData.size!==data.size){this.initPool();}},/**\n   * Add a new entity to the list of available entities.\n   */createEntity:function(){var el;el=document.createElement('a-entity');el.play=this.wrapPlay(el.play);el.setAttribute('mixin',this.data.mixin);el.object3D.visible=false;el.pause();this.container.appendChild(el);this.availableEls.push(el);},/**\n   * Play wrapper for pooled entities. When pausing and playing a scene, don't want to play\n   * entities that are not in use.\n   */wrapPlay:function(playMethod){var usedEls=this.usedEls;return function(){if(usedEls.indexOf(this)===-1){return;}playMethod.call(this);};},/**\n   * Used to request one of the available entities of the pool.\n   */requestEntity:function(){var el;if(this.availableEls.length===0){if(this.data.dynamic===false){warn('Requested entity from empty pool: '+this.attrName);return;}else{warn('Requested entity from empty pool. This pool is dynamic and will resize '+'automatically. You might want to increase its initial size: '+this.attrName);}this.createEntity();}el=this.availableEls.shift();this.usedEls.push(el);el.object3D.visible=true;return el;},/**\n   * Used to return a used entity to the pool.\n   */returnEntity:function(el){var index=this.usedEls.indexOf(el);if(index===-1){warn('The returned entity was not previously pooled from '+this.attrName);return;}this.usedEls.splice(index,1);this.availableEls.push(el);el.object3D.visible=false;el.pause();return el;}});},{\"../../core/component\":103,\"../../utils/debug\":172}],81:[function(_dereq_,module,exports){/* global ImageData, URL */var registerComponent=_dereq_('../../core/component').registerComponent;var THREE=_dereq_('../../lib/three');var VERTEX_SHADER=['attribute vec3 position;','attribute vec2 uv;','uniform mat4 projectionMatrix;','uniform mat4 modelViewMatrix;','varying vec2 vUv;','void main()  {','  vUv = vec2( 1.- uv.x, uv.y );','  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );','}'].join('\\n');var FRAGMENT_SHADER=['precision mediump float;','uniform samplerCube map;','varying vec2 vUv;','#define M_PI 3.141592653589793238462643383279','void main() {','  vec2 uv = vUv;','  float longitude = uv.x * 2. * M_PI - M_PI + M_PI / 2.;','  float latitude = uv.y * M_PI;','  vec3 dir = vec3(','    - sin( longitude ) * sin( latitude ),','    cos( latitude ),','    - cos( longitude ) * sin( latitude )','  );','  normalize( dir );','  gl_FragColor = vec4( textureCube( map, dir ).rgb, 1.0 );','}'].join('\\n');/**\n * Component to take screenshots of the scene using a keboard shortcut (alt+s).\n * It can be configured to either take 360&deg; captures (`equirectangular`)\n * or regular screenshots (`projection`)\n *\n * This is based on https://github.com/spite/THREE.CubemapToEquirectangular\n * To capture an equirectangular projection of the scene a THREE.CubeCamera is used\n * The cube map produced by the CubeCamera is projected on a quad and then rendered to\n * WebGLRenderTarget with an ortographic camera.\n */module.exports.Component=registerComponent('screenshot',{schema:{width:{default:4096},height:{default:2048},camera:{type:'selector'}},init:function(){var el=this.el;var self=this;if(el.renderer){setup();}else{el.addEventListener('render-target-loaded',setup);}function setup(){var gl=el.renderer.getContext();if(!gl){return;}self.cubeMapSize=gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);self.material=new THREE.RawShaderMaterial({uniforms:{map:{type:'t',value:null}},vertexShader:VERTEX_SHADER,fragmentShader:FRAGMENT_SHADER,side:THREE.DoubleSide});self.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(1,1),self.material);self.quad.visible=false;self.camera=new THREE.OrthographicCamera(-1/2,1/2,1/2,-1/2,-10000,10000);self.canvas=document.createElement('canvas');self.ctx=self.canvas.getContext('2d');el.object3D.add(self.quad);self.onKeyDown=self.onKeyDown.bind(self);}},getRenderTarget:function(width,height){return new THREE.WebGLRenderTarget(width,height,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,wrapS:THREE.ClampToEdgeWrapping,wrapT:THREE.ClampToEdgeWrapping,format:THREE.RGBAFormat,type:THREE.UnsignedByteType});},resize:function(width,height){// Resize quad.\nthis.quad.scale.set(width,height,1);// Resize camera.\nthis.camera.left=-1*width/2;this.camera.right=width/2;this.camera.top=height/2;this.camera.bottom=-1*height/2;this.camera.updateProjectionMatrix();// Resize canvas.\nthis.canvas.width=width;this.canvas.height=height;},play:function(){window.addEventListener('keydown',this.onKeyDown);},/**\n   * <ctrl> + <alt> + s = Regular screenshot.\n   * <ctrl> + <alt> + <shift> + s = Equirectangular screenshot.\n  */onKeyDown:function(evt){var shortcutPressed=evt.keyCode===83&&evt.ctrlKey&&evt.altKey;if(!this.data||!shortcutPressed){return;}var projection=evt.shiftKey?'equirectangular':'perspective';this.capture(projection);},/**\n   * Capture a screenshot of the scene.\n   *\n   * @param {string} projection - Screenshot projection (equirectangular or perspective).\n   */setCapture:function(projection){var el=this.el;var size;var camera;var cubeCamera;// Configure camera.\nif(projection==='perspective'){// Quad is only used in equirectangular mode. Hide it in this case.\nthis.quad.visible=false;// Use scene camera.\ncamera=this.data.camera&&this.data.camera.components.camera.camera||el.camera;size={width:this.data.width,height:this.data.height};}else{// Use ortho camera.\ncamera=this.camera;// Create cube camera and copy position from scene camera.\ncubeCamera=new THREE.CubeCamera(el.camera.near,el.camera.far,Math.min(this.cubeMapSize,2048));// Copy camera position into cube camera;\nel.camera.getWorldPosition(cubeCamera.position);el.camera.getWorldQuaternion(cubeCamera.quaternion);// Render scene with cube camera.\ncubeCamera.update(el.renderer,el.object3D);this.quad.material.uniforms.map.value=cubeCamera.renderTarget.texture;size={width:this.data.width,height:this.data.height};// Use quad to project image taken by the cube camera.\nthis.quad.visible=true;}return{camera:camera,size:size,projection:projection};},/**\n   * Maintained for backwards compatibility.\n   */capture:function(projection){var isVREnabled=this.el.renderer.vr.enabled;var renderer=this.el.renderer;var params;// Disable VR.\nrenderer.vr.enabled=false;params=this.setCapture(projection);this.renderCapture(params.camera,params.size,params.projection);// Trigger file download.\nthis.saveCapture();// Restore VR.\nrenderer.vr.enabled=isVREnabled;},/**\n   * Return canvas instead of triggering download (e.g., for uploading blob to server).\n   */getCanvas:function(projection){var params=this.setCapture(projection);this.renderCapture(params.camera,params.size,params.projection);return this.canvas;},renderCapture:function(camera,size,projection){var autoClear=this.el.renderer.autoClear;var el=this.el;var imageData;var output;var pixels;var renderer=el.renderer;// Create rendering target and buffer to store the read pixels.\noutput=this.getRenderTarget(size.width,size.height);pixels=new Uint8Array(4*size.width*size.height);// Resize quad, camera, and canvas.\nthis.resize(size.width,size.height);// Render scene to render target.\nrenderer.autoClear=true;renderer.render(el.object3D,camera,output,true);renderer.autoClear=autoClear;// Read image pizels back.\nrenderer.readRenderTargetPixels(output,0,0,size.width,size.height,pixels);if(projection==='perspective'){pixels=this.flipPixelsVertically(pixels,size.width,size.height);}imageData=new ImageData(new Uint8ClampedArray(pixels),size.width,size.height);// Hide quad after projecting the image.\nthis.quad.visible=false;// Copy pixels into canvas.\nthis.ctx.putImageData(imageData,0,0);},flipPixelsVertically:function(pixels,width,height){var flippedPixels=pixels.slice(0);for(var x=0;x<width;++x){for(var y=0;y<height;++y){flippedPixels[x*4+y*width*4]=pixels[x*4+(height-y)*width*4];flippedPixels[x*4+1+y*width*4]=pixels[x*4+1+(height-y)*width*4];flippedPixels[x*4+2+y*width*4]=pixels[x*4+2+(height-y)*width*4];flippedPixels[x*4+3+y*width*4]=pixels[x*4+3+(height-y)*width*4];}}return flippedPixels;},/**\n   * Download capture to file.\n   */saveCapture:function(){this.canvas.toBlob(function(blob){var fileName='screenshot-'+document.title.toLowerCase()+'-'+Date.now()+'.png';var linkEl=document.createElement('a');var url=URL.createObjectURL(blob);linkEl.href=url;linkEl.setAttribute('download',fileName);linkEl.innerHTML='downloading...';linkEl.style.display='none';document.body.appendChild(linkEl);setTimeout(function(){linkEl.click();document.body.removeChild(linkEl);},1);},'image/png');}});},{\"../../core/component\":103,\"../../lib/three\":151}],82:[function(_dereq_,module,exports){var registerComponent=_dereq_('../../core/component').registerComponent;var RStats=_dereq_('../../../vendor/rStats');var utils=_dereq_('../../utils');_dereq_('../../../vendor/rStats.extras');_dereq_('../../lib/rStatsAframe');var AFrameStats=window.aframeStats;var bind=utils.bind;var HIDDEN_CLASS='a-hidden';var ThreeStats=window.threeStats;/**\n * Stats appended to document.body by RStats.\n */module.exports.Component=registerComponent('stats',{schema:{default:true},init:function(){var scene=this.el;if(utils.getUrlParameter('stats')==='false'){return;}this.stats=createStats(scene);this.statsEl=document.querySelector('.rs-base');this.hideBound=bind(this.hide,this);this.showBound=bind(this.show,this);scene.addEventListener('enter-vr',this.hideBound);scene.addEventListener('exit-vr',this.showBound);},update:function(){if(!this.stats){return;}return!this.data?this.hide():this.show();},remove:function(){this.el.removeEventListener('enter-vr',this.hideBound);this.el.removeEventListener('exit-vr',this.showBound);if(!this.statsEl){return;}// Scene detached.\nthis.statsEl.parentNode.removeChild(this.statsEl);},tick:function(){var stats=this.stats;if(!stats){return;}stats('rAF').tick();stats('FPS').frame();stats().update();},hide:function(){this.statsEl.classList.add(HIDDEN_CLASS);},show:function(){this.statsEl.classList.remove(HIDDEN_CLASS);}});function createStats(scene){var threeStats=new ThreeStats(scene.renderer);var aframeStats=new AFrameStats(scene);var plugins=scene.isMobile?[]:[threeStats,aframeStats];return new RStats({css:[],// Our stylesheet is injected from `src/index.js`.\nvalues:{fps:{caption:'fps',below:30}},groups:[{caption:'Framerate',values:['fps','raf']}],plugins:plugins});}},{\"../../../vendor/rStats\":186,\"../../../vendor/rStats.extras\":185,\"../../core/component\":103,\"../../lib/rStatsAframe\":150,\"../../utils\":176}],83:[function(_dereq_,module,exports){var registerComponent=_dereq_('../../core/component').registerComponent;var constants=_dereq_('../../constants/');var utils=_dereq_('../../utils/');var bind=utils.bind;var ENTER_VR_CLASS='a-enter-vr';var ENTER_VR_BTN_CLASS='a-enter-vr-button';var HIDDEN_CLASS='a-hidden';var ORIENTATION_MODAL_CLASS='a-orientation-modal';/**\n * UI for entering VR mode.\n */module.exports.Component=registerComponent('vr-mode-ui',{dependencies:['canvas'],schema:{enabled:{default:true},enterVRButton:{default:''}},init:function(){var self=this;var sceneEl=this.el;if(utils.getUrlParameter('ui')==='false'){return;}this.insideLoader=false;this.enterVREl=null;this.orientationModalEl=null;this.bindMethods();// Hide/show VR UI when entering/exiting VR mode.\nsceneEl.addEventListener('enter-vr',this.updateEnterVRInterface);sceneEl.addEventListener('exit-vr',this.updateEnterVRInterface);window.addEventListener('message',function(event){if(event.data.type==='loaderReady'){self.insideLoader=true;self.remove();}});// Modal that tells the user to change orientation if in portrait.\nwindow.addEventListener('orientationchange',this.toggleOrientationModalIfNeeded);},bindMethods:function(){this.onEnterVRButtonClick=bind(this.onEnterVRButtonClick,this);this.onModalClick=bind(this.onModalClick,this);this.toggleOrientationModalIfNeeded=bind(this.toggleOrientationModalIfNeeded,this);this.updateEnterVRInterface=bind(this.updateEnterVRInterface,this);},/**\n   * Exit VR when modal clicked.\n   */onModalClick:function(){this.el.exitVR();},/**\n   * Enter VR when modal clicked.\n   */onEnterVRButtonClick:function(){this.el.enterVR();},update:function(){var data=this.data;var sceneEl=this.el;if(!data.enabled||this.insideLoader||utils.getUrlParameter('ui')==='false'){return this.remove();}if(this.enterVREl||this.orientationModalEl){return;}// Add UI if enabled and not already present.\nif(data.enterVRButton){// Custom button.\nthis.enterVREl=document.querySelector(data.enterVRButton);this.enterVREl.addEventListener('click',this.onEnterVRButtonClick);}else{this.enterVREl=createEnterVRButton(this.onEnterVRButtonClick);sceneEl.appendChild(this.enterVREl);}this.orientationModalEl=createOrientationModal(this.onModalClick);sceneEl.appendChild(this.orientationModalEl);this.updateEnterVRInterface();},remove:function(){[this.enterVREl,this.orientationModalEl].forEach(function(uiElement){if(uiElement&&uiElement.parentNode){uiElement.parentNode.removeChild(uiElement);}});},updateEnterVRInterface:function(){this.toggleEnterVRButtonIfNeeded();this.toggleOrientationModalIfNeeded();},toggleEnterVRButtonIfNeeded:function(){var sceneEl=this.el;if(!this.enterVREl){return;}if(sceneEl.is('vr-mode')){this.enterVREl.classList.add(HIDDEN_CLASS);}else{this.enterVREl.classList.remove(HIDDEN_CLASS);}},toggleOrientationModalIfNeeded:function(){var sceneEl=this.el;var orientationModalEl=this.orientationModalEl;if(!orientationModalEl||!sceneEl.isMobile){return;}if(!utils.device.isLandscape()&&sceneEl.is('vr-mode')){// Show if in VR mode on portrait.\norientationModalEl.classList.remove(HIDDEN_CLASS);}else{orientationModalEl.classList.add(HIDDEN_CLASS);}}});/**\n * Create a button that when clicked will enter into stereo-rendering mode for VR.\n *\n * Structure: <div><button></div>\n *\n * @param {function} onClick - click event handler\n * @returns {Element} Wrapper <div>.\n */function createEnterVRButton(onClick){var vrButton;var wrapper;// Create elements.\nwrapper=document.createElement('div');wrapper.classList.add(ENTER_VR_CLASS);wrapper.setAttribute(constants.AFRAME_INJECTED,'');vrButton=document.createElement('button');vrButton.className=ENTER_VR_BTN_CLASS;vrButton.setAttribute('title','Enter VR mode with a headset or fullscreen mode on a desktop. '+'Visit https://webvr.rocks or https://webvr.info for more information.');vrButton.setAttribute(constants.AFRAME_INJECTED,'');// Insert elements.\nwrapper.appendChild(vrButton);vrButton.addEventListener('click',function(evt){onClick();evt.stopPropagation();});return wrapper;}/**\n * Creates a modal dialog to request the user to switch to landscape orientation.\n *\n * @param {function} onClick - click event handler\n * @returns {Element} Wrapper <div>.\n */function createOrientationModal(onClick){var modal=document.createElement('div');modal.className=ORIENTATION_MODAL_CLASS;modal.classList.add(HIDDEN_CLASS);modal.setAttribute(constants.AFRAME_INJECTED,'');var exit=document.createElement('button');exit.setAttribute(constants.AFRAME_INJECTED,'');exit.innerHTML='Exit VR';// Exit VR on close.\nexit.addEventListener('click',onClick);modal.appendChild(exit);return modal;}},{\"../../constants/\":95,\"../../core/component\":103,\"../../utils/\":176}],84:[function(_dereq_,module,exports){var component=_dereq_('../core/component');var THREE=_dereq_('../lib/three');var bind=_dereq_('../utils/bind');var registerComponent=component.registerComponent;/**\n * Shadow component.\n *\n * When applied to an entity, that entity's geometry and any descendants will cast or receive\n * shadows as specified by the `cast` and `receive` properties.\n */module.exports.Component=registerComponent('shadow',{schema:{cast:{default:true},receive:{default:true}},init:function(){this.onMeshChanged=bind(this.update,this);this.el.addEventListener('object3dset',this.onMeshChanged);this.system.setShadowMapEnabled(true);},update:function(){var data=this.data;this.updateDescendants(data.cast,data.receive);},remove:function(){var el=this.el;el.removeEventListener('object3dset',this.onMeshChanged);this.updateDescendants(false,false);},updateDescendants:function(cast,receive){var sceneEl=this.el.sceneEl;this.el.object3D.traverse(function(node){if(!(node instanceof THREE.Mesh)){return;}node.castShadow=cast;node.receiveShadow=receive;// If scene has already rendered, materials must be updated.\nif(sceneEl.hasLoaded&&node.material){var materials=Array.isArray(node.material)?node.material:[node.material];for(var i=0;i<materials.length;i++){materials[i].needsUpdate=true;}}});}});},{\"../core/component\":103,\"../lib/three\":151,\"../utils/bind\":170}],85:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;var debug=_dereq_('../utils/debug');var THREE=_dereq_('../lib/three');var warn=debug('components:sound:warn');/**\n * Sound component.\n */module.exports.Component=registerComponent('sound',{schema:{autoplay:{default:false},distanceModel:{default:'inverse',oneOf:['linear','inverse','exponential']},loop:{default:false},maxDistance:{default:10000},on:{default:''},poolSize:{default:1},positional:{default:true},refDistance:{default:1},rolloffFactor:{default:1},src:{type:'audio'},volume:{default:1}},multiple:true,init:function(){var self=this;this.listener=null;this.audioLoader=new THREE.AudioLoader();this.pool=new THREE.Group();this.loaded=false;this.mustPlay=false;// Don't pass evt because playSound takes a function as parameter.\nthis.playSoundBound=function(){self.playSound();};},update:function(oldData){var data=this.data;var i;var sound;var srcChanged=data.src!==oldData.src;// Create new sound if not yet created or changing `src`.\nif(srcChanged){if(!data.src){return;}this.setupSound();}for(i=0;i<this.pool.children.length;i++){sound=this.pool.children[i];if(data.positional){sound.setDistanceModel(data.distanceModel);sound.setMaxDistance(data.maxDistance);sound.setRefDistance(data.refDistance);sound.setRolloffFactor(data.rolloffFactor);}sound.setLoop(data.loop);sound.setVolume(data.volume);sound.isPaused=false;}if(data.on!==oldData.on){this.updateEventListener(oldData.on);}// All sound values set. Load in `src`.\nif(srcChanged){var self=this;this.loaded=false;this.audioLoader.load(data.src,function(buffer){for(i=0;i<self.pool.children.length;i++){sound=self.pool.children[i];sound.setBuffer(buffer);}self.loaded=true;// Remove this key from cache, otherwise we can't play it again\nTHREE.Cache.remove(data.src);if(self.data.autoplay||self.mustPlay){self.playSound();}self.el.emit('sound-loaded',self.evtDetail,false);});}},pause:function(){this.stopSound();this.removeEventListener();},play:function(){if(this.data.autoplay){this.playSound();}this.updateEventListener();},remove:function(){var i;var sound;this.removeEventListener();if(this.el.getObject3D(this.attrName)){this.el.removeObject3D(this.attrName);}try{for(i=0;i<this.pool.children.length;i++){sound=this.pool.children[i];sound.disconnect();}}catch(e){// disconnect() will throw if it was never connected initially.\nwarn('Audio source not properly disconnected');}},/**\n  *  Update listener attached to the user defined on event.\n  */updateEventListener:function(oldEvt){var el=this.el;if(oldEvt){el.removeEventListener(oldEvt,this.playSoundBound);}el.addEventListener(this.data.on,this.playSoundBound);},removeEventListener:function(){this.el.removeEventListener(this.data.on,this.playSoundBound);},/**\n   * Removes current sound object, creates new sound object, adds to entity.\n   *\n   * @returns {object} sound\n   */setupSound:function(){var self=this;var el=this.el;var i;var sceneEl=el.sceneEl;var sound;if(this.pool.children.length>0){this.stopSound();el.removeObject3D('sound');}// Only want one AudioListener. Cache it on the scene.\nvar listener=this.listener=sceneEl.audioListener||new THREE.AudioListener();sceneEl.audioListener=listener;if(sceneEl.camera){sceneEl.camera.add(listener);}// Wait for camera if necessary.\nsceneEl.addEventListener('camera-set-active',function(evt){evt.detail.cameraEl.getObject3D('camera').add(listener);});// Create [poolSize] audio instances and attach them to pool\nthis.pool=new THREE.Group();for(i=0;i<this.data.poolSize;i++){sound=this.data.positional?new THREE.PositionalAudio(listener):new THREE.Audio(listener);this.pool.add(sound);}el.setObject3D(this.attrName,this.pool);for(i=0;i<this.pool.children.length;i++){sound=this.pool.children[i];sound.onEnded=function(){this.isPlaying=false;el.emit('sound-ended',self.evtDetail,false);};}},/**\n   * Pause all the sounds in the pool.\n   */pauseSound:function(){var i;var sound;this.isPlaying=false;for(i=0;i<this.pool.children.length;i++){sound=this.pool.children[i];if(!sound.source||!sound.source.buffer||!sound.isPlaying||sound.isPaused){continue;}sound.isPaused=true;sound.pause();}},/**\n   * Look for an unused sound in the pool and play it if found.\n   */playSound:function(processSound){var found;var i;var sound;if(!this.loaded){warn('Sound not loaded yet. It will be played once it finished loading');this.mustPlay=true;return;}found=false;this.isPlaying=true;for(i=0;i<this.pool.children.length;i++){sound=this.pool.children[i];if(!sound.isPlaying&&sound.buffer&&!found){if(processSound){processSound(sound);}sound.play();sound.isPaused=false;found=true;continue;}}if(!found){warn('All the sounds are playing. If you need to play more sounds simultaneously '+'consider increasing the size of pool with the `poolSize` attribute.',this.el);return;}this.mustPlay=false;},/**\n   * Stop all the sounds in the pool.\n   */stopSound:function(){var i;var sound;this.isPlaying=false;for(i=0;i<this.pool.children.length;i++){sound=this.pool.children[i];if(!sound.source||!sound.source.buffer){return;}sound.stop();}}});},{\"../core/component\":103,\"../lib/three\":151,\"../utils/debug\":172}],86:[function(_dereq_,module,exports){var createTextGeometry=_dereq_('three-bmfont-text');var loadBMFont=_dereq_('load-bmfont');var registerComponent=_dereq_('../core/component').registerComponent;var coreShader=_dereq_('../core/shader');var THREE=_dereq_('../lib/three');var utils=_dereq_('../utils/');var error=utils.debug('components:text:error');var shaders=coreShader.shaders;var warn=utils.debug('components:text:warn');// 1 to match other A-Frame default widths.\nvar DEFAULT_WIDTH=1;// @bryik set anisotropy to 16. Improves look of large amounts of text when viewed from angle.\nvar MAX_ANISOTROPY=16;var FONT_BASE_URL='https://cdn.aframe.io/fonts/';var FONTS={aileronsemibold:FONT_BASE_URL+'Aileron-Semibold.fnt',dejavu:FONT_BASE_URL+'DejaVu-sdf.fnt',exo2bold:FONT_BASE_URL+'Exo2Bold.fnt',exo2semibold:FONT_BASE_URL+'Exo2SemiBold.fnt',kelsonsans:FONT_BASE_URL+'KelsonSans.fnt',monoid:FONT_BASE_URL+'Monoid.fnt',mozillavr:FONT_BASE_URL+'mozillavr.fnt',roboto:FONT_BASE_URL+'Roboto-msdf.json',sourcecodepro:FONT_BASE_URL+'SourceCodePro.fnt'};var MSDF_FONTS=['roboto'];var DEFAULT_FONT='roboto';module.exports.FONTS=FONTS;var cache=new PromiseCache();var fontWidthFactors={};var textures={};// Regular expression for detecting a URLs with a protocol prefix.\nvar protocolRe=/^\\w+:/;/**\n * SDF-based text component.\n * Based on https://github.com/Jam3/three-bmfont-text.\n *\n * All the stock fonts are for the `sdf` registered shader, an improved version of jam3's\n * original `sdf` shader.\n */module.exports.Component=registerComponent('text',{multiple:true,schema:{align:{type:'string',default:'left',oneOf:['left','right','center']},alphaTest:{default:0.5},// `anchor` defaults to center to match geometries.\nanchor:{default:'center',oneOf:['left','right','center','align']},baseline:{default:'center',oneOf:['top','center','bottom']},color:{type:'color',default:'#FFF'},font:{type:'string',default:DEFAULT_FONT},// `fontImage` defaults to the font name as a .png (e.g., mozillavr.fnt -> mozillavr.png).\nfontImage:{type:'string'},// `height` has no default, will be populated at layout.\nheight:{type:'number'},letterSpacing:{type:'number',default:0},// `lineHeight` defaults to font's `lineHeight` value.\nlineHeight:{type:'number'},// `negate` must be true for fonts generated with older versions of msdfgen (white background).\nnegate:{type:'boolean',default:true},opacity:{type:'number',default:1.0},shader:{default:'sdf',oneOf:shaders},side:{default:'front',oneOf:['front','back','double']},tabSize:{default:4},transparent:{default:true},value:{type:'string'},whiteSpace:{default:'normal',oneOf:['normal','pre','nowrap']},// `width` defaults to geometry width if present, else `DEFAULT_WIDTH`.\nwidth:{type:'number'},// `wrapCount` units are about one default font character. Wrap roughly at this number.\nwrapCount:{type:'number',default:40},// `wrapPixels` will wrap using bmfont pixel units (e.g., dejavu's is 32 pixels).\nwrapPixels:{type:'number'},// `xOffset` to add padding.\nxOffset:{type:'number',default:0},// `yOffset` to adjust generated fonts from tools that may have incorrect metrics.\nyOffset:{type:'number',default:0},// `zOffset` will provide a small z offset to avoid z-fighting.\nzOffset:{type:'number',default:0.001}},init:function(){this.shaderData={};this.geometry=createTextGeometry();this.createOrUpdateMaterial();this.mesh=new THREE.Mesh(this.geometry,this.material);this.el.setObject3D(this.attrName,this.mesh);},update:function(oldData){var data=this.data;var font=this.currentFont;if(textures[data.font]){this.texture=textures[data.font];}else{// Create texture per font.\nthis.texture=textures[data.font]=new THREE.Texture();this.texture.anisotropy=MAX_ANISOTROPY;}// Update material.\nthis.createOrUpdateMaterial();// New font. `updateFont` will later change data and layout.\nif(oldData.font!==data.font){this.updateFont();return;}// Update geometry and layout.\nif(font){this.updateGeometry(this.geometry,font);this.updateLayout();}},/**\n   * Clean up geometry, material, texture, mesh, objects.\n   */remove:function(){this.geometry.dispose();this.geometry=null;this.el.removeObject3D(this.attrName);this.material.dispose();this.material=null;this.texture.dispose();this.texture=null;if(this.shaderObject){delete this.shaderObject;}},/**\n   * Update the shader of the material.\n   */createOrUpdateMaterial:function(){var data=this.data;var hasChangedShader;var material=this.material;var NewShader;var shaderData=this.shaderData;var shaderName;// Infer shader if using a stock font (or from `-msdf` filename convention).\nshaderName=data.shader;if(MSDF_FONTS.indexOf(data.font)!==-1||data.font.indexOf('-msdf.')>=0){shaderName='msdf';}else if(data.font in FONTS&&MSDF_FONTS.indexOf(data.font)===-1){shaderName='sdf';}hasChangedShader=(this.shaderObject&&this.shaderObject.name)!==shaderName;shaderData.alphaTest=data.alphaTest;shaderData.color=data.color;shaderData.map=this.texture;shaderData.opacity=data.opacity;shaderData.side=parseSide(data.side);shaderData.transparent=data.transparent;shaderData.negate=data.negate;// Shader has not changed, do an update.\nif(!hasChangedShader){// Update shader material.\nthis.shaderObject.update(shaderData);// Apparently, was not set on `init` nor `update`.\nmaterial.transparent=shaderData.transparent;material.side=shaderData.side;return;}// Shader has changed. Create a shader material.\nNewShader=createShader(this.el,shaderName,shaderData);this.material=NewShader.material;this.shaderObject=NewShader.shader;// Set new shader material.\nthis.material.side=shaderData.side;if(this.mesh){this.mesh.material=this.material;}},/**\n   * Load font for geometry, load font image for material, and apply.\n   */updateFont:function(){var data=this.data;var el=this.el;var fontSrc;var geometry=this.geometry;var self=this;if(!data.font){warn('No font specified. Using the default font.');}// Make invisible during font swap.\nthis.mesh.visible=false;// Look up font URL to use, and perform cached load.\nfontSrc=this.lookupFont(data.font||DEFAULT_FONT)||data.font;cache.get(fontSrc,function doLoadFont(){return loadFont(fontSrc,data.yOffset);}).then(function setFont(font){var fontImgSrc;if(font.pages.length!==1){throw new Error('Currently only single-page bitmap fonts are supported.');}if(!fontWidthFactors[fontSrc]){font.widthFactor=fontWidthFactors[font]=computeFontWidthFactor(font);}// Update geometry given font metrics.\nself.updateGeometry(geometry,font);// Set font and update layout.\nself.currentFont=font;self.updateLayout();// Look up font image URL to use, and perform cached load.\nfontImgSrc=self.getFontImageSrc();cache.get(fontImgSrc,function(){return loadTexture(fontImgSrc);}).then(function(image){// Make mesh visible and apply font image as texture.\nvar texture=self.texture;texture.image=image;texture.needsUpdate=true;textures[data.font]=texture;self.texture=texture;self.mesh.visible=true;el.emit('textfontset',{font:data.font,fontObj:font});}).catch(function(err){error(err.message);error(err.stack);});}).catch(function(err){error(err.message);error(err.stack);});},getFontImageSrc:function(){if(this.data.fontImage){return this.data.fontImage;}var fontSrc=this.lookupFont(this.data.font||DEFAULT_FONT)||this.data.font;var imageSrc=this.currentFont.pages[0];// If the image URL contains a non-HTTP(S) protocol, assume it's an absolute\n// path on disk and try to infer the path from the font source instead.\nif(imageSrc.match(protocolRe)&&imageSrc.indexOf('http')!==0){return fontSrc.replace(/(\\.fnt)|(\\.json)/,'.png');}return THREE.LoaderUtils.extractUrlBase(fontSrc)+imageSrc;},/**\n   * Update layout with anchor, alignment, baseline, and considering any meshes.\n   */updateLayout:function(){var anchor;var baseline;var el=this.el;var data=this.data;var geometry=this.geometry;var geometryComponent;var height;var layout;var mesh=this.mesh;var textRenderWidth;var textScale;var width;var x;var y;if(!geometry.layout){return;}// Determine width to use (defined width, geometry's width, or default width).\ngeometryComponent=el.getAttribute('geometry');width=data.width||geometryComponent&&geometryComponent.width||DEFAULT_WIDTH;// Determine wrap pixel count. Either specified or by experimental fudge factor.\n// Note that experimental factor will never be correct for variable width fonts.\ntextRenderWidth=computeWidth(data.wrapPixels,data.wrapCount,this.currentFont.widthFactor);textScale=width/textRenderWidth;// Determine height to use.\nlayout=geometry.layout;height=textScale*(layout.height+layout.descender);// Update geometry dimensions to match text layout if width and height are set to 0.\n// For example, scales a plane to fit text.\nif(geometryComponent&&geometryComponent.primitive==='plane'){if(!geometryComponent.width){el.setAttribute('geometry','width',width);}if(!geometryComponent.height){el.setAttribute('geometry','height',height);}}// Calculate X position to anchor text left, center, or right.\nanchor=data.anchor==='align'?data.align:data.anchor;if(anchor==='left'){x=0;}else if(anchor==='right'){x=-1*layout.width;}else if(anchor==='center'){x=-1*layout.width/2;}else{throw new TypeError('Invalid text.anchor property value',anchor);}// Calculate Y position to anchor text top, center, or bottom.\nbaseline=data.baseline;if(baseline==='bottom'){y=0;}else if(baseline==='top'){y=-1*layout.height+layout.ascender;}else if(baseline==='center'){y=-1*layout.height/2;}else{throw new TypeError('Invalid text.baseline property value',baseline);}// Position and scale mesh to apply layout.\nmesh.position.x=x*textScale+data.xOffset;mesh.position.y=y*textScale;// Place text slightly in front to avoid Z-fighting.\nmesh.position.z=data.zOffset;mesh.scale.set(textScale,-1*textScale,textScale);},/**\n   * Grab font from the constant.\n   * Set as a method for test stubbing purposes.\n   */lookupFont:function(key){return FONTS[key];},/**\n   * Update the text geometry using `three-bmfont-text.update`.\n   */updateGeometry:function(){var geometryUpdateBase={};var geometryUpdateData={};var newLineRegex=/\\\\n/g;var tabRegex=/\\\\t/g;return function(geometry,font){var data=this.data;geometryUpdateData.font=font;geometryUpdateData.lineHeight=data.lineHeight&&isFinite(data.lineHeight)?data.lineHeight:font.common.lineHeight;geometryUpdateData.text=data.value.toString().replace(newLineRegex,'\\n').replace(tabRegex,'\\t');geometryUpdateData.width=computeWidth(data.wrapPixels,data.wrapCount,font.widthFactor);geometry.update(utils.extend(geometryUpdateBase,data,geometryUpdateData));};}()});/**\n * Due to using negative scale, we return the opposite side specified.\n * https://github.com/mrdoob/three.js/pull/12787/\n */function parseSide(side){switch(side){case'back':{return THREE.FrontSide;}case'double':{return THREE.DoubleSide;}default:{return THREE.BackSide;}}}/**\n * @returns {Promise}\n */function loadFont(src,yOffset){return new Promise(function(resolve,reject){loadBMFont(src,function(err,font){if(err){error('Error loading font',src);reject(err);return;}// Fix negative Y offsets for Roboto MSDF font from tool. Experimentally determined.\nif(src.indexOf('/Roboto-msdf.json')>=0){yOffset=30;}if(yOffset){font.chars.map(function doOffset(ch){ch.yoffset+=yOffset;});}resolve(font);});});}/**\n * @returns {Promise}\n */function loadTexture(src){return new Promise(function(resolve,reject){new THREE.ImageLoader().load(src,function(image){resolve(image);},undefined,function(){error('Error loading font image',src);reject(null);});});}function createShader(el,shaderName,data){var shader;var shaderObject;// Set up Shader.\nshaderObject=new shaders[shaderName].Shader();shaderObject.el=el;shaderObject.init(data);shaderObject.update(data);// Get material.\nshader=shaderObject.material;// Apparently, was not set on `init` nor `update`.\nshader.transparent=data.transparent;return{material:shader,shader:shaderObject};}/**\n * Determine wrap pixel count. Either specified or by experimental fudge factor.\n * Note that experimental factor will never be correct for variable width fonts.\n */function computeWidth(wrapPixels,wrapCount,widthFactor){return wrapPixels||(0.5+wrapCount)*widthFactor;}/**\n * Compute default font width factor to use.\n */function computeFontWidthFactor(font){var sum=0;var digitsum=0;var digits=0;font.chars.map(function(ch){sum+=ch.xadvance;if(ch.id>=48&&ch.id<=57){digits++;digitsum+=ch.xadvance;}});return digits?digitsum/digits:sum/font.chars.length;}/**\n * Get or create a promise given a key and promise generator.\n * @todo Move to a utility and use in other parts of A-Frame.\n */function PromiseCache(){var cache=this.cache={};this.get=function(key,promiseGenerator){if(key in cache){return cache[key];}cache[key]=promiseGenerator();return cache[key];};}},{\"../core/component\":103,\"../core/shader\":113,\"../lib/three\":151,\"../utils/\":176,\"load-bmfont\":24,\"three-bmfont-text\":41}],87:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;var controllerUtils=_dereq_('../utils/tracked-controls');var DEFAULT_CAMERA_HEIGHT=_dereq_('../constants').DEFAULT_CAMERA_HEIGHT;var THREE=_dereq_('../lib/three');var DEFAULT_HANDEDNESS=_dereq_('../constants').DEFAULT_HANDEDNESS;// Vector from eyes to elbow (divided by user height).\nvar EYES_TO_ELBOW={x:0.175,y:-0.3,z:-0.03};// Vector from eyes to elbow (divided by user height).\nvar FOREARM={x:0,y:0,z:-0.175};// Due to unfortunate name collision, add empty touches array to avoid Daydream error.\nvar EMPTY_DAYDREAM_TOUCHES={touches:[]};var EVENTS={AXISMOVE:'axismove',BUTTONCHANGED:'buttonchanged',BUTTONDOWN:'buttondown',BUTTONUP:'buttonup',TOUCHSTART:'touchstart',TOUCHEND:'touchend'};/**\n * Tracked controls component.\n * Wrap the gamepad API for pose and button states.\n * Select the appropriate controller and apply pose to the entity.\n * Observe button states and emit appropriate events.\n *\n * @property {number} controller - Index of controller in array returned by Gamepad API.\n *  Only used if hand property is not set.\n * @property {string} id - Selected controller among those returned by Gamepad API.\n * @property {number} hand - If multiple controllers found with id, choose the one with the\n *  given value for hand. If set, we ignore 'controller' property\n */module.exports.Component=registerComponent('tracked-controls-webvr',{schema:{autoHide:{default:true},controller:{default:0},id:{type:'string',default:''},hand:{type:'string',default:''},idPrefix:{type:'string',default:''},orientationOffset:{type:'vec3'},// Arm model parameters when not 6DoF.\narmModel:{default:true},headElement:{type:'selector'}},init:function(){// Copy variables back to tracked-controls for backwards compatibility.\n// Some 3rd components rely on them.\nthis.axis=this.el.components['tracked-controls'].axis=[0,0,0];this.buttonStates=this.el.components['tracked-controls'].buttonStates={};this.changedAxes=[];this.targetControllerNumber=this.data.controller;this.axisMoveEventDetail={axis:this.axis,changed:this.changedAxes};this.deltaControllerPosition=new THREE.Vector3();this.controllerQuaternion=new THREE.Quaternion();this.controllerEuler=new THREE.Euler();this.updateGamepad();this.buttonEventDetails={};},tick:function(time,delta){var mesh=this.el.getObject3D('mesh');// Update mesh animations.\nif(mesh&&mesh.update){mesh.update(delta/1000);}this.updateGamepad();this.updatePose();this.updateButtons();},/**\n   * Return default user height to use for non-6DOF arm model.\n   */defaultUserHeight:function(){return DEFAULT_CAMERA_HEIGHT;},/**\n   * Return head element to use for non-6DOF arm model.\n   */getHeadElement:function(){return this.data.headElement||this.el.sceneEl.camera.el;},/**\n   * Handle update controller match criteria (such as `id`, `idPrefix`, `hand`, `controller`)\n   */updateGamepad:function(){var data=this.data;var controller=controllerUtils.findMatchingControllerWebVR(this.system.controllers,data.id,data.idPrefix,data.hand,data.controller);this.controller=controller;// Legacy handle to the controller for old components.\nthis.el.components['tracked-controls'].controller=controller;if(this.data.autoHide){this.el.object3D.visible=!!this.controller;}},/**\n   * Applies an artificial arm model to simulate elbow to wrist positioning\n   * based on the orientation of the controller.\n   *\n   * @param {object} controllerPosition - Existing vector to update with controller position.\n   */applyArmModel:function(controllerPosition){// Use controllerPosition and deltaControllerPosition to avoid creating variables.\nvar controller=this.controller;var controllerEuler=this.controllerEuler;var controllerQuaternion=this.controllerQuaternion;var deltaControllerPosition=this.deltaControllerPosition;var hand;var headEl;var headObject3D;var pose;var userHeight;headEl=this.getHeadElement();headObject3D=headEl.object3D;userHeight=this.defaultUserHeight();pose=controller.pose;hand=(controller?controller.hand:undefined)||DEFAULT_HANDEDNESS;// Use camera position as head position.\ncontrollerPosition.copy(headObject3D.position);// Set offset for degenerate \"arm model\" to elbow.\ndeltaControllerPosition.set(EYES_TO_ELBOW.x*(hand==='left'?-1:hand==='right'?1:0),EYES_TO_ELBOW.y,// Lower than our eyes.\nEYES_TO_ELBOW.z);// Slightly out in front.\n// Scale offset by user height.\ndeltaControllerPosition.multiplyScalar(userHeight);// Apply camera Y rotation (not X or Z, so you can look down at your hand).\ndeltaControllerPosition.applyAxisAngle(headObject3D.up,headObject3D.rotation.y);// Apply rotated offset to position.\ncontrollerPosition.add(deltaControllerPosition);// Set offset for degenerate \"arm model\" forearm. Forearm sticking out from elbow.\ndeltaControllerPosition.set(FOREARM.x,FOREARM.y,FOREARM.z);// Scale offset by user height.\ndeltaControllerPosition.multiplyScalar(userHeight);// Apply controller X/Y rotation (tilting up/down/left/right is usually moving the arm).\nif(pose.orientation){controllerQuaternion.fromArray(pose.orientation);}else{controllerQuaternion.copy(headObject3D.quaternion);}controllerEuler.setFromQuaternion(controllerQuaternion);controllerEuler.set(controllerEuler.x,controllerEuler.y,0);deltaControllerPosition.applyEuler(controllerEuler);// Apply rotated offset to position.\ncontrollerPosition.add(deltaControllerPosition);},/**\n   * Read pose from controller (from Gamepad API), apply transforms, apply to entity.\n   */updatePose:function(){var controller=this.controller;var data=this.data;var object3D=this.el.object3D;var pose;var vrDisplay=this.system.vrDisplay;var standingMatrix;if(!controller){return;}// Compose pose from Gamepad.\npose=controller.pose;if(pose.position){object3D.position.fromArray(pose.position);}else{// Controller not 6DOF, apply arm model.\nif(data.armModel){this.applyArmModel(object3D.position);}}if(pose.orientation){object3D.quaternion.fromArray(pose.orientation);}// Apply transforms, if 6DOF and in VR.\nif(vrDisplay&&pose.position){standingMatrix=this.el.sceneEl.renderer.vr.getStandingMatrix();object3D.matrix.compose(object3D.position,object3D.quaternion,object3D.scale);object3D.matrix.multiplyMatrices(standingMatrix,object3D.matrix);object3D.matrix.decompose(object3D.position,object3D.quaternion,object3D.scale);}object3D.rotateX(this.data.orientationOffset.x*THREE.Math.DEG2RAD);object3D.rotateY(this.data.orientationOffset.y*THREE.Math.DEG2RAD);object3D.rotateZ(this.data.orientationOffset.z*THREE.Math.DEG2RAD);},/**\n   * Handle button changes including axes, presses, touches, values.\n   */updateButtons:function(){var buttonState;var controller=this.controller;var id;if(!controller){return;}// Check every button.\nfor(id=0;id<controller.buttons.length;++id){// Initialize button state.\nif(!this.buttonStates[id]){this.buttonStates[id]={pressed:false,touched:false,value:0};}if(!this.buttonEventDetails[id]){this.buttonEventDetails[id]={id:id,state:this.buttonStates[id]};}buttonState=controller.buttons[id];this.handleButton(id,buttonState);}// Check axes.\nthis.handleAxes();},/**\n   * Handle presses and touches for a single button.\n   *\n   * @param {number} id - Index of button in Gamepad button array.\n   * @param {number} buttonState - Value of button state from 0 to 1.\n   * @returns {boolean} Whether button has changed in any way.\n   */handleButton:function(id,buttonState){var changed;changed=this.handlePress(id,buttonState)|this.handleTouch(id,buttonState)|this.handleValue(id,buttonState);if(!changed){return false;}this.el.emit(EVENTS.BUTTONCHANGED,this.buttonEventDetails[id],false);return true;},/**\n   * An axis is an array of values from -1 (up, left) to 1 (down, right).\n   * Compare each component of the axis to the previous value to determine change.\n   *\n   * @returns {boolean} Whether axes changed.\n   */handleAxes:function(){var changed=false;var controllerAxes=this.controller.axes;var i;var previousAxis=this.axis;var changedAxes=this.changedAxes;// Check if axis changed.\nthis.changedAxes.length=0;for(i=0;i<controllerAxes.length;++i){changedAxes.push(previousAxis[i]!==controllerAxes[i]);if(changedAxes[i]){changed=true;}}if(!changed){return false;}this.axis.length=0;for(i=0;i<controllerAxes.length;i++){this.axis.push(controllerAxes[i]);}this.el.emit(EVENTS.AXISMOVE,this.axisMoveEventDetail,false);return true;},/**\n   * Determine whether a button press has occured and emit events as appropriate.\n   *\n   * @param {string} id - ID of the button to check.\n   * @param {object} buttonState - State of the button to check.\n   * @returns {boolean} Whether button press state changed.\n   */handlePress:function(id,buttonState){var evtName;var previousButtonState=this.buttonStates[id];// Not changed.\nif(buttonState.pressed===previousButtonState.pressed){return false;}evtName=buttonState.pressed?EVENTS.BUTTONDOWN:EVENTS.BUTTONUP;this.el.emit(evtName,this.buttonEventDetails[id],false);previousButtonState.pressed=buttonState.pressed;return true;},/**\n   * Determine whether a button touch has occured and emit events as appropriate.\n   *\n   * @param {string} id - ID of the button to check.\n   * @param {object} buttonState - State of the button to check.\n   * @returns {boolean} Whether button touch state changed.\n   */handleTouch:function(id,buttonState){var evtName;var previousButtonState=this.buttonStates[id];// Not changed.\nif(buttonState.touched===previousButtonState.touched){return false;}evtName=buttonState.touched?EVENTS.TOUCHSTART:EVENTS.TOUCHEND;this.el.emit(evtName,this.buttonEventDetails[id],false,EMPTY_DAYDREAM_TOUCHES);previousButtonState.touched=buttonState.touched;return true;},/**\n   * Determine whether a button value has changed.\n   *\n   * @param {string} id - Id of the button to check.\n   * @param {object} buttonState - State of the button to check.\n   * @returns {boolean} Whether button value changed.\n   */handleValue:function(id,buttonState){var previousButtonState=this.buttonStates[id];// Not changed.\nif(buttonState.value===previousButtonState.value){return false;}previousButtonState.value=buttonState.value;return true;}});},{\"../constants\":95,\"../core/component\":103,\"../lib/three\":151,\"../utils/tracked-controls\":184}],88:[function(_dereq_,module,exports){var controllerUtils=_dereq_('../utils/tracked-controls');var registerComponent=_dereq_('../core/component').registerComponent;module.exports.Component=registerComponent('tracked-controls-webxr',{schema:{hand:{type:'string',default:''}},init:function(){this.addSessionEventListeners=this.addSessionEventListeners.bind(this);this.updateController=this.updateController.bind(this);this.emitButtonUpEvent=this.emitButtonUpEvent.bind(this);this.emitButtonDownEvent=this.emitButtonDownEvent.bind(this);this.buttonEventDetails={id:'trigger',state:{pressed:false}};},play:function(){var sceneEl=this.el.sceneEl;this.updateController();this.addSessionEventListeners();sceneEl.addEventListener('enter-vr',this.addSessionEventListeners);sceneEl.addEventListener('controllersupdated',this.updateController);},pause:function(){var sceneEl=this.el.sceneEl;this.removeSessionEventListeners();sceneEl.removeEventListener('enter-vr',this.addSessionEventListeners);sceneEl.removeEventListener('controllersupdated',this.updateController);},addSessionEventListeners:function(){var sceneEl=this.el.sceneEl;if(!sceneEl.xrSession){return;}sceneEl.xrSession.addEventListener('selectstart',this.emitButtonDownEvent);sceneEl.xrSession.addEventListener('selectend',this.emitButtonUpEvent);},removeSessionEventListeners:function(){var sceneEl=this.el.sceneEl;if(!sceneEl.xrSession){return;}sceneEl.xrSession.addEventListener('selectstart',this.emitButtonDownEvent);sceneEl.xrSession.addEventListener('selectend',this.emitButtonUpEvent);},emitButtonDownEvent:function(evt){if(!this.controller||evt.inputSource.handedness!==this.data.hand){return;}this.buttonEventDetails.state.pressed=true;this.el.emit('buttondown',this.buttonEventDetails);this.el.emit('buttonchanged',this.buttonEventDetails);this.el.emit('triggerdown');},emitButtonUpEvent:function(evt){if(!this.controller||evt.inputSource.handedness!==this.data.hand){return;}this.buttonEventDetails.state.pressed=false;this.el.emit('buttonup',this.buttonEventDetails);this.el.emit('buttonchanged',this.buttonEventDetails);this.el.emit('triggerup');},/**\n   * Handle update controller match criteria (such as `id`, `idPrefix`, `hand`, `controller`)\n   */updateController:function(){this.controller=controllerUtils.findMatchingControllerWebXR(this.system.controllers,this.data.hand);// Legacy handle to the controller for old components.\nthis.el.components['tracked-controls'].controller=this.controller;if(this.data.autoHide){this.el.object3D.visible=!!this.controller;}},tick:function(){var pose;var sceneEl=this.el.sceneEl;var object3D=this.el.object3D;if(!this.controller||!sceneEl.frame){return;}pose=sceneEl.frame.getInputPose(this.controller,sceneEl.frameOfReference);if(!pose){return;}object3D.matrix.elements=pose.targetRay.transformMatrix;object3D.matrix.decompose(object3D.position,object3D.rotation,object3D.scale);}});},{\"../core/component\":103,\"../utils/tracked-controls\":184}],89:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;/**\n * Tracked controls.\n * Abstract controls that decide if the WebVR or WebXR version is going to be applied.\n *\n * @property {number} controller - Index of controller in array returned by Gamepad API.\n *  Only used if hand property is not set.\n * @property {string} id - Selected controller among those returned by Gamepad API.\n * @property {number} hand - If multiple controllers found with id, choose the one with the\n *  given value for hand. If set, we ignore 'controller' property\n */module.exports.Component=registerComponent('tracked-controls',{schema:{autoHide:{default:true},controller:{default:0},id:{type:'string',default:''},hand:{type:'string',default:''},idPrefix:{type:'string',default:''},orientationOffset:{type:'vec3'},// Arm model parameters when not 6DoF.\narmModel:{default:true},headElement:{type:'selector'}},update:function(){var data=this.data;var el=this.el;if(el.sceneEl.hasWebXR){el.setAttribute('tracked-controls-webxr',data);}else{el.setAttribute('tracked-controls-webvr',data);}}});},{\"../core/component\":103}],90:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;/**\n * Visibility component.\n */module.exports.Component=registerComponent('visible',{schema:{default:true},update:function(){this.el.object3D.visible=this.data;}});},{\"../core/component\":103}],91:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;var utils=_dereq_('../utils/');var bind=utils.bind;var trackedControlsUtils=_dereq_('../utils/tracked-controls');var checkControllerPresentAndSetup=trackedControlsUtils.checkControllerPresentAndSetup;var emitIfAxesChanged=trackedControlsUtils.emitIfAxesChanged;var onButtonEvent=trackedControlsUtils.onButtonEvent;var VIVE_CONTROLLER_MODEL_OBJ_URL='https://cdn.aframe.io/controllers/vive/vr_controller_vive.obj';var VIVE_CONTROLLER_MODEL_OBJ_MTL='https://cdn.aframe.io/controllers/vive/vr_controller_vive.mtl';var GAMEPAD_ID_PREFIX='OpenVR ';/**\n * Vive controls.\n * Interface with Vive controllers and map Gamepad events to controller buttons:\n * trackpad, trigger, grip, menu, system\n * Load a controller model and highlight the pressed buttons.\n */module.exports.Component=registerComponent('vive-controls',{schema:{hand:{default:'left'},buttonColor:{type:'color',default:'#FAFAFA'},// Off-white.\nbuttonHighlightColor:{type:'color',default:'#22D1EE'},// Light blue.\nmodel:{default:true},orientationOffset:{type:'vec3'}},/**\n   * Button IDs:\n   * 0 - trackpad\n   * 1 - trigger (intensity value from 0.5 to 1)\n   * 2 - grip\n   * 3 - menu (dispatch but better for menu options)\n   * 4 - system (never dispatched on this layer)\n   */mapping:{axes:{trackpad:[0,1]},buttons:['trackpad','trigger','grip','menu','system']},init:function(){var self=this;this.animationActive='pointing';this.checkControllerPresentAndSetup=checkControllerPresentAndSetup;// To allow mock.\nthis.controllerPresent=false;this.emitIfAxesChanged=emitIfAxesChanged;// To allow mock.\nthis.lastControllerCheck=0;this.onButtonChanged=bind(this.onButtonChanged,this);this.onButtonDown=function(evt){onButtonEvent(evt.detail.id,'down',self);};this.onButtonUp=function(evt){onButtonEvent(evt.detail.id,'up',self);};this.onButtonTouchEnd=function(evt){onButtonEvent(evt.detail.id,'touchend',self);};this.onButtonTouchStart=function(evt){onButtonEvent(evt.detail.id,'touchstart',self);};this.onAxisMoved=bind(this.onAxisMoved,this);this.previousButtonValues={};this.rendererSystem=this.el.sceneEl.systems.renderer;this.bindMethods();},play:function(){this.checkIfControllerPresent();this.addControllersUpdateListener();},pause:function(){this.removeEventListeners();this.removeControllersUpdateListener();},bindMethods:function(){this.onModelLoaded=bind(this.onModelLoaded,this);this.onControllersUpdate=bind(this.onControllersUpdate,this);this.checkIfControllerPresent=bind(this.checkIfControllerPresent,this);this.removeControllersUpdateListener=bind(this.removeControllersUpdateListener,this);this.onAxisMoved=bind(this.onAxisMoved,this);},addEventListeners:function(){var el=this.el;el.addEventListener('buttonchanged',this.onButtonChanged);el.addEventListener('buttondown',this.onButtonDown);el.addEventListener('buttonup',this.onButtonUp);el.addEventListener('touchend',this.onButtonTouchEnd);el.addEventListener('touchstart',this.onButtonTouchStart);el.addEventListener('model-loaded',this.onModelLoaded);el.addEventListener('axismove',this.onAxisMoved);this.controllerEventsActive=true;},removeEventListeners:function(){var el=this.el;el.removeEventListener('buttonchanged',this.onButtonChanged);el.removeEventListener('buttondown',this.onButtonDown);el.removeEventListener('buttonup',this.onButtonUp);el.removeEventListener('touchend',this.onButtonTouchEnd);el.removeEventListener('touchstart',this.onButtonTouchStart);el.removeEventListener('model-loaded',this.onModelLoaded);el.removeEventListener('axismove',this.onAxisMoved);this.controllerEventsActive=false;},/**\n   * Once OpenVR returns correct hand data in supporting browsers, we can use hand property.\n   * var isPresent = this.checkControllerPresentAndSetup(this.el.sceneEl, GAMEPAD_ID_PREFIX,\n                                                        { hand: data.hand });\n   * Until then, use hardcoded index.\n   */checkIfControllerPresent:function(){var data=this.data;var controllerIndex=data.hand==='right'?0:data.hand==='left'?1:2;this.checkControllerPresentAndSetup(this,GAMEPAD_ID_PREFIX,{index:controllerIndex});},injectTrackedControls:function(){var el=this.el;var data=this.data;// If we have an OpenVR Gamepad, use the fixed mapping.\nel.setAttribute('tracked-controls',{idPrefix:GAMEPAD_ID_PREFIX,// Hand IDs: 0 = right, 1 = left, 2 = anything else.\ncontroller:data.hand==='right'?0:data.hand==='left'?1:2,hand:data.hand,orientationOffset:data.orientationOffset});// Load model.\nif(!this.data.model){return;}this.el.setAttribute('obj-model',{obj:VIVE_CONTROLLER_MODEL_OBJ_URL,mtl:VIVE_CONTROLLER_MODEL_OBJ_MTL});},addControllersUpdateListener:function(){this.el.sceneEl.addEventListener('controllersupdated',this.onControllersUpdate,false);},removeControllersUpdateListener:function(){this.el.sceneEl.removeEventListener('controllersupdated',this.onControllersUpdate,false);},onControllersUpdate:function(){this.checkIfControllerPresent();},/**\n   * Rotate the trigger button based on how hard the trigger is pressed.\n   */onButtonChanged:function(evt){var button=this.mapping.buttons[evt.detail.id];var buttonMeshes=this.buttonMeshes;var analogValue;if(!button){return;}if(button==='trigger'){analogValue=evt.detail.state.value;// Update trigger rotation depending on button value.\nif(buttonMeshes&&buttonMeshes.trigger){buttonMeshes.trigger.rotation.x=-analogValue*(Math.PI/12);}}// Pass along changed event with button state, using button mapping for convenience.\nthis.el.emit(button+'changed',evt.detail.state);},onModelLoaded:function(evt){var buttonMeshes;var controllerObject3D=evt.detail.model;var self=this;if(!this.data.model){return;}// Store button meshes object to be able to change their colors.\nbuttonMeshes=this.buttonMeshes={};buttonMeshes.grip={left:controllerObject3D.getObjectByName('leftgrip'),right:controllerObject3D.getObjectByName('rightgrip')};buttonMeshes.menu=controllerObject3D.getObjectByName('menubutton');buttonMeshes.system=controllerObject3D.getObjectByName('systembutton');buttonMeshes.trackpad=controllerObject3D.getObjectByName('touchpad');buttonMeshes.trigger=controllerObject3D.getObjectByName('trigger');// Set default colors.\nObject.keys(buttonMeshes).forEach(function(buttonName){self.setButtonColor(buttonName,self.data.buttonColor);});// Offset pivot point.\ncontrollerObject3D.position.set(0,-0.015,0.04);},onAxisMoved:function(evt){this.emitIfAxesChanged(this,this.mapping.axes,evt);},updateModel:function(buttonName,evtName){var color;var isTouch;if(!this.data.model){return;}isTouch=evtName.indexOf('touch')!==-1;// Don't change color for trackpad touch.\nif(isTouch){return;}// Update colors.\ncolor=evtName==='up'?this.data.buttonColor:this.data.buttonHighlightColor;this.setButtonColor(buttonName,color);},setButtonColor:function(buttonName,color){var buttonMeshes=this.buttonMeshes;var rendererSystem=this.rendererSystem;if(!buttonMeshes){return;}// Need to do both left and right sides for grip.\nif(buttonName==='grip'){buttonMeshes.grip.left.material.color.set(color);buttonMeshes.grip.right.material.color.set(color);rendererSystem.applyColorCorrection(buttonMeshes.grip.left.material.color);rendererSystem.applyColorCorrection(buttonMeshes.grip.right.material.color);return;}buttonMeshes[buttonName].material.color.set(color);rendererSystem.applyColorCorrection(buttonMeshes[buttonName].material.color);}});},{\"../core/component\":103,\"../utils/\":176,\"../utils/tracked-controls\":184}],92:[function(_dereq_,module,exports){var registerComponent=_dereq_('../core/component').registerComponent;var bind=_dereq_('../utils/bind');var trackedControlsUtils=_dereq_('../utils/tracked-controls');var checkControllerPresentAndSetup=trackedControlsUtils.checkControllerPresentAndSetup;var emitIfAxesChanged=trackedControlsUtils.emitIfAxesChanged;var onButtonEvent=trackedControlsUtils.onButtonEvent;var GAMEPAD_ID_PREFIX='HTC Vive Focus';var VIVE_FOCUS_CONTROLLER_MODEL_URL='https://cdn.aframe.io/controllers/vive/focus-controller/focus-controller.gltf';/**\n * Vive Focus controls.\n * Interface with Vive Focus controller and map Gamepad events to\n * controller buttons: trackpad, trigger\n * Load a controller model and highlight the pressed buttons.\n */module.exports.Component=registerComponent('vive-focus-controls',{schema:{hand:{default:''},// This informs the degenerate arm model.\nbuttonTouchedColor:{type:'color',default:'#BBBBBB'},buttonHighlightColor:{type:'color',default:'#7A7A7A'},model:{default:true},rotationOffset:{default:0},armModel:{default:true}},/**\n   * Button IDs:\n   * 0 - trackpad\n   * 1 - trigger\n   */mapping:{axes:{trackpad:[0,1]},buttons:['trigger','trackpad']},bindMethods:function(){this.onModelLoaded=bind(this.onModelLoaded,this);this.onControllersUpdate=bind(this.onControllersUpdate,this);this.checkIfControllerPresent=bind(this.checkIfControllerPresent,this);this.removeControllersUpdateListener=bind(this.removeControllersUpdateListener,this);this.onAxisMoved=bind(this.onAxisMoved,this);},init:function(){var self=this;this.animationActive='pointing';this.onButtonChanged=bind(this.onButtonChanged,this);this.onButtonDown=function(evt){onButtonEvent(evt.detail.id,'down',self);};this.onButtonUp=function(evt){onButtonEvent(evt.detail.id,'up',self);};this.onButtonTouchStart=function(evt){onButtonEvent(evt.detail.id,'touchstart',self);};this.onButtonTouchEnd=function(evt){onButtonEvent(evt.detail.id,'touchend',self);};this.onAxisMoved=bind(this.onAxisMoved,this);this.controllerPresent=false;this.lastControllerCheck=0;this.bindMethods();this.checkControllerPresentAndSetup=checkControllerPresentAndSetup;// To allow mock.\nthis.emitIfAxesChanged=emitIfAxesChanged;// To allow mock.\n},addEventListeners:function(){var el=this.el;el.addEventListener('buttonchanged',this.onButtonChanged);el.addEventListener('buttondown',this.onButtonDown);el.addEventListener('buttonup',this.onButtonUp);el.addEventListener('touchstart',this.onButtonTouchStart);el.addEventListener('touchend',this.onButtonTouchEnd);el.addEventListener('model-loaded',this.onModelLoaded);el.addEventListener('axismove',this.onAxisMoved);this.controllerEventsActive=true;this.addControllersUpdateListener();},removeEventListeners:function(){var el=this.el;el.removeEventListener('buttonchanged',this.onButtonChanged);el.removeEventListener('buttondown',this.onButtonDown);el.removeEventListener('buttonup',this.onButtonUp);el.removeEventListener('touchstart',this.onButtonTouchStart);el.removeEventListener('touchend',this.onButtonTouchEnd);el.removeEventListener('model-loaded',this.onModelLoaded);el.removeEventListener('axismove',this.onAxisMoved);this.controllerEventsActive=false;this.removeControllersUpdateListener();},checkIfControllerPresent:function(){this.checkControllerPresentAndSetup(this,GAMEPAD_ID_PREFIX,this.data.hand?{hand:this.data.hand}:{});},play:function(){this.checkIfControllerPresent();this.addControllersUpdateListener();},pause:function(){this.removeEventListeners();this.removeControllersUpdateListener();},injectTrackedControls:function(){var el=this.el;var data=this.data;el.setAttribute('tracked-controls',{armModel:data.armModel,idPrefix:GAMEPAD_ID_PREFIX,rotationOffset:data.rotationOffset});if(!this.data.model){return;}this.el.setAttribute('gltf-model',VIVE_FOCUS_CONTROLLER_MODEL_URL);},addControllersUpdateListener:function(){this.el.sceneEl.addEventListener('controllersupdated',this.onControllersUpdate,false);},removeControllersUpdateListener:function(){this.el.sceneEl.removeEventListener('controllersupdated',this.onControllersUpdate,false);},onControllersUpdate:function(){this.checkIfControllerPresent();},onModelLoaded:function(evt){var controllerObject3D=evt.detail.model;var buttonMeshes;if(!this.data.model){return;}buttonMeshes=this.buttonMeshes={};buttonMeshes.trigger=controllerObject3D.getObjectByName('BumperKey');buttonMeshes.triggerPressed=controllerObject3D.getObjectByName('BumperKey_Press');if(buttonMeshes.triggerPressed){buttonMeshes.triggerPressed.visible=false;}buttonMeshes.trackpad=controllerObject3D.getObjectByName('TouchPad');buttonMeshes.trackpadPressed=controllerObject3D.getObjectByName('TouchPad_Press');if(buttonMeshes.trackpadPressed){buttonMeshes.trackpadPressed.visible=false;}},// No analog buttons, only emits 0/1 values\nonButtonChanged:function(evt){var button=this.mapping.buttons[evt.detail.id];if(!button)return;// Pass along changed event with button state, using button mapping for convenience.\nthis.el.emit(button+'changed',evt.detail.state);},onAxisMoved:function(evt){this.emitIfAxesChanged(this,this.mapping.axes,evt);},updateModel:function(buttonName,evtName){if(!this.data.model){return;}this.updateButtonModel(buttonName,evtName);},updateButtonModel:function(buttonName,state){var buttonMeshes=this.buttonMeshes;var pressedName=buttonName+'Pressed';if(!buttonMeshes||!buttonMeshes[buttonName]||!buttonMeshes[pressedName]){return;}var color;switch(state){case'down':color=this.data.buttonHighlightColor;break;case'touchstart':color=this.data.buttonTouchedColor;break;}if(color){buttonMeshes[pressedName].material.color.set(color);}buttonMeshes[pressedName].visible=!!color;buttonMeshes[buttonName].visible=!color;}});},{\"../core/component\":103,\"../utils/bind\":170,\"../utils/tracked-controls\":184}],93:[function(_dereq_,module,exports){var KEYCODE_TO_CODE=_dereq_('../constants').keyboardevent.KEYCODE_TO_CODE;var registerComponent=_dereq_('../core/component').registerComponent;var THREE=_dereq_('../lib/three');var utils=_dereq_('../utils/');var bind=utils.bind;var shouldCaptureKeyEvent=utils.shouldCaptureKeyEvent;var CLAMP_VELOCITY=0.00001;var MAX_DELTA=0.2;var KEYS=['KeyW','KeyA','KeyS','KeyD','ArrowUp','ArrowLeft','ArrowRight','ArrowDown'];/**\n * WASD component to control entities using WASD keys.\n */module.exports.Component=registerComponent('wasd-controls',{schema:{acceleration:{default:65},adAxis:{default:'x',oneOf:['x','y','z']},adEnabled:{default:true},adInverted:{default:false},enabled:{default:true},fly:{default:false},wsAxis:{default:'z',oneOf:['x','y','z']},wsEnabled:{default:true},wsInverted:{default:false}},init:function(){// To keep track of the pressed keys.\nthis.keys={};this.easing=1.1;this.velocity=new THREE.Vector3();// Bind methods and add event listeners.\nthis.onBlur=bind(this.onBlur,this);this.onFocus=bind(this.onFocus,this);this.onKeyDown=bind(this.onKeyDown,this);this.onKeyUp=bind(this.onKeyUp,this);this.onVisibilityChange=bind(this.onVisibilityChange,this);this.attachVisibilityEventListeners();},tick:function(time,delta){var data=this.data;var el=this.el;var velocity=this.velocity;if(!velocity[data.adAxis]&&!velocity[data.wsAxis]&&isEmptyObject(this.keys)){return;}// Update velocity.\ndelta=delta/1000;this.updateVelocity(delta);if(!velocity[data.adAxis]&&!velocity[data.wsAxis]){return;}// Get movement vector and translate position.\nel.object3D.position.add(this.getMovementVector(delta));},remove:function(){this.removeKeyEventListeners();this.removeVisibilityEventListeners();},play:function(){this.attachKeyEventListeners();},pause:function(){this.keys={};this.removeKeyEventListeners();},updateVelocity:function(delta){var acceleration;var adAxis;var adSign;var data=this.data;var keys=this.keys;var velocity=this.velocity;var wsAxis;var wsSign;adAxis=data.adAxis;wsAxis=data.wsAxis;// If FPS too low, reset velocity.\nif(delta>MAX_DELTA){velocity[adAxis]=0;velocity[wsAxis]=0;return;}// https://gamedev.stackexchange.com/questions/151383/frame-rate-independant-movement-with-acceleration\nvar scaledEasing=Math.pow(1/this.easing,delta*60);// Velocity Easing.\nif(velocity[adAxis]!==0){velocity[adAxis]-=velocity[adAxis]*scaledEasing;}if(velocity[wsAxis]!==0){velocity[wsAxis]-=velocity[wsAxis]*scaledEasing;}// Clamp velocity easing.\nif(Math.abs(velocity[adAxis])<CLAMP_VELOCITY){velocity[adAxis]=0;}if(Math.abs(velocity[wsAxis])<CLAMP_VELOCITY){velocity[wsAxis]=0;}if(!data.enabled){return;}// Update velocity using keys pressed.\nacceleration=data.acceleration;if(data.adEnabled){adSign=data.adInverted?-1:1;if(keys.KeyA||keys.ArrowLeft){velocity[adAxis]-=adSign*acceleration*delta;}if(keys.KeyD||keys.ArrowRight){velocity[adAxis]+=adSign*acceleration*delta;}}if(data.wsEnabled){wsSign=data.wsInverted?-1:1;if(keys.KeyW||keys.ArrowUp){velocity[wsAxis]-=wsSign*acceleration*delta;}if(keys.KeyS||keys.ArrowDown){velocity[wsAxis]+=wsSign*acceleration*delta;}}},getMovementVector:function(){var directionVector=new THREE.Vector3(0,0,0);var rotationEuler=new THREE.Euler(0,0,0,'YXZ');return function(delta){var rotation=this.el.getAttribute('rotation');var velocity=this.velocity;var xRotation;directionVector.copy(velocity);directionVector.multiplyScalar(delta);// Absolute.\nif(!rotation){return directionVector;}xRotation=this.data.fly?rotation.x:0;// Transform direction relative to heading.\nrotationEuler.set(THREE.Math.degToRad(xRotation),THREE.Math.degToRad(rotation.y),0);directionVector.applyEuler(rotationEuler);return directionVector;};}(),attachVisibilityEventListeners:function(){window.addEventListener('blur',this.onBlur);window.addEventListener('focus',this.onFocus);document.addEventListener('visibilitychange',this.onVisibilityChange);},removeVisibilityEventListeners:function(){window.removeEventListener('blur',this.onBlur);window.removeEventListener('focus',this.onFocus);document.removeEventListener('visibilitychange',this.onVisibilityChange);},attachKeyEventListeners:function(){window.addEventListener('keydown',this.onKeyDown);window.addEventListener('keyup',this.onKeyUp);},removeKeyEventListeners:function(){window.removeEventListener('keydown',this.onKeyDown);window.removeEventListener('keyup',this.onKeyUp);},onBlur:function(){this.pause();},onFocus:function(){this.play();},onVisibilityChange:function(){if(document.hidden){this.onBlur();}else{this.onFocus();}},onKeyDown:function(event){var code;if(!shouldCaptureKeyEvent(event)){return;}code=event.code||KEYCODE_TO_CODE[event.keyCode];if(KEYS.indexOf(code)!==-1){this.keys[code]=true;}},onKeyUp:function(event){var code;code=event.code||KEYCODE_TO_CODE[event.keyCode];delete this.keys[code];}});function isEmptyObject(keys){var key;for(key in keys){return false;}return true;}},{\"../constants\":95,\"../core/component\":103,\"../lib/three\":151,\"../utils/\":176}],94:[function(_dereq_,module,exports){/* global THREE */var bind=_dereq_('../utils/bind');var registerComponent=_dereq_('../core/component').registerComponent;var trackedControlsUtils=_dereq_('../utils/tracked-controls');var onButtonEvent=trackedControlsUtils.onButtonEvent;var utils=_dereq_('../utils/');var debug=utils.debug('components:windows-motion-controls:debug');var warn=utils.debug('components:windows-motion-controls:warn');var DEFAULT_HANDEDNESS=_dereq_('../constants').DEFAULT_HANDEDNESS;var MODEL_BASE_URL='https://cdn.aframe.io/controllers/microsoft/';var MODEL_FILENAMES={left:'left.glb',right:'right.glb',default:'universal.glb'};var GAMEPAD_ID_PREFIX='Spatial Controller (Spatial Interaction Source) ';var GAMEPAD_ID_PATTERN=/([0-9a-zA-Z]+-[0-9a-zA-Z]+)$/;/**\n * Windows Motion Controller controls.\n * Interface with Windows Motion Controller controllers and map Gamepad events to\n * controller buttons: trackpad, trigger, grip, menu, thumbstick\n * Load a controller model and transform the pressed buttons.\n */module.exports.Component=registerComponent('windows-motion-controls',{schema:{hand:{default:DEFAULT_HANDEDNESS},// It is possible to have multiple pairs of controllers attached (a pair has both left and right).\n// Set this to 1 to use a controller from the second pair, 2 from the third pair, etc.\npair:{default:0},// If true, loads the controller glTF asset.\nmodel:{default:true},// If true, will hide the model from the scene if no matching gamepad (based on ID & hand) is connected.\nhideDisconnected:{default:true}},mapping:{// A-Frame specific semantic axis names\naxes:{'thumbstick':[0,1],'trackpad':[2,3]},// A-Frame specific semantic button names\nbuttons:['thumbstick','trigger','grip','menu','trackpad'],// A mapping of the semantic name to node name in the glTF model file,\n// that should be transformed by axis value.\n// This array mirrors the browser Gamepad.axes array, such that\n// the mesh corresponding to axis 0 is in this array index 0.\naxisMeshNames:['THUMBSTICK_X','THUMBSTICK_Y','TOUCHPAD_TOUCH_X','TOUCHPAD_TOUCH_Y'],// A mapping of the semantic name to button node name in the glTF model file,\n// that should be transformed by button value.\nbuttonMeshNames:{'trigger':'SELECT','menu':'MENU','grip':'GRASP','thumbstick':'THUMBSTICK_PRESS','trackpad':'TOUCHPAD_PRESS'},pointingPoseMeshName:'POINTING_POSE'},bindMethods:function(){this.onModelError=bind(this.onModelError,this);this.onModelLoaded=bind(this.onModelLoaded,this);this.onControllersUpdate=bind(this.onControllersUpdate,this);this.checkIfControllerPresent=bind(this.checkIfControllerPresent,this);this.onAxisMoved=bind(this.onAxisMoved,this);},init:function(){var self=this;var el=this.el;this.onButtonChanged=bind(this.onButtonChanged,this);this.onButtonDown=function(evt){onButtonEvent(evt.detail.id,'down',self);};this.onButtonUp=function(evt){onButtonEvent(evt.detail.id,'up',self);};this.onButtonTouchStart=function(evt){onButtonEvent(evt.detail.id,'touchstart',self);};this.onButtonTouchEnd=function(evt){onButtonEvent(evt.detail.id,'touchend',self);};this.onControllerConnected=function(){self.setModelVisibility(true);};this.onControllerDisconnected=function(){self.setModelVisibility(false);};this.controllerPresent=false;this.lastControllerCheck=0;this.previousButtonValues={};this.bindMethods();// Cache for submeshes that we have looked up by name.\nthis.loadedMeshInfo={buttonMeshes:null,axisMeshes:null};// Pointing poses\nthis.rayOrigin={origin:new THREE.Vector3(),direction:new THREE.Vector3(0,0,-1),createdFromMesh:false};// Stored on object to allow for mocking in tests\nthis.emitIfAxesChanged=trackedControlsUtils.emitIfAxesChanged;this.checkControllerPresentAndSetup=trackedControlsUtils.checkControllerPresentAndSetup;el.addEventListener('controllerconnected',this.onControllerConnected);el.addEventListener('controllerdisconnected',this.onControllerDisconnected);},addEventListeners:function(){var el=this.el;el.addEventListener('buttonchanged',this.onButtonChanged);el.addEventListener('buttondown',this.onButtonDown);el.addEventListener('buttonup',this.onButtonUp);el.addEventListener('touchstart',this.onButtonTouchStart);el.addEventListener('touchend',this.onButtonTouchEnd);el.addEventListener('axismove',this.onAxisMoved);el.addEventListener('model-error',this.onModelError);el.addEventListener('model-loaded',this.onModelLoaded);this.controllerEventsActive=true;},removeEventListeners:function(){var el=this.el;el.removeEventListener('buttonchanged',this.onButtonChanged);el.removeEventListener('buttondown',this.onButtonDown);el.removeEventListener('buttonup',this.onButtonUp);el.removeEventListener('touchstart',this.onButtonTouchStart);el.removeEventListener('touchend',this.onButtonTouchEnd);el.removeEventListener('axismove',this.onAxisMoved);el.removeEventListener('model-error',this.onModelError);el.removeEventListener('model-loaded',this.onModelLoaded);this.controllerEventsActive=false;},checkIfControllerPresent:function(){this.checkControllerPresentAndSetup(this,GAMEPAD_ID_PREFIX,{hand:this.data.hand,index:this.data.pair});},play:function(){this.checkIfControllerPresent();this.addControllersUpdateListener();},pause:function(){this.removeEventListeners();this.removeControllersUpdateListener();},updateControllerModel:function(){// If we do not want to load a model, or, have already loaded the model, emit the controllermodelready event.\nif(!this.data.model||this.rayOrigin.createdFromMesh){this.modelReady();return;}var sourceUrl=this.createControllerModelUrl();this.loadModel(sourceUrl);},/**\n   * Helper function that constructs a URL from the controller ID suffix, for future proofed\n   * art assets.\n   */createControllerModelUrl:function(forceDefault){// Determine the device specific folder based on the ID suffix\nvar trackedControlsComponent=this.el.components['tracked-controls'];var controller=trackedControlsComponent?trackedControlsComponent.controller:null;var device='default';var hand=this.data.hand;var filename;if(controller){// Read hand directly from the controller, rather than this.data, as in the case that the controller\n// is unhanded this.data will still have 'left' or 'right' (depending on what the user inserted in to the scene).\n// In this case, we want to load the universal model, so need to get the '' from the controller.\nhand=controller.hand;if(!forceDefault){var match=controller.id.match(GAMEPAD_ID_PATTERN);device=match&&match[0]||device;}}// Hand\nfilename=MODEL_FILENAMES[hand]||MODEL_FILENAMES.default;// Final url\nreturn MODEL_BASE_URL+device+'/'+filename;},injectTrackedControls:function(){var data=this.data;this.el.setAttribute('tracked-controls',{idPrefix:GAMEPAD_ID_PREFIX,controller:data.pair,hand:data.hand,armModel:false});this.updateControllerModel();},addControllersUpdateListener:function(){this.el.sceneEl.addEventListener('controllersupdated',this.onControllersUpdate,false);},removeControllersUpdateListener:function(){this.el.sceneEl.removeEventListener('controllersupdated',this.onControllersUpdate,false);},onControllersUpdate:function(){this.checkIfControllerPresent();},onModelError:function(evt){var defaultUrl=this.createControllerModelUrl(true);if(evt.detail.src!==defaultUrl){warn('Failed to load controller model for device, attempting to load default.');this.loadModel(defaultUrl);}else{warn('Failed to load default controller model.');}},loadModel:function(url){// The model is loaded by the gltf-model compoent when this attribute is initially set,\n// removed and re-loaded if the given url changes.\nthis.el.setAttribute('gltf-model','url('+url+')');},onModelLoaded:function(evt){var rootNode=this.controllerModel=evt.detail.model;var loadedMeshInfo=this.loadedMeshInfo;var i;var meshName;var mesh;var meshInfo;debug('Processing model');// Reset the caches\nloadedMeshInfo.buttonMeshes={};loadedMeshInfo.axisMeshes={};// Cache our meshes so we aren't traversing the hierarchy per frame\nif(rootNode){// Button Meshes\nfor(i=0;i<this.mapping.buttons.length;i++){meshName=this.mapping.buttonMeshNames[this.mapping.buttons[i]];if(!meshName){debug('Skipping unknown button at index: '+i+' with mapped name: '+this.mapping.buttons[i]);continue;}mesh=rootNode.getObjectByName(meshName);if(!mesh){warn('Missing button mesh with name: '+meshName);continue;}meshInfo={index:i,value:getImmediateChildByName(mesh,'VALUE'),pressed:getImmediateChildByName(mesh,'PRESSED'),unpressed:getImmediateChildByName(mesh,'UNPRESSED')};if(meshInfo.value&&meshInfo.pressed&&meshInfo.unpressed){loadedMeshInfo.buttonMeshes[this.mapping.buttons[i]]=meshInfo;}else{// If we didn't find the mesh, it simply means this button won't have transforms applied as mapped button value changes.\nwarn('Missing button submesh under mesh with name: '+meshName+'(VALUE: '+!!meshInfo.value+', PRESSED: '+!!meshInfo.pressed+', UNPRESSED:'+!!meshInfo.unpressed+')');}}// Axis Meshes\nfor(i=0;i<this.mapping.axisMeshNames.length;i++){meshName=this.mapping.axisMeshNames[i];if(!meshName){debug('Skipping unknown axis at index: '+i);continue;}mesh=rootNode.getObjectByName(meshName);if(!mesh){warn('Missing axis mesh with name: '+meshName);continue;}meshInfo={index:i,value:getImmediateChildByName(mesh,'VALUE'),min:getImmediateChildByName(mesh,'MIN'),max:getImmediateChildByName(mesh,'MAX')};if(meshInfo.value&&meshInfo.min&&meshInfo.max){loadedMeshInfo.axisMeshes[i]=meshInfo;}else{// If we didn't find the mesh, it simply means this axis won't have transforms applied as mapped axis values change.\nwarn('Missing axis submesh under mesh with name: '+meshName+'(VALUE: '+!!meshInfo.value+', MIN: '+!!meshInfo.min+', MAX:'+!!meshInfo.max+')');}}this.calculateRayOriginFromMesh(rootNode);// Determine if the model has to be visible or not.\nthis.setModelVisibility();}debug('Model load complete.');// Look through only immediate children. This will return null if no mesh exists with the given name.\nfunction getImmediateChildByName(object3d,value){for(var i=0,l=object3d.children.length;i<l;i++){var obj=object3d.children[i];if(obj&&obj['name']===value){return obj;}}return undefined;}},calculateRayOriginFromMesh:function(){var quaternion=new THREE.Quaternion();return function(rootNode){var mesh;// Calculate the pointer pose (used for rays), by applying the world transform of th POINTER_POSE node\n// in the glTF (assumes that root node is at world origin)\nthis.rayOrigin.origin.set(0,0,0);this.rayOrigin.direction.set(0,0,-1);this.rayOrigin.createdFromMesh=true;// Try to read Pointing pose from the source model\nmesh=rootNode.getObjectByName(this.mapping.pointingPoseMeshName);if(mesh){var parent=rootNode.parent;// We need to read pose transforms accumulated from the root of the glTF, not the scene.\nif(parent){rootNode.parent=null;rootNode.updateMatrixWorld(true);rootNode.parent=parent;}mesh.getWorldPosition(this.rayOrigin.origin);mesh.getWorldQuaternion(quaternion);this.rayOrigin.direction.applyQuaternion(quaternion);// Recalculate the world matrices now that the rootNode is re-attached to the parent.\nif(parent){rootNode.updateMatrixWorld(true);}}else{debug('Mesh does not contain pointing origin data, defaulting to none.');}// Emit event stating that our pointing ray is now accurate.\nthis.modelReady();};}(),lerpAxisTransform:function(){var quaternion=new THREE.Quaternion();return function(axis,axisValue){var axisMeshInfo=this.loadedMeshInfo.axisMeshes[axis];if(!axisMeshInfo)return;var min=axisMeshInfo.min;var max=axisMeshInfo.max;var target=axisMeshInfo.value;// Convert from gamepad value range (-1 to +1) to lerp range (0 to 1)\nvar lerpValue=axisValue*0.5+0.5;target.setRotationFromQuaternion(quaternion.copy(min.quaternion).slerp(max.quaternion,lerpValue));target.position.lerpVectors(min.position,max.position,lerpValue);};}(),lerpButtonTransform:function(){var quaternion=new THREE.Quaternion();return function(buttonName,buttonValue){var buttonMeshInfo=this.loadedMeshInfo.buttonMeshes[buttonName];if(!buttonMeshInfo)return;var min=buttonMeshInfo.unpressed;var max=buttonMeshInfo.pressed;var target=buttonMeshInfo.value;target.setRotationFromQuaternion(quaternion.copy(min.quaternion).slerp(max.quaternion,buttonValue));target.position.lerpVectors(min.position,max.position,buttonValue);};}(),modelReady:function(){this.el.emit('controllermodelready',{name:'windows-motion-controls',model:this.data.model,rayOrigin:this.rayOrigin});},onButtonChanged:function(evt){var buttonName=this.mapping.buttons[evt.detail.id];if(buttonName){// Update the button mesh transform\nif(this.loadedMeshInfo&&this.loadedMeshInfo.buttonMeshes){this.lerpButtonTransform(buttonName,evt.detail.state.value);}// Only emit events for buttons that we know how to map from index to name\nthis.el.emit(buttonName+'changed',evt.detail.state);}},onAxisMoved:function(evt){var numAxes=this.mapping.axisMeshNames.length;// Only attempt to update meshes if we have valid data.\nif(this.loadedMeshInfo&&this.loadedMeshInfo.axisMeshes){for(var axis=0;axis<numAxes;axis++){// Update the button mesh transform\nthis.lerpAxisTransform(axis,evt.detail.axis[axis]||0.0);}}this.emitIfAxesChanged(this,this.mapping.axes,evt);},setModelVisibility:function(visible){var model=this.el.getObject3D('mesh');visible=visible!==undefined?visible:this.modelVisible;this.modelVisible=visible;if(!model){return;}model.visible=visible;}});},{\"../constants\":95,\"../core/component\":103,\"../utils/\":176,\"../utils/bind\":170,\"../utils/tracked-controls\":184}],95:[function(_dereq_,module,exports){module.exports={AFRAME_INJECTED:'aframe-injected',DEFAULT_CAMERA_HEIGHT:1.6,DEFAULT_HANDEDNESS:'right',keyboardevent:_dereq_('./keyboardevent')};},{\"./keyboardevent\":96}],96:[function(_dereq_,module,exports){module.exports={// Tiny KeyboardEvent.code polyfill.\nKEYCODE_TO_CODE:{'38':'ArrowUp','37':'ArrowLeft','40':'ArrowDown','39':'ArrowRight','87':'KeyW','65':'KeyA','83':'KeyS','68':'KeyD'}};},{}],97:[function(_dereq_,module,exports){var ANode=_dereq_('./a-node');var bind=_dereq_('../utils/bind');var debug=_dereq_('../utils/debug');var registerElement=_dereq_('./a-register-element').registerElement;var THREE=_dereq_('../lib/three');var fileLoader=new THREE.FileLoader();var warn=debug('core:a-assets:warn');/**\n * Asset management system. Handles blocking on asset loading.\n */module.exports=registerElement('a-assets',{prototype:Object.create(ANode.prototype,{createdCallback:{value:function(){this.isAssets=true;this.fileLoader=fileLoader;this.timeout=null;}},attachedCallback:{value:function(){var self=this;var i;var loaded=[];var mediaEl;var mediaEls;var imgEl;var imgEls;var timeout;if(!this.parentNode.isScene){throw new Error('<a-assets> must be a child of a <a-scene>.');}// Wait for <img>s.\nimgEls=this.querySelectorAll('img');for(i=0;i<imgEls.length;i++){imgEl=fixUpMediaElement(imgEls[i]);loaded.push(new Promise(function(resolve,reject){// Set in cache because we won't be needing to call three.js loader if we have.\n// a loaded media element.\nTHREE.Cache.files[imgEls[i].getAttribute('src')]=imgEl;imgEl.onload=resolve;imgEl.onerror=reject;}));}// Wait for <audio>s and <video>s.\nmediaEls=this.querySelectorAll('audio, video');for(i=0;i<mediaEls.length;i++){mediaEl=fixUpMediaElement(mediaEls[i]);if(!mediaEl.src&&!mediaEl.srcObject){warn('Audio/video asset has neither `src` nor `srcObject` attributes.');}loaded.push(mediaElementLoaded(mediaEl));}// Trigger loaded for scene to start rendering.\nPromise.all(loaded).then(bind(this.load,this));// Timeout to start loading anyways.\ntimeout=parseInt(this.getAttribute('timeout'),10)||3000;this.timeout=setTimeout(function(){if(self.hasLoaded){return;}warn('Asset loading timed out in ',timeout,'ms');self.emit('timeout');self.load();},timeout);}},detachedCallback:{value:function(){if(this.timeout){clearTimeout(this.timeout);}}},load:{value:function(){ANode.prototype.load.call(this,null,function waitOnFilter(el){return el.isAssetItem&&el.hasAttribute('src');});}}})});/**\n * Preload using XHRLoader for any type of asset.\n */registerElement('a-asset-item',{prototype:Object.create(ANode.prototype,{createdCallback:{value:function(){this.data=null;this.isAssetItem=true;}},attachedCallback:{value:function(){var self=this;var src=this.getAttribute('src');fileLoader.setResponseType(this.getAttribute('response-type')||inferResponseType(src));fileLoader.load(src,function handleOnLoad(response){self.data=response;/*\n            Workaround for a Chrome bug. If another XHR is sent to the same url before the\n            previous one closes, the second request never finishes.\n            setTimeout finishes the first request and lets the logic triggered by load open\n            subsequent requests.\n            setTimeout can be removed once the fix for the bug below ships:\n            https://bugs.chromium.org/p/chromium/issues/detail?id=633696&q=component%3ABlink%3ENetwork%3EXHR%20&colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified\n          */setTimeout(function load(){ANode.prototype.load.call(self);});},function handleOnProgress(xhr){self.emit('progress',{loadedBytes:xhr.loaded,totalBytes:xhr.total,xhr:xhr});},function handleOnError(xhr){self.emit('error',{xhr:xhr});});}}})});/**\n * Create a Promise that resolves once the media element has finished buffering.\n *\n * @param {Element} el - HTMLMediaElement.\n * @returns {Promise}\n */function mediaElementLoaded(el){if(!el.hasAttribute('autoplay')&&el.getAttribute('preload')!=='auto'){return;}// If media specifies autoplay or preload, wait until media is completely buffered.\nreturn new Promise(function(resolve,reject){if(el.readyState===4){return resolve();}// Already loaded.\nif(el.error){return reject();}// Error.\nel.addEventListener('loadeddata',checkProgress,false);el.addEventListener('progress',checkProgress,false);el.addEventListener('error',reject,false);function checkProgress(){// Add up the seconds buffered.\nvar secondsBuffered=0;for(var i=0;i<el.buffered.length;i++){secondsBuffered+=el.buffered.end(i)-el.buffered.start(i);}// Compare seconds buffered to media duration.\nif(secondsBuffered>=el.duration){// Set in cache because we won't be needing to call three.js loader if we have.\n// a loaded media element.\n// Store video elements only. three.js loader is used for audio elements.\n// See assetParse too.\nif(el.tagName==='VIDEO'){THREE.Cache.files[el.getAttribute('src')]=el;}resolve();}}});}/**\n * Automatically add attributes to media elements where convenient.\n * crossorigin, playsinline.\n */function fixUpMediaElement(mediaEl){// Cross-origin.\nvar newMediaEl=setCrossOrigin(mediaEl);// Plays inline for mobile.\nif(newMediaEl.tagName&&newMediaEl.tagName.toLowerCase()==='video'){newMediaEl.setAttribute('playsinline','');newMediaEl.setAttribute('webkit-playsinline','');}if(newMediaEl!==mediaEl){mediaEl.parentNode.appendChild(newMediaEl);mediaEl.parentNode.removeChild(mediaEl);}return newMediaEl;}/**\n * Automatically set `crossorigin` if not defined on the media element.\n * If it is not defined, we must create and re-append a new media element <img> and\n * have the browser re-request it with `crossorigin` set.\n *\n * @param {Element} Media element (e.g., <img>, <audio>, <video>).\n * @returns {Element} Media element to be used to listen to for loaded events.\n */function setCrossOrigin(mediaEl){var newMediaEl;var src;// Already has crossorigin set.\nif(mediaEl.hasAttribute('crossorigin')){return mediaEl;}src=mediaEl.getAttribute('src');if(src!==null){// Does not have protocol.\nif(src.indexOf('://')===-1){return mediaEl;}// Determine if cross origin is actually needed.\nif(extractDomain(src)===window.location.host){return mediaEl;}}warn('Cross-origin element (e.g., <img>) was requested without `crossorigin` set. '+'A-Frame will re-request the asset with `crossorigin` attribute set. '+'Please set `crossorigin` on the element (e.g., <img crossorigin=\"anonymous\">)',src);mediaEl.crossOrigin='anonymous';newMediaEl=mediaEl.cloneNode(true);return newMediaEl;}/**\n * Extract domain out of URL.\n *\n * @param {string} url\n * @returns {string}\n */function extractDomain(url){// Find and remove protocol (e.g., http, ftp, etc.) to get domain.\nvar domain=url.indexOf('://')>-1?url.split('/')[2]:url.split('/')[0];// Find and remove port number.\nreturn domain.substring(0,domain.indexOf(':'));}/**\n * Infer response-type attribute from src.\n * Default is text(default XMLHttpRequest.responseType)\n * but we use arraybuffer for .gltf and .glb files\n * because of THREE.GLTFLoader specification.\n *\n * @param {string} src\n * @returns {string}\n */function inferResponseType(src){var dotLastIndex=src.lastIndexOf('.');if(dotLastIndex>=0){var extension=src.slice(dotLastIndex,src.length);if(extension==='.gltf'||extension==='.glb'){return'arraybuffer';}}return'text';}module.exports.inferResponseType=inferResponseType;},{\"../lib/three\":151,\"../utils/bind\":170,\"../utils/debug\":172,\"./a-node\":101,\"./a-register-element\":102}],98:[function(_dereq_,module,exports){var debug=_dereq_('../utils/debug');var registerElement=_dereq_('./a-register-element').registerElement;var warn=debug('core:cubemap:warn');/**\n * Cubemap element that handles validation and exposes list of URLs.\n * Does not listen to updates.\n */module.exports=registerElement('a-cubemap',{prototype:Object.create(window.HTMLElement.prototype,{/**\n     * Calculates this.srcs.\n     */attachedCallback:{value:function(){this.srcs=this.validate();},writable:window.debug},/**\n     * Checks for exactly six elements with [src].\n     * Does not check explicitly for <img>s in case user does not want\n     * prefetching.\n     *\n     * @returns {Array|null} - six URLs if valid, else null.\n     */validate:{value:function(){var elements=this.querySelectorAll('[src]');var i;var srcs=[];if(elements.length===6){for(i=0;i<elements.length;i++){srcs.push(elements[i].getAttribute('src'));}return srcs;}// Else if there are not six elements, throw a warning.\nwarn('<a-cubemap> did not contain exactly six elements each with a '+'`src` attribute.');},writable:window.debug}})});},{\"../utils/debug\":172,\"./a-register-element\":102}],99:[function(_dereq_,module,exports){var ANode=_dereq_('./a-node');var COMPONENTS=_dereq_('./component').components;var registerElement=_dereq_('./a-register-element').registerElement;var THREE=_dereq_('../lib/three');var utils=_dereq_('../utils/');var AEntity;var debug=utils.debug('core:a-entity:debug');var warn=utils.debug('core:a-entity:warn');var MULTIPLE_COMPONENT_DELIMITER='__';var OBJECT3D_COMPONENTS=['position','rotation','scale','visible'];var ONCE={once:true};/**\n * Entity is a container object that components are plugged into to comprise everything in\n * the scene. In A-Frame, they inherently have position, rotation, and scale.\n *\n * To be able to take components, the scene element inherits from the entity definition.\n *\n * @member {object} components - entity's currently initialized components.\n * @member {object} object3D - three.js object.\n * @member {array} states\n * @member {boolean} isPlaying - false if dynamic behavior of the entity is paused.\n */var proto=Object.create(ANode.prototype,{createdCallback:{value:function(){this.components={};// To avoid double initializations and infinite loops.\nthis.initializingComponents={};this.componentsToUpdate={};this.isEntity=true;this.isPlaying=false;this.object3D=new THREE.Group();this.object3D.el=this;this.object3DMap={};this.parentEl=null;this.rotationObj={};this.states=[];}},/**\n   * Handle changes coming from the browser DOM inspector.\n   */attributeChangedCallback:{value:function(attr,oldVal,newVal){var component=this.components[attr];// If the empty string is passed by the component initialization\n// logic we ignore the component update.\nif(component&&component.justInitialized&&newVal===''){delete component.justInitialized;return;}// When a component is removed after calling el.removeAttribute('material')\nif(!component&&newVal===null){return;}this.setEntityAttribute(attr,oldVal,newVal);}},/**\n   * Add to parent, load, play.\n   */attachedCallback:{value:function(){var assetsEl;// Asset management system element.\nvar sceneEl=this.sceneEl;var self=this;// Component.\nthis.addToParent();// Don't .load() scene on attachedCallback.\nif(this.isScene){return;}// Gracefully not error when outside of <a-scene> (e.g., tests).\nif(!sceneEl){this.load();return;}// Wait for asset management system to finish before loading.\nassetsEl=sceneEl.querySelector('a-assets');if(assetsEl&&!assetsEl.hasLoaded){assetsEl.addEventListener('loaded',function(){self.load();});return;}this.load();}},/**\n   * Tell parent to remove this element's object3D from its object3D.\n   * Do not call on scene element because that will cause a call to document.body.remove().\n   */detachedCallback:{value:function(){var componentName;if(!this.parentEl){return;}// Remove components.\nfor(componentName in this.components){this.removeComponent(componentName);}if(this.isScene){return;}this.removeFromParent();ANode.prototype.detachedCallback.call(this);// Remove cyclic reference.\nthis.object3D.el=null;}},getObject3D:{value:function(type){return this.object3DMap[type];}},/**\n   * Set a THREE.Object3D into the map.\n   *\n   * @param {string} type - Developer-set name of the type of object, will be unique per type.\n   * @param {object} obj - A THREE.Object3D.\n   */setObject3D:{value:function(type,obj){var oldObj;var self=this;if(!(obj instanceof THREE.Object3D)){throw new Error('`Entity.setObject3D` was called with an object that was not an instance of '+'THREE.Object3D.');}// Remove existing object of the type.\noldObj=this.getObject3D(type);if(oldObj){this.object3D.remove(oldObj);}// Set references to A-Frame entity.\nobj.el=this;if(obj.children.length){obj.traverse(function bindEl(child){child.el=self;});}// Add.\nthis.object3D.add(obj);this.object3DMap[type]=obj;this.emit('object3dset',{object:obj,type:type});}},/**\n   * Remove object from scene and entity object3D map.\n   */removeObject3D:{value:function(type){var obj=this.getObject3D(type);if(!obj){warn('Tried to remove `Object3D` of type:',type,'which was not defined.');return;}this.object3D.remove(obj);delete this.object3DMap[type];this.emit('object3dremove',{type:type});}},/**\n   * Gets or creates an object3D of a given type.\n   *\n   * @param {string} type - Type of the object3D.\n   * @param {string} Constructor - Constructor to use to create the object3D if needed.\n   * @returns {object}\n   */getOrCreateObject3D:{value:function(type,Constructor){var object3D=this.getObject3D(type);if(!object3D&&Constructor){object3D=new Constructor();this.setObject3D(type,object3D);}warn('`getOrCreateObject3D` has been deprecated. Use `setObject3D()` '+'and `object3dset` event instead.');return object3D;}},/**\n   * Add child entity.\n   *\n   * @param {Element} el - Child entity.\n   */add:{value:function(el){if(!el.object3D){throw new Error(\"Trying to add an element that doesn't have an `object3D`\");}this.object3D.add(el.object3D);this.emit('child-attached',{el:el});}},/**\n   * Tell parentNode to add this entity to itself.\n   */addToParent:{value:function(){var parentNode=this.parentEl=this.parentNode;// `!parentNode` check primarily for unit tests.\nif(!parentNode||!parentNode.add||this.attachedToParent){return;}parentNode.add(this);this.attachedToParent=true;// To prevent multiple attachments to same parent.\n}},/**\n   * Tell parentNode to remove this entity from itself.\n   */removeFromParent:{value:function(){var parentEl=this.parentEl;this.parentEl.remove(this);this.attachedToParent=false;this.parentEl=null;parentEl.emit('child-detached',{el:this});}},load:{value:function(){var self=this;if(this.hasLoaded||!this.parentEl){return;}ANode.prototype.load.call(this,function entityLoadCallback(){// Check if entity was detached while it was waiting to load.\nif(!self.parentEl){return;}self.updateComponents();if(self.isScene||self.parentEl.isPlaying){self.play();}});},writable:window.debug},/**\n   * Remove child entity.\n   *\n   * @param {Element} el - Child entity.\n   */remove:{value:function(el){this.object3D.remove(el.object3D);}},/**\n   * @returns {array} Direct children that are entities.\n   */getChildEntities:{value:function(){var children=this.children;var childEntities=[];for(var i=0;i<children.length;i++){var child=children[i];if(child instanceof AEntity){childEntities.push(child);}}return childEntities;}},/**\n   * Initialize component.\n   *\n   * @param {string} attrName - Attribute name asociated to the component.\n   * @param {object} data - Component data\n   * @param {boolean} isDependency - True if the component is a dependency.\n   */initComponent:{value:function(attrName,data,isDependency){var component;var componentId;var componentInfo;var componentName;var isComponentDefined;componentInfo=utils.split(attrName,MULTIPLE_COMPONENT_DELIMITER);componentName=componentInfo[0];componentId=componentInfo.length>2?componentInfo.slice(1).join('__'):componentInfo[1];// Not a registered component.\nif(!COMPONENTS[componentName]){return;}// Component is not a dependency and is undefined.\n// If a component is a dependency, then it is okay to have no data.\nisComponentDefined=checkComponentDefined(this,attrName)||data!==undefined;if(!isComponentDefined&&!isDependency){return;}// Component already initialized.\nif(attrName in this.components){return;}// Initialize dependencies first\nthis.initComponentDependencies(componentName);// If component name has an id we check component type multiplic\nif(componentId&&!COMPONENTS[componentName].multiple){throw new Error('Trying to initialize multiple '+'components of type `'+componentName+'`. There can only be one component of this type per entity.');}component=new COMPONENTS[componentName].Component(this,data,componentId);if(this.isPlaying){component.play();}// Components are reflected in the DOM as attributes but the state is not shown\n// hence we set the attribute to empty string.\n// The flag justInitialized is for attributeChangedCallback to not overwrite\n// the component with the empty string.\nif(!this.hasAttribute(attrName)){component.justInitialized=true;window.HTMLElement.prototype.setAttribute.call(this,attrName,'');}debug('Component initialized: %s',attrName);},writable:window.debug},/**\n   * Initialize dependencies of a component.\n   *\n   * @param {string} name - Root component name.\n   */initComponentDependencies:{value:function(name){var self=this;var component=COMPONENTS[name];var dependencies;var i;// Not a component.\nif(!component){return;}// No dependencies.\ndependencies=COMPONENTS[name].dependencies;if(!dependencies){return;}// Initialize dependencies.\nfor(i=0;i<dependencies.length;i++){// Call getAttribute to initialize the data from the DOM.\nself.initComponent(dependencies[i],window.HTMLElement.prototype.getAttribute.call(self,dependencies[i])||undefined,true);}}},removeComponent:{value:function(name){var component;component=this.components[name];if(!component){return;}// Wait for component to initialize.\nif(!component.initialized){this.addEventListener('componentinitialized',function tryRemoveLater(evt){if(evt.detail.name!==name){return;}this.removeComponent(name);this.removeEventListener('componentinitialized',tryRemoveLater);});return;}component.pause();component.remove();delete this.components[name];this.emit('componentremoved',component.evtDetail);},writable:window.debug},/**\n   * Initialize or update all components.\n   * Build data using initial components, defined attributes, mixins, and defaults.\n   * Update default components before the rest.\n   *\n   * @member {function} getExtraComponents - Can be implemented to include component data\n   *   from other sources (e.g., implemented by primitives).\n   */updateComponents:{value:function(){var data;var extraComponents;var i;var name;var componentsToUpdate=this.componentsToUpdate;if(!this.hasLoaded){return;}// Gather mixin-defined components.\nfor(i=0;i<this.mixinEls.length;i++){for(name in this.mixinEls[i].componentCache){if(isComponent(name)){componentsToUpdate[name]=true;}}}// Gather from extra initial component data if defined (e.g., primitives).\nif(this.getExtraComponents){extraComponents=this.getExtraComponents();for(name in extraComponents){if(isComponent(name)){componentsToUpdate[name]=true;}}}// Gather entity-defined components.\nfor(i=0;i<this.attributes.length;++i){name=this.attributes[i].name;if(OBJECT3D_COMPONENTS.indexOf(name)!==-1){continue;}if(isComponent(name)){componentsToUpdate[name]=true;}}// object3D components first (position, rotation, scale, visible).\nfor(i=0;i<OBJECT3D_COMPONENTS.length;i++){name=OBJECT3D_COMPONENTS[i];if(!this.hasAttribute(name)){continue;}this.updateComponent(name,this.getDOMAttribute(name));}// Initialize or update rest of components.\nfor(name in componentsToUpdate){data=mergeComponentData(this.getDOMAttribute(name),extraComponents&&extraComponents[name]);this.updateComponent(name,data);delete componentsToUpdate[name];}},writable:window.debug},/**\n   * Initialize, update, or remove a single component.\n   *\n   * When initializing, we set the component on `this.components`.\n   *\n   * @param {string} attr - Component name.\n   * @param {object} attrValue - Value of the DOM attribute.\n   * @param {boolean} clobber - If new attrValue completely replaces previous properties.\n   */updateComponent:{value:function(attr,attrValue,clobber){var component=this.components[attr];if(component){// Remove component.\nif(attrValue===null&&!checkComponentDefined(this,attr)){this.removeComponent(attr);return;}// Component already initialized. Update component.\ncomponent.updateProperties(attrValue,clobber);return;}// Component not yet initialized. Initialize component.\nthis.initComponent(attr,attrValue,false);}},/**\n   * If `attr` is a component name, detach the component from the entity.\n   *\n   * If `propertyName` is given, reset the component property value to its default.\n   *\n   * @param {string} attr - Attribute name, which could also be a component name.\n   * @param {string} propertyName - Component prop name, if resetting an individual prop.\n   */removeAttribute:{value:function(attr,propertyName){var component=this.components[attr];// Remove component.\nif(component&&propertyName===undefined){this.removeComponent(attr);}// Reset component property value.\nif(component&&propertyName!==undefined){component.resetProperty(propertyName);return;}// Remove mixins.\nif(attr==='mixin'){this.mixinUpdate('');}window.HTMLElement.prototype.removeAttribute.call(this,attr);}},/**\n   * Start dynamic behavior associated with entity such as dynamic components and animations.\n   * Tell all children entities to also play.\n   */play:{value:function(){var entities;var i;var key;// Already playing.\nif(this.isPlaying||!this.hasLoaded){return;}this.isPlaying=true;// Wake up all components.\nfor(key in this.components){this.components[key].play();}// Tell all child entities to play.\nentities=this.getChildEntities();for(i=0;i<entities.length;i++){entities[i].play();}this.emit('play');},writable:true},/**\n   * Pause dynamic behavior associated with entity such as dynamic components and animations.\n   * Tell all children entities to also pause.\n   */pause:{value:function(){var entities;var i;var key;if(!this.isPlaying){return;}this.isPlaying=false;// Sleep all components.\nfor(key in this.components){this.components[key].pause();}// Tell all child entities to pause.\nentities=this.getChildEntities();for(i=0;i<entities.length;i++){entities[i].pause();}this.emit('pause');},writable:true},/**\n   * Deals with updates on entity-specific attributes (i.e., components and mixins).\n   *\n   * @param {string} attr\n   * @param {string} oldVal\n   * @param {string|object} newVal\n   */setEntityAttribute:{value:function(attr,oldVal,newVal){if(COMPONENTS[attr]||this.components[attr]){this.updateComponent(attr,newVal);return;}if(attr==='mixin'){// Ignore if `<a-node>` code is just updating computed mixin in the DOM.\nif(newVal===this.computedMixinStr){return;}this.mixinUpdate(newVal,oldVal);}}},/**\n   * When mixins updated, trigger init or optimized-update of relevant components.\n   */mixinUpdate:{value:function(){var componentsUpdated=[];return function(newMixins,oldMixins){var component;var mixinEl;var mixinIds;var i;var self=this;if(!this.hasLoaded){this.addEventListener('loaded',function(){self.mixinUpdate(newMixins,oldMixins);},ONCE);return;}oldMixins=oldMixins||this.getAttribute('mixin');mixinIds=this.updateMixins(newMixins,oldMixins);// Loop over current mixins.\ncomponentsUpdated.length=0;for(i=0;i<this.mixinEls.length;i++){for(component in this.mixinEls[i].componentCache){if(componentsUpdated.indexOf(component)===-1){if(this.components[component]){// Update. Just rebuild data.\nthis.components[component].handleMixinUpdate();}else{// Init. buildData will gather mixin values.\nthis.initComponent(component,null);}componentsUpdated.push(component);}}}// Loop over old mixins to call for data rebuild.\nfor(i=0;i<mixinIds.oldMixinIds.length;i++){mixinEl=document.getElementById(mixinIds.oldMixinIds[i]);if(!mixinEl){continue;}for(component in mixinEl.componentCache){if(componentsUpdated.indexOf(component)===-1){if(this.components[component]){if(this.getDOMAttribute(component)){// Update component if explicitly defined.\nthis.components[component].handleMixinUpdate();}else{// Remove component if not explicitly defined.\nthis.removeComponent(component);}}}}}};}()},/**\n   * setAttribute can:\n   *\n   * 1. Set a single property of a multi-property component.\n   * 2. Set multiple properties of a multi-property component.\n   * 3. Replace properties of a multi-property component.\n   * 4. Set a value for a single-property component, mixin, or normal HTML attribute.\n   *\n   * @param {string} attrName - Component or attribute name.\n   * @param {*} arg1 - Can be a value, property name, CSS-style property string, or\n   *   object of properties.\n   * @param {*|bool} arg2 - If arg1 is a property name, this should be a value. Otherwise,\n   *   it is a boolean indicating whether to clobber previous values (defaults to false).\n   */setAttribute:{value:function(){var singlePropUpdate={};return function(attrName,arg1,arg2){var newAttrValue;var clobber;var componentName;var delimiterIndex;var isDebugMode;var key;delimiterIndex=attrName.indexOf(MULTIPLE_COMPONENT_DELIMITER);componentName=delimiterIndex>0?attrName.substring(0,delimiterIndex):attrName;// Not a component. Normal set attribute.\nif(!COMPONENTS[componentName]){if(attrName==='mixin'){this.mixinUpdate(arg1);}ANode.prototype.setAttribute.call(this,attrName,arg1);return;}// Initialize component first if not yet initialized.\nif(!this.components[attrName]&&this.hasAttribute(attrName)){this.updateComponent(attrName,window.HTMLElement.prototype.getAttribute.call(this,attrName));}// Determine new attributes from the arguments\nif(typeof arg2!=='undefined'&&typeof arg1==='string'&&arg1.length>0&&typeof utils.styleParser.parse(arg1)==='string'){// Update a single property of a multi-property component\nfor(key in singlePropUpdate){delete singlePropUpdate[key];}newAttrValue=singlePropUpdate;newAttrValue[arg1]=arg2;clobber=false;}else{// Update with a value, object, or CSS-style property string, with the possiblity\n// of clobbering previous values.\nnewAttrValue=arg1;clobber=arg2===true;}// Update component\nthis.updateComponent(attrName,newAttrValue,clobber);// In debug mode, write component data up to the DOM.\nisDebugMode=this.sceneEl&&this.sceneEl.getAttribute('debug');if(isDebugMode){this.components[attrName].flushToDOM();}};}(),writable:window.debug},/**\n   * Reflect component data in the DOM (as seen from the browser DOM Inspector).\n   *\n   * @param {bool} recursive - Also flushToDOM on the children.\n   **/flushToDOM:{value:function(recursive){var components=this.components;var child;var children=this.children;var i;var key;// Flush entity's components to DOM.\nfor(key in components){components[key].flushToDOM();}// Recurse.\nif(!recursive){return;}for(i=0;i<children.length;++i){child=children[i];if(!child.flushToDOM){continue;}child.flushToDOM(recursive);}}},/**\n   * If `attr` is a component, returns ALL component data including applied mixins and\n   * defaults.\n   *\n   * If `attr` is not a component, fall back to HTML getAttribute.\n   *\n   * @param {string} attr\n   * @returns {object|string} Object if component, else string.\n   */getAttribute:{value:function(attr){// If component, return component data.\nvar component;if(attr==='position'){return this.object3D.position;}if(attr==='rotation'){return getRotation(this);}if(attr==='scale'){return this.object3D.scale;}if(attr==='visible'){return this.object3D.visible;}component=this.components[attr];if(component){return component.data;}return window.HTMLElement.prototype.getAttribute.call(this,attr);},writable:window.debug},/**\n   * If `attr` is a component, returns JUST the component data defined on the entity.\n   * Like a partial version of `getComputedAttribute` as returned component data\n   * does not include applied mixins or defaults.\n   *\n   * If `attr` is not a component, fall back to HTML getAttribute.\n   *\n   * @param {string} attr\n   * @returns {object|string} Object if component, else string.\n   */getDOMAttribute:{value:function(attr){// If cached value exists, return partial component data.\nvar component=this.components[attr];if(component){return component.attrValue;}return window.HTMLElement.prototype.getAttribute.call(this,attr);},writable:window.debug},addState:{value:function(state){if(this.is(state)){return;}this.states.push(state);this.emit('stateadded',state);}},removeState:{value:function(state){var stateIndex=this.states.indexOf(state);if(stateIndex===-1){return;}this.states.splice(stateIndex,1);this.emit('stateremoved',state);}},/**\n   * Checks if the element is in a given state. e.g. el.is('alive');\n   * @type {string} state - Name of the state we want to check\n   */is:{value:function(state){return this.states.indexOf(state)!==-1;}},/**\n   * Open Inspector to this entity.\n   */inspect:{value:function(){this.sceneEl.components.inspector.openInspector(this);}}});/**\n * Check if a component is *defined* for an entity, including defaults and mixins.\n * Does not check whether the component has been *initialized* for an entity.\n *\n * @param {string} el - Entity.\n * @param {string} name - Component name.\n * @returns {boolean}\n */function checkComponentDefined(el,name){// Check if element contains the component.\nif(el.components[name]&&el.components[name].attrValue){return true;}return isComponentMixedIn(name,el.mixinEls);}/**\n * Check if any mixins contains a component.\n *\n * @param {string} name - Component name.\n * @param {array} mixinEls - Array of <a-mixin>s.\n */function isComponentMixedIn(name,mixinEls){var i;var inMixin=false;for(i=0;i<mixinEls.length;++i){inMixin=mixinEls[i].hasAttribute(name);if(inMixin){break;}}return inMixin;}/**\n * Given entity defined value, merge in extra data if necessary.\n * Handle both single and multi-property components.\n *\n * @param {string} attrValue - Entity data.\n * @param extraData - Entity data from another source to merge in.\n */function mergeComponentData(attrValue,extraData){// Extra data not defined, just return attrValue.\nif(!extraData){return attrValue;}// Merge multi-property data.\nif(extraData.constructor===Object){return utils.extend(extraData,utils.styleParser.parse(attrValue||{}));}// Return data, precendence to the defined value.\nreturn attrValue||extraData;}function isComponent(componentName){if(componentName.indexOf(MULTIPLE_COMPONENT_DELIMITER)!==-1){componentName=utils.split(componentName,MULTIPLE_COMPONENT_DELIMITER)[0];}if(!COMPONENTS[componentName]){return false;}return true;}function getRotation(entityEl){var radToDeg=THREE.Math.radToDeg;var rotation=entityEl.object3D.rotation;var rotationObj=entityEl.rotationObj;rotationObj.x=radToDeg(rotation.x);rotationObj.y=radToDeg(rotation.y);rotationObj.z=radToDeg(rotation.z);return rotationObj;}AEntity=registerElement('a-entity',{prototype:proto});module.exports=AEntity;},{\"../lib/three\":151,\"../utils/\":176,\"./a-node\":101,\"./a-register-element\":102,\"./component\":103}],100:[function(_dereq_,module,exports){var ANode=_dereq_('./a-node');var registerElement=_dereq_('./a-register-element').registerElement;var components=_dereq_('./component').components;var utils=_dereq_('../utils');var MULTIPLE_COMPONENT_DELIMITER='__';/**\n * @member {object} componentCache - Cache of pre-parsed values. An object where the keys\n *         are component names and the values are already parsed by the component.\n */module.exports=registerElement('a-mixin',{prototype:Object.create(ANode.prototype,{createdCallback:{value:function(){this.componentCache={};this.id=this.getAttribute('id');this.isMixin=true;}},attributeChangedCallback:{value:function(attr,oldVal,newVal){this.cacheAttribute(attr,newVal);this.updateEntities();}},attachedCallback:{value:function(){this.sceneEl=this.closestScene();this.cacheAttributes();this.updateEntities();this.load();}},/**\n     * setAttribute that parses and caches component values.\n     */setAttribute:{value:function(attr,value){window.HTMLElement.prototype.setAttribute.call(this,attr,value);this.cacheAttribute(attr,value);}},/**\n     * If `attr` is a component, then parse the value using the schema and store it.\n     */cacheAttribute:{value:function(attr,value){var component;var componentName;// Get component data.\ncomponentName=utils.split(attr,MULTIPLE_COMPONENT_DELIMITER)[0];component=components[componentName];if(!component){return;}if(value===undefined){value=window.HTMLElement.prototype.getAttribute.call(this,attr);}this.componentCache[attr]=component.parseAttrValueForCache(value);}},/**\n     * If `attr` is a component, then grab pre-parsed value from the cache.\n     * Else do a normal getAttribute.\n     */getAttribute:{value:function(attr){return this.componentCache[attr]||window.HTMLElement.prototype.getAttribute.call(this,attr);}},/**\n     * Parse and cache every component defined on the mixin.\n     */cacheAttributes:{value:function(){var attributes=this.attributes;var attrName;var i;for(i=0;i<attributes.length;i++){attrName=attributes[i].name;this.cacheAttribute(attrName);}}},/**\n     * For entities that already have been loaded by the time the mixin was attached, tell\n     * those entities to register the mixin and refresh their component data.\n     */updateEntities:{value:function(){var entity;var entities;var i;if(!this.sceneEl){return;}entities=this.sceneEl.querySelectorAll('[mixin~='+this.id+']');for(i=0;i<entities.length;i++){entity=entities[i];if(!entity.hasLoaded||entity.isMixin){continue;}entity.mixinUpdate(this.id);}}}})});},{\"../utils\":176,\"./a-node\":101,\"./a-register-element\":102,\"./component\":103}],101:[function(_dereq_,module,exports){/* global CustomEvent */var registerElement=_dereq_('./a-register-element').registerElement;var isNode=_dereq_('./a-register-element').isNode;var utils=_dereq_('../utils/');var warn=utils.debug('core:a-node:warn');var error=utils.debug('core:a-node:error');/**\n * Base class for A-Frame that manages loading of objects.\n *\n * Nodes can be modified using mixins.\n * Nodes emit a `loaded` event when they and their children have initialized.\n */module.exports=registerElement('a-node',{prototype:Object.create(window.HTMLElement.prototype,{createdCallback:{value:function(){this.computedMixinStr='';this.hasLoaded=false;this.isNode=true;this.mixinEls=[];},writable:window.debug},attachedCallback:{value:function(){var mixins;this.sceneEl=this.closestScene();if(!this.sceneEl){warn('You are attempting to attach <'+this.tagName+'> outside of an A-Frame '+'scene. Append this element to `<a-scene>` instead.');}this.hasLoaded=false;this.emit('nodeready',undefined,false);if(!this.isMixin){mixins=this.getAttribute('mixin');if(mixins){this.updateMixins(mixins);}}},writable:window.debug},/**\n     * Handle mixin.\n     */attributeChangedCallback:{value:function(attr,oldVal,newVal){// Ignore if `<a-node>` code is just updating computed mixin in the DOM.\nif(newVal===this.computedMixinStr){return;}if(attr==='mixin'&&!this.isMixin){this.updateMixins(newVal,oldVal);}}},/**\n    * Returns the first scene by traversing up the tree starting from and\n    * including receiver element.\n    */closestScene:{value:function closest(){var element=this;while(element){if(element.isScene){break;}element=element.parentElement;}return element;}},/**\n     * Returns first element matching a selector by traversing up the tree starting\n     * from and including receiver element.\n     *\n     * @param {string} selector - Selector of element to find.\n     */closest:{value:function closest(selector){var matches=this.matches||this.mozMatchesSelector||this.msMatchesSelector||this.oMatchesSelector||this.webkitMatchesSelector;var element=this;while(element){if(matches.call(element,selector)){break;}element=element.parentElement;}return element;}},detachedCallback:{value:function(){this.hasLoaded=false;}},/**\n     * Wait for children to load, if any.\n     * Then emit `loaded` event and set `hasLoaded`.\n     */load:{value:function(cb,childFilter){var children;var childrenLoaded;var self=this;if(this.hasLoaded){return;}// Default to waiting for all nodes.\nchildFilter=childFilter||isNode;// Wait for children to load (if any), then load.\nchildren=this.getChildren();childrenLoaded=children.filter(childFilter).map(function(child){return new Promise(function waitForLoaded(resolve){if(child.hasLoaded){return resolve();}child.addEventListener('loaded',resolve);});});Promise.all(childrenLoaded).then(function emitLoaded(){self.hasLoaded=true;if(cb){cb();}self.emit('loaded',undefined,false);}).catch(function(err){error('Failure loading node: ',err);});},writable:true},getChildren:{value:function(){return Array.prototype.slice.call(this.children,0);}},/**\n     * Unregister old mixins and listeners.\n     * Register new mixins and listeners.\n     * Registering means to update `this.mixinEls` with listeners.\n     */updateMixins:{value:function(){var newMixinIdArray=[];var oldMixinIdArray=[];var mixinIds={};return function(newMixins,oldMixins){var i;var newMixinIds;var oldMixinIds;newMixinIdArray.length=0;oldMixinIdArray.length=0;newMixinIds=newMixins?utils.split(newMixins.trim(),/\\s+/):newMixinIdArray;oldMixinIds=oldMixins?utils.split(oldMixins.trim(),/\\s+/):oldMixinIdArray;mixinIds.newMixinIds=newMixinIds;mixinIds.oldMixinIds=oldMixinIds;// Unregister old mixins.\nfor(i=0;i<oldMixinIds.length;i++){if(newMixinIds.indexOf(oldMixinIds[i])===-1){this.unregisterMixin(oldMixinIds[i]);}}// Register new mixins.\nthis.computedMixinStr='';this.mixinEls.length=0;for(i=0;i<newMixinIds.length;i++){this.registerMixin(document.getElementById(newMixinIds[i]));}// Update DOM. Keep track of `computedMixinStr` to not recurse back here after\n// update.\nif(this.computedMixinStr){this.computedMixinStr=this.computedMixinStr.trim();window.HTMLElement.prototype.setAttribute.call(this,'mixin',this.computedMixinStr);}return mixinIds;};}()},/**\n     * From mixin ID, add mixin element to `mixinEls`.\n     *\n     * @param {Element} mixinEl\n     */registerMixin:{value:function(mixinEl){var compositedMixinIds;var i;var mixin;if(!mixinEl){return;}// Register composited mixins (if mixin has mixins).\nmixin=mixinEl.getAttribute('mixin');if(mixin){compositedMixinIds=utils.split(mixin.trim(),/\\s+/);for(i=0;i<compositedMixinIds.length;i++){this.registerMixin(document.getElementById(compositedMixinIds[i]));}}// Register mixin.\nthis.computedMixinStr=this.computedMixinStr+' '+mixinEl.id;this.mixinEls.push(mixinEl);}},setAttribute:{value:function(attr,newValue){if(attr==='mixin'){this.updateMixins(newValue);}window.HTMLElement.prototype.setAttribute.call(this,attr,newValue);}},unregisterMixin:{value:function(mixinId){var i;var mixinEls=this.mixinEls;var mixinEl;for(i=0;i<mixinEls.length;++i){mixinEl=mixinEls[i];if(mixinId===mixinEl.id){mixinEls.splice(i,1);break;}}}},/**\n     * Emit a DOM event.\n     *\n     * @param {string} name - Name of event.\n     * @param {object} [detail={}] - Custom data to pass as `detail` to the event.\n     * @param {boolean} [bubbles=true] - Whether the event should bubble.\n     * @param {object} [extraData] - Extra data to pass to the event, if any.\n     */emit:{value:function(){var data={};return function(name,detail,bubbles,extraData){if(bubbles===undefined){bubbles=true;}data.bubbles=!!bubbles;data.detail=detail;// If extra data is present, we need to create a new object.\nif(extraData){data=utils.extend({},extraData,data);}this.dispatchEvent(new CustomEvent(name,data));};}(),writable:window.debug}})});},{\"../utils/\":176,\"./a-register-element\":102}],102:[function(_dereq_,module,exports){/*\n  ------------------------------------------------------------\n  ------------- WARNING WARNING WARNING WARNING --------------\n  ------------------------------------------------------------\n\n  This module wraps registerElement to deal with components that inherit from\n  `ANode` and `AEntity`.  It's a pass through in any other case.\n\n  It wraps some of the prototype methods of the created element to make sure\n  that the corresponding functions in the base prototypes (`AEntity` and `ANode`)\n  are also invoked. The method in the base prototype is always called before the one\n  in the derived prototype.\n*/ // Polyfill `document.registerElement`.\n_dereq_('document-register-element');var ANode;// Must declare before AEntity. Initialized at the bottom.\nvar AEntity;var knownTags=module.exports.knownTags={};function addTagName(tagName){knownTags[tagName.toLowerCase()]=true;}/**\n * Return whether the element type is one of our known registered ones.\n *\n * @param {string} node - The name of the tag to register.\n * @returns {boolean} Whether the tag name matches that of our registered custom elements.\n */module.exports.isNode=function(node){return node.tagName.toLowerCase()in knownTags||node.isNode;};/**\n * @param {string} tagName - The name of the tag to register.\n * @param {object} obj - The prototype of the new element.\n * @returns {object} The prototype of the new element.\n */module.exports.registerElement=function(tagName,obj){var proto=Object.getPrototypeOf(obj.prototype);var newObj=obj;var isANode=ANode&&proto===ANode.prototype;var isAEntity=AEntity&&proto===AEntity.prototype;if(isANode||isAEntity){addTagName(tagName);}// Wrap if element inherits from `ANode`.\nif(isANode){newObj=wrapANodeMethods(obj.prototype);newObj={prototype:Object.create(proto,newObj)};}// Wrap if element inherits from `AEntity`.\nif(isAEntity){newObj=wrapAEntityMethods(obj.prototype);newObj={prototype:Object.create(proto,newObj)};}// Give all functions their proper name.\nObject.getOwnPropertyNames(newObj.prototype).forEach(function(propName){var propVal=newObj.prototype[propName];if(typeof propVal==='function'){propVal.displayName=propName;}});return document.registerElement(tagName,newObj);};/**\n * Wrap some obj methods to call those on `ANode` base prototype.\n *\n * @param {object} obj - Object that contains the methods that will be wrapped.\n * @return {object} An object with the same properties as the input parameter but\n * with some of methods wrapped.\n */function wrapANodeMethods(obj){var newObj={};var ANodeMethods=['attachedCallback','attributeChangedCallback','createdCallback','detachedCallback'];wrapMethods(newObj,ANodeMethods,obj,ANode.prototype);copyProperties(obj,newObj);return newObj;}/**\n * This wraps some of the obj methods to call those on `AEntity` base prototype.\n *\n * @param {object} obj - The objects that contains the methods that will be wrapped.\n * @return {object} - An object with the same properties as the input parameter but\n * with some of methods wrapped.\n */function wrapAEntityMethods(obj){var newObj={};var ANodeMethods=['attachedCallback','attributeChangedCallback','createdCallback','detachedCallback'];var AEntityMethods=['attachedCallback','attributeChangedCallback','createdCallback','detachedCallback'];wrapMethods(newObj,ANodeMethods,obj,ANode.prototype);wrapMethods(newObj,AEntityMethods,obj,AEntity.prototype);// Copies the remaining properties into the new object.\ncopyProperties(obj,newObj);return newObj;}/**\n * Wrap a list a methods to ensure that those in the base prototype are called\n * before the derived one.\n *\n * @param {object} targetObj - Object that will contain the wrapped methods.\n * @param {array} methodList - List of methods from the derivedObj that will be wrapped.\n * @param {object} derivedObject - Object that inherits from the baseObj.\n * @param {object} baseObj - Object that derivedObj inherits from.\n */function wrapMethods(targetObj,methodList,derivedObj,baseObj){methodList.forEach(function(methodName){wrapMethod(targetObj,methodName,derivedObj,baseObj);});}module.exports.wrapMethods=wrapMethods;/**\n * Wrap one method to ensure that the one in the base prototype is called before\n * the one in the derived one.\n *\n * @param {object} obj - Object that will contain the wrapped method.\n * @param {string} methodName - The name of the method that will be wrapped.\n * @param {object} derivedObject - Object that inherits from the baseObj.\n * @param {object} baseObj - Object that derivedObj inherits from.\n */function wrapMethod(obj,methodName,derivedObj,baseObj){var derivedMethod=derivedObj[methodName];var baseMethod=baseObj[methodName];// Derived prototype does not define method, no need to wrap.\nif(!derivedMethod||!baseMethod){return;}// Derived prototype doesn't override the one in the base one, no need to wrap.\nif(derivedMethod===baseMethod){return;}// Wrap to ensure the base method is called before the one in the derived prototype.\nobj[methodName]={value:function wrappedMethod(){baseMethod.apply(this,arguments);return derivedMethod.apply(this,arguments);},writable:window.debug};}/**\n * It copies the properties from source to destination object if they don't\n * exist already.\n *\n * @param {object} source - The object where properties are copied from.\n * @param {type} destination - The object where properties are copied to.\n */function copyProperties(source,destination){var props=Object.getOwnPropertyNames(source);props.forEach(function(prop){var desc;if(!destination[prop]){desc=Object.getOwnPropertyDescriptor(source,prop);destination[prop]={value:source[prop],writable:desc.writable};}});}ANode=_dereq_('./a-node');AEntity=_dereq_('./a-entity');},{\"./a-entity\":99,\"./a-node\":101,\"document-register-element\":12}],103:[function(_dereq_,module,exports){/* global Node */var schema=_dereq_('./schema');var scenes=_dereq_('./scene/scenes');var systems=_dereq_('./system');var utils=_dereq_('../utils/');var components=module.exports.components={};// Keep track of registered components.\nvar parseProperties=schema.parseProperties;var parseProperty=schema.parseProperty;var processSchema=schema.process;var isSingleProp=schema.isSingleProperty;var stringifyProperties=schema.stringifyProperties;var stringifyProperty=schema.stringifyProperty;var styleParser=utils.styleParser;var warn=utils.debug('core:component:warn');var aframeScript=document.currentScript;var upperCaseRegExp=new RegExp('[A-Z]+');// Object pools by component, created upon registration.\nvar objectPools={};/**\n * Component class definition.\n *\n * Components configure appearance, modify behavior, or add functionality to\n * entities. The behavior and appearance of an entity can be changed at runtime\n * by adding, removing, or updating components. Entities do not share instances\n * of components.\n *\n * @member {object} el - Reference to the entity element.\n * @member {string} attrValue - Value of the corresponding HTML attribute.\n * @member {object} data - Component data populated by parsing the\n *         mapped attribute of the component plus applying defaults and mixins.\n */var Component=module.exports.Component=function(el,attrValue,id){var self=this;this.el=el;this.id=id;this.attrName=this.name+(id?'__'+id:'');this.evtDetail={id:this.id,name:this.name};this.initialized=false;this.isSingleProperty=isSingleProp(this.schema);this.isSinglePropertyObject=this.isSingleProperty&&isObject(parseProperty(undefined,this.schema))&&!(this.schema.default instanceof window.HTMLElement);this.isObjectBased=!this.isSingleProperty||this.isSinglePropertyObject;this.el.components[this.attrName]=this;this.objectPool=objectPools[this.name];// Store component data from previous update call.\nthis.attrValue=undefined;this.nextData=this.isObjectBased?this.objectPool.use():undefined;this.oldData=this.isObjectBased?this.objectPool.use():undefined;this.previousOldData=this.isObjectBased?this.objectPool.use():undefined;this.parsingAttrValue=this.isObjectBased?this.objectPool.use():undefined;// Last value passed to updateProperties.\nthis.throttledEmitComponentChanged=utils.throttle(function emitChange(){el.emit('componentchanged',self.evtDetail,false);},200);this.updateProperties(attrValue);};Component.prototype={/**\n   * Contains the type schema and defaults for the data values.\n   * Data is coerced into the types of the values of the defaults.\n   */schema:{},/**\n   * Init handler. Similar to attachedCallback.\n   * Called during component initialization and is only run once.\n   * Components can use this to set initial state.\n   */init:function(){/* no-op */},/**\n   * Update handler. Similar to attributeChangedCallback.\n   * Called whenever component's data changes.\n   * Also called on component initialization when the component receives initial data.\n   *\n   * @param {object} prevData - Previous attributes of the component.\n   */update:function(prevData){/* no-op */},updateSchema:undefined,/**\n   * Tick handler.\n   * Called on each tick of the scene render loop.\n   * Affected by play and pause.\n   *\n   * @param {number} time - Scene tick time.\n   * @param {number} timeDelta - Difference in current render time and previous render time.\n   */tick:undefined,/**\n   * Tock handler.\n   * Called on each tock of the scene render loop.\n   * Affected by play and pause.\n   *\n   * @param {number} time - Scene tick time.\n   * @param {number} timeDelta - Difference in current render time and previous render time.\n   * @param {object} camera - Camera used to render the last frame.\n   */tock:undefined,/**\n   * Called to start any dynamic behavior (e.g., animation, AI, events, physics).\n   */play:function(){/* no-op */},/**\n   * Called to stop any dynamic behavior (e.g., animation, AI, events, physics).\n   */pause:function(){/* no-op */},/**\n   * Remove handler. Similar to detachedCallback.\n   * Called whenever component is removed from the entity (i.e., removeAttribute).\n   * Components can use this to reset behavior on the entity.\n   */remove:function(){/* no-op */},/**\n   * Parses each property based on property type.\n   * If component is single-property, then parses the single property value.\n   *\n   * @param {string} value - HTML attribute value.\n   * @param {boolean} silent - Suppress warning messages.\n   * @returns {object} Component data.\n   */parse:function(value,silent){var schema=this.schema;if(this.isSingleProperty){return parseProperty(value,schema);}return parseProperties(styleParser.parse(value),schema,true,this.name,silent);},/**\n   * Stringify properties if necessary.\n   *\n   * Only called from `Entity.setAttribute` for properties whose parsers accept a non-string\n   * value (e.g., selector, vec3 property types).\n   *\n   * @param {object} data - Complete component data.\n   * @returns {string}\n   */stringify:function(data){var schema=this.schema;if(typeof data==='string'){return data;}if(this.isSingleProperty){return stringifyProperty(data,schema);}data=stringifyProperties(data,schema);return styleParser.stringify(data);},/**\n   * Update the cache of the pre-parsed attribute value.\n   *\n   * @param {string} value - New data.\n   * @param {boolean } clobber - Whether to wipe out and replace previous data.\n   */updateCachedAttrValue:function(value,clobber){var newAttrValue;var tempObject;var property;if(value===undefined){return;}// If null value is the new attribute value, make the attribute value falsy.\nif(value===null){if(this.isObjectBased&&this.attrValue){this.objectPool.recycle(this.attrValue);}this.attrValue=undefined;return;}if(value instanceof Object&&!(value instanceof window.HTMLElement)){// If value is an object, copy it to our pooled newAttrValue object to use to update\n// the attrValue.\ntempObject=this.objectPool.use();newAttrValue=utils.extend(tempObject,value);}else{newAttrValue=this.parseAttrValueForCache(value);}// Merge new data with previous `attrValue` if updating and not clobbering.\nif(this.isObjectBased&&!clobber&&this.attrValue){for(property in this.attrValue){if(newAttrValue[property]===undefined){newAttrValue[property]=this.attrValue[property];}}}// Update attrValue.\nif(this.isObjectBased&&!this.attrValue){this.attrValue=this.objectPool.use();}utils.objectPool.clearObject(this.attrValue);this.attrValue=extendProperties(this.attrValue,newAttrValue,this.isObjectBased);utils.objectPool.clearObject(tempObject);},/**\n   * Given an HTML attribute value parses the string based on the component schema.\n   * To avoid double parsings of strings into strings we store the original instead\n   * of the parsed one\n   *\n   * @param {string} value - HTML attribute value\n   */parseAttrValueForCache:function(value){var parsedValue;if(typeof value!=='string'){return value;}if(this.isSingleProperty){parsedValue=this.schema.parse(value);/**\n       * To avoid bogus double parsings. Cached values will be parsed when building\n       * component data. For instance when parsing a src id to its url, we want to cache\n       * original string and not the parsed one (#monster -> models/monster.dae)\n       * so when building data we parse the expected value.\n       */if(typeof parsedValue==='string'){parsedValue=value;}}else{// Parse using the style parser to avoid double parsing of individual properties.\nutils.objectPool.clearObject(this.parsingAttrValue);parsedValue=styleParser.parse(value,this.parsingAttrValue);}return parsedValue;},/**\n   * Write cached attribute data to the entity DOM element.\n   *\n   * @param {boolean} isDefault - Whether component is a default component. Always flush for\n   *   default components.\n   */flushToDOM:function(isDefault){var attrValue=isDefault?this.data:this.attrValue;if(!attrValue){return;}window.HTMLElement.prototype.setAttribute.call(this.el,this.attrName,this.stringify(attrValue));},/**\n   * Apply new component data if data has changed (from setAttribute).\n   *\n   * @param {string} attrValue - HTML attribute value.\n   *        If undefined, use the cached attribute value and continue updating properties.\n   * @param {boolean} clobber - The previous component data is overwritten by the atrrValue\n   */updateProperties:function(attrValue,clobber){var el=this.el;// Just cache the attribute if the entity has not loaded\n// Components are not initialized until the entity has loaded\nif(!el.hasLoaded){this.updateCachedAttrValue(attrValue);return;}// Parse the attribute value.\n// Cache current attrValue for future updates. Updates `this.attrValue`.\n// `null` means no value on purpose, do not set a default value, let mixins take over.\nif(attrValue!==null){attrValue=this.parseAttrValueForCache(attrValue);}// Cache current attrValue for future updates.\nthis.updateCachedAttrValue(attrValue,clobber);if(this.initialized){this.updateComponent(attrValue,clobber);this.callUpdateHandler();}else{this.initComponent();}},initComponent:function(){var el=this.el;var initialOldData;// Build data.\nif(this.updateSchema){this.updateSchema(this.buildData(this.attrValue,false,true));}this.data=this.buildData(this.attrValue);// Component is being already initialized.\nif(el.initializingComponents[this.name]){return;}// Prevent infinite loop in case of init method setting same component on the entity.\nel.initializingComponents[this.name]=true;// Initialize component.\nthis.init();this.initialized=true;delete el.initializingComponents[this.name];// Store current data as previous data for future updates.\nthis.oldData=extendProperties(this.oldData,this.data,this.isObjectBased);// For oldData, pass empty object to multiple-prop schemas or object single-prop schema.\n// Pass undefined to rest of types.\ninitialOldData=this.isObjectBased?this.objectPool.use():undefined;this.update(initialOldData);if(this.isObjectBased){this.objectPool.recycle(initialOldData);}// Play the component if the entity is playing.\nif(el.isPlaying){this.play();}el.emit('componentinitialized',this.evtDetail,false);},/**\n   * @param attrValue - Passed argument from setAttribute.\n   */updateComponent:function(attrValue,clobber){var key;var mayNeedSchemaUpdate;if(clobber){// Clobber. Rebuild.\nif(this.updateSchema){this.updateSchema(this.buildData(this.attrValue,true,true));}this.data=this.buildData(this.attrValue,true,false);return;}// Apply new value to this.data in place since direct update.\nif(this.isSingleProperty){if(this.isObjectBased){parseProperty(attrValue,this.schema);}// Single-property (already parsed).\nthis.data=attrValue;return;}parseProperties(attrValue,this.schema,true,this.name);// Check if we need to update schema.\nif(this.schemaChangeKeys.length){for(key in attrValue){if(this.schema[key].schemaChange){mayNeedSchemaUpdate=true;break;}}}if(mayNeedSchemaUpdate){// Rebuild data if need schema update.\nif(this.updateSchema){this.updateSchema(this.buildData(this.attrValue,true,true));}this.data=this.buildData(this.attrValue,true,false);return;}// Normal update.\nfor(key in attrValue){if(attrValue[key]===undefined){continue;}this.data[key]=attrValue[key];}},/**\n   * Check if component should fire update and fire update lifecycle handler.\n   */callUpdateHandler:function(){var hasComponentChanged;// Store the previous old data before we calculate the new oldData.\nif(this.previousOldData instanceof Object){utils.objectPool.clearObject(this.previousOldData);}if(this.isObjectBased){copyData(this.previousOldData,this.oldData);}else{this.previousOldData=this.oldData;}hasComponentChanged=!utils.deepEqual(this.oldData,this.data);// Don't update if properties haven't changed.\n// Always update rotation, position, scale.\nif(!this.isPositionRotationScale&&!hasComponentChanged){return;}// Store current data as previous data for future updates.\n// Reuse `this.oldData` object to try not to allocate another one.\nif(this.oldData instanceof Object){utils.objectPool.clearObject(this.oldData);}this.oldData=extendProperties(this.oldData,this.data,this.isObjectBased);// Update component with the previous old data.\nthis.update(this.previousOldData);this.throttledEmitComponentChanged();},handleMixinUpdate:function(){this.data=this.buildData(this.attrValue);this.callUpdateHandler();},/**\n   * Reset value of a property to the property's default value.\n   * If single-prop component, reset value to component's default value.\n   *\n   * @param {string} propertyName - Name of property to reset.\n   */resetProperty:function(propertyName){if(this.isObjectBased){if(!(propertyName in this.attrValue)){return;}delete this.attrValue[propertyName];this.data[propertyName]=this.schema[propertyName].default;}else{this.attrValue=this.schema.default;this.data=this.schema.default;}this.updateProperties(this.attrValue);},/**\n   * Extend schema of component given a partial schema.\n   *\n   * Some components might want to mutate their schema based on certain properties.\n   * e.g., Material component changes its schema based on `shader` to account for different\n   * uniforms\n   *\n   * @param {object} schemaAddon - Schema chunk that extend base schema.\n   */extendSchema:function(schemaAddon){var extendedSchema;// Clone base schema.\nextendedSchema=utils.extend({},components[this.name].schema);// Extend base schema with new schema chunk.\nutils.extend(extendedSchema,schemaAddon);this.schema=processSchema(extendedSchema);this.el.emit('schemachanged',this.evtDetail);},/**\n   * Build component data from the current state of the entity.data.\n   *\n   * Precedence:\n   * 1. Defaults data\n   * 2. Mixin data.\n   * 3. Attribute data.\n   *\n   * Finally coerce the data to the types of the defaults.\n   *\n   * @param {object} newData - Element new data.\n   * @param {boolean} clobber - The previous data is completely replaced by the new one.\n   * @param {boolean} silent - Suppress warning messages.\n   * @return {object} The component data\n   */buildData:function(newData,clobber,silent){var componentDefined;var data;var defaultValue;var key;var mixinData;var nextData=this.nextData;var schema=this.schema;var i;var mixinEls=this.el.mixinEls;var previousData;// Whether component has a defined value. For arrays, treat empty as not defined.\ncomponentDefined=newData&&newData.constructor===Array?newData.length:newData!==undefined&&newData!==null;if(this.isObjectBased){utils.objectPool.clearObject(nextData);}// 1. Gather default values (lowest precendence).\nif(this.isSingleProperty){if(this.isObjectBased){// If object-based single-prop, then copy over the data to our pooled object.\ndata=copyData(nextData,schema.default);}else{// If is plain single-prop, copy by value the default.\ndata=isObjectOrArray(schema.default)?utils.clone(schema.default):schema.default;}}else{// Preserve previously set properties if clobber not enabled.\npreviousData=!clobber&&this.attrValue;// Clone default value if object so components don't share object\ndata=previousData instanceof Object?copyData(nextData,previousData):nextData;// Apply defaults.\nfor(key in schema){defaultValue=schema[key].default;if(data[key]!==undefined){continue;}// Clone default value if object so components don't share object\ndata[key]=isObjectOrArray(defaultValue)?utils.clone(defaultValue):defaultValue;}}// 2. Gather mixin values.\nfor(i=0;i<mixinEls.length;i++){mixinData=mixinEls[i].getAttribute(this.attrName);if(!mixinData){continue;}data=extendProperties(data,mixinData,this.isObjectBased);}// 3. Gather attribute values (highest precendence).\nif(componentDefined){if(this.isSingleProperty){// If object-based, copy the value to not modify the original.\nif(isObject(newData)){copyData(this.parsingAttrValue,newData);return parseProperty(this.parsingAttrValue,schema);}return parseProperty(newData,schema);}data=extendProperties(data,newData,this.isObjectBased);}else{// Parse and coerce using the schema.\nif(this.isSingleProperty){return parseProperty(data,schema);}}return parseProperties(data,schema,undefined,this.name,silent);}};// For testing.\nif(window.debug){var registrationOrderWarnings=module.exports.registrationOrderWarnings={};}/**\n * Registers a component to A-Frame.\n *\n * @param {string} name - Component name.\n * @param {object} definition - Component schema and lifecycle method handlers.\n * @returns {object} Component.\n */module.exports.registerComponent=function(name,definition){var NewComponent;var propertyName;var proto={};var schema;var schemaIsSingleProp;// Warning if component is statically registered after the scene.\nif(document.currentScript&&document.currentScript!==aframeScript){scenes.forEach(function checkPosition(sceneEl){// Okay to register component after the scene at runtime.\nif(sceneEl.hasLoaded){return;}// Check that component is declared before the scene.\nif(document.currentScript.compareDocumentPosition(sceneEl)===Node.DOCUMENT_POSITION_FOLLOWING){return;}warn('The component `'+name+'` was registered in a <script> tag after the scene. '+'Component <script> tags in an HTML file should be declared *before* the scene '+'such that the component is available to entities during scene initialization.');// For testing.\nif(window.debug){registrationOrderWarnings[name]=true;}});}if(upperCaseRegExp.test(name)===true){warn('The component name `'+name+'` contains uppercase characters, but '+'HTML will ignore the capitalization of attribute names. '+'Change the name to be lowercase: `'+name.toLowerCase()+'`');}if(name.indexOf('__')!==-1){throw new Error('The component name `'+name+'` is not allowed. '+'The sequence __ (double underscore) is reserved to specify an id'+' for multiple components of the same type');}// Format definition object to prototype object.\nObject.keys(definition).forEach(function(key){proto[key]={value:definition[key],writable:true};});if(components[name]){throw new Error('The component `'+name+'` has been already registered. '+'Check that you are not loading two versions of the same component '+'or two different components of the same name.');}NewComponent=function(el,attr,id){Component.call(this,el,attr,id);};NewComponent.prototype=Object.create(Component.prototype,proto);NewComponent.prototype.name=name;NewComponent.prototype.isPositionRotationScale=name==='position'||name==='rotation'||name==='scale';NewComponent.prototype.constructor=NewComponent;NewComponent.prototype.system=systems&&systems.systems[name];NewComponent.prototype.play=wrapPlay(NewComponent.prototype.play);NewComponent.prototype.pause=wrapPause(NewComponent.prototype.pause);NewComponent.prototype.remove=wrapRemove(NewComponent.prototype.remove);schema=utils.extend(processSchema(NewComponent.prototype.schema,NewComponent.prototype.name));schemaIsSingleProp=isSingleProp(NewComponent.prototype.schema);// Keep track of keys that may potentially change the schema.\nif(!schemaIsSingleProp){NewComponent.prototype.schemaChangeKeys=[];for(propertyName in schema){if(schema[propertyName].schemaChange){NewComponent.prototype.schemaChangeKeys.push(propertyName);}}}// Create object pool for class of components.\nobjectPools[name]=utils.objectPool.createPool();components[name]={Component:NewComponent,dependencies:NewComponent.prototype.dependencies,isSingleProp:schemaIsSingleProp,multiple:NewComponent.prototype.multiple,name:name,parse:NewComponent.prototype.parse,parseAttrValueForCache:NewComponent.prototype.parseAttrValueForCache,schema:schema,stringify:NewComponent.prototype.stringify,type:NewComponent.prototype.type};return NewComponent;};/**\n* Clone component data.\n* Clone only the properties that are plain objects while keeping a reference for the rest.\n*\n* @param data - Component data to clone.\n* @returns Cloned data.\n*/function copyData(dest,sourceData){var parsedProperty;var key;for(key in sourceData){if(sourceData[key]===undefined){continue;}parsedProperty=sourceData[key];dest[key]=isObjectOrArray(parsedProperty)?utils.clone(parsedProperty):parsedProperty;}return dest;}/**\n* Object extending with checking for single-property schema.\n*\n* @param dest - Destination object or value.\n* @param source - Source object or value\n* @param {boolean} isObjectBased - Whether values are objects.\n* @returns Overridden object or value.\n*/function extendProperties(dest,source,isObjectBased){var key;if(isObjectBased&&source.constructor===Object){for(key in source){if(source[key]===undefined){continue;}if(source[key]&&source[key].constructor===Object){dest[key]=utils.clone(source[key]);}else{dest[key]=source[key];}}return dest;}return source;}/**\n * Checks if a component has defined a method that needs to run every frame.\n */function hasBehavior(component){return component.tick||component.tock;}/**\n * Wrapper for defined pause method.\n * Pause component by removing tick behavior and calling user's pause method.\n *\n * @param pauseMethod {function}\n */function wrapPause(pauseMethod){return function pause(){var sceneEl=this.el.sceneEl;if(!this.isPlaying){return;}pauseMethod.call(this);this.isPlaying=false;// Remove tick behavior.\nif(!hasBehavior(this)){return;}sceneEl.removeBehavior(this);};}/**\n * Wrapper for defined play method.\n * Play component by adding tick behavior and calling user's play method.\n *\n * @param playMethod {function}\n */function wrapPlay(playMethod){return function play(){var sceneEl=this.el.sceneEl;var shouldPlay=this.el.isPlaying&&!this.isPlaying;if(!this.initialized||!shouldPlay){return;}playMethod.call(this);this.isPlaying=true;// Add tick behavior.\nif(!hasBehavior(this)){return;}sceneEl.addBehavior(this);};}/**\n * Wrapper for defined remove method.\n * Clean up memory.\n *\n * @param removeMethod {function} - Defined remove method.\n */function wrapRemove(removeMethod){return function remove(){removeMethod.call(this);this.objectPool.recycle(this.attrValue);this.objectPool.recycle(this.oldData);this.objectPool.recycle(this.parsingAttrValue);this.attrValue=this.oldData=this.parsingAttrValue=undefined;};}function isObject(value){return value&&value.constructor===Object&&!(value instanceof window.HTMLElement);}function isObjectOrArray(value){return value&&(value.constructor===Object||value.constructor===Array)&&!(value instanceof window.HTMLElement);}},{\"../utils/\":176,\"./scene/scenes\":110,\"./schema\":112,\"./system\":114}],104:[function(_dereq_,module,exports){var schema=_dereq_('./schema');var processSchema=schema.process;var geometries=module.exports.geometries={};// Registered geometries.\nvar geometryNames=module.exports.geometryNames=[];// Names of registered geometries.\nvar THREE=_dereq_('../lib/three');/**\n * Geometry class definition.\n *\n * Geometries extend the geometry component API to create and register geometry types.\n */var Geometry=module.exports.Geometry=function(){};Geometry.prototype={/**\n   * Contains the type schema and defaults for the data values.\n   * Data is coerced into the types of the values of the defaults.\n   */schema:{},/**\n   * Init handler. Similar to attachedCallback.\n   * Called during shader initialization and is only run once.\n   */init:function(data){this.geometry=new THREE.Geometry();return this.geometry;},/**\n   * Update handler. Similar to attributeChangedCallback.\n   * Called whenever the associated geometry data changes.\n   *\n   * @param {object} data - New geometry data.\n   */update:function(data){/* no-op */}};/**\n * Registers a geometry to A-Frame.\n *\n * @param {string} name - Geometry name.\n * @param {object} definition - Geometry property and methods.\n * @returns {object} Geometry.\n */module.exports.registerGeometry=function(name,definition){var NewGeometry;var proto={};// Format definition object to prototype object.\nObject.keys(definition).forEach(function expandDefinition(key){proto[key]={value:definition[key],writable:true};});if(geometries[name]){throw new Error('The geometry `'+name+'` has been already registered');}NewGeometry=function(){Geometry.call(this);};NewGeometry.prototype=Object.create(Geometry.prototype,proto);NewGeometry.prototype.name=name;NewGeometry.prototype.constructor=NewGeometry;geometries[name]={Geometry:NewGeometry,schema:processSchema(NewGeometry.prototype.schema)};geometryNames.push(name);return NewGeometry;};},{\"../lib/three\":151,\"./schema\":112}],105:[function(_dereq_,module,exports){var coordinates=_dereq_('../utils/coordinates');var debug=_dereq_('debug');var error=debug('core:propertyTypes:warn');var warn=debug('core:propertyTypes:warn');var propertyTypes=module.exports.propertyTypes={};var nonCharRegex=/[,> .[\\]:]/;var urlRegex=/\\url\\((.+)\\)/;// Built-in property types.\nregisterPropertyType('audio','',assetParse);registerPropertyType('array',[],arrayParse,arrayStringify);registerPropertyType('asset','',assetParse);registerPropertyType('boolean',false,boolParse);registerPropertyType('color','#FFF',defaultParse,defaultStringify);registerPropertyType('int',0,intParse);registerPropertyType('number',0,numberParse);registerPropertyType('map','',assetParse);registerPropertyType('model','',assetParse);registerPropertyType('selector',null,selectorParse,selectorStringify);registerPropertyType('selectorAll',null,selectorAllParse,selectorAllStringify);registerPropertyType('src','',srcParse);registerPropertyType('string','',defaultParse,defaultStringify);registerPropertyType('time',0,intParse);registerPropertyType('vec2',{x:0,y:0},vecParse,coordinates.stringify);registerPropertyType('vec3',{x:0,y:0,z:0},vecParse,coordinates.stringify);registerPropertyType('vec4',{x:0,y:0,z:0,w:1},vecParse,coordinates.stringify);/**\n * Register a parser for re-use such that when someone uses `type` in the schema,\n * `schema.process` will set the property `parse` and `stringify`.\n *\n * @param {string} type - Type name.\n * @param [defaultValue=null] -\n *   Default value to use if component does not define default value.\n * @param {function} [parse=defaultParse] - Parse string function.\n * @param {function} [stringify=defaultStringify] - Stringify to DOM function.\n */function registerPropertyType(type,defaultValue,parse,stringify){if('type'in propertyTypes){error('Property type '+type+' is already registered.');return;}propertyTypes[type]={default:defaultValue,parse:parse||defaultParse,stringify:stringify||defaultStringify};}module.exports.registerPropertyType=registerPropertyType;function arrayParse(value){if(Array.isArray(value)){return value;}if(!value||typeof value!=='string'){return[];}return value.split(',').map(trim);function trim(str){return str.trim();}}function arrayStringify(value){return value.join(', ');}/**\n * For general assets.\n *\n * @param {string} value - Can either be `url(<value>)`, an ID selector to an asset, or\n *   just string.\n * @returns {string} Parsed value from `url(<value>)`, src from `<someasset src>`, or\n *   just string.\n */function assetParse(value){var el;var parsedUrl;// If an element was provided (e.g. canvas or video), just return it.\nif(typeof value!=='string'){return value;}// Wrapped `url()` in case of data URI.\nparsedUrl=value.match(urlRegex);if(parsedUrl){return parsedUrl[1];}// ID.\nif(value.charAt(0)==='#'){el=document.getElementById(value.substring(1));if(el){// Pass through media elements. If we have the elements, we don't have to call\n// three.js loaders which would re-request the assets.\nif(el.tagName==='CANVAS'||el.tagName==='VIDEO'||el.tagName==='IMG'){return el;}return el.getAttribute('src');}warn('\"'+value+'\" asset not found.');return;}// Non-wrapped url().\nreturn value;}function defaultParse(value){return value;}function defaultStringify(value){if(value===null){return'null';}return value.toString();}function boolParse(value){return value!=='false'&&value!==false;}function intParse(value){return parseInt(value,10);}function numberParse(value){return parseFloat(value,10);}function selectorParse(value){if(!value){return null;}if(typeof value!=='string'){return value;}if(value[0]==='#'&&!nonCharRegex.test(value)){// When selecting element by ID only, use getElementById for better performance.\n// Don't match like #myId .child.\nreturn document.getElementById(value.substring(1));}return document.querySelector(value);}function selectorAllParse(value){if(!value){return null;}if(typeof value!=='string'){return value;}return Array.prototype.slice.call(document.querySelectorAll(value),0);}function selectorStringify(value){if(value.getAttribute){return'#'+value.getAttribute('id');}return defaultStringify(value);}function selectorAllStringify(value){if(value instanceof Array){return value.map(function(element){return'#'+element.getAttribute('id');}).join(', ');}return defaultStringify(value);}function srcParse(value){warn('`src` property type is deprecated. Use `asset` instead.');return assetParse(value);}function vecParse(value){return coordinates.parse(value,this.default);}/**\n * Validate the default values in a schema to match their type.\n *\n * @param {string} type - Property type name.\n * @param defaultVal - Property type default value.\n * @returns {boolean} Whether default value is accurate given the type.\n */function isValidDefaultValue(type,defaultVal){if(type==='audio'&&typeof defaultVal!=='string'){return false;}if(type==='array'&&!Array.isArray(defaultVal)){return false;}if(type==='asset'&&typeof defaultVal!=='string'){return false;}if(type==='boolean'&&typeof defaultVal!=='boolean'){return false;}if(type==='color'&&typeof defaultVal!=='string'){return false;}if(type==='int'&&typeof defaultVal!=='number'){return false;}if(type==='number'&&typeof defaultVal!=='number'){return false;}if(type==='map'&&typeof defaultVal!=='string'){return false;}if(type==='model'&&typeof defaultVal!=='string'){return false;}if(type==='selector'&&typeof defaultVal!=='string'&&defaultVal!==null){return false;}if(type==='selectorAll'&&typeof defaultVal!=='string'&&defaultVal!==null){return false;}if(type==='src'&&typeof defaultVal!=='string'){return false;}if(type==='string'&&typeof defaultVal!=='string'){return false;}if(type==='time'&&typeof defaultVal!=='number'){return false;}if(type==='vec2'){return isValidDefaultCoordinate(defaultVal,2);}if(type==='vec3'){return isValidDefaultCoordinate(defaultVal,3);}if(type==='vec4'){return isValidDefaultCoordinate(defaultVal,4);}return true;}module.exports.isValidDefaultValue=isValidDefaultValue;/**\n * Checks if default coordinates are valid.\n *\n * @param possibleCoordinates\n * @param {number} dimensions - 2 for 2D Vector, 3 for 3D vector.\n * @returns {boolean} Whether coordinates are parsed correctly.\n */function isValidDefaultCoordinate(possibleCoordinates,dimensions){if(possibleCoordinates===null){return true;}if(typeof possibleCoordinates!=='object'){return false;}if(Object.keys(possibleCoordinates).length!==dimensions){return false;}else{var x=possibleCoordinates.x;var y=possibleCoordinates.y;var z=possibleCoordinates.z;var w=possibleCoordinates.w;if(typeof x!=='number'||typeof y!=='number'){return false;}if(dimensions>2&&typeof z!=='number'){return false;}if(dimensions>3&&typeof w!=='number'){return false;}}return true;}module.exports.isValidDefaultCoordinate=isValidDefaultCoordinate;},{\"../utils/coordinates\":171,\"debug\":9}],106:[function(_dereq_,module,exports){/* global Promise, screen */var initMetaTags=_dereq_('./metaTags').inject;var initWakelock=_dereq_('./wakelock');var loadingScreen=_dereq_('./loadingScreen');var re=_dereq_('../a-register-element');var scenes=_dereq_('./scenes');var systems=_dereq_('../system').systems;var THREE=_dereq_('../../lib/three');var utils=_dereq_('../../utils/');// Require after.\nvar AEntity=_dereq_('../a-entity');var ANode=_dereq_('../a-node');var initPostMessageAPI=_dereq_('./postMessage');var bind=utils.bind;var isIOS=utils.device.isIOS();var isMobile=utils.device.isMobile();var isWebXRAvailable=utils.device.isWebXRAvailable;var registerElement=re.registerElement;var warn=utils.debug('core:a-scene:warn');/**\n * Scene element, holds all entities.\n *\n * @member {array} behaviors - Component instances that have registered themselves to be\n           updated on every tick.\n * @member {object} camera - three.js Camera object.\n * @member {object} canvas\n * @member {bool} isScene - Differentiates as scene entity as opposed to other entites.\n * @member {bool} isMobile - Whether browser is mobile (via UA detection).\n * @member {object} object3D - Root three.js Scene object.\n * @member {object} renderer\n * @member {bool} renderStarted\n * @member {object} systems - Registered instantiated systems.\n * @member {number} time\n */module.exports.AScene=registerElement('a-scene',{prototype:Object.create(AEntity.prototype,{createdCallback:{value:function(){this.isIOS=isIOS;this.isMobile=isMobile;this.hasWebXR=isWebXRAvailable;this.highRefreshRate=false;this.isScene=true;this.object3D=new THREE.Scene();var self=this;this.object3D.onAfterRender=function(renderer,scene,camera){// THREE may swap the camera used for the rendering if in VR, so we pass it to tock\nif(self.isPlaying){self.tock(self.time,self.delta,camera);}};this.render=bind(this.render,this);this.systems={};this.systemNames=[];this.time=this.delta=0;this.behaviors={tick:[],tock:[]};this.hasLoaded=false;this.isPlaying=false;this.originalHTML=this.innerHTML;this.renderTarget=null;// Default components.\nthis.setAttribute('inspector','');this.setAttribute('keyboard-shortcuts','');this.setAttribute('screenshot','');this.setAttribute('vr-mode-ui','');}},addFullScreenStyles:{value:function(){document.documentElement.classList.add('a-fullscreen');}},removeFullScreenStyles:{value:function(){document.documentElement.classList.remove('a-fullscreen');}},attachedCallback:{value:function(){var self=this;// Renderer initialization\nsetupCanvas(this);this.setupRenderer();this.resize();this.addFullScreenStyles();initPostMessageAPI(this);initMetaTags(this);initWakelock(this);// Camera set up by camera system.\nthis.addEventListener('cameraready',function(){self.attachedCallbackPostCamera();});this.initSystems();}},attachedCallbackPostCamera:{value:function(){var resize;var self=this;resize=bind(this.resize,this);window.addEventListener('load',resize);window.addEventListener('resize',function(){// Workaround for a Webkit bug (https://bugs.webkit.org/show_bug.cgi?id=170595)\n// where the window does not contain the correct viewport size\n// after an orientation change. The window size is correct if the operation\n// is postponed a few milliseconds.\n// self.resize can be called directly once the bug above is fixed.\nif(self.isIOS){setTimeout(resize,100);}else{resize();}});this.play();// Add to scene index.\nscenes.push(this);// Handler to exit VR (e.g., Oculus Browser back button).\nthis.onVRPresentChangeBound=bind(this.onVRPresentChange,this);window.addEventListener('vrdisplaypresentchange',this.onVRPresentChangeBound);// bind functions\nthis.enterVRBound=function(){self.enterVR();};this.exitVRBound=function(){self.exitVR();};this.exitVRTrueBound=function(){self.exitVR(true);};this.pointerRestrictedBound=function(){self.pointerRestricted();};this.pointerUnrestrictedBound=function(){self.pointerUnrestricted();};// Enter VR on `vrdisplayactivate` (e.g. putting on Rift headset).\nwindow.addEventListener('vrdisplayactivate',this.enterVRBound);// Exit VR on `vrdisplaydeactivate` (e.g. taking off Rift headset).\nwindow.addEventListener('vrdisplaydeactivate',this.exitVRBound);// Exit VR on `vrdisplaydisconnect` (e.g. unplugging Rift headset).\nwindow.addEventListener('vrdisplaydisconnect',this.exitVRTrueBound);// Register for mouse restricted events while in VR\n// (e.g. mouse no longer available on desktop 2D view)\nwindow.addEventListener('vrdisplaypointerrestricted',this.pointerRestrictedBound);// Register for mouse unrestricted events while in VR\n// (e.g. mouse once again available on desktop 2D view)\nwindow.addEventListener('vrdisplaypointerunrestricted',this.pointerUnrestrictedBound);},writable:window.debug},/**\n     * Initialize all systems.\n     */initSystems:{value:function(){var name;// Initialize camera system first.\nthis.initSystem('camera');for(name in systems){if(name==='camera'){continue;}this.initSystem(name);}}},/**\n     * Initialize a system.\n     */initSystem:{value:function(name){if(this.systems[name]){return;}this.systems[name]=new systems[name](this);this.systemNames.push(name);}},/**\n     * Shut down scene on detach.\n     */detachedCallback:{value:function(){// Remove from scene index.\nvar sceneIndex=scenes.indexOf(this);scenes.splice(sceneIndex,1);window.removeEventListener('vrdisplaypresentchange',this.onVRPresentChangeBound);window.removeEventListener('vrdisplayactivate',this.enterVRBound);window.removeEventListener('vrdisplaydeactivate',this.exitVRBound);window.removeEventListener('vrdisplayconnect',this.enterVRBound);window.removeEventListener('vrdisplaydisconnect',this.exitVRTrueBound);window.removeEventListener('vrdisplaypointerrestricted',this.pointerRestrictedBound);window.removeEventListener('vrdisplaypointerunrestricted',this.pointerUnrestrictedBound);}},/**\n     * Add ticks and tocks.\n     *\n     * @param {object} behavior - A component.\n     */addBehavior:{value:function(behavior){var behaviorArr;var behaviors=this.behaviors;var behaviorType;// Check if behavior has tick and/or tock and add the behavior to the appropriate list.\nfor(behaviorType in behaviors){if(!behavior[behaviorType]){continue;}behaviorArr=this.behaviors[behaviorType];if(behaviorArr.indexOf(behavior)===-1){behaviorArr.push(behavior);}}}},/**\n     * For tests.\n     */getPointerLockElement:{value:function(){return document.pointerLockElement;},writable:window.debug},/**\n     * For tests.\n     */checkHeadsetConnected:{value:utils.device.checkHeadsetConnected,writable:window.debug},/**\n     * Call `requestPresent` if WebVR or WebVR polyfill.\n     * Call `requestFullscreen` on desktop.\n     * Handle events, states, fullscreen styles.\n     *\n     * @returns {Promise}\n     */enterVR:{value:function(){var self=this;var vrDisplay;var vrManager=self.renderer.vr;// Don't enter VR if already in VR.\nif(this.is('vr-mode')){return Promise.resolve('Already in VR.');}// Has VR.\nif(this.checkHeadsetConnected()||this.isMobile){vrDisplay=utils.device.getVRDisplay();vrManager.setDevice(vrDisplay);vrManager.enabled=true;if(this.hasWebXR){// XR API.\nif(this.xrSession){this.xrSession.removeEventListener('end',this.exitVRBound);}vrDisplay.requestSession({immersive:true,exclusive:true}).then(function requestSuccess(xrSession){self.xrSession=xrSession;vrManager.setSession(xrSession);xrSession.addEventListener('end',self.exitVRBound);xrSession.requestFrameOfReference('stage').then(function(frameOfReference){self.frameOfReference=frameOfReference;});enterVRSuccess();});}else{// WebVR API.\nif(vrDisplay.isPresenting){enterVRSuccess();return Promise.resolve();}return vrDisplay.requestPresent([{source:this.canvas,attributes:{highRefreshRate:this.highRefreshRate}}]).then(enterVRSuccess,enterVRFailure);}return Promise.resolve();}// No VR.\nenterVRSuccess();return Promise.resolve();// Callback that happens on enter VR success or enter fullscreen (any API).\nfunction enterVRSuccess(){self.addState('vr-mode');self.emit('enter-vr',{target:self});// Lock to landscape orientation on mobile.\nif(self.isMobile&&screen.orientation&&screen.orientation.lock){screen.orientation.lock('landscape');}self.addFullScreenStyles();// On mobile, the polyfill handles fullscreen.\n// TODO: 07/16 Chromium builds break when `requestFullscreen`ing on a canvas\n// that we are also `requestPresent`ing. Until then, don't fullscreen if headset\n// connected.\nif(!self.isMobile&&!self.checkHeadsetConnected()){requestFullscreen(self.canvas);}self.resize();}function enterVRFailure(err){if(err&&err.message){throw new Error('Failed to enter VR mode (`requestPresent`): '+err.message);}else{throw new Error('Failed to enter VR mode (`requestPresent`).');}}},writable:true},/**\n     * Call `exitPresent` if WebVR / WebXR or WebVR polyfill.\n     * Handle events, states, fullscreen styles.\n     *\n     * @returns {Promise}\n     */exitVR:{value:function(){var self=this;var vrDisplay;var vrManager=this.renderer.vr;// Don't exit VR if not in VR.\nif(!this.is('vr-mode')){return Promise.resolve('Not in VR.');}// Handle exiting VR if not yet already and in a headset or polyfill.\nif(this.checkHeadsetConnected()||this.isMobile){vrManager.enabled=false;vrDisplay=utils.device.getVRDisplay();if(this.hasWebXR){this.xrSession.removeEventListener('end',this.exitVRBound);this.xrSession.end();vrManager.setSession(null);}else{if(vrDisplay.isPresenting){return vrDisplay.exitPresent().then(exitVRSuccess,exitVRFailure);}}}else{exitFullscreen();}// Handle exiting VR in all other cases (2D fullscreen, external exit VR event).\nexitVRSuccess();return Promise.resolve();function exitVRSuccess(){self.removeState('vr-mode');// Lock to landscape orientation on mobile.\nif(self.isMobile&&screen.orientation&&screen.orientation.unlock){screen.orientation.unlock();}// Exiting VR in embedded mode, no longer need fullscreen styles.\nif(self.hasAttribute('embedded')){self.removeFullScreenStyles();}self.resize();if(self.isIOS){utils.forceCanvasResizeSafariMobile(self.canvas);}self.emit('exit-vr',{target:self});}function exitVRFailure(err){if(err&&err.message){throw new Error('Failed to exit VR mode (`exitPresent`): '+err.message);}else{throw new Error('Failed to exit VR mode (`exitPresent`).');}}},writable:true},pointerRestricted:{value:function(){if(this.canvas){var pointerLockElement=this.getPointerLockElement();if(pointerLockElement&&pointerLockElement!==this.canvas&&document.exitPointerLock){// Recreate pointer lock on the canvas, if taken on another element.\ndocument.exitPointerLock();}if(this.canvas.requestPointerLock){this.canvas.requestPointerLock();}}}},pointerUnrestricted:{value:function(){var pointerLockElement=this.getPointerLockElement();if(pointerLockElement&&pointerLockElement===this.canvas&&document.exitPointerLock){document.exitPointerLock();}}},/**\n     * Handle `vrdisplaypresentchange` event for exiting VR through other means than\n     * `<ESC>` key. For example, GearVR back button on Oculus Browser.\n     */onVRPresentChange:{value:function(evt){// Polyfill places display inside the detail property\nvar display=evt.display||evt.detail.display;// Entering VR.\nif(display.isPresenting){this.enterVR();return;}// Exiting VR.\nthis.exitVR();}},/**\n     * Wraps Entity.getAttribute to take into account for systems.\n     * If system exists, then return system data rather than possible component data.\n     */getAttribute:{value:function(attr){var system=this.systems[attr];if(system){return system.data;}return AEntity.prototype.getAttribute.call(this,attr);}},/**\n     * `getAttribute` used to be `getDOMAttribute` and `getComputedAttribute` used to be\n     * what `getAttribute` is now. Now legacy code.\n     */getComputedAttribute:{value:function(attr){warn('`getComputedAttribute` is deprecated. Use `getAttribute` instead.');this.getAttribute(attr);}},/**\n     * Wraps Entity.getDOMAttribute to take into account for systems.\n     * If system exists, then return system data rather than possible component data.\n     */getDOMAttribute:{value:function(attr){var system=this.systems[attr];if(system){return system.data;}return AEntity.prototype.getDOMAttribute.call(this,attr);}},/**\n     * Wrap Entity.setAttribute to take into account for systems.\n     * If system exists, then skip component initialization checks and do a normal\n     * setAttribute.\n     */setAttribute:{value:function(attr,value,componentPropValue){var system=this.systems[attr];if(system){ANode.prototype.setAttribute.call(this,attr,value);system.updateProperties(value);return;}AEntity.prototype.setAttribute.call(this,attr,value,componentPropValue);}},/**\n     * @param {object} behavior - A component.\n     */removeBehavior:{value:function(behavior){var behaviorArr;var behaviorType;var behaviors=this.behaviors;var index;// Check if behavior has tick and/or tock and remove the behavior from the appropriate\n// array.\nfor(behaviorType in behaviors){if(!behavior[behaviorType]){continue;}behaviorArr=this.behaviors[behaviorType];index=behaviorArr.indexOf(behavior);if(index!==-1){behaviorArr.splice(index,1);}}}},resize:{value:function(){var camera=this.camera;var canvas=this.canvas;var embedded;var isVRPresenting;var size;var vrDevice;vrDevice=this.renderer.vr.getDevice();isVRPresenting=this.renderer.vr.enabled&&vrDevice&&vrDevice.isPresenting;// Do not update renderer, if a camera or a canvas have not been injected.\n// In VR mode, three handles canvas resize based on the dimensions returned by\n// the getEyeParameters function of the WebVR API. These dimensions are independent of\n// the window size, therefore should not be overwritten with the window's width and\n// height, // except when in fullscreen mode.\nif(!camera||!canvas||this.is('vr-mode')&&(this.isMobile||isVRPresenting)){return;}// Update camera.\nembedded=this.getAttribute('embedded')&&!this.is('vr-mode');size=getCanvasSize(canvas,embedded,this.maxCanvasSize,this.is('vr-mode'));camera.aspect=size.width/size.height;camera.updateProjectionMatrix();// Notify renderer of size change.\nthis.renderer.setSize(size.width,size.height,false);this.emit('rendererresize',null,false);},writable:true},setupRenderer:{value:function(){var self=this;var renderer;var rendererAttr;var rendererAttrString;var rendererConfig;rendererConfig={alpha:true,antialias:!isMobile,canvas:this.canvas,logarithmicDepthBuffer:false};this.maxCanvasSize={height:1920,width:1920};if(this.hasAttribute('renderer')){rendererAttrString=this.getAttribute('renderer');rendererAttr=utils.styleParser.parse(rendererAttrString);if(rendererAttr.precision){rendererConfig.precision=rendererAttr.precision+'p';}if(rendererAttr.antialias&&rendererAttr.antialias!=='auto'){rendererConfig.antialias=rendererAttr.antialias==='true';}if(rendererAttr.logarithmicDepthBuffer&&rendererAttr.logarithmicDepthBuffer!=='auto'){rendererConfig.logarithmicDepthBuffer=rendererAttr.logarithmicDepthBuffer==='true';}this.maxCanvasSize={width:rendererAttr.maxCanvasWidth?parseInt(rendererAttr.maxCanvasWidth):this.maxCanvasSize.width,height:rendererAttr.maxCanvasHeight?parseInt(rendererAttr.maxCanvasHeight):this.maxCanvasSize.height};}renderer=this.renderer=new THREE.WebGLRenderer(rendererConfig);renderer.setPixelRatio(window.devicePixelRatio);renderer.sortObjects=false;if(this.camera){renderer.vr.setPoseTarget(this.camera.el.object3D);}this.addEventListener('camera-set-active',function(){renderer.vr.setPoseTarget(self.camera.el.object3D);});loadingScreen.setup(this,getCanvasSize);},writable:window.debug},/**\n     * Handler attached to elements to help scene know when to kick off.\n     * Scene waits for all entities to load.\n     */play:{value:function(){var self=this;var sceneEl=this;if(this.renderStarted){AEntity.prototype.play.call(this);return;}this.addEventListener('loaded',function(){AEntity.prototype.play.call(this);// .play() *before* render.\nif(sceneEl.renderStarted){return;}sceneEl.resize();// Kick off render loop.\nif(sceneEl.renderer){if(window.performance){window.performance.mark('render-started');}sceneEl.clock=new THREE.Clock();loadingScreen.remove();sceneEl.renderer.setAnimationLoop(this.render);sceneEl.render();sceneEl.renderStarted=true;sceneEl.emit('renderstart');}});// setTimeout to wait for all nodes to attach and run their callbacks.\nsetTimeout(function(){AEntity.prototype.load.call(self);});}},/**\n     * Wrap `updateComponent` to not initialize the component if the component has a system\n     * (aframevr/aframe#2365).\n     */updateComponent:{value:function(componentName){if(componentName in systems){return;}AEntity.prototype.updateComponent.apply(this,arguments);}},/**\n     * Behavior-updater meant to be called from scene render.\n     * Abstracted to a different function to facilitate unit testing (`scene.tick()`) without\n     * needing to render.\n     */tick:{value:function(time,timeDelta){var i;var systems=this.systems;// Components.\nfor(i=0;i<this.behaviors.tick.length;i++){if(!this.behaviors.tick[i].el.isPlaying){continue;}this.behaviors.tick[i].tick(time,timeDelta);}// Systems.\nfor(i=0;i<this.systemNames.length;i++){if(!systems[this.systemNames[i]].tick){continue;}systems[this.systemNames[i]].tick(time,timeDelta);}}},/**\n     * Behavior-updater meant to be called after scene render for post processing purposes.\n     * Abstracted to a different function to facilitate unit testing (`scene.tock()`) without\n     * needing to render.\n     */tock:{value:function(time,timeDelta,camera){var i;var systems=this.systems;// Components.\nfor(i=0;i<this.behaviors.tock.length;i++){if(!this.behaviors.tock[i].el.isPlaying){continue;}this.behaviors.tock[i].tock(time,timeDelta,camera);}// Systems.\nfor(i=0;i<this.systemNames.length;i++){if(!systems[this.systemNames[i]].tock){continue;}systems[this.systemNames[i]].tock(time,timeDelta,camera);}}},/**\n     * The render loop.\n     *\n     * Updates animations.\n     * Updates behaviors.\n     * Renders with request animation frame.\n     */render:{value:function(time,frame){var renderer=this.renderer;this.frame=frame;this.delta=this.clock.getDelta()*1000;this.time=this.clock.elapsedTime*1000;if(this.isPlaying){this.tick(this.time,this.delta);}renderer.render(this.object3D,this.camera,this.renderTarget);},writable:true}})});/**\n * Return the canvas size where the scene will be rendered.\n * Will be always the window size except when the scene is embedded.\n * The parent size (less than max size) will be returned in that case.\n *\n * @param {object} canvasEl - the canvas element\n * @param {boolean} embedded - Is the scene embedded?\n * @param {object} max - Max size parameters\n * @param {boolean} isVR - If in VR\n */function getCanvasSize(canvasEl,embedded,maxSize,isVR){if(embedded){return{height:canvasEl.parentElement.offsetHeight,width:canvasEl.parentElement.offsetWidth};}return getMaxSize(maxSize,isVR);}/**\n * Return the canvas size. Will be the window size unless that size is greater than the\n * maximum size (1920x1920 by default).  The constrained size will be returned in that case,\n * maintaining aspect ratio\n *\n * @param {object} maxSize - Max size parameters (width and height).\n * @param {boolean} isVR - If in VR.\n * @returns {object} Width and height.\n */function getMaxSize(maxSize,isVR){var aspectRatio;var size;var pixelRatio=window.devicePixelRatio;size={height:document.body.offsetHeight,width:document.body.offsetWidth};if(!maxSize||isVR||maxSize.width===-1&&maxSize.height===-1){return size;}if(size.width*pixelRatio<maxSize.width&&size.height*pixelRatio<maxSize.height){return size;}aspectRatio=size.width/size.height;if(size.width*pixelRatio>maxSize.width&&maxSize.width!==-1){size.width=Math.round(maxSize.width/pixelRatio);size.height=Math.round(maxSize.width/aspectRatio/pixelRatio);}if(size.height*pixelRatio>maxSize.height&&maxSize.height!==-1){size.height=Math.round(maxSize.height/pixelRatio);size.width=Math.round(maxSize.height*aspectRatio/pixelRatio);}return size;}function requestFullscreen(canvas){var requestFullscreen=canvas.requestFullscreen||canvas.webkitRequestFullscreen||canvas.mozRequestFullScreen||// The capitalized `S` is not a typo.\ncanvas.msRequestFullscreen;requestFullscreen.apply(canvas);}function exitFullscreen(){if(document.exitFullscreen){document.exitFullscreen();}else if(document.mozCancelFullScreen){document.mozCancelFullScreen();}else if(document.webkitExitFullscreen){document.webkitExitFullscreen();}}function setupCanvas(sceneEl){var canvasEl;canvasEl=document.createElement('canvas');canvasEl.classList.add('a-canvas');// Mark canvas as provided/injected by A-Frame.\ncanvasEl.dataset.aframeCanvas=true;sceneEl.appendChild(canvasEl);document.addEventListener('fullscreenchange',onFullScreenChange);document.addEventListener('mozfullscreenchange',onFullScreenChange);document.addEventListener('webkitfullscreenchange',onFullScreenChange);// Prevent overscroll on mobile.\ncanvasEl.addEventListener('touchmove',function(event){event.preventDefault();});// Set canvas on scene.\nsceneEl.canvas=canvasEl;sceneEl.emit('render-target-loaded',{target:canvasEl});// For unknown reasons a synchronous resize does not work on desktop when\n// entering/exiting fullscreen.\nsetTimeout(bind(sceneEl.resize,sceneEl),0);function onFullScreenChange(){var fullscreenEl=document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement;// No fullscren element === exit fullscreen\nif(!fullscreenEl){sceneEl.exitVR();}document.activeElement.blur();document.body.focus();}}module.exports.setupCanvas=setupCanvas;// For testing.\n},{\"../../lib/three\":151,\"../../utils/\":176,\"../a-entity\":99,\"../a-node\":101,\"../a-register-element\":102,\"../system\":114,\"./loadingScreen\":107,\"./metaTags\":108,\"./postMessage\":109,\"./scenes\":110,\"./wakelock\":111}],107:[function(_dereq_,module,exports){/* global THREE */var utils=_dereq_('../../utils/');var styleParser=utils.styleParser;var sceneEl;var titleEl;var getSceneCanvasSize;var ATTR_NAME='loading-screen';var LOADER_TITLE_CLASS='a-loader-title';// It catches vrdisplayactivate early to ensure we can enter VR mode after the scene loads.\nwindow.addEventListener('vrdisplayactivate',function(){var vrManager=sceneEl.renderer.vr;var vrDisplay=utils.device.getVRDisplay();vrManager.setDevice(vrDisplay);vrManager.enabled=true;if(!vrDisplay.isPresenting){return vrDisplay.requestPresent([{source:sceneEl.canvas}]).then(function(){},function(){});}});module.exports.setup=function setup(el,getCanvasSize){sceneEl=el;getSceneCanvasSize=getCanvasSize;var loaderAttribute=sceneEl.hasAttribute(ATTR_NAME)?styleParser.parse(sceneEl.getAttribute(ATTR_NAME)):undefined;var dotsColor=loaderAttribute&&loaderAttribute.dotsColor||'white';var backgroundColor=loaderAttribute&&loaderAttribute.backgroundColor||'#24CAFF';var loaderEnabled=loaderAttribute===undefined||loaderAttribute.enabled===true||loaderAttribute.enabled===undefined;// true default\nvar loaderScene;var sphereGeometry;var sphereMaterial;var sphereMesh1;var sphereMesh2;var sphereMesh3;var camera;var clock;var time;var render;if(!loaderEnabled){return;}// Setup Scene.\nloaderScene=new THREE.Scene();sphereGeometry=new THREE.SphereGeometry(0.20,36,18,0,2*Math.PI,0,Math.PI);sphereMaterial=new THREE.MeshBasicMaterial({color:dotsColor});sphereMesh1=new THREE.Mesh(sphereGeometry,sphereMaterial);sphereMesh2=sphereMesh1.clone();sphereMesh3=sphereMesh1.clone();camera=new THREE.PerspectiveCamera(80,window.innerWidth/window.innerHeight,0.0005,10000);clock=new THREE.Clock();time=0;render=function(){sceneEl.renderer.render(loaderScene,camera);time=clock.getElapsedTime()%4;sphereMesh1.visible=time>=1;sphereMesh2.visible=time>=2;sphereMesh3.visible=time>=3;};loaderScene.background=new THREE.Color(backgroundColor);loaderScene.add(camera);sphereMesh1.position.set(-1,0,-15);sphereMesh2.position.set(0,0,-15);sphereMesh3.position.set(1,0,-15);camera.add(sphereMesh1);camera.add(sphereMesh2);camera.add(sphereMesh3);setupTitle();// Delay 200ms to avoid loader flashes.\nsetTimeout(function(){if(sceneEl.hasLoaded){return;}resize(camera);titleEl.style.display='block';window.addEventListener('resize',function(){resize(camera);});sceneEl.renderer.setAnimationLoop(render);},200);};module.exports.remove=function remove(){window.removeEventListener('resize',resize);if(!titleEl){return;}// Hide title.\ntitleEl.style.display='none';};function resize(camera){var size=getSceneCanvasSize(sceneEl.canvas,false,sceneEl.maxCanvasSize,sceneEl.is('vr-mode'));camera.aspect=size.width/size.height;camera.updateProjectionMatrix();// Notify renderer of size change.\nsceneEl.renderer.setSize(size.width,size.height,false);}function setupTitle(){titleEl=document.createElement('div');titleEl.className=LOADER_TITLE_CLASS;titleEl.innerHTML=document.title;titleEl.style.display='none';sceneEl.appendChild(titleEl);}},{\"../../utils/\":176}],108:[function(_dereq_,module,exports){var constants=_dereq_('../../constants/');var extend=_dereq_('../../utils').extend;var MOBILE_HEAD_TAGS=module.exports.MOBILE_HEAD_TAGS=[Meta({name:'viewport',content:'width=device-width,initial-scale=1,maximum-scale=1,shrink-to-fit=no,user-scalable=no,minimal-ui'}),// W3C-standardised meta tags.\nMeta({name:'mobile-web-app-capable',content:'yes'}),Meta({name:'theme-color',content:'black'})];var MOBILE_IOS_HEAD_TAGS=[// iOS-specific meta tags for fullscreen when pinning to homescreen.\nMeta({name:'apple-mobile-web-app-capable',content:'yes'}),Meta({name:'apple-mobile-web-app-status-bar-style',content:'black'}),Link({rel:'apple-touch-icon',href:'https://aframe.io/images/aframe-logo-152.png'})];function Meta(attrs){return{tagName:'meta',attributes:attrs,exists:function(){return document.querySelector('meta[name=\"'+attrs.name+'\"]');}};}function Link(attrs){return{tagName:'link',attributes:attrs,exists:function(){return document.querySelector('link[rel=\"'+attrs.rel+'\"]');}};}/**\n * Injects the necessary metatags in the document for mobile support:\n * 1. Prevent the user to zoom in the document.\n * 2. Ensure that window.innerWidth and window.innerHeight have the correct\n *    values and the canvas is properly scaled.\n * 3. To allow fullscreen mode when pinning a web app on the home screen on\n *    iOS.\n * Adapted from https://www.reddit.com/r/web_design/comments/3la04p/\n *\n * @param {object} scene - Scene element\n * @returns {Array}\n */module.exports.inject=function injectHeadTags(scene){var headEl=document.head;var headScriptEl=headEl.querySelector('script');var tag;var headTags=[];MOBILE_HEAD_TAGS.forEach(createAndInjectTag);if(scene.isIOS){MOBILE_IOS_HEAD_TAGS.forEach(createAndInjectTag);}return headTags;function createAndInjectTag(tagObj){if(!tagObj||tagObj.exists()){return;}tag=createTag(tagObj);if(!tag){return;}if(headScriptEl){headScriptEl.parentNode.insertBefore(tag,headScriptEl);}else{headEl.appendChild(tag);}headTags.push(tag);}};function createTag(tagObj){if(!tagObj||!tagObj.tagName){return;}var meta=document.createElement(tagObj.tagName);meta.setAttribute(constants.AFRAME_INJECTED,'');return extend(meta,tagObj.attributes);}},{\"../../constants/\":95,\"../../utils\":176}],109:[function(_dereq_,module,exports){var bind=_dereq_('../../utils/bind');var isIframed=_dereq_('../../utils/').isIframed;/**\n * Provides a post message API for scenes contained\n * in an iframe.\n */module.exports=function initPostMessageAPI(scene){// Handles fullscreen behavior when inside an iframe.\nif(!isIframed()){return;}// postMessage API handler\nwindow.addEventListener('message',bind(postMessageAPIHandler,scene));};function postMessageAPIHandler(event){var scene=this;if(!event.data){return;}switch(event.data.type){case'vr':{switch(event.data.data){case'enter':scene.enterVR();break;case'exit':scene.exitVR();break;}}}}},{\"../../utils/\":176,\"../../utils/bind\":170}],110:[function(_dereq_,module,exports){/*\n  Scene index for keeping track of created scenes.\n*/module.exports=[];},{}],111:[function(_dereq_,module,exports){var Wakelock=_dereq_('../../../vendor/wakelock/wakelock');module.exports=function initWakelock(scene){if(!scene.isMobile){return;}var wakelock=scene.wakelock=new Wakelock();scene.addEventListener('enter-vr',function(){wakelock.request();});scene.addEventListener('exit-vr',function(){wakelock.release();});};},{\"../../../vendor/wakelock/wakelock\":189}],112:[function(_dereq_,module,exports){var utils=_dereq_('../utils/');var PropertyTypes=_dereq_('./propertyTypes');var debug=utils.debug;var isValidDefaultValue=PropertyTypes.isValidDefaultValue;var propertyTypes=PropertyTypes.propertyTypes;var warn=debug('core:schema:warn');/**\n * A schema is classified as a schema for a single property if:\n * - `type` is defined on the schema as a string.\n * - OR `default` is defined on the schema, as a reserved keyword.\n * - OR schema is empty.\n */function isSingleProperty(schema){if('type'in schema){return typeof schema.type==='string';}return'default'in schema;}module.exports.isSingleProperty=isSingleProperty;/**\n * Build step to schema to use `type` to inject default value, parser, and stringifier.\n *\n * @param {object} schema\n * @param {string} componentName\n * @returns {object} Schema.\n */module.exports.process=function(schema,componentName){var propName;// For single property schema, run processPropDefinition over the whole schema.\nif(isSingleProperty(schema)){return processPropertyDefinition(schema,componentName);}// For multi-property schema, run processPropDefinition over each property definition.\nfor(propName in schema){schema[propName]=processPropertyDefinition(schema[propName],componentName);}return schema;};/**\n * Inject default value, parser, stringifier for single property.\n *\n * @param {object} propDefinition\n * @param {string} componentName\n */function processPropertyDefinition(propDefinition,componentName){var defaultVal=propDefinition.default;var isCustomType;var propType;var typeName=propDefinition.type;// Type inference.\nif(!propDefinition.type){if(defaultVal!==undefined&&(typeof defaultVal==='boolean'||typeof defaultVal==='number')){// Type inference.\ntypeName=typeof defaultVal;}else if(Array.isArray(defaultVal)){typeName='array';}else{// Fall back to string.\ntypeName='string';}}else if(propDefinition.type==='bool'){typeName='boolean';}else if(propDefinition.type==='float'){typeName='number';}propType=propertyTypes[typeName];if(!propType){warn('Unknown property type for component `'+componentName+'`: '+typeName);}// Fill in parse and stringify using property types.\nisCustomType=!!propDefinition.parse;propDefinition.parse=propDefinition.parse||propType.parse;propDefinition.stringify=propDefinition.stringify||propType.stringify;// Fill in type name.\npropDefinition.type=typeName;// Check that default value exists.\nif('default'in propDefinition){// Check that default values are valid.\nif(!isCustomType&&!isValidDefaultValue(typeName,defaultVal)){warn('Default value `'+defaultVal+'` does not match type `'+typeName+'` in component `'+componentName+'`');}}else{// Fill in default value.\npropDefinition.default=propType.default;}return propDefinition;}module.exports.processPropertyDefinition=processPropertyDefinition;/**\n * Parse propData using schema. Use default values if not existing in propData.\n *\n * @param {object} propData - Unparsed properties.\n * @param {object} schema - Property types definition.\n * @param {boolean} getPartialData - Whether to return full component data or just the data\n *        with keys in `propData`.\n * @param {string } componentName - Name of the component, used for the property warning.\n * @param {boolean} silent - Suppress warning messages.\n */module.exports.parseProperties=function(){var propNames=[];return function(propData,schema,getPartialData,componentName,silent){var i;var propName;var propDefinition;var propValue;propNames.length=0;for(propName in getPartialData?propData:schema){if(getPartialData&&propData[propName]===undefined){continue;}propNames.push(propName);}if(propData===null||typeof propData!=='object'){return propData;}// Validation errors.\nfor(propName in propData){if(propData[propName]!==undefined&&!schema[propName]&&!silent){warn('Unknown property `'+propName+'` for component/system `'+componentName+'`.');}}for(i=0;i<propNames.length;i++){propName=propNames[i];propDefinition=schema[propName];propValue=propData[propName];if(!schema[propName]){return;}propData[propName]=parseProperty(propValue,propDefinition);}return propData;};}();/**\n * Deserialize a single property.\n */function parseProperty(value,propDefinition){// Use default value if value is falsy.\nif(value===undefined||value===null||value===''){value=propDefinition.default;if(Array.isArray(value)){value=value.slice();}}// Invoke property type parser.\nreturn propDefinition.parse(value,propDefinition.default);}module.exports.parseProperty=parseProperty;/**\n * Serialize a group of properties.\n */module.exports.stringifyProperties=function(propData,schema){var propName;var propDefinition;var propValue;var stringifiedData={};var value;for(propName in propData){propDefinition=schema[propName];propValue=propData[propName];value=propValue;if(typeof value==='object'){value=stringifyProperty(propValue,propDefinition);if(!propDefinition){warn('Unknown component property: '+propName);}}stringifiedData[propName]=value;}return stringifiedData;};/**\n * Serialize a single property.\n */function stringifyProperty(value,propDefinition){// This function stringifies but it's used in a context where\n// there's always second stringification pass. By returning the original\n// value when it's not an object we save one unnecessary call\n// to JSON.stringify.\nif(typeof value!=='object'){return value;}// if there's no schema for the property we use standar JSON stringify\nif(!propDefinition||value===null){return JSON.stringify(value);}return propDefinition.stringify(value);}module.exports.stringifyProperty=stringifyProperty;},{\"../utils/\":176,\"./propertyTypes\":105}],113:[function(_dereq_,module,exports){var schema=_dereq_('./schema');var processSchema=schema.process;var shaders=module.exports.shaders={};// Keep track of registered shaders.\nvar shaderNames=module.exports.shaderNames=[];// Keep track of the names of registered shaders.\nvar THREE=_dereq_('../lib/three');var utils=_dereq_('../utils');// A-Frame properties to three.js uniform types.\nvar propertyToThreeMapping={array:'v3',color:'v3',int:'i',number:'f',map:'t',time:'f',vec2:'v2',vec3:'v3',vec4:'v4'};/**\n * Shader class definition.\n *\n * Shaders extend the material component API so you can create your own library\n * of customized materials\n *\n */var Shader=module.exports.Shader=function(){};Shader.prototype={/**\n   * Contains the type schema and defaults for the data values.\n   * Data is coerced into the types of the values of the defaults.\n   */schema:{},vertexShader:'void main() {'+'gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);'+'}',fragmentShader:'void main() {'+'gl_FragColor = vec4(1.0, 0.0, 1.0, 1.0);'+'}',/**\n   * Init handler. Similar to attachedCallback.\n   * Called during shader initialization and is only run once.\n   */init:function(data){this.attributes=this.initVariables(data,'attribute');this.uniforms=this.initVariables(data,'uniform');this.material=new(this.raw?THREE.RawShaderMaterial:THREE.ShaderMaterial)({// attributes: this.attributes,\nuniforms:this.uniforms,vertexShader:this.vertexShader,fragmentShader:this.fragmentShader});return this.material;},initVariables:function(data,type){var key;var schema=this.schema;var variables={};var varType;for(key in schema){if(schema[key].is!==type){continue;}varType=propertyToThreeMapping[schema[key].type];variables[key]={type:varType,value:undefined// Let updateVariables handle setting these.\n};}return variables;},/**\n   * Update handler. Similar to attributeChangedCallback.\n   * Called whenever the associated material data changes.\n   *\n   * @param {object} data - New material data.\n   */update:function(data){this.updateVariables(data,'attribute');this.updateVariables(data,'uniform');},updateVariables:function(data,type){var key;var materialKey;var schema=this.schema;var variables;variables=type==='uniform'?this.uniforms:this.attributes;for(key in data){if(!schema[key]||schema[key].is!==type){continue;}if(schema[key].type==='map'){// If data unchanged, get out early.\nif(!variables[key]||variables[key].value===data[key]){continue;}// Special handling is needed for textures.\nmaterialKey='_texture_'+key;// We can't actually set the variable correctly until we've loaded the texture.\nthis.setMapOnTextureLoad(variables,key,materialKey);// Kick off the texture update now that handler is added.\nutils.material.updateMapMaterialFromData(materialKey,key,this,data);continue;}variables[key].value=this.parseValue(schema[key].type,data[key]);variables[key].needsUpdate=true;}},parseValue:function(type,value){var color;switch(type){case'vec2':{return new THREE.Vector2(value.x,value.y);}case'vec3':{return new THREE.Vector3(value.x,value.y,value.z);}case'vec4':{return new THREE.Vector4(value.x,value.y,value.z,value.w);}case'color':{color=new THREE.Color(value);return new THREE.Vector3(color.r,color.g,color.b);}case'map':{return THREE.ImageUtils.loadTexture(value);}default:{return value;}}},setMapOnTextureLoad:function(variables,key,materialKey){var self=this;this.el.addEventListener('materialtextureloaded',function(){variables[key].value=self.material[materialKey];variables[key].needsUpdate=true;});}};/**\n * Registers a shader to A-Frame.\n *\n * @param {string} name - shader name.\n * @param {object} definition - shader property and methods.\n * @returns {object} Shader.\n */module.exports.registerShader=function(name,definition){var NewShader;var proto={};// Format definition object to prototype object.\nObject.keys(definition).forEach(function(key){proto[key]={value:definition[key],writable:true};});if(shaders[name]){throw new Error('The shader '+name+' has been already registered');}NewShader=function(){Shader.call(this);};NewShader.prototype=Object.create(Shader.prototype,proto);NewShader.prototype.name=name;NewShader.prototype.constructor=NewShader;shaders[name]={Shader:NewShader,schema:processSchema(NewShader.prototype.schema)};shaderNames.push(name);return NewShader;};},{\"../lib/three\":151,\"../utils\":176,\"./schema\":112}],114:[function(_dereq_,module,exports){var components=_dereq_('./component');var schema=_dereq_('./schema');var utils=_dereq_('../utils/');var parseProperties=schema.parseProperties;var parseProperty=schema.parseProperty;var processSchema=schema.process;var isSingleProp=schema.isSingleProperty;var styleParser=utils.styleParser;var systems=module.exports.systems={};// Keep track of registered systems.\n/**\n * System class definition.\n *\n * Systems provide global scope and services to a group of instantiated components of the\n * same class. They can also help abstract logic away from components such that components\n * only have to worry about data.\n *\n * For example, a physics component that creates a physics world that oversees\n * all entities with a physics or rigid body component.\n *\n * TODO: Have the System prototype reuse the Component prototype. Most code is copied\n * and some pieces are missing from the Component facilities (e.g., attribute caching,\n * setAttribute behavior).\n *\n * @member {string} name - Name that system is registered under.\n * @member {Element} sceneEl - Handle to the scene element where system applies to.\n */var System=module.exports.System=function(sceneEl){var component=components&&components.components[this.name];// Set reference to scene.\nthis.el=sceneEl;this.sceneEl=sceneEl;// Set reference to matching component (if exists).\nif(component){component.Component.prototype.system=this;}// Process system configuration.\nthis.buildData();this.init();this.update({});};System.prototype={/**\n   * Schema to configure system.\n   */schema:{},/**\n   * Init handler. Called during scene initialization and is only run once.\n   * Systems can use this to set initial state.\n   */init:function(){/* no-op */},/**\n   * Update handler. Called during scene attribute updates.\n   * Systems can use this to dynamically update their state.\n   */update:function(oldData){/* no-op */},/**\n   * Build data and call update handler.\n   *\n   * @private\n   */updateProperties:function(rawData){var oldData=this.data;if(!Object.keys(schema).length){return;}this.buildData(rawData);this.update(oldData);},/**\n   * Parse data.\n   */buildData:function(rawData){var schema=this.schema;if(!Object.keys(schema).length){return;}rawData=rawData||window.HTMLElement.prototype.getAttribute.call(this.sceneEl,this.name);if(isSingleProp(schema)){this.data=parseProperty(rawData,schema);}else{this.data=parseProperties(styleParser.parse(rawData)||{},schema);}},/**\n   * Tick handler.\n   * Called on each tick of the scene render loop.\n   * Affected by play and pause.\n   *\n   * @param {number} time - Scene tick time.\n   * @param {number} timeDelta - Difference in current render time and previous render time.\n   */tick:undefined,/**\n   * Tock handler.\n   * Called on each tock of the scene render loop.\n   * Affected by play and pause.\n   *\n   * @param {number} time - Scene tick time.\n   * @param {number} timeDelta - Difference in current render time and previous render time.\n   */tock:undefined,/**\n   * Called to start any dynamic behavior (e.g., animation, AI, events, physics).\n   */play:function(){/* no-op */},/**\n   * Called to stop any dynamic behavior (e.g., animation, AI, events, physics).\n   */pause:function(){/* no-op */}};/**\n * Registers a system to A-Frame.\n *\n * @param {string} name - Component name.\n * @param {object} definition - Component property and methods.\n * @returns {object} Component.\n */module.exports.registerSystem=function(name,definition){var i;var NewSystem;var proto={};var scenes=utils.findAllScenes(document);// Format definition object to prototype object.\nObject.keys(definition).forEach(function(key){proto[key]={value:definition[key],writable:true};});if(systems[name]){throw new Error('The system `'+name+'` has been already registered. '+'Check that you are not loading two versions of the same system '+'or two different systems of the same name.');}NewSystem=function(sceneEl){System.call(this,sceneEl);};NewSystem.prototype=Object.create(System.prototype,proto);NewSystem.prototype.name=name;NewSystem.prototype.constructor=NewSystem;NewSystem.prototype.schema=utils.extend(processSchema(NewSystem.prototype.schema));systems[name]=NewSystem;// Initialize systems for existing scenes\nfor(i=0;i<scenes.length;i++){scenes[i].initSystem(name);}};},{\"../utils/\":176,\"./component\":103,\"./schema\":112}],115:[function(_dereq_,module,exports){_dereq_('./pivot');},{\"./pivot\":116}],116:[function(_dereq_,module,exports){var registerComponent=_dereq_('../../core/component').registerComponent;var THREE=_dereq_('../../lib/three');var originalPosition=new THREE.Vector3();var originalRotation=new THREE.Vector3();/**\n * Wrap el.object3D within an outer group. Apply pivot to el.object3D as position.\n */registerComponent('pivot',{dependencies:['position'],schema:{type:'vec3'},init:function(){var data=this.data;var el=this.el;var originalParent=el.object3D.parent;var originalGroup=el.object3D;var outerGroup=new THREE.Group();originalPosition.copy(originalGroup.position);originalRotation.copy(originalGroup.rotation);// Detach current group from parent.\noriginalParent.remove(originalGroup);outerGroup.add(originalGroup);// Set new group as the outer group.\noriginalParent.add(outerGroup);// Set outer group as new object3D.\nel.object3D=outerGroup;// Apply pivot to original group.\noriginalGroup.position.set(-1*data.x,-1*data.y,-1*data.z);// Offset the pivot so that world position not affected.\n// And restore position onto outer group.\nouterGroup.position.set(data.x+originalPosition.x,data.y+originalPosition.y,data.z+originalPosition.z);// Transfer rotation to outer group.\nouterGroup.rotation.copy(originalGroup.rotation);originalGroup.rotation.set(0,0,0);}});},{\"../../core/component\":103,\"../../lib/three\":151}],117:[function(_dereq_,module,exports){/**\n * Common mesh defaults, mappings, and transforms.\n */var components=_dereq_('../../core/component').components;var shaders=_dereq_('../../core/shader').shaders;var utils=_dereq_('../../utils/');var materialMappings={};Object.keys(components.material.schema).forEach(addMapping);Object.keys(shaders.standard.schema).forEach(addMapping);function addMapping(prop){// To hyphenated.\nvar htmlAttrName=prop.replace(/([a-z])([A-Z])/g,'$1-$2').toLowerCase();if(prop==='fog'){htmlAttrName='material-fog';}if(prop==='visible'){htmlAttrName='material-visible';}materialMappings[htmlAttrName]='material.'+prop;}module.exports=function getMeshMixin(){return{defaultComponents:{material:{}},mappings:utils.extend({},materialMappings)};};},{\"../../core/component\":103,\"../../core/shader\":113,\"../../utils/\":176}],118:[function(_dereq_,module,exports){_dereq_('./primitives/a-camera');_dereq_('./primitives/a-cursor');_dereq_('./primitives/a-curvedimage');_dereq_('./primitives/a-gltf-model');_dereq_('./primitives/a-image');_dereq_('./primitives/a-light');_dereq_('./primitives/a-link');_dereq_('./primitives/a-obj-model');_dereq_('./primitives/a-sky');_dereq_('./primitives/a-sound');_dereq_('./primitives/a-text');_dereq_('./primitives/a-video');_dereq_('./primitives/a-videosphere');_dereq_('./primitives/meshPrimitives');},{\"./primitives/a-camera\":120,\"./primitives/a-cursor\":121,\"./primitives/a-curvedimage\":122,\"./primitives/a-gltf-model\":123,\"./primitives/a-image\":124,\"./primitives/a-light\":125,\"./primitives/a-link\":126,\"./primitives/a-obj-model\":127,\"./primitives/a-sky\":128,\"./primitives/a-sound\":129,\"./primitives/a-text\":130,\"./primitives/a-video\":131,\"./primitives/a-videosphere\":132,\"./primitives/meshPrimitives\":133}],119:[function(_dereq_,module,exports){var AEntity=_dereq_('../../core/a-entity');var components=_dereq_('../../core/component').components;var registerElement=_dereq_('../../core/a-register-element').registerElement;var utils=_dereq_('../../utils/');var debug=utils.debug;var setComponentProperty=utils.entity.setComponentProperty;var log=debug('extras:primitives:debug');var warn=debug('extras:primitives:warn');var primitives=module.exports.primitives={};module.exports.registerPrimitive=function registerPrimitive(name,definition){name=name.toLowerCase();log('Registering <%s>',name);// Deprecation warning for defaultAttributes usage.\nif(definition.defaultAttributes){warn(\"The 'defaultAttributes' object is deprecated. Use 'defaultComponents' instead.\");}var primitive=registerElement(name,{prototype:Object.create(AEntity.prototype,{defaultComponentsFromPrimitive:{value:definition.defaultComponents||definition.defaultAttributes||{}},deprecated:{value:definition.deprecated||null},deprecatedMappings:{value:definition.deprecatedMappings||{}},mappings:{value:definition.mappings||{}},createdCallback:{value:function(){if(definition.deprecated){console.warn(definition.deprecated);}this.resolveMappingCollisions();}},/**\n       * If a mapping collides with a registered component name\n       * it renames the mapping to componentname-property\n       */resolveMappingCollisions:{value:function(){var mappings=this.mappings;var self=this;Object.keys(mappings).forEach(function resolveCollision(key){var newAttribute;if(key!==key.toLowerCase()){warn('Mapping keys should be specified in lower case. The mapping key '+key+' may not be recognized');}if(components[key]){newAttribute=mappings[key].replace('.','-');mappings[newAttribute]=mappings[key];delete mappings[key];console.warn('The primitive '+self.tagName.toLowerCase()+' has a mapping collision. '+'The attribute '+key+' has the same name as a registered component and'+' has been renamed to '+newAttribute);}});}},getExtraComponents:{value:function(){var attr;var data;var i;var mapping;var mixins;var path;var self=this;// Gather component data from default components.\ndata=utils.clone(this.defaultComponentsFromPrimitive);// Factor in mixins to overwrite default components.\nmixins=this.getAttribute('mixin');if(mixins){mixins=mixins.trim().split(' ');mixins.forEach(function applyMixin(mixinId){var mixinComponents=self.sceneEl.querySelector('#'+mixinId).componentCache;Object.keys(mixinComponents).forEach(function setComponent(name){data[name]=extend(data[name],mixinComponents[name]);});});}// Gather component data from mappings.\nfor(i=0;i<this.attributes.length;i++){attr=this.attributes[i];mapping=this.mappings[attr.name];if(mapping){path=utils.entity.getComponentPropertyPath(mapping);if(path.constructor===Array){data[path[0]]=data[path[0]]||{};data[path[0]][path[1]]=attr.value.trim();}else{data[path]=attr.value.trim();}continue;}}return data;/**\n           * For the base to be extensible, both objects must be pure JavaScript objects.\n           * The function assumes that base is undefined, or null or a pure object.\n           */function extend(base,extension){if(isUndefined(base)){return copy(extension);}if(isUndefined(extension)){return copy(base);}if(isPureObject(base)&&isPureObject(extension)){return utils.extendDeep(base,extension);}return copy(extension);}function isUndefined(value){return typeof value==='undefined';}function copy(value){if(isPureObject(value)){return utils.extendDeep({},value);}return value;}function isPureObject(value){return value!==null&&value.constructor===Object;}}},/**\n       * Sync to attribute to component property whenever mapped attribute changes.\n       * If attribute is mapped to a component property, set the component property using\n       * the attribute value.\n       */attributeChangedCallback:{value:function(attr,oldVal,value){var componentName=this.mappings[attr];if(attr in this.deprecatedMappings){console.warn(this.deprecatedMappings[attr]);}if(!attr||!componentName){return;}// Set value.\nsetComponentProperty(this,componentName,value);}}})});// Store.\nprimitives[name]=primitive;return primitive;};/**\n * Add component mappings using schema.\n */function addComponentMapping(componentName,mappings){var schema=components[componentName].schema;Object.keys(schema).map(function(prop){// Hyphenate where there is camelCase.\nvar attrName=prop.replace(/([a-z])([A-Z])/g,'$1-$2').toLowerCase();// If there is a mapping collision, prefix with component name and hyphen.\nif(mappings[attrName]!==undefined){attrName=componentName+'-'+prop;}mappings[attrName]=componentName+'.'+prop;});}/**\n * Helper to define a primitive, building mappings using a component schema.\n */function definePrimitive(tagName,defaultComponents,mappings){// If no initial mappings provided, start from empty map.\nmappings=mappings||{};// From the default components, add mapping automagically.\nObject.keys(defaultComponents).map(function buildMappings(componentName){addComponentMapping(componentName,mappings);});// Register the primitive.\nmodule.exports.registerPrimitive(tagName,utils.extendDeep({},null,{defaultComponents:defaultComponents,mappings:mappings}));}module.exports.definePrimitive=definePrimitive;},{\"../../core/a-entity\":99,\"../../core/a-register-element\":102,\"../../core/component\":103,\"../../utils/\":176}],120:[function(_dereq_,module,exports){var registerPrimitive=_dereq_('../primitives').registerPrimitive;registerPrimitive('a-camera',{defaultComponents:{'camera':{},'look-controls':{},'wasd-controls':{},'position':{x:0,y:1.6,z:0}},mappings:{active:'camera.active',far:'camera.far',fov:'camera.fov','look-controls-enabled':'look-controls.enabled',near:'camera.near','pointer-lock-enabled':'look-controls.pointerLockEnabled','wasd-controls-enabled':'wasd-controls.enabled','reverse-mouse-drag':'look-controls.reverseMouseDrag',zoom:'camera.zoom'}});},{\"../primitives\":119}],121:[function(_dereq_,module,exports){var getMeshMixin=_dereq_('../getMeshMixin');var registerPrimitive=_dereq_('../primitives').registerPrimitive;var utils=_dereq_('../../../utils/');registerPrimitive('a-cursor',utils.extendDeep({},getMeshMixin(),{defaultComponents:{cursor:{},geometry:{primitive:'ring',radiusOuter:0.016,radiusInner:0.01,segmentsTheta:32},material:{color:'#000',shader:'flat',opacity:0.8},position:{x:0,y:0,z:-1}},mappings:{far:'raycaster.far',fuse:'cursor.fuse','fuse-timeout':'cursor.fuseTimeout',interval:'raycaster.interval',objects:'raycaster.objects'}}));},{\"../../../utils/\":176,\"../getMeshMixin\":117,\"../primitives\":119}],122:[function(_dereq_,module,exports){var getMeshMixin=_dereq_('../getMeshMixin');var registerPrimitive=_dereq_('../primitives').registerPrimitive;var utils=_dereq_('../../../utils/');registerPrimitive('a-curvedimage',utils.extendDeep({},getMeshMixin(),{defaultComponents:{geometry:{height:1,primitive:'cylinder',radius:2,segmentsRadial:48,thetaLength:270,openEnded:true,thetaStart:0},material:{color:'#FFF',shader:'flat',side:'double',transparent:true,repeat:'-1 1'}},mappings:{height:'geometry.height','open-ended':'geometry.openEnded',radius:'geometry.radius',segments:'geometry.segmentsRadial',start:'geometry.thetaStart','theta-length':'geometry.thetaLength','theta-start':'geometry.thetaStart','width':'geometry.thetaLength'}}));},{\"../../../utils/\":176,\"../getMeshMixin\":117,\"../primitives\":119}],123:[function(_dereq_,module,exports){var registerPrimitive=_dereq_('../primitives').registerPrimitive;registerPrimitive('a-gltf-model',{mappings:{src:'gltf-model'}});},{\"../primitives\":119}],124:[function(_dereq_,module,exports){var getMeshMixin=_dereq_('../getMeshMixin');var registerPrimitive=_dereq_('../primitives').registerPrimitive;var utils=_dereq_('../../../utils/');registerPrimitive('a-image',utils.extendDeep({},getMeshMixin(),{defaultComponents:{geometry:{primitive:'plane'},material:{color:'#FFF',shader:'flat',side:'double',transparent:true}},mappings:{height:'geometry.height',width:'geometry.width'}}));},{\"../../../utils/\":176,\"../getMeshMixin\":117,\"../primitives\":119}],125:[function(_dereq_,module,exports){var registerPrimitive=_dereq_('../primitives').registerPrimitive;registerPrimitive('a-light',{defaultComponents:{light:{}},mappings:{angle:'light.angle',color:'light.color','ground-color':'light.groundColor',decay:'light.decay',distance:'light.distance',intensity:'light.intensity',penumbra:'light.penumbra',type:'light.type',target:'light.target'}});},{\"../primitives\":119}],126:[function(_dereq_,module,exports){var registerPrimitive=_dereq_('../primitives').registerPrimitive;registerPrimitive('a-link',{defaultComponents:{link:{visualAspectEnabled:true}},mappings:{href:'link.href',image:'link.image',title:'link.title'}});},{\"../primitives\":119}],127:[function(_dereq_,module,exports){var meshMixin=_dereq_('../getMeshMixin')();var registerPrimitive=_dereq_('../primitives').registerPrimitive;var utils=_dereq_('../../../utils/');registerPrimitive('a-obj-model',utils.extendDeep({},meshMixin,{defaultComponents:{'obj-model':{}},mappings:{src:'obj-model.obj',mtl:'obj-model.mtl'}}));},{\"../../../utils/\":176,\"../getMeshMixin\":117,\"../primitives\":119}],128:[function(_dereq_,module,exports){var getMeshMixin=_dereq_('../getMeshMixin');var registerPrimitive=_dereq_('../primitives').registerPrimitive;var utils=_dereq_('../../../utils/');var meshPrimitives=_dereq_('./meshPrimitives');registerPrimitive('a-sky',utils.extendDeep({},getMeshMixin(),{defaultComponents:{geometry:{primitive:'sphere',radius:5000,segmentsWidth:64,segmentsHeight:32},material:{color:'#FFF',side:'back',shader:'flat',npot:true},scale:'-1 1 1'},mappings:utils.extendDeep({},meshPrimitives['a-sphere'].prototype.mappings)}));},{\"../../../utils/\":176,\"../getMeshMixin\":117,\"../primitives\":119,\"./meshPrimitives\":133}],129:[function(_dereq_,module,exports){var registerPrimitive=_dereq_('../primitives').registerPrimitive;registerPrimitive('a-sound',{defaultComponents:{sound:{}},mappings:{src:'sound.src',on:'sound.on',autoplay:'sound.autoplay',loop:'sound.loop',volume:'sound.volume'}});},{\"../primitives\":119}],130:[function(_dereq_,module,exports){// <a-text> using `definePrimitive` helper.\nvar definePrimitive=_dereq_('../primitives').definePrimitive;definePrimitive('a-text',{text:{anchor:'align',width:5}});},{\"../primitives\":119}],131:[function(_dereq_,module,exports){var getMeshMixin=_dereq_('../getMeshMixin');var registerPrimitive=_dereq_('../primitives').registerPrimitive;var utils=_dereq_('../../../utils/');registerPrimitive('a-video',utils.extendDeep({},getMeshMixin(),{defaultComponents:{geometry:{primitive:'plane'},material:{color:'#FFF',shader:'flat',side:'double',transparent:true}},mappings:{height:'geometry.height',width:'geometry.width'}}));},{\"../../../utils/\":176,\"../getMeshMixin\":117,\"../primitives\":119}],132:[function(_dereq_,module,exports){var getMeshMixin=_dereq_('../getMeshMixin');var registerPrimitive=_dereq_('../primitives').registerPrimitive;var utils=_dereq_('../../../utils/');registerPrimitive('a-videosphere',utils.extendDeep({},getMeshMixin(),{defaultComponents:{geometry:{primitive:'sphere',radius:5000,segmentsWidth:64,segmentsHeight:32},material:{color:'#FFF',shader:'flat',side:'back',npot:true},scale:'-1 1 1'},mappings:{radius:'geometry.radius','segments-height':'geometry.segmentsHeight','segments-width':'geometry.segmentsWidth'}}));},{\"../../../utils/\":176,\"../getMeshMixin\":117,\"../primitives\":119}],133:[function(_dereq_,module,exports){/**\n * Automated mesh primitive registration.\n */var getMeshMixin=_dereq_('../getMeshMixin');var geometries=_dereq_('../../../core/geometry').geometries;var geometryNames=_dereq_('../../../core/geometry').geometryNames;var registerPrimitive=_dereq_('../primitives').registerPrimitive;var utils=_dereq_('../../../utils/');// For testing.\nvar meshPrimitives=module.exports={};// Generate primitive for each geometry type.\ngeometryNames.forEach(function registerMeshPrimitive(geometryName){var geometry=geometries[geometryName];var geometryHyphened=unCamelCase(geometryName);// Generate mappings.\nvar mappings={};Object.keys(geometry.schema).forEach(function createMapping(property){mappings[unCamelCase(property)]='geometry.'+property;});// Register.\nvar tagName='a-'+geometryHyphened;var primitive=registerPrimitive(tagName,utils.extendDeep({},getMeshMixin(),{defaultComponents:{geometry:{primitive:geometryName}},mappings:mappings}));meshPrimitives[tagName]=primitive;});/**\n * camelCase to hyphened-string.\n */function unCamelCase(str){return str.replace(/([a-z])([A-Z])/g,'$1-$2').toLowerCase();}},{\"../../../core/geometry\":104,\"../../../utils/\":176,\"../getMeshMixin\":117,\"../primitives\":119}],134:[function(_dereq_,module,exports){var registerGeometry=_dereq_('../core/geometry').registerGeometry;var THREE=_dereq_('../lib/three');registerGeometry('box',{schema:{depth:{default:1,min:0},height:{default:1,min:0},width:{default:1,min:0},segmentsHeight:{default:1,min:1,max:20,type:'int'},segmentsWidth:{default:1,min:1,max:20,type:'int'},segmentsDepth:{default:1,min:1,max:20,type:'int'}},init:function(data){this.geometry=new THREE.BoxGeometry(data.width,data.height,data.depth,data.segmentsWidth,data.segmentsHeight,data.segmentsDepth);}});},{\"../core/geometry\":104,\"../lib/three\":151}],135:[function(_dereq_,module,exports){var registerGeometry=_dereq_('../core/geometry').registerGeometry;var THREE=_dereq_('../lib/three');var degToRad=THREE.Math.degToRad;registerGeometry('circle',{schema:{radius:{default:1,min:0},segments:{default:32,min:3,type:'int'},thetaLength:{default:360,min:0},thetaStart:{default:0}},init:function(data){this.geometry=new THREE.CircleGeometry(data.radius,data.segments,degToRad(data.thetaStart),degToRad(data.thetaLength));}});},{\"../core/geometry\":104,\"../lib/three\":151}],136:[function(_dereq_,module,exports){var registerGeometry=_dereq_('../core/geometry').registerGeometry;var THREE=_dereq_('../lib/three');var degToRad=THREE.Math.degToRad;registerGeometry('cone',{schema:{height:{default:1,min:0},openEnded:{default:false},radiusBottom:{default:1,min:0},radiusTop:{default:0.01,min:0},segmentsHeight:{default:18,min:1,type:'int'},segmentsRadial:{default:36,min:3,type:'int'},thetaLength:{default:360,min:0},thetaStart:{default:0}},init:function(data){this.geometry=new THREE.CylinderGeometry(data.radiusTop,data.radiusBottom,data.height,data.segmentsRadial,data.segmentsHeight,data.openEnded,degToRad(data.thetaStart),degToRad(data.thetaLength));}});},{\"../core/geometry\":104,\"../lib/three\":151}],137:[function(_dereq_,module,exports){var registerGeometry=_dereq_('../core/geometry').registerGeometry;var THREE=_dereq_('../lib/three');var degToRad=THREE.Math.degToRad;registerGeometry('cylinder',{schema:{height:{default:1,min:0},openEnded:{default:false},radius:{default:1,min:0},segmentsHeight:{default:18,min:1,type:'int'},segmentsRadial:{default:36,min:3,type:'int'},thetaLength:{default:360,min:0},thetaStart:{default:0}},init:function(data){this.geometry=new THREE.CylinderGeometry(data.radius,data.radius,data.height,data.segmentsRadial,data.segmentsHeight,data.openEnded,degToRad(data.thetaStart),degToRad(data.thetaLength));}});},{\"../core/geometry\":104,\"../lib/three\":151}],138:[function(_dereq_,module,exports){var registerGeometry=_dereq_('../core/geometry').registerGeometry;var THREE=_dereq_('../lib/three');registerGeometry('dodecahedron',{schema:{detail:{default:0,min:0,max:5,type:'int'},radius:{default:1,min:0}},init:function(data){this.geometry=new THREE.DodecahedronGeometry(data.radius,data.detail);}});},{\"../core/geometry\":104,\"../lib/three\":151}],139:[function(_dereq_,module,exports){var registerGeometry=_dereq_('../core/geometry').registerGeometry;var THREE=_dereq_('../lib/three');registerGeometry('icosahedron',{schema:{detail:{default:0,min:0,max:5,type:'int'},radius:{default:1,min:0}},init:function(data){this.geometry=new THREE.IcosahedronGeometry(data.radius,data.detail);}});},{\"../core/geometry\":104,\"../lib/three\":151}],140:[function(_dereq_,module,exports){_dereq_('./box.js');_dereq_('./circle.js');_dereq_('./cone.js');_dereq_('./cylinder.js');_dereq_('./dodecahedron.js');_dereq_('./icosahedron.js');_dereq_('./octahedron.js');_dereq_('./plane.js');_dereq_('./ring.js');_dereq_('./sphere.js');_dereq_('./tetrahedron.js');_dereq_('./torus.js');_dereq_('./torusKnot.js');_dereq_('./triangle.js');},{\"./box.js\":134,\"./circle.js\":135,\"./cone.js\":136,\"./cylinder.js\":137,\"./dodecahedron.js\":138,\"./icosahedron.js\":139,\"./octahedron.js\":141,\"./plane.js\":142,\"./ring.js\":143,\"./sphere.js\":144,\"./tetrahedron.js\":145,\"./torus.js\":146,\"./torusKnot.js\":147,\"./triangle.js\":148}],141:[function(_dereq_,module,exports){var registerGeometry=_dereq_('../core/geometry').registerGeometry;var THREE=_dereq_('../lib/three');registerGeometry('octahedron',{schema:{detail:{default:0,min:0,max:5,type:'int'},radius:{default:1,min:0}},init:function(data){this.geometry=new THREE.OctahedronGeometry(data.radius,data.detail);}});},{\"../core/geometry\":104,\"../lib/three\":151}],142:[function(_dereq_,module,exports){var registerGeometry=_dereq_('../core/geometry').registerGeometry;var THREE=_dereq_('../lib/three');registerGeometry('plane',{schema:{height:{default:1,min:0},width:{default:1,min:0},segmentsHeight:{default:1,min:1,max:20,type:'int'},segmentsWidth:{default:1,min:1,max:20,type:'int'}},init:function(data){this.geometry=new THREE.PlaneGeometry(data.width,data.height,data.segmentsWidth,data.segmentsHeight);}});},{\"../core/geometry\":104,\"../lib/three\":151}],143:[function(_dereq_,module,exports){var registerGeometry=_dereq_('../core/geometry').registerGeometry;var THREE=_dereq_('../lib/three');var degToRad=THREE.Math.degToRad;registerGeometry('ring',{schema:{radiusInner:{default:0.8,min:0},radiusOuter:{default:1.2,min:0},segmentsPhi:{default:10,min:1,type:'int'},segmentsTheta:{default:32,min:3,type:'int'},thetaLength:{default:360,min:0},thetaStart:{default:0}},init:function(data){this.geometry=new THREE.RingGeometry(data.radiusInner,data.radiusOuter,data.segmentsTheta,data.segmentsPhi,degToRad(data.thetaStart),degToRad(data.thetaLength));}});},{\"../core/geometry\":104,\"../lib/three\":151}],144:[function(_dereq_,module,exports){var registerGeometry=_dereq_('../core/geometry').registerGeometry;var THREE=_dereq_('../lib/three');var degToRad=THREE.Math.degToRad;registerGeometry('sphere',{schema:{radius:{default:1,min:0},phiLength:{default:360},phiStart:{default:0,min:0},thetaLength:{default:180,min:0},thetaStart:{default:0},segmentsHeight:{default:18,min:2,type:'int'},segmentsWidth:{default:36,min:3,type:'int'}},init:function(data){this.geometry=new THREE.SphereGeometry(data.radius,data.segmentsWidth,data.segmentsHeight,degToRad(data.phiStart),degToRad(data.phiLength),degToRad(data.thetaStart),degToRad(data.thetaLength));}});},{\"../core/geometry\":104,\"../lib/three\":151}],145:[function(_dereq_,module,exports){var registerGeometry=_dereq_('../core/geometry').registerGeometry;var THREE=_dereq_('../lib/three');registerGeometry('tetrahedron',{schema:{detail:{default:0,min:0,max:5,type:'int'},radius:{default:1,min:0}},init:function(data){this.geometry=new THREE.TetrahedronGeometry(data.radius,data.detail);}});},{\"../core/geometry\":104,\"../lib/three\":151}],146:[function(_dereq_,module,exports){var registerGeometry=_dereq_('../core/geometry').registerGeometry;var THREE=_dereq_('../lib/three');var degToRad=THREE.Math.degToRad;registerGeometry('torus',{schema:{arc:{default:360},radius:{default:1,min:0},radiusTubular:{default:0.2,min:0},segmentsRadial:{default:36,min:2,type:'int'},segmentsTubular:{default:32,min:3,type:'int'}},init:function(data){this.geometry=new THREE.TorusGeometry(data.radius,data.radiusTubular*2,data.segmentsRadial,data.segmentsTubular,degToRad(data.arc));}});},{\"../core/geometry\":104,\"../lib/three\":151}],147:[function(_dereq_,module,exports){var registerGeometry=_dereq_('../core/geometry').registerGeometry;var THREE=_dereq_('../lib/three');registerGeometry('torusKnot',{schema:{p:{default:2,min:1},q:{default:3,min:1},radius:{default:1,min:0},radiusTubular:{default:0.2,min:0},segmentsRadial:{default:8,min:3,type:'int'},segmentsTubular:{default:100,min:3,type:'int'}},init:function(data){this.geometry=new THREE.TorusKnotGeometry(data.radius,data.radiusTubular*2,data.segmentsTubular,data.segmentsRadial,data.p,data.q);}});},{\"../core/geometry\":104,\"../lib/three\":151}],148:[function(_dereq_,module,exports){var registerGeometry=_dereq_('../core/geometry').registerGeometry;var THREE=_dereq_('../lib/three');var quaternion=new THREE.Quaternion();var rotateVector=new THREE.Vector3(0,0,1);var uvMinVector=new THREE.Vector2();var uvMaxVector=new THREE.Vector2();var uvScaleVector=new THREE.Vector2();registerGeometry('triangle',{schema:{vertexA:{type:'vec3',default:{x:0,y:0.5,z:0}},vertexB:{type:'vec3',default:{x:-0.5,y:-0.5,z:0}},vertexC:{type:'vec3',default:{x:0.5,y:-0.5,z:0}}},init:function(data){var geometry;var normal;var triangle;var uvA;var uvB;var uvC;triangle=new THREE.Triangle();triangle.a.set(data.vertexA.x,data.vertexA.y,data.vertexA.z);triangle.b.set(data.vertexB.x,data.vertexB.y,data.vertexB.z);triangle.c.set(data.vertexC.x,data.vertexC.y,data.vertexC.z);normal=triangle.getNormal(new THREE.Vector3());// Rotate the 3D triangle to be parallel to XY plane.\nquaternion.setFromUnitVectors(normal,rotateVector);uvA=triangle.a.clone().applyQuaternion(quaternion);uvB=triangle.b.clone().applyQuaternion(quaternion);uvC=triangle.c.clone().applyQuaternion(quaternion);// Compute UVs.\n// Normalize x/y values of UV so they are within 0 to 1.\nuvMinVector.set(Math.min(uvA.x,uvB.x,uvC.x),Math.min(uvA.y,uvB.y,uvC.y));uvMaxVector.set(Math.max(uvA.x,uvB.x,uvC.x),Math.max(uvA.y,uvB.y,uvC.y));uvScaleVector.set(0,0).subVectors(uvMaxVector,uvMinVector);uvA=new THREE.Vector2().subVectors(uvA,uvMinVector).divide(uvScaleVector);uvB=new THREE.Vector2().subVectors(uvB,uvMinVector).divide(uvScaleVector);uvC=new THREE.Vector2().subVectors(uvC,uvMinVector).divide(uvScaleVector);geometry=this.geometry=new THREE.Geometry();geometry.vertices.push(triangle.a);geometry.vertices.push(triangle.b);geometry.vertices.push(triangle.c);geometry.faces.push(new THREE.Face3(0,1,2,normal));geometry.faceVertexUvs[0]=[[uvA,uvB,uvC]];}});},{\"../core/geometry\":104,\"../lib/three\":151}],149:[function(_dereq_,module,exports){// Polyfill `Promise`.\nwindow.Promise=window.Promise||_dereq_('promise-polyfill');// WebVR polyfill\n// Check before the polyfill runs.\nwindow.hasNativeWebVRImplementation=!!window.navigator.getVRDisplays||!!window.navigator.getVRDevices;window.hasNativeWebXRImplementation=navigator.xr!==undefined;// If native WebXR or WebVR are defined WebVRPolyfill does not initialize.\nif(!window.hasNativeWebXRImplementation&&!window.hasNativeWebVRImplementation){var isIOSOlderThan10=_dereq_('./utils/isIOSOlderThan10');// Workaround for iOS Safari canvas sizing issues in stereo (webvr-polyfill/issues/102).\n// Only for iOS on versions older than 10.\nvar bufferScale=isIOSOlderThan10(window.navigator.userAgent)?1/window.devicePixelRatio:1;var WebVRPolyfill=_dereq_('webvr-polyfill');var polyfillConfig={BUFFER_SCALE:bufferScale,CARDBOARD_UI_DISABLED:true,ROTATE_INSTRUCTIONS_DISABLED:true};window.webvrpolyfill=new WebVRPolyfill(polyfillConfig);}var utils=_dereq_('./utils/');var debug=utils.debug;if(utils.isIE11){// Polyfill `CustomEvent`.\n_dereq_('custom-event-polyfill');// Polyfill String.startsWith.\n_dereq_('../vendor/starts-with-polyfill');}var error=debug('A-Frame:error');var warn=debug('A-Frame:warn');if(window.document.currentScript&&window.document.currentScript.parentNode!==window.document.head&&!window.debug){warn('Put the A-Frame <script> tag in the <head> of the HTML *before* the scene to '+'ensure everything for A-Frame is properly registered before they are used from '+'HTML.');}// Error if not using a server.\nif(window.location.protocol==='file:'){error('This HTML file is currently being served via the file:// protocol. '+'Assets, textures, and models WILL NOT WORK due to cross-origin policy! '+'Please use a local or hosted server: '+'https://aframe.io/docs/0.5.0/introduction/getting-started.html#using-a-local-server.');}_dereq_('present');// Polyfill `performance.now()`.\n// CSS.\nif(utils.device.isBrowserEnvironment){_dereq_('./style/aframe.css');_dereq_('./style/rStats.css');}// Required before `AEntity` so that all components are registered.\nvar AScene=_dereq_('./core/scene/a-scene').AScene;var components=_dereq_('./core/component').components;var registerComponent=_dereq_('./core/component').registerComponent;var registerGeometry=_dereq_('./core/geometry').registerGeometry;var registerPrimitive=_dereq_('./extras/primitives/primitives').registerPrimitive;var registerShader=_dereq_('./core/shader').registerShader;var registerSystem=_dereq_('./core/system').registerSystem;var shaders=_dereq_('./core/shader').shaders;var systems=_dereq_('./core/system').systems;// Exports THREE to window so three.js can be used without alteration.\nvar THREE=window.THREE=_dereq_('./lib/three');var pkg=_dereq_('../package');_dereq_('./components/index');// Register standard components.\n_dereq_('./geometries/index');// Register standard geometries.\n_dereq_('./shaders/index');// Register standard shaders.\n_dereq_('./systems/index');// Register standard systems.\nvar ANode=_dereq_('./core/a-node');var AEntity=_dereq_('./core/a-entity');// Depends on ANode and core components.\n_dereq_('./core/a-assets');_dereq_('./core/a-cubemap');_dereq_('./core/a-mixin');// Extras.\n_dereq_('./extras/components/');_dereq_('./extras/primitives/');console.log('A-Frame Version: 0.9.0 (Date 2019-02-07, Commit #faaca2b)');console.log('three Version (https://github.com/supermedium/three.js):',pkg.dependencies['super-three']);console.log('WebVR Polyfill Version:',pkg.dependencies['webvr-polyfill']);module.exports=window.AFRAME={AComponent:_dereq_('./core/component').Component,AEntity:AEntity,ANode:ANode,ANIME:_dereq_('animejs'),AScene:AScene,components:components,geometries:_dereq_('./core/geometry').geometries,registerComponent:registerComponent,registerElement:_dereq_('./core/a-register-element').registerElement,registerGeometry:registerGeometry,registerPrimitive:registerPrimitive,registerShader:registerShader,registerSystem:registerSystem,primitives:{getMeshMixin:_dereq_('./extras/primitives/getMeshMixin'),primitives:_dereq_('./extras/primitives/primitives').primitives},scenes:_dereq_('./core/scene/scenes'),schema:_dereq_('./core/schema'),shaders:shaders,systems:systems,THREE:THREE,utils:utils,version:pkg.version};},{\"../package\":51,\"../vendor/starts-with-polyfill\":187,\"./components/index\":60,\"./core/a-assets\":97,\"./core/a-cubemap\":98,\"./core/a-entity\":99,\"./core/a-mixin\":100,\"./core/a-node\":101,\"./core/a-register-element\":102,\"./core/component\":103,\"./core/geometry\":104,\"./core/scene/a-scene\":106,\"./core/scene/scenes\":110,\"./core/schema\":112,\"./core/shader\":113,\"./core/system\":114,\"./extras/components/\":115,\"./extras/primitives/\":118,\"./extras/primitives/getMeshMixin\":117,\"./extras/primitives/primitives\":119,\"./geometries/index\":140,\"./lib/three\":151,\"./shaders/index\":153,\"./style/aframe.css\":158,\"./style/rStats.css\":159,\"./systems/index\":163,\"./utils/\":176,\"./utils/isIOSOlderThan10\":178,\"animejs\":2,\"custom-event-polyfill\":8,\"present\":32,\"promise-polyfill\":34,\"webvr-polyfill\":46}],150:[function(_dereq_,module,exports){window.aframeStats=function(scene){var _rS=null;var _scene=scene;var _values={te:{caption:'Entities'},lt:{caption:'Load Time'}};var _groups=[{caption:'A-Frame',values:['te','lt']}];function _update(){_rS('te').set(getEntityCount());if(window.performance.getEntriesByName){_rS('lt').set(window.performance.getEntriesByName('render-started')[0].startTime.toFixed(0));}}function getEntityCount(){var elements=_scene.querySelectorAll('*');Array.prototype.slice.call(elements).filter(function(el){return el.isEntity;});return elements.length;}function _start(){}function _end(){}function _attach(r){_rS=r;}return{update:_update,start:_start,end:_end,attach:_attach,values:_values,groups:_groups,fractions:[]};};if(typeof module==='object'){module.exports={aframeStats:window.aframeStats};}},{}],151:[function(_dereq_,module,exports){(function(global){var THREE=global.THREE=_dereq_('super-three');// Allow cross-origin images to be loaded.\n// This should not be on `THREE.Loader` nor `THREE.ImageUtils`.\n// Must be on `THREE.TextureLoader`.\nif(THREE.TextureLoader){THREE.TextureLoader.prototype.crossOrigin='anonymous';}// This is for images loaded from the model loaders.\nif(THREE.ImageLoader){THREE.ImageLoader.prototype.crossOrigin='anonymous';}// In-memory caching for XHRs (for images, audio files, textures, etc.).\nif(THREE.Cache){THREE.Cache.enabled=true;}// TODO: Eventually include these only if they are needed by a component.\n_dereq_('super-three/examples/js/loaders/DRACOLoader');// THREE.DRACOLoader\n_dereq_('super-three/examples/js/loaders/GLTFLoader');// THREE.GLTFLoader\n_dereq_('super-three/examples/js/loaders/OBJLoader');// THREE.OBJLoader\n_dereq_('super-three/examples/js/loaders/MTLLoader');// THREE.MTLLoader\nTHREE.DRACOLoader.prototype.crossOrigin='anonymous';THREE.GLTFLoader.prototype.crossOrigin='anonymous';THREE.MTLLoader.prototype.crossOrigin='anonymous';THREE.OBJLoader.prototype.crossOrigin='anonymous';module.exports=THREE;}).call(this,typeof global!==\"undefined\"?global:typeof self!==\"undefined\"?self:typeof window!==\"undefined\"?window:{});},{\"super-three\":36,\"super-three/examples/js/loaders/DRACOLoader\":37,\"super-three/examples/js/loaders/GLTFLoader\":38,\"super-three/examples/js/loaders/MTLLoader\":39,\"super-three/examples/js/loaders/OBJLoader\":40}],152:[function(_dereq_,module,exports){var registerShader=_dereq_('../core/shader').registerShader;var THREE=_dereq_('../lib/three');var utils=_dereq_('../utils/');/**\n * Flat shader using THREE.MeshBasicMaterial.\n */module.exports.Shader=registerShader('flat',{schema:{color:{type:'color'},fog:{default:true},height:{default:256},offset:{type:'vec2',default:{x:0,y:0}},repeat:{type:'vec2',default:{x:1,y:1}},src:{type:'map'},width:{default:512},wireframe:{default:false},wireframeLinewidth:{default:2}},/**\n   * Initializes the shader.\n   * Adds a reference from the scene to this entity as the camera.\n   */init:function(data){this.rendererSystem=this.el.sceneEl.systems.renderer;this.materialData={color:new THREE.Color()};this.textureSrc=null;getMaterialData(data,this.materialData);this.rendererSystem.applyColorCorrection(this.materialData.color);this.material=new THREE.MeshBasicMaterial(this.materialData);utils.material.updateMap(this,data);},update:function(data){this.updateMaterial(data);utils.material.updateMap(this,data);},/**\n   * Updating existing material.\n   *\n   * @param {object} data - Material component data.\n   */updateMaterial:function(data){var key;getMaterialData(data,this.materialData);this.rendererSystem.applyColorCorrection(this.materialData.color);for(key in this.materialData){this.material[key]=this.materialData[key];}}});/**\n * Builds and normalize material data, normalizing stuff along the way.\n *\n * @param {object} data - Material data.\n * @param {object} materialData - Object to reuse.\n * @returns {object} Updated material data.\n */function getMaterialData(data,materialData){materialData.color.set(data.color);materialData.fog=data.fog;materialData.wireframe=data.wireframe;materialData.wireframeLinewidth=data.wireframeLinewidth;return materialData;}},{\"../core/shader\":113,\"../lib/three\":151,\"../utils/\":176}],153:[function(_dereq_,module,exports){_dereq_('./flat');_dereq_('./standard');_dereq_('./sdf');_dereq_('./msdf');_dereq_('./ios10hls');},{\"./flat\":152,\"./ios10hls\":154,\"./msdf\":155,\"./sdf\":156,\"./standard\":157}],154:[function(_dereq_,module,exports){var registerShader=_dereq_('../core/shader').registerShader;/**\n * Custom shader for iOS 10 HTTP Live Streaming (HLS).\n * For more information on HLS, see https://datatracker.ietf.org/doc/draft-pantos-http-live-streaming/\n */module.exports.Shader=registerShader('ios10hls',{schema:{src:{type:'map',is:'uniform'},opacity:{type:'number',is:'uniform',default:1}},vertexShader:['varying vec2 vUV;','void main(void) {','  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);','  vUV = uv;','}'].join('\\n'),fragmentShader:['uniform sampler2D src;','uniform float opacity;','varying vec2 vUV;','void main() {','  vec2 offset = vec2(0, 0);','  vec2 repeat = vec2(1, 1);','  vec4 color = texture2D(src, vec2(vUV.x / repeat.x + offset.x, (1.0 - vUV.y) / repeat.y + offset.y)).bgra;','  gl_FragColor = vec4(color.rgb, opacity);','}'].join('\\n')});},{\"../core/shader\":113}],155:[function(_dereq_,module,exports){var registerShader=_dereq_('../core/shader').registerShader;/**\n * Multi-channel signed distance field.\n * Used by text component.\n */module.exports.Shader=registerShader('msdf',{schema:{alphaTest:{type:'number',is:'uniform',default:0.5},color:{type:'color',is:'uniform',default:'white'},map:{type:'map',is:'uniform'},negate:{type:'boolean',is:'uniform',default:true},opacity:{type:'number',is:'uniform',default:1.0}},raw:true,vertexShader:['attribute vec2 uv;','attribute vec3 position;','uniform mat4 projectionMatrix;','uniform mat4 modelViewMatrix;','varying vec2 vUV;','void main(void) {','  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);','  vUV = uv;','}'].join('\\n'),fragmentShader:['#ifdef GL_OES_standard_derivatives','#extension GL_OES_standard_derivatives: enable','#endif','precision highp float;','uniform bool negate;','uniform float alphaTest;','uniform float opacity;','uniform sampler2D map;','uniform vec3 color;','varying vec2 vUV;','float median(float r, float g, float b) {','  return max(min(r, g), min(max(r, g), b));','}',// FIXME: Experimentally determined constants.\n'#define BIG_ENOUGH 0.001','#define MODIFIED_ALPHATEST (0.02 * isBigEnough / BIG_ENOUGH)','void main() {','  vec3 sample = texture2D(map, vUV).rgb;','  if (negate) { sample = 1.0 - sample; }','  float sigDist = median(sample.r, sample.g, sample.b) - 0.5;','  float alpha = clamp(sigDist / fwidth(sigDist) + 0.5, 0.0, 1.0);','  float dscale = 0.353505;','  vec2 duv = dscale * (dFdx(vUV) + dFdy(vUV));','  float isBigEnough = max(abs(duv.x), abs(duv.y));','  // Do modified alpha test.','  if (alpha < alphaTest * MODIFIED_ALPHATEST) { discard; return; }','  gl_FragColor = vec4(color.xyz, alpha * opacity);','}'].join('\\n')});},{\"../core/shader\":113}],156:[function(_dereq_,module,exports){var registerShader=_dereq_('../core/shader').registerShader;/**\n * Signed distance field.\n * Used by text component.\n */module.exports.Shader=registerShader('sdf',{schema:{alphaTest:{type:'number',is:'uniform',default:0.5},color:{type:'color',is:'uniform',default:'white'},map:{type:'map',is:'uniform'},opacity:{type:'number',is:'uniform',default:1.0}},raw:true,vertexShader:['attribute vec2 uv;','attribute vec3 position;','uniform mat4 projectionMatrix;','uniform mat4 modelViewMatrix;','varying vec2 vUV;','void main(void) {','  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);','  vUV = uv;','}'].join('\\n'),fragmentShader:['#ifdef GL_OES_standard_derivatives','#extension GL_OES_standard_derivatives: enable','#endif','precision highp float;','uniform float alphaTest;','uniform float opacity;','uniform sampler2D map;','uniform vec3 color;','varying vec2 vUV;','#ifdef GL_OES_standard_derivatives','  float contour(float width, float value) {','    return smoothstep(0.5 - value, 0.5 + value, width);','  }','#else','  float aastep(float value, float afwidth) {','    return smoothstep(0.5 - afwidth, 0.5 + afwidth, value);','  }','#endif',// FIXME: Experimentally determined constants.\n'#define BIG_ENOUGH 0.001','#define MODIFIED_ALPHATEST (0.02 * isBigEnough / BIG_ENOUGH)','#define ALL_SMOOTH 0.4','#define ALL_ROUGH 0.02','#define DISCARD_ALPHA (alphaTest / (2.2 - 1.2 * ratio))','void main() {',// When we have derivatives and can get texel size for supersampling.\n'  #ifdef GL_OES_standard_derivatives','    vec2 uv = vUV;','    vec4 texColor = texture2D(map, uv);','    float dist = texColor.a;','    float width = fwidth(dist);','    float alpha = contour(dist, width);','    float dscale = 0.353505;','    vec2 duv = dscale * (dFdx(uv) + dFdy(uv));','    float isBigEnough = max(abs(duv.x), abs(duv.y));',// Otherwise do weighted supersampling.\n// FIXME: why this weighting?\n'    if (isBigEnough <= BIG_ENOUGH) {','      vec4 box = vec4 (uv - duv, uv + duv);','      alpha = (alpha + 0.5 * (','        contour(texture2D(map, box.xy).a, width)','        + contour(texture2D(map, box.zw).a, width)','        + contour(texture2D(map, box.xw).a, width)','        + contour(texture2D(map, box.zy).a, width)','      )) / 3.0;','    }',// Do modified alpha test.\n'    if (alpha < alphaTest * MODIFIED_ALPHATEST) { discard; return; }','  #else',// When we don't have derivatives, use approximations.\n'    vec4 texColor = texture2D(map, vUV);','    float value = texColor.a;',// FIXME: if we understood font pixel dimensions, this could probably be improved\n'    float afwidth = (1.0 / 32.0) * (1.4142135623730951 / (2.0 * gl_FragCoord.w));','    float alpha = aastep(value, afwidth);',// Use gl_FragCoord.w to guess when we should blend.\n// FIXME: If we understood font pixel dimensions, this could probably be improved.\n'    float ratio = (gl_FragCoord.w >= ALL_SMOOTH) ? 1.0 : (gl_FragCoord.w < ALL_ROUGH) ? 0.0 : (gl_FragCoord.w - ALL_ROUGH) / (ALL_SMOOTH - ALL_ROUGH);','    if (alpha < alphaTest) { if (ratio >= 1.0) { discard; return; } alpha = 0.0; }','    alpha = alpha * ratio + (1.0 - ratio) * value;','    if (ratio < 1.0 && alpha <= DISCARD_ALPHA) { discard; return; }','  #endif','  gl_FragColor = vec4(color, opacity * alpha);','}'].join('\\n')});},{\"../core/shader\":113}],157:[function(_dereq_,module,exports){var registerShader=_dereq_('../core/shader').registerShader;var THREE=_dereq_('../lib/three');var utils=_dereq_('../utils/');var CubeLoader=new THREE.CubeTextureLoader();var texturePromises={};/**\n * Standard (physically-based) shader using THREE.MeshStandardMaterial.\n */module.exports.Shader=registerShader('standard',{schema:{ambientOcclusionMap:{type:'map'},ambientOcclusionMapIntensity:{default:1},ambientOcclusionTextureOffset:{type:'vec2'},ambientOcclusionTextureRepeat:{type:'vec2',default:{x:1,y:1}},color:{type:'color'},displacementMap:{type:'map'},displacementScale:{default:1},displacementBias:{default:0.5},displacementTextureOffset:{type:'vec2'},displacementTextureRepeat:{type:'vec2',default:{x:1,y:1}},emissive:{type:'color',default:'#000'},emissiveIntensity:{default:1},envMap:{default:''},fog:{default:true},height:{default:256},metalness:{default:0.0,min:0.0,max:1.0},metalnessMap:{type:'map'},metalnessTextureOffset:{type:'vec2'},metalnessTextureRepeat:{type:'vec2',default:{x:1,y:1}},normalMap:{type:'map'},normalScale:{type:'vec2',default:{x:1,y:1}},normalTextureOffset:{type:'vec2'},normalTextureRepeat:{type:'vec2',default:{x:1,y:1}},offset:{type:'vec2',default:{x:0,y:0}},repeat:{type:'vec2',default:{x:1,y:1}},roughness:{default:0.5,min:0.0,max:1.0},roughnessMap:{type:'map'},roughnessTextureOffset:{type:'vec2'},roughnessTextureRepeat:{type:'vec2',default:{x:1,y:1}},sphericalEnvMap:{type:'map'},src:{type:'map'},width:{default:512},wireframe:{default:false},wireframeLinewidth:{default:2}},/**\n   * Initializes the shader.\n   * Adds a reference from the scene to this entity as the camera.\n   */init:function(data){this.rendererSystem=this.el.sceneEl.systems.renderer;this.materialData={color:new THREE.Color(),emissive:new THREE.Color()};getMaterialData(data,this.materialData);this.rendererSystem.applyColorCorrection(this.materialData.color);this.rendererSystem.applyColorCorrection(this.materialData.emissive);this.material=new THREE.MeshStandardMaterial(this.materialData);utils.material.updateMap(this,data);if(data.normalMap){utils.material.updateDistortionMap('normal',this,data);}if(data.displacementMap){utils.material.updateDistortionMap('displacement',this,data);}if(data.ambientOcclusionMap){utils.material.updateDistortionMap('ambientOcclusion',this,data);}if(data.metalnessMap){utils.material.updateDistortionMap('metalness',this,data);}if(data.roughnessMap){utils.material.updateDistortionMap('roughness',this,data);}this.updateEnvMap(data);},update:function(data){this.updateMaterial(data);utils.material.updateMap(this,data);if(data.normalMap){utils.material.updateDistortionMap('normal',this,data);}if(data.displacementMap){utils.material.updateDistortionMap('displacement',this,data);}if(data.ambientOcclusionMap){utils.material.updateDistortionMap('ambientOcclusion',this,data);}if(data.metalnessMap){utils.material.updateDistortionMap('metalness',this,data);}if(data.roughnessMap){utils.material.updateDistortionMap('roughness',this,data);}this.updateEnvMap(data);},/**\n   * Updating existing material.\n   *\n   * @param {object} data - Material component data.\n   * @returns {object} Material.\n   */updateMaterial:function(data){var key;var material=this.material;getMaterialData(data,this.materialData);this.rendererSystem.applyColorCorrection(this.materialData.color);this.rendererSystem.applyColorCorrection(this.materialData.emissive);for(key in this.materialData){material[key]=this.materialData[key];}},/**\n   * Handle environment cubemap. Textures are cached in texturePromises.\n   */updateEnvMap:function(data){var self=this;var material=this.material;var envMap=data.envMap;var sphericalEnvMap=data.sphericalEnvMap;// No envMap defined or already loading.\nif(!envMap&&!sphericalEnvMap||this.isLoadingEnvMap){material.envMap=null;material.needsUpdate=true;return;}this.isLoadingEnvMap=true;// if a spherical env map is defined then use it.\nif(sphericalEnvMap){this.el.sceneEl.systems.material.loadTexture(sphericalEnvMap,{src:sphericalEnvMap},function textureLoaded(texture){self.isLoadingEnvMap=false;texture.mapping=THREE.SphericalReflectionMapping;material.envMap=texture;utils.material.handleTextureEvents(self.el,texture);material.needsUpdate=true;});return;}// Another material is already loading this texture. Wait on promise.\nif(texturePromises[envMap]){texturePromises[envMap].then(function(cube){self.isLoadingEnvMap=false;material.envMap=cube;utils.material.handleTextureEvents(self.el,cube);material.needsUpdate=true;});return;}// Material is first to load this texture. Load and resolve texture.\ntexturePromises[envMap]=new Promise(function(resolve){utils.srcLoader.validateCubemapSrc(envMap,function loadEnvMap(urls){CubeLoader.load(urls,function(cube){// Texture loaded.\nself.isLoadingEnvMap=false;material.envMap=cube;utils.material.handleTextureEvents(self.el,cube);resolve(cube);});});});}});/**\n * Builds and normalize material data, normalizing stuff along the way.\n *\n * @param {object} data - Material data.\n * @param {object} materialData - Object to use.\n * @returns {object} Updated materialData.\n */function getMaterialData(data,materialData){materialData.color.set(data.color);materialData.emissive.set(data.emissive);materialData.emissiveIntensity=data.emissiveIntensity;materialData.fog=data.fog;materialData.metalness=data.metalness;materialData.roughness=data.roughness;materialData.wireframe=data.wireframe;materialData.wireframeLinewidth=data.wireframeLinewidth;if(data.normalMap){materialData.normalScale=data.normalScale;}if(data.ambientOcclusionMap){materialData.aoMapIntensity=data.ambientOcclusionMapIntensity;}if(data.displacementMap){materialData.displacementScale=data.displacementScale;materialData.displacementBias=data.displacementBias;}return materialData;}},{\"../core/shader\":113,\"../lib/three\":151,\"../utils/\":176}],158:[function(_dereq_,module,exports){var css=\"html.a-fullscreen{bottom:0;left:0;position:fixed;right:0;top:0}html.a-fullscreen body{height:100%;margin:0;overflow:hidden;padding:0;width:100%}html.a-fullscreen .a-canvas{width:100%!important;height:100%!important;top:0!important;left:0!important;right:0!important;bottom:0!important;position:fixed!important}html:not(.a-fullscreen) .a-enter-vr{right:5px;bottom:5px}:-webkit-full-screen{background-color:transparent}.a-hidden{display:none!important}.a-canvas{height:100%;left:0;position:absolute;top:0;width:100%}.a-canvas.a-grab-cursor:hover{cursor:grab;cursor:-moz-grab;cursor:-webkit-grab}canvas.a-canvas.a-mouse-cursor-hover:hover{cursor:pointer}.a-inspector-loader{background-color:#ed3160;position:fixed;left:3px;top:3px;padding:6px 10px;color:#fff;text-decoration:none;font-size:12px;font-family:Roboto,sans-serif;text-align:center;z-index:99999;width:204px}@keyframes dots-1{from{opacity:0}25%{opacity:1}}@keyframes dots-2{from{opacity:0}50%{opacity:1}}@keyframes dots-3{from{opacity:0}75%{opacity:1}}@-webkit-keyframes dots-1{from{opacity:0}25%{opacity:1}}@-webkit-keyframes dots-2{from{opacity:0}50%{opacity:1}}@-webkit-keyframes dots-3{from{opacity:0}75%{opacity:1}}.a-inspector-loader .dots span{animation:dots-1 2s infinite steps(1);-webkit-animation:dots-1 2s infinite steps(1)}.a-inspector-loader .dots span:first-child+span{animation-name:dots-2;-webkit-animation-name:dots-2}.a-inspector-loader .dots span:first-child+span+span{animation-name:dots-3;-webkit-animation-name:dots-3}a-scene{display:block;position:relative;height:100%;width:100%}a-assets,a-scene audio,a-scene img,a-scene video{display:none}.a-enter-vr-modal,.a-orientation-modal{font-family:Consolas,Andale Mono,Courier New,monospace}.a-enter-vr-modal a{border-bottom:1px solid #fff;padding:2px 0;text-decoration:none;transition:.1s color ease-in}.a-enter-vr-modal a:hover{background-color:#fff;color:#111;padding:2px 4px;position:relative;left:-4px}.a-enter-vr{font-family:sans-serif,monospace;font-size:13px;width:100%;font-weight:200;line-height:16px;position:absolute;right:20px;bottom:20px}.a-enter-vr-button,.a-enter-vr-modal,.a-enter-vr-modal a{color:#fff}.a-enter-vr-button{background:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20245.82%20141.73%22%3E%3Cdefs%3E%3Cstyle%3E.a%7Bfill%3A%23fff%3Bfill-rule%3Aevenodd%3B%7D%3C%2Fstyle%3E%3C%2Fdefs%3E%3Ctitle%3Emask%3C%2Ftitle%3E%3Cpath%20class%3D%22a%22%20d%3D%22M175.56%2C111.37c-22.52%2C0-40.77-18.84-40.77-42.07S153%2C27.24%2C175.56%2C27.24s40.77%2C18.84%2C40.77%2C42.07S198.08%2C111.37%2C175.56%2C111.37ZM26.84%2C69.31c0-23.23%2C18.25-42.07%2C40.77-42.07s40.77%2C18.84%2C40.77%2C42.07-18.26%2C42.07-40.77%2C42.07S26.84%2C92.54%2C26.84%2C69.31ZM27.27%2C0C11.54%2C0%2C0%2C12.34%2C0%2C28.58V110.9c0%2C16.24%2C11.54%2C30.83%2C27.27%2C30.83H99.57c2.17%2C0%2C4.19-1.83%2C5.4-3.7L116.47%2C118a8%2C8%2C0%2C0%2C1%2C12.52-.18l11.51%2C20.34c1.2%2C1.86%2C3.22%2C3.61%2C5.39%2C3.61h72.29c15.74%2C0%2C27.63-14.6%2C27.63-30.83V28.58C245.82%2C12.34%2C233.93%2C0%2C218.19%2C0H27.27Z%22%2F%3E%3C%2Fsvg%3E) 50% 50%/70% 70% no-repeat rgba(0,0,0,.35);border:0;bottom:0;cursor:pointer;min-width:50px;min-height:30px;padding-right:5%;padding-top:4%;position:absolute;right:0;transition:background-color .05s ease;-webkit-transition:background-color .05s ease;z-index:9999}.a-enter-vr-button:active,.a-enter-vr-button:hover{background-color:#666}[data-a-enter-vr-no-webvr] .a-enter-vr-button{border-color:#666;opacity:.65}[data-a-enter-vr-no-webvr] .a-enter-vr-button:active,[data-a-enter-vr-no-webvr] .a-enter-vr-button:hover{background-color:rgba(0,0,0,.35);cursor:not-allowed}.a-enter-vr-modal{background-color:#666;border-radius:0;display:none;min-height:32px;margin-right:70px;padding:9px;width:280px;right:2%;position:absolute}.a-enter-vr-modal:after{border-bottom:10px solid transparent;border-left:10px solid #666;border-top:10px solid transparent;display:inline-block;content:'';position:absolute;right:-5px;top:5px;width:0;height:0}.a-enter-vr-modal a,.a-enter-vr-modal p{display:inline}.a-enter-vr-modal p{margin:0}.a-enter-vr-modal p:after{content:' '}[data-a-enter-vr-no-headset].a-enter-vr:hover .a-enter-vr-modal,[data-a-enter-vr-no-webvr].a-enter-vr:hover .a-enter-vr-modal{display:block}.a-orientation-modal{background:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20xmlns%3Axlink%3D%22http%3A//www.w3.org/1999/xlink%22%20version%3D%221.1%22%20x%3D%220px%22%20y%3D%220px%22%20viewBox%3D%220%200%2090%2090%22%20enable-background%3D%22new%200%200%2090%2090%22%20xml%3Aspace%3D%22preserve%22%3E%3Cpolygon%20points%3D%220%2C0%200%2C0%200%2C0%20%22%3E%3C/polygon%3E%3Cg%3E%3Cpath%20d%3D%22M71.545%2C48.145h-31.98V20.743c0-2.627-2.138-4.765-4.765-4.765H18.456c-2.628%2C0-4.767%2C2.138-4.767%2C4.765v42.789%20%20%20c0%2C2.628%2C2.138%2C4.766%2C4.767%2C4.766h5.535v0.959c0%2C2.628%2C2.138%2C4.765%2C4.766%2C4.765h42.788c2.628%2C0%2C4.766-2.137%2C4.766-4.765V52.914%20%20%20C76.311%2C50.284%2C74.173%2C48.145%2C71.545%2C48.145z%20M18.455%2C16.935h16.344c2.1%2C0%2C3.808%2C1.708%2C3.808%2C3.808v27.401H37.25V22.636%20%20%20c0-0.264-0.215-0.478-0.479-0.478H16.482c-0.264%2C0-0.479%2C0.214-0.479%2C0.478v36.585c0%2C0.264%2C0.215%2C0.478%2C0.479%2C0.478h7.507v7.644%20%20%20h-5.534c-2.101%2C0-3.81-1.709-3.81-3.81V20.743C14.645%2C18.643%2C16.354%2C16.935%2C18.455%2C16.935z%20M16.96%2C23.116h19.331v25.031h-7.535%20%20%20c-2.628%2C0-4.766%2C2.139-4.766%2C4.768v5.828h-7.03V23.116z%20M71.545%2C73.064H28.757c-2.101%2C0-3.81-1.708-3.81-3.808V52.914%20%20%20c0-2.102%2C1.709-3.812%2C3.81-3.812h42.788c2.1%2C0%2C3.809%2C1.71%2C3.809%2C3.812v16.343C75.354%2C71.356%2C73.645%2C73.064%2C71.545%2C73.064z%22%3E%3C/path%3E%3Cpath%20d%3D%22M28.919%2C58.424c-1.466%2C0-2.659%2C1.193-2.659%2C2.66c0%2C1.466%2C1.193%2C2.658%2C2.659%2C2.658c1.468%2C0%2C2.662-1.192%2C2.662-2.658%20%20%20C31.581%2C59.617%2C30.387%2C58.424%2C28.919%2C58.424z%20M28.919%2C62.786c-0.939%2C0-1.703-0.764-1.703-1.702c0-0.939%2C0.764-1.704%2C1.703-1.704%20%20%20c0.94%2C0%2C1.705%2C0.765%2C1.705%2C1.704C30.623%2C62.022%2C29.858%2C62.786%2C28.919%2C62.786z%22%3E%3C/path%3E%3Cpath%20d%3D%22M69.654%2C50.461H33.069c-0.264%2C0-0.479%2C0.215-0.479%2C0.479v20.288c0%2C0.264%2C0.215%2C0.478%2C0.479%2C0.478h36.585%20%20%20c0.263%2C0%2C0.477-0.214%2C0.477-0.478V50.939C70.131%2C50.676%2C69.917%2C50.461%2C69.654%2C50.461z%20M69.174%2C51.417V70.75H33.548V51.417H69.174z%22%3E%3C/path%3E%3Cpath%20d%3D%22M45.201%2C30.296c6.651%2C0%2C12.233%2C5.351%2C12.551%2C11.977l-3.033-2.638c-0.193-0.165-0.507-0.142-0.675%2C0.048%20%20%20c-0.174%2C0.198-0.153%2C0.501%2C0.045%2C0.676l3.883%2C3.375c0.09%2C0.075%2C0.198%2C0.115%2C0.312%2C0.115c0.141%2C0%2C0.273-0.061%2C0.362-0.166%20%20%20l3.371-3.877c0.173-0.2%2C0.151-0.502-0.047-0.675c-0.194-0.166-0.508-0.144-0.676%2C0.048l-2.592%2C2.979%20%20%20c-0.18-3.417-1.629-6.605-4.099-9.001c-2.538-2.461-5.877-3.817-9.404-3.817c-0.264%2C0-0.479%2C0.215-0.479%2C0.479%20%20%20C44.72%2C30.083%2C44.936%2C30.296%2C45.201%2C30.296z%22%3E%3C/path%3E%3C/g%3E%3C/svg%3E) center/50% 50% no-repeat rgba(244,244,244,1);bottom:0;font-size:14px;font-weight:600;left:0;line-height:20px;right:0;position:fixed;top:0;z-index:9999999}.a-orientation-modal:after{color:#666;content:\\\"Insert phone into Cardboard holder.\\\";display:block;position:absolute;text-align:center;top:70%;transform:translateY(-70%);width:100%}.a-orientation-modal button{background:url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20xmlns%3Axlink%3D%22http%3A//www.w3.org/1999/xlink%22%20version%3D%221.1%22%20x%3D%220px%22%20y%3D%220px%22%20viewBox%3D%220%200%20100%20100%22%20enable-background%3D%22new%200%200%20100%20100%22%20xml%3Aspace%3D%22preserve%22%3E%3Cpath%20fill%3D%22%23000000%22%20d%3D%22M55.209%2C50l17.803-17.803c1.416-1.416%2C1.416-3.713%2C0-5.129c-1.416-1.417-3.713-1.417-5.129%2C0L50.08%2C44.872%20%20L32.278%2C27.069c-1.416-1.417-3.714-1.417-5.129%2C0c-1.417%2C1.416-1.417%2C3.713%2C0%2C5.129L44.951%2C50L27.149%2C67.803%20%20c-1.417%2C1.416-1.417%2C3.713%2C0%2C5.129c0.708%2C0.708%2C1.636%2C1.062%2C2.564%2C1.062c0.928%2C0%2C1.856-0.354%2C2.564-1.062L50.08%2C55.13l17.803%2C17.802%20%20c0.708%2C0.708%2C1.637%2C1.062%2C2.564%2C1.062s1.856-0.354%2C2.564-1.062c1.416-1.416%2C1.416-3.713%2C0-5.129L55.209%2C50z%22%3E%3C/path%3E%3C/svg%3E) no-repeat;border:none;height:50px;text-indent:-9999px;width:50px}.a-loader-title{background-color:rgba(0,0,0,.6);font-family:sans-serif,monospace;text-align:center;font-size:20px;height:50px;font-weight:300;line-height:50px;position:absolute;right:0;left:0;top:0;color:#fff}\";_dereq_(\"browserify-css\").createStyle(css,{\"href\":\"src/style/aframe.css\"});module.exports=css;},{\"browserify-css\":5}],159:[function(_dereq_,module,exports){var css=\".rs-base{background-color:#333;color:#fafafa;border-radius:0;font:10px monospace;left:5px;line-height:1em;opacity:.85;overflow:hidden;padding:10px;position:fixed;top:5px;width:300px;z-index:10000}.rs-base div.hidden{display:none}.rs-base h1{color:#fff;cursor:pointer;font-size:1.4em;font-weight:300;margin:0 0 5px;padding:0}.rs-group{display:-webkit-box;display:-webkit-flex;display:flex;-webkit-flex-direction:column-reverse;flex-direction:column-reverse;margin-bottom:5px}.rs-group:last-child{margin-bottom:0}.rs-counter-base{align-items:center;display:-webkit-box;display:-webkit-flex;display:flex;height:10px;-webkit-justify-content:space-between;justify-content:space-between;margin:2px 0}.rs-counter-base.alarm{color:#b70000;text-shadow:0 0 0 #b70000,0 0 1px #fff,0 0 1px #fff,0 0 2px #fff,0 0 2px #fff,0 0 3px #fff,0 0 3px #fff,0 0 4px #fff,0 0 4px #fff}.rs-counter-id{font-weight:300;-webkit-box-ordinal-group:0;-webkit-order:0;order:0;width:54px}.rs-counter-value{font-weight:300;-webkit-box-ordinal-group:1;-webkit-order:1;order:1;text-align:right;width:35px}.rs-canvas{-webkit-box-ordinal-group:2;-webkit-order:2;order:2}@media (min-width:480px){.rs-base{left:20px;top:20px}}\";_dereq_(\"browserify-css\").createStyle(css,{\"href\":\"src/style/rStats.css\"});module.exports=css;},{\"browserify-css\":5}],160:[function(_dereq_,module,exports){var constants=_dereq_('../constants/');var registerSystem=_dereq_('../core/system').registerSystem;var DEFAULT_CAMERA_ATTR='data-aframe-default-camera';/**\n * Camera system. Manages which camera is active among multiple cameras in scene.\n *\n * @member {object} activeCameraEl - Active camera entity.\n */module.exports.System=registerSystem('camera',{init:function(){this.activeCameraEl=null;this.render=this.render.bind(this);this.unwrapRender=this.unwrapRender.bind(this);this.wrapRender=this.wrapRender.bind(this);this.initialCameraFound=false;this.numUserCameras=0;this.numUserCamerasChecked=0;this.setupInitialCamera();},/**\n   * Setup initial camera, either searching for camera or\n   * creating a default camera if user has not added one during the initial scene traversal.\n   * We want sceneEl.camera to be ready, set, and initialized before the rest of the scene\n   * loads.\n   *\n   * Default camera offset height is at average eye level (~1.6m).\n   */setupInitialCamera:function(){var cameraEls;var i;var sceneEl=this.sceneEl;var self=this;// Camera already defined or the one defined it is an spectator one.\nif(sceneEl.camera&&!sceneEl.camera.el.getAttribute('camera').spectator){sceneEl.emit('cameraready',{cameraEl:sceneEl.camera.el});return;}// Search for initial user-defined camera.\ncameraEls=sceneEl.querySelectorAll('a-camera, [camera]');// No user cameras, create default one.\nif(!cameraEls.length){this.createDefaultCamera();return;}this.numUserCameras=cameraEls.length;for(i=0;i<cameraEls.length;i++){cameraEls[i].addEventListener('object3dset',function(evt){if(evt.detail.type!=='camera'){return;}self.checkUserCamera(this);});// Load camera and wait for camera to initialize.\nif(cameraEls[i].isNode){cameraEls[i].load();}else{cameraEls[i].addEventListener('nodeready',function(){this.load();});}}},/**\n   * Check if a user-defined camera entity is appropriate to be initial camera.\n   * (active + non-spectator).\n   *\n   * Keep track of the number of cameras we checked and whether we found one.\n   */checkUserCamera:function(cameraEl){var cameraData;var sceneEl=this.el.sceneEl;this.numUserCamerasChecked++;// Already found one.\nif(this.initialCameraFound){return;}// Check if camera is appropriate for being the initial camera.\ncameraData=cameraEl.getAttribute('camera');if(!cameraData.active||cameraData.spectator){// No user cameras eligible, create default camera.\nif(this.numUserCamerasChecked===this.numUserCameras){this.createDefaultCamera();}return;}this.initialCameraFound=true;sceneEl.camera=cameraEl.getObject3D('camera');sceneEl.emit('cameraready',{cameraEl:cameraEl});},createDefaultCamera:function(){var defaultCameraEl;var sceneEl=this.sceneEl;// Set up default camera.\ndefaultCameraEl=document.createElement('a-entity');defaultCameraEl.setAttribute('camera',{active:true});defaultCameraEl.setAttribute('position',{x:0,y:constants.DEFAULT_CAMERA_HEIGHT,z:0});defaultCameraEl.setAttribute('wasd-controls','');defaultCameraEl.setAttribute('look-controls','');defaultCameraEl.setAttribute(constants.AFRAME_INJECTED,'');defaultCameraEl.addEventListener('object3dset',function(evt){if(evt.detail.type!=='camera'){return;}sceneEl.camera=evt.detail.object;sceneEl.emit('cameraready',{cameraEl:defaultCameraEl});});sceneEl.appendChild(defaultCameraEl);},/**\n   * Set a different active camera.\n   * When we choose a (sort of) random scene camera as the replacement, set its `active` to\n   * true. The camera component will call `setActiveCamera` and handle passing the torch to\n   * the new camera.\n   */disableActiveCamera:function(){var cameraEls;var newActiveCameraEl;cameraEls=this.sceneEl.querySelectorAll('[camera]');newActiveCameraEl=cameraEls[cameraEls.length-1];newActiveCameraEl.setAttribute('camera','active',true);},/**\n   * Set active camera to be used by renderer.\n   * Removes the default camera (if present).\n   * Disables all other cameras in the scene.\n   *\n   * @param {Element} newCameraEl - Entity with camera component.\n   */setActiveCamera:function(newCameraEl){var cameraEl;var cameraEls;var i;var newCamera;var previousCamera=this.activeCameraEl;var sceneEl=this.sceneEl;// Same camera.\nnewCamera=newCameraEl.getObject3D('camera');if(!newCamera||newCameraEl===this.activeCameraEl){return;}// Grab the default camera.\nvar defaultCameraWrapper=sceneEl.querySelector('['+DEFAULT_CAMERA_ATTR+']');var defaultCameraEl=defaultCameraWrapper&&defaultCameraWrapper.querySelector('[camera]');// Remove default camera if new camera is not the default camera.\nif(newCameraEl!==defaultCameraEl){removeDefaultCamera(sceneEl);}// Make new camera active.\nthis.activeCameraEl=newCameraEl;this.activeCameraEl.play();sceneEl.camera=newCamera;// Disable current camera\nif(previousCamera){previousCamera.setAttribute('camera','active',false);}// Disable other cameras in the scene\ncameraEls=sceneEl.querySelectorAll('[camera]');for(i=0;i<cameraEls.length;i++){cameraEl=cameraEls[i];if(!cameraEl.isEntity||newCameraEl===cameraEl){continue;}cameraEl.setAttribute('camera','active',false);cameraEl.pause();}sceneEl.emit('camera-set-active',{cameraEl:newCameraEl});},/**\n   * Set spectator camera to render the scene on a 2D display.\n   *\n   * @param {Element} newCameraEl - Entity with camera component.\n   */setSpectatorCamera:function(newCameraEl){var newCamera;var previousCamera=this.spectatorCameraEl;var sceneEl=this.sceneEl;var spectatorCameraEl;// Same camera.\nnewCamera=newCameraEl.getObject3D('camera');if(!newCamera||newCameraEl===this.spectatorCameraEl){return;}// Disable current camera\nif(previousCamera){previousCamera.setAttribute('camera','spectator',false);}spectatorCameraEl=this.spectatorCameraEl=newCameraEl;sceneEl.addEventListener('enter-vr',this.wrapRender);sceneEl.addEventListener('exit-vr',this.unwrapRender);spectatorCameraEl.setAttribute('camera','active',false);spectatorCameraEl.play();sceneEl.emit('camera-set-spectator',{cameraEl:newCameraEl});},/**\n   * Disables current spectator camera.\n   */disableSpectatorCamera:function(){this.spectatorCameraEl=undefined;},/**\n   * Wrap the render method of the renderer to render\n   * the spectator camera after vrDisplay.submitFrame.\n   */wrapRender:function(){if(!this.spectatorCameraEl){return;}this.originalRender=this.sceneEl.renderer.render;this.sceneEl.renderer.render=this.render;},unwrapRender:function(){if(!this.originalRender){return;}this.sceneEl.renderer.render=this.originalRender;this.originalRender=undefined;},render:function(scene,camera,renderTarget){var isVREnabled;var sceneEl=this.sceneEl;var spectatorCamera;isVREnabled=sceneEl.renderer.vr.enabled;this.originalRender.call(sceneEl.renderer,scene,camera,renderTarget);if(!this.spectatorCameraEl||sceneEl.isMobile||!isVREnabled){return;}spectatorCamera=this.spectatorCameraEl.components.camera.camera;sceneEl.renderer.vr.enabled=false;this.originalRender.call(sceneEl.renderer,scene,spectatorCamera);sceneEl.renderer.vr.enabled=isVREnabled;}});/**\n * Remove injected default camera from scene, if present.\n *\n * @param {Element} sceneEl\n */function removeDefaultCamera(sceneEl){var defaultCamera;var camera=sceneEl.camera;if(!camera){return;}// Remove default camera if present.\ndefaultCamera=sceneEl.querySelector('['+DEFAULT_CAMERA_ATTR+']');if(!defaultCamera){return;}sceneEl.removeChild(defaultCamera);}},{\"../constants/\":95,\"../core/system\":114}],161:[function(_dereq_,module,exports){var geometries=_dereq_('../core/geometry').geometries;var registerSystem=_dereq_('../core/system').registerSystem;var THREE=_dereq_('../lib/three');/**\n * System for geometry component.\n * Handle geometry caching.\n *\n * @member {object} cache - Mapping of stringified component data to THREE.Geometry objects.\n * @member {object} cacheCount - Keep track of number of entities using a geometry to\n *         know whether to dispose on removal.\n */module.exports.System=registerSystem('geometry',{init:function(){this.cache={};this.cacheCount={};},/**\n   * Reset cache. Mainly for testing.\n   */clearCache:function(){this.cache={};this.cacheCount={};},/**\n   * Attempt to retrieve from cache.\n   *\n   * @returns {Object|null} A geometry if it exists, else null.\n   */getOrCreateGeometry:function(data){var cache=this.cache;var cachedGeometry;var hash;// Skip all caching logic.\nif(data.skipCache){return createGeometry(data);}// Try to retrieve from cache first.\nhash=this.hash(data);cachedGeometry=cache[hash];incrementCacheCount(this.cacheCount,hash);if(cachedGeometry){return cachedGeometry;}// Create geometry.\ncachedGeometry=createGeometry(data);// Cache and return geometry.\ncache[hash]=cachedGeometry;return cachedGeometry;},/**\n   * Let system know that an entity is no longer using a geometry.\n   */unuseGeometry:function(data){var cache=this.cache;var cacheCount=this.cacheCount;var geometry;var hash;if(data.skipCache){return;}hash=this.hash(data);if(!cache[hash]){return;}decrementCacheCount(cacheCount,hash);// Another entity is still using this geometry. No need to do anything.\nif(cacheCount[hash]>0){return;}// No more entities are using this geometry. Dispose.\ngeometry=cache[hash];geometry.dispose();delete cache[hash];delete cacheCount[hash];},/**\n   * Use JSON.stringify to turn component data into hash.\n   * Should be deterministic within a single browser engine.\n   * If not, then look into json-stable-stringify.\n   */hash:function(data){return JSON.stringify(data);}});/**\n * Create geometry using component data.\n *\n * @param {object} data - Component data.\n * @returns {object} Geometry.\n */function createGeometry(data){var geometryType=data.primitive;var GeometryClass=geometries[geometryType]&&geometries[geometryType].Geometry;var geometryInstance=new GeometryClass();if(!GeometryClass){throw new Error('Unknown geometry `'+geometryType+'`');}geometryInstance.init(data);return toBufferGeometry(geometryInstance.geometry,data.buffer);}/**\n * Decreate count of entity using a geometry.\n */function decrementCacheCount(cacheCount,hash){cacheCount[hash]--;}/**\n * Increase count of entity using a geometry.\n */function incrementCacheCount(cacheCount,hash){cacheCount[hash]=cacheCount[hash]===undefined?1:cacheCount[hash]+1;}/**\n * Transform geometry to BufferGeometry if `doBuffer`.\n *\n * @param {object} geometry\n * @param {boolean} doBuffer\n * @returns {object} Geometry.\n */function toBufferGeometry(geometry,doBuffer){var bufferGeometry;if(!doBuffer){return geometry;}bufferGeometry=new THREE.BufferGeometry().fromGeometry(geometry);bufferGeometry.metadata={type:geometry.type,parameters:geometry.parameters||{}};geometry.dispose();// Dispose no longer needed non-buffer geometry.\nreturn bufferGeometry;}},{\"../core/geometry\":104,\"../core/system\":114,\"../lib/three\":151}],162:[function(_dereq_,module,exports){var registerSystem=_dereq_('../core/system').registerSystem;var THREE=_dereq_('../lib/three');/**\n * glTF model system.\n *\n * Configures glTF loading options. Models using glTF compression require that a Draco decoder be\n * provided externally.\n *\n * @param {string} dracoDecoderPath - Base path from which to load Draco decoder library.\n */module.exports.System=registerSystem('gltf-model',{schema:{dracoDecoderPath:{default:''}},init:function(){var path=this.data.dracoDecoderPath;THREE.DRACOLoader.setDecoderPath(path);this.dracoLoader=path?new THREE.DRACOLoader():null;},getDRACOLoader:function(){return this.dracoLoader;}});},{\"../core/system\":114,\"../lib/three\":151}],163:[function(_dereq_,module,exports){_dereq_('./camera');_dereq_('./geometry');_dereq_('./gltf-model');_dereq_('./light');_dereq_('./material');_dereq_('./renderer');_dereq_('./shadow');_dereq_('./tracked-controls-webvr');_dereq_('./tracked-controls-webxr');},{\"./camera\":160,\"./geometry\":161,\"./gltf-model\":162,\"./light\":164,\"./material\":165,\"./renderer\":166,\"./shadow\":167,\"./tracked-controls-webvr\":168,\"./tracked-controls-webxr\":169}],164:[function(_dereq_,module,exports){var registerSystem=_dereq_('../core/system').registerSystem;var bind=_dereq_('../utils/bind');var constants=_dereq_('../constants/');var DEFAULT_LIGHT_ATTR='data-aframe-default-light';/**\n * Light system.\n *\n * Prescribes default lighting if not specified (one ambient, one directional).\n * Removes default lighting from the scene when a new light is added.\n *\n * @param {bool} defaultLights - Whether default lighting are defined.\n * @param {bool} userDefinedLights - Whether user lighting is defined.\n */module.exports.System=registerSystem('light',{schema:{defaultLightsEnabled:{default:true}},init:function(){this.defaultLights=false;this.userDefinedLights=false;// Wait for all entities to fully load before checking for existence of lights.\n// Since entities wait for <a-assets> to load, any lights attaching to the scene\n// will do so asynchronously.\nthis.sceneEl.addEventListener('loaded',bind(this.setupDefaultLights,this));},/**\n   * Notify scene that light has been added and to remove the default.\n   *\n   * @param {object} el - element holding the light component.\n   */registerLight:function(el){if(!el.hasAttribute(DEFAULT_LIGHT_ATTR)){// User added a light, remove default lights through DOM.\nthis.removeDefaultLights();this.userDefinedLights=true;}},removeDefaultLights:function(){var defaultLights;var sceneEl=this.sceneEl;if(!this.defaultLights){return;}defaultLights=document.querySelectorAll('['+DEFAULT_LIGHT_ATTR+']');for(var i=0;i<defaultLights.length;i++){sceneEl.removeChild(defaultLights[i]);}this.defaultLights=false;},/**\n   * Prescibe default lights to the scene.\n   * Does so by injecting markup such that this state is not invisible.\n   * These lights are removed if the user adds any lights.\n   */setupDefaultLights:function(){var sceneEl=this.sceneEl;var ambientLight;var directionalLight;if(this.userDefinedLights||this.defaultLights||!this.data.defaultLightsEnabled){return;}ambientLight=document.createElement('a-entity');ambientLight.setAttribute('light',{color:'#BBB',type:'ambient'});ambientLight.setAttribute(DEFAULT_LIGHT_ATTR,'');ambientLight.setAttribute(constants.AFRAME_INJECTED,'');sceneEl.appendChild(ambientLight);directionalLight=document.createElement('a-entity');directionalLight.setAttribute('light',{color:'#FFF',intensity:0.6,castShadow:true});directionalLight.setAttribute('position',{x:-0.5,y:1,z:1});directionalLight.setAttribute(DEFAULT_LIGHT_ATTR,'');directionalLight.setAttribute(constants.AFRAME_INJECTED,'');sceneEl.appendChild(directionalLight);this.defaultLights=true;}});},{\"../constants/\":95,\"../core/system\":114,\"../utils/bind\":170}],165:[function(_dereq_,module,exports){var registerSystem=_dereq_('../core/system').registerSystem;var THREE=_dereq_('../lib/three');var utils=_dereq_('../utils/');var isHLS=_dereq_('../utils/material').isHLS;var bind=utils.bind;var debug=utils.debug;var error=debug('components:texture:error');var TextureLoader=new THREE.TextureLoader();var warn=debug('components:texture:warn');TextureLoader.setCrossOrigin('anonymous');/**\n * System for material component.\n * Handle material registration, updates (for fog), and texture caching.\n *\n * @member {object} materials - Registered materials.\n * @member {object} textureCounts - Number of times each texture is used. Tracked\n *         separately from textureCache, because the cache (1) is populated in\n *         multiple places, and (2) may be cleared at any time.\n * @member {object} textureCache - Texture cache for:\n *   - Images: textureCache has mapping of src -> repeat -> cached three.js texture.\n *   - Videos: textureCache has mapping of videoElement -> cached three.js texture.\n */module.exports.System=registerSystem('material',{init:function(){this.materials={};this.textureCounts={};this.textureCache={};this.sceneEl.addEventListener('materialtextureloaded',bind(this.onMaterialTextureLoaded,this));},clearTextureCache:function(){this.textureCache={};},/**\n   * Determine whether `src` is a image or video. Then try to load the asset, then call back.\n   *\n   * @param {string, or element} src - Texture URL or element.\n   * @param {string} data - Relevant texture data used for caching.\n   * @param {function} cb - Callback to pass texture to.\n   */loadTexture:function(src,data,cb){var self=this;// Canvas.\nif(src.tagName==='CANVAS'){this.loadCanvas(src,data,cb);return;}// Video element.\nif(src.tagName==='VIDEO'){if(!src.src&&!src.srcObject&&!src.childElementCount){warn('Video element was defined with neither `source` elements nor `src` / `srcObject` attributes.');}this.loadVideo(src,data,cb);return;}utils.srcLoader.validateSrc(src,loadImageCb,loadVideoCb);function loadImageCb(src){self.loadImage(src,data,cb);}function loadVideoCb(src){self.loadVideo(src,data,cb);}},/**\n   * High-level function for loading image textures (THREE.Texture).\n   *\n   * @param {Element|string} src - Texture source.\n   * @param {object} data - Texture data.\n   * @param {function} cb - Callback to pass texture to.\n   */loadImage:function(src,data,handleImageTextureLoaded){var hash=this.hash(data);var textureCache=this.textureCache;// Texture already being loaded or already loaded. Wait on promise.\nif(textureCache[hash]){textureCache[hash].then(handleImageTextureLoaded);return;}// Texture not yet being loaded. Start loading it.\ntextureCache[hash]=loadImageTexture(src,data);textureCache[hash].then(handleImageTextureLoaded);},/**\n   * High-level function for loading canvas textures (THREE.Texture).\n   *\n   * @param {Element|string} src - Texture source.\n   * @param {object} data - Texture data.\n   * @param {function} cb - Callback to pass texture to.\n   */loadCanvas:function(src,data,cb){var texture;texture=new THREE.CanvasTexture(src);setTextureProperties(texture,data);cb(texture);},/**\n   * Load video texture (THREE.VideoTexture).\n   * Which is just an image texture that RAFs + needsUpdate.\n   * Note that creating a video texture is synchronous unlike loading an image texture.\n   * Made asynchronous to be consistent with image textures.\n   *\n   * @param {Element|string} src - Texture source.\n   * @param {object} data - Texture data.\n   * @param {function} cb - Callback to pass texture to.\n   */loadVideo:function(src,data,cb){var hash;var texture;var textureCache=this.textureCache;var videoEl;var videoTextureResult;function handleVideoTextureLoaded(result){result.texture.needsUpdate=true;cb(result.texture,result.videoEl);}// Video element provided.\nif(typeof src!=='string'){// Check cache before creating texture.\nvideoEl=src;hash=this.hashVideo(data,videoEl);if(textureCache[hash]){textureCache[hash].then(handleVideoTextureLoaded);return;}// If not in cache, fix up the attributes then start to create the texture.\nfixVideoAttributes(videoEl);}// Only URL provided. Use video element to create texture.\nvideoEl=videoEl||createVideoEl(src,data.width,data.height);// Generated video element already cached. Use that.\nhash=this.hashVideo(data,videoEl);if(textureCache[hash]){textureCache[hash].then(handleVideoTextureLoaded);return;}// Create new video texture.\ntexture=new THREE.VideoTexture(videoEl);texture.minFilter=THREE.LinearFilter;setTextureProperties(texture,data);// If iOS and video is HLS, do some hacks.\nif(this.sceneEl.isIOS&&isHLS(videoEl.src||videoEl.getAttribute('src'),videoEl.type||videoEl.getAttribute('type'))){// Actually BGRA. Tell shader to correct later.\ntexture.format=THREE.RGBAFormat;texture.needsCorrectionBGRA=true;// Apparently needed for HLS. Tell shader to correct later.\ntexture.flipY=false;texture.needsCorrectionFlipY=true;}// Cache as promise to be consistent with image texture caching.\nvideoTextureResult={texture:texture,videoEl:videoEl};textureCache[hash]=Promise.resolve(videoTextureResult);handleVideoTextureLoaded(videoTextureResult);},/**\n   * Create a hash of the material properties for texture cache key.\n   */hash:function(data){if(data.src.tagName){// Since `data.src` can be an element, parse out the string if necessary for the hash.\ndata=utils.extendDeep({},data);data.src=data.src.src;}return JSON.stringify(data);},hashVideo:function(data,videoEl){return calculateVideoCacheHash(data,videoEl);},/**\n   * Keep track of material in case an update trigger is needed (e.g., fog).\n   *\n   * @param {object} material\n   */registerMaterial:function(material){this.materials[material.uuid]=material;},/**\n   * Stop tracking material, and dispose of any textures not being used by\n   * another material component.\n   *\n   * @param {object} material\n   */unregisterMaterial:function(material){delete this.materials[material.uuid];// If any textures on this material are no longer in use, dispose of them.\nvar textureCounts=this.textureCounts;Object.keys(material).filter(function(propName){return material[propName]&&material[propName].isTexture;}).forEach(function(mapName){textureCounts[material[mapName].uuid]--;if(textureCounts[material[mapName].uuid]<=0){material[mapName].dispose();}});},/**\n   * Trigger update to all registered materials.\n   */updateMaterials:function(material){var materials=this.materials;Object.keys(materials).forEach(function(uuid){materials[uuid].needsUpdate=true;});},/**\n   * Track textures used by material components, so that they can be safely\n   * disposed when no longer in use. Textures must be registered here, and not\n   * through registerMaterial(), because textures may not be attached at the\n   * time the material is registered.\n   *\n   * @param {Event} e\n   */onMaterialTextureLoaded:function(e){if(!this.textureCounts[e.detail.texture.uuid]){this.textureCounts[e.detail.texture.uuid]=0;}this.textureCounts[e.detail.texture.uuid]++;}});/**\n * Calculates consistent hash from a video element using its attributes.\n * If the video element has an ID, use that.\n * Else build a hash that looks like `src:myvideo.mp4;height:200;width:400;`.\n *\n * @param data {object} - Texture data such as repeat.\n * @param videoEl {Element} - Video element.\n * @returns {string}\n */function calculateVideoCacheHash(data,videoEl){var i;var id=videoEl.getAttribute('id');var hash;var videoAttributes;if(id){return id;}// Calculate hash using sorted video attributes.\nhash='';videoAttributes=data||{};for(i=0;i<videoEl.attributes.length;i++){videoAttributes[videoEl.attributes[i].name]=videoEl.attributes[i].value;}Object.keys(videoAttributes).sort().forEach(function(name){hash+=name+':'+videoAttributes[name]+';';});return hash;}/**\n * Load image texture.\n *\n * @private\n * @param {string|object} src - An <img> element or url to an image file.\n * @param {object} data - Data to set texture properties like `repeat`.\n * @returns {Promise} Resolves once texture is loaded.\n */function loadImageTexture(src,data){return new Promise(doLoadImageTexture);function doLoadImageTexture(resolve,reject){var isEl=typeof src!=='string';function resolveTexture(texture){setTextureProperties(texture,data);texture.needsUpdate=true;resolve(texture);}// Create texture from an element.\nif(isEl){resolveTexture(new THREE.Texture(src));return;}// Request and load texture from src string. THREE will create underlying element.\n// Use THREE.TextureLoader (src, onLoad, onProgress, onError) to load texture.\nTextureLoader.load(src,resolveTexture,function(){/* no-op */},function(xhr){error('`$s` could not be fetched (Error code: %s; Response: %s)',xhr.status,xhr.statusText);});}}/**\n * Set texture properties such as repeat and offset.\n *\n * @param {object} data - With keys like `repeat`.\n */function setTextureProperties(texture,data){var offset=data.offset||{x:0,y:0};var repeat=data.repeat||{x:1,y:1};var npot=data.npot||false;// To support NPOT textures, wrap must be ClampToEdge (not Repeat),\n// and filters must not use mipmaps (i.e. Nearest or Linear).\nif(npot){texture.wrapS=THREE.ClampToEdgeWrapping;texture.wrapT=THREE.ClampToEdgeWrapping;texture.magFilter=THREE.LinearFilter;texture.minFilter=THREE.LinearFilter;}// Don't bother setting repeat if it is 1/1. Power-of-two is required to repeat.\nif(repeat.x!==1||repeat.y!==1){texture.wrapS=THREE.RepeatWrapping;texture.wrapT=THREE.RepeatWrapping;texture.repeat.set(repeat.x,repeat.y);}// Don't bother setting offset if it is 0/0.\nif(offset.x!==0||offset.y!==0){texture.offset.set(offset.x,offset.y);}}/**\n * Create video element to be used as a texture.\n *\n * @param {string} src - Url to a video file.\n * @param {number} width - Width of the video.\n * @param {number} height - Height of the video.\n * @returns {Element} Video element.\n */function createVideoEl(src,width,height){var videoEl=document.createElement('video');videoEl.width=width;videoEl.height=height;// Support inline videos for iOS webviews.\nvideoEl.setAttribute('playsinline','');videoEl.setAttribute('webkit-playsinline','');videoEl.autoplay=true;videoEl.loop=true;videoEl.crossOrigin='anonymous';videoEl.addEventListener('error',function(){warn('`$s` is not a valid video',src);},true);videoEl.src=src;return videoEl;}/**\n * Fixes a video element's attributes to prevent developers from accidentally passing the\n * wrong attribute values to commonly misused video attributes.\n *\n * <video> does not treat `autoplay`, `controls`, `crossorigin`, `loop`, and `preload` as\n * as booleans. Existence of those attributes will mean truthy.\n *\n * For example, translates <video loop=\"false\"> to <video>.\n *\n * @see https://developer.mozilla.org/docs/Web/HTML/Element/video#Attributes\n * @param {Element} videoEl - Video element.\n * @returns {Element} Video element with the correct properties updated.\n */function fixVideoAttributes(videoEl){videoEl.autoplay=videoEl.hasAttribute('autoplay')&&videoEl.getAttribute('autoplay')!=='false';videoEl.controls=videoEl.hasAttribute('controls')&&videoEl.getAttribute('controls')!=='false';if(videoEl.getAttribute('loop')==='false'){videoEl.removeAttribute('loop');}if(videoEl.getAttribute('preload')==='false'){videoEl.preload='none';}videoEl.crossOrigin=videoEl.crossOrigin||'anonymous';// To support inline videos in iOS webviews.\nvideoEl.setAttribute('playsinline','');videoEl.setAttribute('webkit-playsinline','');return videoEl;}},{\"../core/system\":114,\"../lib/three\":151,\"../utils/\":176,\"../utils/material\":179}],166:[function(_dereq_,module,exports){var registerSystem=_dereq_('../core/system').registerSystem;var utils=_dereq_('../utils/');var THREE=_dereq_('../lib/three');var debug=utils.debug;var warn=debug('components:renderer:warn');/**\n * Determines state of various renderer properties.\n */module.exports.System=registerSystem('renderer',{schema:{antialias:{default:'auto',oneOf:['true','false','auto']},highRefreshRate:{default:false},logarithmicDepthBuffer:{default:'auto',oneOf:['true','false','auto']},maxCanvasWidth:{default:1920},maxCanvasHeight:{default:1920},physicallyCorrectLights:{default:false},precision:{default:'high',oneOf:['high','medium','low']},sortObjects:{default:false},colorManagement:{default:false},gammaOutput:{default:false}},init:function(){var data=this.data;var sceneEl=this.el;var renderer=sceneEl.renderer;renderer.sortObjects=data.sortObjects;renderer.physicallyCorrectLights=data.physicallyCorrectLights;sceneEl.highRefreshRate=data.highRefreshRate;if(data.colorManagement||data.gammaOutput){renderer.gammaOutput=true;renderer.gammaFactor=2.2;if(data.gammaOutput){warn('Property `gammaOutput` is deprecated. Use `renderer=\"colorManagement: true;\"` instead.');}}if(sceneEl.hasAttribute('antialias')){warn('Component `antialias` is deprecated. Use `renderer=\"antialias: true\"` instead.');}if(sceneEl.hasAttribute('logarithmicDepthBuffer')){warn('Component `logarithmicDepthBuffer` is deprecated. Use `renderer=\"logarithmicDepthBuffer: true\"` instead.');}},applyColorCorrection:function(colorOrTexture){if(!this.data.colorManagement||!colorOrTexture){return;}else if(colorOrTexture.isColor){colorOrTexture.convertSRGBToLinear();}else if(colorOrTexture.isTexture){colorOrTexture.encoding=THREE.sRGBEncoding;}}});},{\"../core/system\":114,\"../lib/three\":151,\"../utils/\":176}],167:[function(_dereq_,module,exports){var registerSystem=_dereq_('../core/system').registerSystem;var THREE=_dereq_('../lib/three');var SHADOW_MAP_TYPE_MAP={basic:THREE.BasicShadowMap,pcf:THREE.PCFShadowMap,pcfsoft:THREE.PCFSoftShadowMap};/**\n * Shadow system.\n *\n * Enabled automatically when one or more shadow components are added to the scene, the system sets\n * options on the WebGLRenderer for configuring shadow appearance.\n */module.exports.System=registerSystem('shadow',{schema:{autoUpdate:{default:true},type:{default:'pcf',oneOf:['basic','pcf','pcfsoft']}},init:function(){var sceneEl=this.sceneEl;var data=this.data;this.shadowMapEnabled=false;if(!sceneEl.renderer){return;}// For tests.\nsceneEl.renderer.shadowMap.type=SHADOW_MAP_TYPE_MAP[data.type];sceneEl.renderer.shadowMap.autoUpdate=data.autoUpdate;this.setShadowMapEnabled(this.shadowMapEnabled);},/**\n   * Enables/disables the renderer shadow map.\n   * @param {boolean} enabled\n   */setShadowMapEnabled:function(enabled){var renderer=this.sceneEl.renderer;this.shadowMapEnabled=enabled;if(renderer){renderer.shadowMap.enabled=enabled;}}});},{\"../core/system\":114,\"../lib/three\":151}],168:[function(_dereq_,module,exports){var registerSystem=_dereq_('../core/system').registerSystem;var utils=_dereq_('../utils');/**\n * Tracked controls system.\n * Maintain list with available tracked controllers.\n */module.exports.System=registerSystem('tracked-controls-webvr',{init:function(){var self=this;this.controllers=[];this.updateControllerList();this.throttledUpdateControllerList=utils.throttle(this.updateControllerList,500,this);if(!navigator.getVRDisplays){return;}this.sceneEl.addEventListener('enter-vr',function(){navigator.getVRDisplays().then(function(displays){if(displays.length){self.vrDisplay=displays[0];}});});},tick:function(){if(navigator.userAgent.indexOf('Chrome')!==-1){// Call getGamepads for Chrome for it to update. Not sure if needed in future.\nnavigator.getGamepads&&navigator.getGamepads();}this.throttledUpdateControllerList();},/**\n   * Update controller list.\n   */updateControllerList:function(){var controllers=this.controllers;var gamepad;var gamepads;var i;var prevCount;gamepads=navigator.getGamepads&&navigator.getGamepads();if(!gamepads){return;}prevCount=controllers.length;controllers.length=0;for(i=0;i<gamepads.length;++i){gamepad=gamepads[i];if(gamepad&&gamepad.pose){controllers.push(gamepad);}}if(controllers.length!==prevCount){this.el.emit('controllersupdated',undefined,false);}}});},{\"../core/system\":114,\"../utils\":176}],169:[function(_dereq_,module,exports){var registerSystem=_dereq_('../core/system').registerSystem;var utils=_dereq_('../utils');/**\n * Tracked controls system.\n * Maintain list with available tracked controllers.\n */module.exports.System=registerSystem('tracked-controls-webxr',{init:function(){this.controllers=[];this.throttledUpdateControllerList=utils.throttle(this.updateControllerList,500,this);},tick:function(){this.throttledUpdateControllerList();},updateControllerList:function(){var oldControllersLength=this.controllers.length;if(!this.el.xrSession){return;}this.controllers=this.el.xrSession.getInputSources();if(oldControllersLength===this.controllers.length){return;}this.el.emit('controllersupdated',undefined,false);}});},{\"../core/system\":114,\"../utils\":176}],170:[function(_dereq_,module,exports){/**\n * Faster version of Function.prototype.bind\n * @param {Function} fn - Function to wrap.\n * @param {Object} ctx - What to bind as context.\n * @param {...*} arguments - Arguments to pass through.\n */module.exports=function bind(fn,ctx/* , arg1, arg2 */){return function(prependedArgs){return function bound(){// Concat the bound function arguments with those passed to original bind\nvar args=prependedArgs.concat(Array.prototype.slice.call(arguments,0));return fn.apply(ctx,args);};}(Array.prototype.slice.call(arguments,2));};},{}],171:[function(_dereq_,module,exports){/* global THREE */var debug=_dereq_('./debug');var extend=_dereq_('object-assign');var warn=debug('utils:coordinates:warn');// Order of coordinates parsed by coordinates.parse.\nvar COORDINATE_KEYS=['x','y','z','w'];// Coordinate string regex. Handles negative, positive, and decimals.\nvar regex=/^\\s*((-?\\d*\\.{0,1}\\d+(e-?\\d+)?)\\s+){2,3}(-?\\d*\\.{0,1}\\d+(e-?\\d+)?)\\s*$/;module.exports.regex=regex;var OBJECT='object';var whitespaceRegex=/\\s+/g;/**\n * Parses coordinates from an \"x y z\" string.\n * Example: \"3 10 -5\" to {x: 3, y: 10, z: -5}.\n *\n * @param {string} val - An \"x y z\" string.\n * @param {string} defaults - fallback value.\n * @returns {object} An object with keys [x, y, z].\n */function parse(value,defaultVec){var coordinate;var defaultVal;var key;var i;var vec;var x;var y;var z;var w;if(value&&value instanceof Object){x=value.x===undefined?defaultVec&&defaultVec.x:value.x;y=value.y===undefined?defaultVec&&defaultVec.y:value.y;z=value.z===undefined?defaultVec&&defaultVec.z:value.z;w=value.w===undefined?defaultVec&&defaultVec.w:value.w;if(x!==undefined&&x!==null){value.x=parseIfString(x);}if(y!==undefined&&y!==null){value.y=parseIfString(y);}if(z!==undefined&&z!==null){value.z=parseIfString(z);}if(w!==undefined&&w!==null){value.w=parseIfString(w);}return value;}if(value===null||value===undefined){return typeof defaultVec===OBJECT?extend({},defaultVec):defaultVec;}coordinate=value.trim().split(whitespaceRegex);vec={};for(i=0;i<COORDINATE_KEYS.length;i++){key=COORDINATE_KEYS[i];if(coordinate[i]){vec[key]=parseFloat(coordinate[i],10);}else{defaultVal=defaultVec&&defaultVec[key];if(defaultVal===undefined){continue;}vec[key]=parseIfString(defaultVal);}}return vec;}module.exports.parse=parse;/**\n * Stringify coordinates from an object with keys [x y z].\n * Example: {x: 3, y: 10, z: -5} to \"3 10 -5\".\n *\n * @param {object|string} data - An object with keys [x y z].\n * @returns {string} An \"x y z\" string.\n */function stringify(data){var str;if(typeof data!==OBJECT){return data;}str=data.x+' '+data.y;if(data.z){str+=' '+data.z;}if(data.w){str+=' '+data.w;}return str;}module.exports.stringify=stringify;/**\n * @returns {bool}\n */function isCoordinates(value){return regex.test(value);}module.exports.isCoordinates=isCoordinates;module.exports.isCoordinate=function(value){warn('`AFRAME.utils.isCoordinate` has been renamed to `AFRAME.utils.isCoordinates`');return isCoordinates(value);};function parseIfString(val){if(val!==null&&val!==undefined&&val.constructor===String){return parseFloat(val,10);}return val;}/**\n * Convert {x, y, z} object to three.js Vector3.\n */module.exports.toVector3=function(vec3){return new THREE.Vector3(vec3.x,vec3.y,vec3.z);};},{\"./debug\":172,\"object-assign\":26}],172:[function(_dereq_,module,exports){(function(process){var debugLib=_dereq_('debug');var extend=_dereq_('object-assign');var settings={colors:{debug:'gray',error:'red',info:'gray',warn:'orange'}};/**\n * Monkeypatches `debug` so we can colorize error/warning messages.\n *\n * (See issue: https://github.com/visionmedia/debug/issues/137)\n */var debug=function(namespace){var d=debugLib(namespace);d.color=getDebugNamespaceColor(namespace);return d;};extend(debug,debugLib);/**\n * Returns the type of the namespace (e.g., `error`, `warn`).\n *\n * @param {String} namespace\n *   The debug logger's namespace (e.g., `components:geometry:warn`).\n * @returns {String} The type of the namespace (e.g., `warn`).\n * @api private\n */function getDebugNamespaceType(namespace){var chunks=namespace.split(':');return chunks[chunks.length-1];// Return the last one\n}/**\n * Returns the color of the namespace (e.g., `orange`).\n *\n * @param {String} namespace\n *   The debug logger's namespace (e.g., `components:geometry:warn`).\n * @returns {String} The color of the namespace (e.g., `orange`).\n * @api private\n */function getDebugNamespaceColor(namespace){var type=getDebugNamespaceType(namespace);var color=settings.colors&&settings.colors[type];return color||null;}/**\n * Returns `localStorage` if possible.\n *\n * This is necessary because Safari throws when a user disables\n * cookies or `localStorage` and you attempt to access it.\n *\n * @returns {localStorage}\n * @api private\n */function storage(){try{return window.localStorage;}catch(e){}}/**\n * To enable console logging, type this in the Console of your Dev Tools:\n *\n *   localStorage.logs = 1\n *\n * To disable console logging:\n *\n *   localStorage.logs = 0\n *\n */var ls=storage();if(ls&&(parseInt(ls.logs,10)||ls.logs==='true')){debug.enable('*');}else{debug.enable('*:error,*:info,*:warn');}if(process.browser){window.logs=debug;}module.exports=debug;}).call(this,_dereq_('_process'));},{\"_process\":33,\"debug\":9,\"object-assign\":26}],173:[function(_dereq_,module,exports){(function(process){var vrDisplay;// Support both WebVR and WebXR APIs.\nif(navigator.xr){navigator.xr.requestDevice().then(function(device){device.supportsSession({immersive:true,exclusive:true}).then(function(){var sceneEl=document.querySelector('a-scene');vrDisplay=device;if(sceneEl){sceneEl.emit('displayconnected',{vrDisplay:vrDisplay});}});});}else{if(navigator.getVRDisplays){navigator.getVRDisplays().then(function(displays){var sceneEl=document.querySelector('a-scene');vrDisplay=displays.length&&displays[0];if(sceneEl){sceneEl.emit('displayconnected',{vrDisplay:vrDisplay});}});}}module.exports.isWebXRAvailable=navigator.xr!==undefined;function getVRDisplay(){return vrDisplay;}module.exports.getVRDisplay=getVRDisplay;/**\n * Determine if a headset is connected by checking if a vrDisplay is available.\n */function checkHeadsetConnected(){return!!getVRDisplay();}module.exports.checkHeadsetConnected=checkHeadsetConnected;/**\n * Check for positional tracking.\n */function checkHasPositionalTracking(){var vrDisplay=getVRDisplay();if(isMobile()||isGearVR()||isOculusGo()){return false;}return vrDisplay&&vrDisplay.capabilities.hasPosition;}module.exports.checkHasPositionalTracking=checkHasPositionalTracking;/**\n * Checks if browser is mobile.\n * @return {Boolean} True if mobile browser detected.\n */var isMobile=function(){var _isMobile=false;(function(a){// eslint-disable-next-line no-useless-escape\nif(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))){_isMobile=true;}if(isIOS()||isTablet()||isR7()){_isMobile=true;}if(isOculusGo()){_isMobile=false;}})(window.navigator.userAgent||window.navigator.vendor||window.opera);return function(){return _isMobile;};}();module.exports.isMobile=isMobile;/**\n *  Detect tablet devices.\n *  @param {string} mockUserAgent - Allow passing a mock user agent for testing.\n */function isTablet(mockUserAgent){var userAgent=mockUserAgent||window.navigator.userAgent;return /ipad|Nexus (7|9)|xoom|sch-i800|playbook|tablet|kindle/i.test(userAgent);}module.exports.isTablet=isTablet;function isIOS(){return /iPad|iPhone|iPod/.test(window.navigator.platform);}module.exports.isIOS=isIOS;function isGearVR(){return /SamsungBrowser.+Mobile VR/i.test(window.navigator.userAgent);}module.exports.isGearVR=isGearVR;/**\n *  Detect Oculus Go device\n */function isOculusGo(){return /Pacific Build.+OculusBrowser.+SamsungBrowser.+Mobile VR/i.test(window.navigator.userAgent);}module.exports.isOculusGo=isOculusGo;function isR7(){return /R7 Build/.test(window.navigator.userAgent);}module.exports.isR7=isR7;/**\n * Checks mobile device orientation.\n * @return {Boolean} True if landscape orientation.\n */module.exports.isLandscape=function(){var orientation=window.orientation;if(isR7()){orientation+=90;}return orientation===90||orientation===-90;};/**\n * Check if running in a browser or spoofed browser (bundler).\n * We need to check a node api that isn't mocked on either side.\n * `require` and `module.exports` are mocked in browser by bundlers.\n * `window` is mocked in node.\n * `process` is also mocked by browserify, but has custom properties.\n */module.exports.isBrowserEnvironment=!!(!process||process.browser);/**\n * Check if running in node on the server.\n */module.exports.isNodeEnvironment=!module.exports.isBrowserEnvironment;/**\n * Update an Object3D pose if a polyfilled vrDisplay is present.\n */module.exports.PolyfillControls=function PolyfillControls(object){var frameData;var vrDisplay=window.webvrpolyfill&&window.webvrpolyfill.getPolyfillDisplays()[0];if(window.VRFrameData){frameData=new window.VRFrameData();}this.update=function(){var pose;if(!vrDisplay){return;}vrDisplay.getFrameData(frameData);pose=frameData.pose;if(pose.orientation!==null){object.quaternion.fromArray(pose.orientation);}if(pose.position!==null){object.position.fromArray(pose.position);}else{object.position.set(0,0,0);}};};}).call(this,_dereq_('_process'));},{\"_process\":33}],174:[function(_dereq_,module,exports){/**\n * Split a delimited component property string (e.g., `material.color`) to an object\n * containing `component` name and `property` name. If there is no delimiter, just return the\n * string back.\n *\n * Cache arrays from splitting strings via delimiter to save on memory.\n *\n * @param {string} str - e.g., `material.opacity`.\n * @param {string} delimiter - e.g., `.`.\n * @returns {array} e.g., `['material', 'opacity']`.\n */var propertyPathCache={};function getComponentPropertyPath(str,delimiter){delimiter=delimiter||'.';if(!propertyPathCache[delimiter]){propertyPathCache[delimiter]={};}if(str.indexOf(delimiter)!==-1){propertyPathCache[delimiter][str]=str.split(delimiter);}else{propertyPathCache[delimiter][str]=str;}return propertyPathCache[delimiter][str];}module.exports.getComponentPropertyPath=getComponentPropertyPath;module.exports.propertyPathCache=propertyPathCache;/**\n * Get component property using encoded component name + component property name with a\n * delimiter.\n */module.exports.getComponentProperty=function(el,name,delimiter){var splitName;delimiter=delimiter||'.';if(name.indexOf(delimiter)!==-1){splitName=getComponentPropertyPath(name,delimiter);if(splitName.constructor===String){return el.getAttribute(splitName);}return el.getAttribute(splitName[0])[splitName[1]];}return el.getAttribute(name);};/**\n * Set component property using encoded component name + component property name with a\n * delimiter.\n */module.exports.setComponentProperty=function(el,name,value,delimiter){var splitName;delimiter=delimiter||'.';if(name.indexOf(delimiter)!==-1){splitName=getComponentPropertyPath(name,delimiter);if(splitName.constructor===String){el.setAttribute(splitName,value);}else{el.setAttribute(splitName[0],splitName[1],value);}return;}el.setAttribute(name,value);};},{}],175:[function(_dereq_,module,exports){module.exports=function forceCanvasResizeSafariMobile(canvasEl){var width=canvasEl.style.width;var height=canvasEl.style.height;// Taken from webvr-polyfill (https://github.com/borismus/webvr-polyfill/blob/85f657cd502ec9417bf26b87c3cb2afa6a70e079/src/util.js#L200)\n// iOS only workaround for https://bugs.webkit.org/show_bug.cgi?id=152556\n// By changing the size 1 pixel and restoring the previous value\n// we trigger a size recalculation cycle.\ncanvasEl.style.width=parseInt(width,10)+1+'px';canvasEl.style.height=parseInt(height,10)+1+'px';setTimeout(function(){canvasEl.style.width=width;canvasEl.style.height=height;},200);};},{}],176:[function(_dereq_,module,exports){/* global location */ /* Centralized place to reference utilities since utils is exposed to the user. */var debug=_dereq_('./debug');var deepAssign=_dereq_('deep-assign');var device=_dereq_('./device');var objectAssign=_dereq_('object-assign');var objectPool=_dereq_('./object-pool');var warn=debug('utils:warn');module.exports.bind=_dereq_('./bind');module.exports.coordinates=_dereq_('./coordinates');module.exports.debug=debug;module.exports.device=device;module.exports.entity=_dereq_('./entity');module.exports.forceCanvasResizeSafariMobile=_dereq_('./forceCanvasResizeSafariMobile');module.exports.isIE11=_dereq_('./is-ie11');module.exports.material=_dereq_('./material');module.exports.objectPool=objectPool;module.exports.split=_dereq_('./split').split;module.exports.styleParser=_dereq_('./styleParser');module.exports.trackedControls=_dereq_('./tracked-controls');module.exports.checkHeadsetConnected=function(){warn('`utils.checkHeadsetConnected` has moved to `utils.device.checkHeadsetConnected`');return device.checkHeadsetConnected(arguments);};module.exports.isGearVR=function(){warn('`utils.isGearVR` has moved to `utils.device.isGearVR`');return device.isGearVR(arguments);};module.exports.isIOS=function(){warn('`utils.isIOS` has moved to `utils.device.isIOS`');return device.isIOS(arguments);};module.exports.isMobile=function(){warn('`utils.isMobile has moved to `utils.device.isMobile`');return device.isMobile(arguments);};/**\n * Returns throttle function that gets called at most once every interval.\n *\n * @param {function} functionToThrottle\n * @param {number} minimumInterval - Minimal interval between calls (milliseconds).\n * @param {object} optionalContext - If given, bind function to throttle to this context.\n * @returns {function} Throttled function.\n */module.exports.throttle=function(functionToThrottle,minimumInterval,optionalContext){var lastTime;if(optionalContext){functionToThrottle=module.exports.bind(functionToThrottle,optionalContext);}return function(){var time=Date.now();var sinceLastTime=typeof lastTime==='undefined'?minimumInterval:time-lastTime;if(typeof lastTime==='undefined'||sinceLastTime>=minimumInterval){lastTime=time;functionToThrottle.apply(null,arguments);}};};/**\n * Returns throttle function that gets called at most once every interval.\n * Uses the time/timeDelta timestamps provided by the global render loop for better perf.\n *\n * @param {function} functionToThrottle\n * @param {number} minimumInterval - Minimal interval between calls (milliseconds).\n * @param {object} optionalContext - If given, bind function to throttle to this context.\n * @returns {function} Throttled function.\n */module.exports.throttleTick=function(functionToThrottle,minimumInterval,optionalContext){var lastTime;if(optionalContext){functionToThrottle=module.exports.bind(functionToThrottle,optionalContext);}return function(time,delta){var sinceLastTime=typeof lastTime==='undefined'?delta:time-lastTime;if(typeof lastTime==='undefined'||sinceLastTime>=minimumInterval){lastTime=time;functionToThrottle(time,sinceLastTime);}};};/**\n * Returns debounce function that gets called only once after a set of repeated calls.\n *\n * @param {function} functionToDebounce\n * @param {number} wait - Time to wait for repeated function calls (milliseconds).\n * @param {boolean} immediate - Calls the function immediately regardless of if it should be waiting.\n * @returns {function} Debounced function.\n */module.exports.debounce=function(func,wait,immediate){var timeout;return function(){var context=this;var args=arguments;var later=function(){timeout=null;if(!immediate)func.apply(context,args);};var callNow=immediate&&!timeout;clearTimeout(timeout);timeout=setTimeout(later,wait);if(callNow)func.apply(context,args);};};/**\n * Mix the properties of source object(s) into a destination object.\n *\n * @param  {object} dest - The object to which properties will be copied.\n * @param  {...object} source - The object(s) from which properties will be copied.\n */module.exports.extend=objectAssign;module.exports.extendDeep=deepAssign;module.exports.clone=function(obj){return JSON.parse(JSON.stringify(obj));};/**\n * Checks if two values are equal.\n * Includes objects and arrays and nested objects and arrays.\n * Try to keep this function performant as it will be called often to see if a component\n * should be updated.\n *\n * @param {object} a - First object.\n * @param {object} b - Second object.\n * @returns {boolean} Whether two objects are deeply equal.\n */var deepEqual=function(){var arrayPool=objectPool.createPool(function(){return[];});return function(a,b){var key;var keysA;var keysB;var i;var valA;var valB;// If not objects or arrays, compare as values.\nif(a===undefined||b===undefined||a===null||b===null||!(a&&b&&a.constructor===Object&&b.constructor===Object||a.constructor===Array&&b.constructor===Array)){return a===b;}// Different number of keys, not equal.\nkeysA=arrayPool.use();keysB=arrayPool.use();keysA.length=0;keysB.length=0;for(key in a){keysA.push(key);}for(key in b){keysB.push(key);}if(keysA.length!==keysB.length){arrayPool.recycle(keysA);arrayPool.recycle(keysB);return false;}// Return `false` at the first sign of inequality.\nfor(i=0;i<keysA.length;++i){valA=a[keysA[i]];valB=b[keysA[i]];// Check nested array and object.\nif(typeof valA==='object'||typeof valB==='object'||Array.isArray(valA)&&Array.isArray(valB)){if(valA===valB){continue;}if(!deepEqual(valA,valB)){arrayPool.recycle(keysA);arrayPool.recycle(keysB);return false;}}else if(valA!==valB){arrayPool.recycle(keysA);arrayPool.recycle(keysB);return false;}}arrayPool.recycle(keysA);arrayPool.recycle(keysB);return true;};}();module.exports.deepEqual=deepEqual;/**\n * Computes the difference between two objects.\n *\n * @param {object} a - First object to compare (e.g., oldData).\n * @param {object} b - Second object to compare (e.g., newData).\n * @returns {object}\n *   Difference object where set of keys note which values were not equal, and values are\n *   `b`'s values.\n */module.exports.diff=function(){var keys=[];return function(a,b,targetObject){var aVal;var bVal;var bKey;var diff;var key;var i;var isComparingObjects;diff=targetObject||{};// Collect A keys.\nkeys.length=0;for(key in a){keys.push(key);}if(!b){return diff;}// Collect B keys.\nfor(bKey in b){if(keys.indexOf(bKey)===-1){keys.push(bKey);}}for(i=0;i<keys.length;i++){key=keys[i];aVal=a[key];bVal=b[key];isComparingObjects=aVal&&bVal&&aVal.constructor===Object&&bVal.constructor===Object;if(isComparingObjects&&!deepEqual(aVal,bVal)||!isComparingObjects&&aVal!==bVal){diff[key]=bVal;}}return diff;};}();/**\n * Returns whether we should capture this keyboard event for keyboard shortcuts.\n * @param {Event} event Event object.\n * @returns {Boolean} Whether the key event should be captured.\n */module.exports.shouldCaptureKeyEvent=function(event){if(event.metaKey){return false;}return document.activeElement===document.body;};/**\n * Splits a string into an array based on a delimiter.\n *\n * @param   {string=} [str='']        Source string\n * @param   {string=} [delimiter=' '] Delimiter to use\n * @returns {array}                   Array of delimited strings\n */module.exports.splitString=function(str,delimiter){if(typeof delimiter==='undefined'){delimiter=' ';}// First collapse the whitespace (or whatever the delimiter is).\nvar regex=new RegExp(delimiter,'g');str=(str||'').replace(regex,delimiter);// Then split.\nreturn str.split(delimiter);};/**\n * Extracts data from the element given an object that contains expected keys.\n *\n * @param {Element} Source element.\n * @param {Object} [defaults={}] Object of default key-value pairs.\n * @returns {Object}\n */module.exports.getElData=function(el,defaults){defaults=defaults||{};var data={};Object.keys(defaults).forEach(copyAttribute);function copyAttribute(key){if(el.hasAttribute(key)){data[key]=el.getAttribute(key);}}return data;};/**\n * Retrieves querystring value.\n * @param  {String} name Name of querystring key.\n * @return {String}      Value\n */module.exports.getUrlParameter=function(name){// eslint-disable-next-line no-useless-escape\nname=name.replace(/[\\[]/,'\\\\[').replace(/[\\]]/,'\\\\]');var regex=new RegExp('[\\\\?&]'+name+'=([^&#]*)');var results=regex.exec(location.search);return results===null?'':decodeURIComponent(results[1].replace(/\\+/g,' '));};/**\n * Detects whether context is within iframe.\n */module.exports.isIframed=function(){return window.top!==window.self;};/**\n * Finds all elements under the element that have the isScene\n * property set to true\n */module.exports.findAllScenes=function(el){var matchingElements=[];var allElements=el.getElementsByTagName('*');for(var i=0,n=allElements.length;i<n;i++){if(allElements[i].isScene){// Element exists with isScene set.\nmatchingElements.push(allElements[i]);}}return matchingElements;};// Must be at bottom to avoid circular dependency.\nmodule.exports.srcLoader=_dereq_('./src-loader');},{\"./bind\":170,\"./coordinates\":171,\"./debug\":172,\"./device\":173,\"./entity\":174,\"./forceCanvasResizeSafariMobile\":175,\"./is-ie11\":177,\"./material\":179,\"./object-pool\":180,\"./split\":181,\"./src-loader\":182,\"./styleParser\":183,\"./tracked-controls\":184,\"deep-assign\":11,\"object-assign\":26}],177:[function(_dereq_,module,exports){// https://stackoverflow.com/a/17907562\nfunction getInternetExplorerVersion(){var version=-1;var userAgent=navigator.userAgent;var re;if(navigator.appName==='Microsoft Internet Explorer'){re=new RegExp('MSIE ([0-9]{1,}[\\\\.0-9]{0,})');if(re.exec(userAgent)!=null){version=parseFloat(RegExp.$1);}}else if(navigator.appName==='Netscape'){re=new RegExp('Trident/.*rv:([0-9]{1,}[\\\\.0-9]{0,})');if(re.exec(userAgent)!=null){version=parseFloat(RegExp.$1);}}return version;}module.exports=getInternetExplorerVersion()===11;},{}],178:[function(_dereq_,module,exports){/**\n * Check if device is iOS and older than version 10.\n */module.exports=function isIOSOlderThan10(userAgent){return /(iphone|ipod|ipad).*os.(7_|8_|9_)/i.test(userAgent);};},{}],179:[function(_dereq_,module,exports){var THREE=_dereq_('../lib/three');var HLS_MIMETYPES=['application/x-mpegurl','application/vnd.apple.mpegurl'];var COLOR_MAPS=new Set(['emissiveMap','envMap','map','specularMap']);/**\n * Update `material` texture property (usually but not always `map`)\n * from `data` property (usually but not always `src`)\n *\n * @param {object} shader - A-Frame shader instance.\n * @param {object} data\n */module.exports.updateMapMaterialFromData=function(materialName,dataName,shader,data){var el=shader.el;var material=shader.material;var rendererSystem=el.sceneEl.systems.renderer;var src=data[dataName];// Because a single material / shader may have multiple textures,\n// we need to remember the source value for this data property\n// to avoid redundant operations which can be expensive otherwise\n// (e.g. video texture loads).\nif(!shader.materialSrcs){shader.materialSrcs={};}if(!src){// Forget the prior material src.\ndelete shader.materialSrcs[materialName];// Remove the texture.\nsetMap(null);return;}// Don't process if material src hasn't changed.\nif(src===shader.materialSrcs[materialName]){return;}// Remember the new src for this texture (there may be multiple).\nshader.materialSrcs[materialName]=src;// If the new material src is already a texture, just use it.\nif(src instanceof THREE.Texture){setMap(src);}else{// Load texture for the new material src.\n// (And check if we should still use it once available in callback.)\nel.sceneEl.systems.material.loadTexture(src,{src:src,repeat:data.repeat,offset:data.offset,npot:data.npot},checkSetMap);}function checkSetMap(texture){// If the source has been changed, don't use loaded texture.\nif(shader.materialSrcs[materialName]!==src){return;}setMap(texture);}function setMap(texture){material[materialName]=texture;if(texture&&COLOR_MAPS.has(materialName)){rendererSystem.applyColorCorrection(texture);}material.needsUpdate=true;handleTextureEvents(el,texture);}};/**\n * Update `material.map` given `data.src`. For standard and flat shaders.\n *\n * @param {object} shader - A-Frame shader instance.\n * @param {object} data\n */module.exports.updateMap=function(shader,data){return module.exports.updateMapMaterialFromData('map','src',shader,data);};/**\n * Updates the material's maps which give the illusion of extra geometry.\n *\n * @param {string} longType - The friendly name of the map from the component e.g. ambientOcclusionMap becomes aoMap in THREE.js\n * @param {object} shader - A-Frame shader instance\n * @param {object} data\n */module.exports.updateDistortionMap=function(longType,shader,data){var shortType=longType;if(longType==='ambientOcclusion'){shortType='ao';}var el=shader.el;var material=shader.material;var rendererSystem=el.sceneEl.systems.renderer;var src=data[longType+'Map'];var info={};info.src=src;// Pass through the repeat and offset to be handled by the material loader.\ninfo.offset=data[longType+'TextureOffset'];info.repeat=data[longType+'TextureRepeat'];info.wrap=data[longType+'TextureWrap'];if(src){if(src===shader[longType+'TextureSrc']){return;}// Texture added or changed.\nshader[longType+'TextureSrc']=src;el.sceneEl.systems.material.loadTexture(src,info,setMap);return;}// Texture removed.\nif(!material.map){return;}setMap(null);function setMap(texture){var slot=shortType+'Map';material[slot]=texture;if(texture&&COLOR_MAPS.has(slot)){rendererSystem.applyColorCorrection(texture);}material.needsUpdate=true;handleTextureEvents(el,texture);}};/**\n * Emit event on entities on texture-related events.\n *\n * @param {Element} el - Entity.\n * @param {object} texture - three.js Texture.\n */function handleTextureEvents(el,texture){if(!texture){return;}el.emit('materialtextureloaded',{src:texture.image,texture:texture});// Video events.\nif(!texture.image||texture.image.tagName!=='VIDEO'){return;}texture.image.addEventListener('loadeddata',function emitVideoTextureLoadedDataAll(){// Check to see if we need to use iOS 10 HLS shader.\n// Only override the shader if it is stock shader that we know doesn't correct.\nif(!el.components||!el.components.material){return;}if(texture.needsCorrectionBGRA&&texture.needsCorrectionFlipY&&['standard','flat'].indexOf(el.components.material.data.shader)!==-1){el.setAttribute('material','shader','ios10hls');}el.emit('materialvideoloadeddata',{src:texture.image,texture:texture});});texture.image.addEventListener('ended',function emitVideoTextureEndedAll(){// Works for non-looping videos only.\nel.emit('materialvideoended',{src:texture.image,texture:texture});});}module.exports.handleTextureEvents=handleTextureEvents;/**\n * Given video element src and type, guess whether stream is HLS.\n *\n * @param {string} src - src from video element (generally URL to content).\n * @param {string} type - type from video element (generally MIME type if present).\n */module.exports.isHLS=function(src,type){if(type&&HLS_MIMETYPES.includes(type.toLowerCase())){return true;}if(src&&src.toLowerCase().indexOf('.m3u8')>0){return true;}return false;};},{\"../lib/three\":151}],180:[function(_dereq_,module,exports){/*\n  Adapted deePool by Kyle Simpson.\n  MIT License: http://getify.mit-license.org\n*/var EMPTY_SLOT=Object.freeze(Object.create(null));// Default object factory.\nfunction defaultObjectFactory(){return{};}/**\n * Create a new pool.\n */module.exports.createPool=function createPool(objectFactory){var objPool=[];var nextFreeSlot=null;// Pool location to look for a free object to use.\nobjectFactory=objectFactory||defaultObjectFactory;function use(){var objToUse;if(nextFreeSlot===null||nextFreeSlot===objPool.length){grow(objPool.length||5);}objToUse=objPool[nextFreeSlot];objPool[nextFreeSlot++]=EMPTY_SLOT;clearObject(objToUse);return objToUse;}function recycle(obj){if(!(obj instanceof Object)){return;}if(nextFreeSlot===null||nextFreeSlot===-1){objPool[objPool.length]=obj;return;}objPool[--nextFreeSlot]=obj;}function grow(count){var currentLength;var i;count=count===undefined?objPool.length:count;if(count>0&&nextFreeSlot==null){nextFreeSlot=0;}if(count>0){currentLength=objPool.length;objPool.length+=Number(count);for(i=currentLength;i<objPool.length;i++){// Add new obj to pool.\nobjPool[i]=objectFactory();}}return objPool.length;}function size(){return objPool.length;}return{grow:grow,pool:objPool,recycle:recycle,size:size,use:use};};function clearObject(obj){var key;if(!obj||obj.constructor!==Object){return;}for(key in obj){obj[key]=undefined;}}module.exports.clearObject=clearObject;},{}],181:[function(_dereq_,module,exports){/**\n * String split with cached result.\n */module.exports.split=function(){var splitCache={};return function(str,delimiter){if(!(delimiter in splitCache)){splitCache[delimiter]={};}if(str in splitCache[delimiter]){return splitCache[delimiter][str];}splitCache[delimiter][str]=str.split(delimiter);return splitCache[delimiter][str];};}();},{}],182:[function(_dereq_,module,exports){/* global Image, XMLHttpRequest */var debug=_dereq_('./debug');var warn=debug('utils:src-loader:warn');/**\n * Validate a texture, either as a selector or as a URL.\n * Detects whether `src` is pointing to an image or video and invokes the appropriate\n * callback.\n *\n * `src` will be passed into the callback\n *\n * @params {string|Element} src - URL or media element.\n * @params {function} isImageCb - callback if texture is an image.\n * @params {function} isVideoCb - callback if texture is a video.\n */function validateSrc(src,isImageCb,isVideoCb){checkIsImage(src,function isAnImageUrl(isImage){if(isImage){isImageCb(src);return;}isVideoCb(src);});}/**\n * Validates six images as a cubemap, either as selector or comma-separated\n * URLs.\n *\n * @param {string} src - A selector or comma-separated image URLs. Image URLs\n          must be wrapped by `url()`.\n * @param {string} src - A selector or comma-separated image URLs. Image URLs\n          must be wrapped by `url()`.\n */function validateCubemapSrc(src,cb){var aCubemap;var cubemapSrcRegex='';var i;var urls;var validatedUrls=[];for(i=0;i<5;i++){cubemapSrcRegex+='(url\\\\((?:[^\\\\)]+)\\\\),\\\\s*)';}cubemapSrcRegex+='(url\\\\((?:[^\\\\)]+)\\\\)\\\\s*)';urls=src.match(new RegExp(cubemapSrcRegex));// `src` is a comma-separated list of URLs.\n// In this case, re-use validateSrc for each side of the cube.\nfunction isImageCb(url){validatedUrls.push(url);if(validatedUrls.length===6){cb(validatedUrls);}}if(urls){for(i=1;i<7;i++){validateSrc(parseUrl(urls[i]),isImageCb);}return;}// `src` is a query selector to <a-cubemap> containing six $([src])s.\naCubemap=validateAndGetQuerySelector(src);if(!aCubemap){return;}if(aCubemap.tagName==='A-CUBEMAP'&&aCubemap.srcs){return cb(aCubemap.srcs);}// Else if aCubeMap is not a <a-cubemap>.\nwarn('Selector \"%s\" does not point to <a-cubemap>',src);}/**\n * Parses src from `url(src)`.\n * @param  {string} src - String to parse.\n * @return {string} The parsed src, if parseable.\n */function parseUrl(src){var parsedSrc=src.match(/\\url\\((.+)\\)/);if(!parsedSrc){return;}return parsedSrc[1];}/**\n * Call back whether `src` is an image.\n *\n * @param {string|Element} src - URL or element that will be tested.\n * @param {function} onResult - Callback with whether `src` is an image.\n */function checkIsImage(src,onResult){var request;if(src.tagName){onResult(src.tagName==='IMG');return;}request=new XMLHttpRequest();// Try to send HEAD request to check if image first.\nrequest.open('HEAD',src);request.addEventListener('load',function(event){var contentType;if(request.status>=200&&request.status<300){contentType=request.getResponseHeader('Content-Type');if(contentType==null){checkIsImageFallback(src,onResult);}else{if(contentType.startsWith('image')){onResult(true);}else{onResult(false);}}}else{checkIsImageFallback(src,onResult);}request.abort();});request.send();}function checkIsImageFallback(src,onResult){var tester=new Image();tester.addEventListener('load',onLoad);function onLoad(){onResult(true);}tester.addEventListener('error',onError);function onError(){onResult(false);}tester.src=src;}/**\n * Query and validate a query selector,\n *\n * @param  {string} selector - DOM selector.\n * @return {object|null|undefined} Selected DOM element if exists.\n           null if query yields no results.\n           undefined if `selector` is not a valid selector.\n */function validateAndGetQuerySelector(selector){try{var el=document.querySelector(selector);if(!el){warn('No element was found matching the selector: \"%s\"',selector);}return el;}catch(e){// Capture exception if it's not a valid selector.\nwarn('\"%s\" is not a valid selector',selector);return undefined;}}module.exports={parseUrl:parseUrl,validateSrc:validateSrc,validateCubemapSrc:validateCubemapSrc};},{\"./debug\":172}],183:[function(_dereq_,module,exports){/**\n * Utils for parsing style-like strings (e.g., \"primitive: box; width: 5; height: 4.5\").\n * Some code adapted from `style-attr` (https://github.com/joshwnj/style-attr)\n * by Josh Johnston (MIT License).\n */var DASH_REGEX=/-([a-z])/g;/**\n * Deserialize style-like string into an object of properties.\n *\n * @param {string} value - HTML attribute value.\n * @param {object} obj - Reused object for object pooling.\n * @returns {object} Property data.\n */module.exports.parse=function(value,obj){var parsedData;if(typeof value!=='string'){return value;}parsedData=styleParse(value,obj);// The style parser returns an object { \"\" : \"test\"} when fed a string\nif(parsedData['']){return value;}return transformKeysToCamelCase(parsedData);};/**\n * Serialize an object of properties into a style-like string.\n *\n * @param {object} data - Property data.\n * @returns {string}\n */module.exports.stringify=function(data){if(typeof data==='string'){return data;}return styleStringify(data);};/**\n * Converts string from hyphen to camelCase.\n *\n * @param {string} str - String to camelCase.\n * @return {string} CamelCased string.\n */function toCamelCase(str){return str.replace(DASH_REGEX,upperCase);}module.exports.toCamelCase=toCamelCase;/**\n * Converts object's keys from hyphens to camelCase (e.g., `max-value` to\n * `maxValue`).\n *\n * @param {object} obj - The object to camelCase keys.\n * @return {object} The object with keys camelCased.\n */function transformKeysToCamelCase(obj){var camelKey;var key;for(key in obj){camelKey=toCamelCase(key);if(key===camelKey){continue;}obj[camelKey]=obj[key];delete obj[key];}return obj;}module.exports.transformKeysToCamelCase=transformKeysToCamelCase;/**\n * Split a string into chunks matching `<key>: <value>`\n */var getKeyValueChunks=function(){var chunks=[];var hasUnclosedUrl=/url\\([^)]+$/;return function getKeyValueChunks(raw){var chunk='';var nextSplit;var offset=0;var sep=';';chunks.length=0;while(offset<raw.length){nextSplit=raw.indexOf(sep,offset);if(nextSplit===-1){nextSplit=raw.length;}chunk+=raw.substring(offset,nextSplit);// data URIs can contain semicolons, so make sure we get the whole thing\nif(hasUnclosedUrl.test(chunk)){chunk+=';';offset=nextSplit+1;continue;}chunks.push(chunk.trim());chunk='';offset=nextSplit+1;}return chunks;};}();/**\n * Convert a style attribute string to an object.\n *\n * @param {object} str - Attribute string.\n * @param {object} obj - Object to reuse as a base, else a new one will be allocated.\n */function styleParse(str,obj){var chunks;var i;var item;var pos;var key;var val;obj=obj||{};chunks=getKeyValueChunks(str);for(i=0;i<chunks.length;i++){item=chunks[i];if(!item){continue;}// Split with `.indexOf` rather than `.split` because the value may also contain colons.\npos=item.indexOf(':');key=item.substr(0,pos).trim();val=item.substr(pos+1).trim();obj[key]=val;}return obj;}/**\n * Convert an object into an attribute string\n **/function styleStringify(obj){var key;var keyCount=0;var i=0;var str='';for(key in obj){keyCount++;}for(key in obj){str+=key+': '+obj[key];if(i<keyCount-1){str+='; ';}i++;}return str;}function upperCase(str){return str[1].toUpperCase();}},{}],184:[function(_dereq_,module,exports){var DEFAULT_HANDEDNESS=_dereq_('../constants').DEFAULT_HANDEDNESS;var AXIS_LABELS=['x','y','z','w'];var NUM_HANDS=2;// Number of hands in a pair. Should always be 2.\n/**\n * Called on controller component `.play` handlers.\n * Check if controller matches parameters and inject tracked-controls component.\n * Handle event listeners.\n * Generate controllerconnected or controllerdisconnected events.\n *\n * @param {object} component - Tracked controls component.\n * @param {object} idPrefix - Prefix to match in gamepad id if any.\n * @param {object} queryObject - Map of values to match.\n */module.exports.checkControllerPresentAndSetup=function(component,idPrefix,queryObject){var el=component.el;var controller;var hasWebXR=el.sceneEl.hasWebXR;var isControllerPresent=hasWebXR?isControllerPresentWebXR:isControllerPresentWebVR;var isPresent;controller=isControllerPresent(component,idPrefix,queryObject);isPresent=!!controller;// If component was previously paused and now playing, re-add event listeners.\n// Handle the event listeners here since this helper method is control of calling\n// `.addEventListeners` and `.removeEventListeners`.\nif(component.controllerPresent&&!component.controllerEventsActive&&!hasWebXR){component.addEventListeners();}// Nothing changed, no need to do anything.\nif(isPresent===component.controllerPresent){return isPresent;}component.controllerPresent=isPresent;// Update controller presence.\nif(isPresent){component.injectTrackedControls();if(!hasWebXR){component.addEventListeners();}el.emit('controllerconnected',{name:component.name,component:component});}else{component.removeEventListeners();el.emit('controllerdisconnected',{name:component.name,component:component});}};/**\n * Enumerate controller (that have pose) and check if they match parameters for WebVR\n *\n * @param {object} component - Tracked controls component.\n * @param {object} idPrefix - Prefix to match in gamepad id if any.\n * @param {object} queryObject - Map of values to match.\n */function isControllerPresentWebVR(component,idPrefix,queryObject){var gamepads;var sceneEl=component.el.sceneEl;var trackedControlsSystem;var filterControllerIndex=queryObject.index||0;if(!idPrefix){return false;}trackedControlsSystem=sceneEl&&sceneEl.systems['tracked-controls-webvr'];if(!trackedControlsSystem){return false;}gamepads=trackedControlsSystem.controllers;if(!gamepads.length){return false;}return!!findMatchingControllerWebVR(gamepads,null,idPrefix,queryObject.hand,filterControllerIndex);}/**\n *\n * @param {object} component - Tracked controls component.\n */function isControllerPresentWebXR(component,idPrefix,queryObject){var controllers;var sceneEl=component.el.sceneEl;var trackedControlsSystem=sceneEl&&sceneEl.systems['tracked-controls-webxr'];if(!trackedControlsSystem){return false;}controllers=trackedControlsSystem.controllers;if(!controllers||!controllers.length){return false;}return findMatchingControllerWebXR(controllers,queryObject.hand);}module.exports.isControllerPresentWebVR=isControllerPresentWebVR;module.exports.isControllerPresentWebXR=isControllerPresentWebXR;/**\n * Walk through the given controllers to find any where the device ID equals\n * filterIdExact, or startsWith filterIdPrefix.\n * A controller where this considered true is considered a 'match'.\n *\n * For each matching controller:\n *   If filterHand is set, and the controller:\n *     is handed, we further verify that controller.hand equals filterHand.\n *     is unhanded (controller.hand is ''), we skip until we have found a\n *     number of matching controllers that equals filterControllerIndex\n *   If filterHand is not set, we skip until we have found the nth matching\n *   controller, where n equals filterControllerIndex\n *\n * The method should be called with one of: [filterIdExact, filterIdPrefix] AND\n * one or both of: [filterHand, filterControllerIndex]\n *\n * @param {object} controllers - Array of gamepads to search\n * @param {string} filterIdExact - If set, used to find controllers with id === this value\n * @param {string} filterIdPrefix - If set, used to find controllers with id startsWith this value\n * @param {object} filterHand - If set, further filters controllers with matching 'hand' property\n * @param {object} filterControllerIndex - Find the nth matching controller,\n * where n equals filterControllerIndex. defaults to 0.\n */function findMatchingControllerWebVR(controllers,filterIdExact,filterIdPrefix,filterHand,filterControllerIndex){var controller;var i;var matchingControllerOccurence=0;var targetControllerMatch=filterControllerIndex||0;for(i=0;i<controllers.length;i++){controller=controllers[i];// Determine if the controller ID matches our criteria.\nif(filterIdPrefix&&!controller.id.startsWith(filterIdPrefix)){continue;}if(!filterIdPrefix&&controller.id!==filterIdExact){continue;}// If the hand filter and controller handedness are defined we compare them.\nif(filterHand&&controller.hand&&filterHand!==controller.hand){continue;}// If we have detected an unhanded controller and the component was asking\n// for a particular hand, we need to treat the controllers in the array as\n// pairs of controllers. This effectively means that we need to skip\n// NUM_HANDS matches for each controller number, instead of 1.\nif(filterHand&&!controller.hand){targetControllerMatch=NUM_HANDS*filterControllerIndex+(filterHand===DEFAULT_HANDEDNESS?0:1);}// We are looking for the nth occurence of a matching controller\n// (n equals targetControllerMatch).\nif(matchingControllerOccurence===targetControllerMatch){return controller;}++matchingControllerOccurence;}return undefined;}function findMatchingControllerWebXR(controllers,handedness){var i;var controllerHandedness;for(i=0;i<controllers.length;i++){controllerHandedness=controllers[i].handedness;if(!handedness||controllerHandedness===''&&handedness==='right'||controllers[i].handedness===handedness){return controllers[i];}}return undefined;}module.exports.findMatchingControllerWebVR=findMatchingControllerWebVR;module.exports.findMatchingControllerWebXR=findMatchingControllerWebXR;/**\n * Emit specific `moved` event(s) if axes changed based on original axismoved event.\n *\n * @param {object} component - Controller component in use.\n * @param {array} axesMapping - For example `{thumbstick: [0, 1]}`.\n * @param {object} evt - Event to process.\n */module.exports.emitIfAxesChanged=function(component,axesMapping,evt){var axes;var buttonType;var changed;var detail;var j;for(buttonType in axesMapping){axes=axesMapping[buttonType];changed=false;for(j=0;j<axes.length;j++){if(evt.detail.changed[axes[j]]){changed=true;}}if(!changed){continue;}// Axis has changed. Emit the specific moved event with axis values in detail.\ndetail={};for(j=0;j<axes.length;j++){detail[AXIS_LABELS[j]]=evt.detail.axis[axes[j]];}component.el.emit(buttonType+'moved',detail);}};/**\n * Handle a button event and reemits the events.\n *\n * @param {string} id - id of the button.\n * @param {string} evtName - name of the reemitted event\n * @param {object} component - reference to the component\n * @param {string} hand - handedness of the controller: left or right.\n */module.exports.onButtonEvent=function(id,evtName,component,hand){var mapping=hand?component.mapping[hand]:component.mapping;var buttonName=mapping.buttons[id];component.el.emit(buttonName+evtName);if(component.updateModel){component.updateModel(buttonName,evtName);}};},{\"../constants\":95}],185:[function(_dereq_,module,exports){window.glStats=function(){var _rS=null;var _totalDrawArraysCalls=0,_totalDrawElementsCalls=0,_totalUseProgramCalls=0,_totalFaces=0,_totalVertices=0,_totalPoints=0,_totalBindTexures=0;function _h(f,c){return function(){c.apply(this,arguments);f.apply(this,arguments);};}WebGLRenderingContext.prototype.drawArrays=_h(WebGLRenderingContext.prototype.drawArrays,function(){_totalDrawArraysCalls++;if(arguments[0]==this.POINTS)_totalPoints+=arguments[2];else _totalVertices+=arguments[2];});WebGLRenderingContext.prototype.drawElements=_h(WebGLRenderingContext.prototype.drawElements,function(){_totalDrawElementsCalls++;_totalFaces+=arguments[1]/3;_totalVertices+=arguments[1];});WebGLRenderingContext.prototype.useProgram=_h(WebGLRenderingContext.prototype.useProgram,function(){_totalUseProgramCalls++;});WebGLRenderingContext.prototype.bindTexture=_h(WebGLRenderingContext.prototype.bindTexture,function(){_totalBindTexures++;});var _values={allcalls:{over:3000,caption:'Calls (hook)'},drawelements:{caption:'drawElements (hook)'},drawarrays:{caption:'drawArrays (hook)'}};var _groups=[{caption:'WebGL',values:['allcalls','drawelements','drawarrays','useprogram','bindtexture','glfaces','glvertices','glpoints']}];var _fractions=[{base:'allcalls',steps:['drawelements','drawarrays']}];function _update(){_rS('allcalls').set(_totalDrawArraysCalls+_totalDrawElementsCalls);_rS('drawElements').set(_totalDrawElementsCalls);_rS('drawArrays').set(_totalDrawArraysCalls);_rS('bindTexture').set(_totalBindTexures);_rS('useProgram').set(_totalUseProgramCalls);_rS('glfaces').set(_totalFaces);_rS('glvertices').set(_totalVertices);_rS('glpoints').set(_totalPoints);}function _start(){_totalDrawArraysCalls=0;_totalDrawElementsCalls=0;_totalUseProgramCalls=0;_totalFaces=0;_totalVertices=0;_totalPoints=0;_totalBindTexures=0;}function _end(){}function _attach(r){_rS=r;}return{update:_update,start:_start,end:_end,attach:_attach,values:_values,groups:_groups,fractions:_fractions};};window.threeStats=function(renderer){var _rS=null;var _values={'renderer.info.memory.geometries':{caption:'Geometries'},'renderer.info.memory.textures':{caption:'Textures'},'renderer.info.programs':{caption:'Programs'},'renderer.info.render.calls':{caption:'Calls'},'renderer.info.render.triangles':{caption:'Triangles',over:1000},'renderer.info.render.points':{caption:'Points'}};var _groups=[{caption:'Three.js - Memory',values:['renderer.info.memory.geometries','renderer.info.programs','renderer.info.memory.textures']},{caption:'Three.js - Render',values:['renderer.info.render.calls','renderer.info.render.triangles','renderer.info.render.points']}];var _fractions=[];function _update(){_rS('renderer.info.memory.geometries').set(renderer.info.memory.geometries);_rS('renderer.info.programs').set(renderer.info.programs.length);_rS('renderer.info.memory.textures').set(renderer.info.memory.textures);_rS('renderer.info.render.calls').set(renderer.info.render.calls);_rS('renderer.info.render.triangles').set(renderer.info.render.triangles);_rS('renderer.info.render.points').set(renderer.info.render.points);}function _start(){}function _end(){}function _attach(r){_rS=r;}return{update:_update,start:_start,end:_end,attach:_attach,values:_values,groups:_groups,fractions:_fractions};};/*\n *   From https://github.com/paulirish/memory-stats.js\n */window.BrowserStats=function(){var _rS=null;var _usedJSHeapSize=0,_totalJSHeapSize=0;if(window.performance&&!performance.memory){performance.memory={usedJSHeapSize:0,totalJSHeapSize:0};}if(performance.memory.totalJSHeapSize===0){console.warn('totalJSHeapSize === 0... performance.memory is only available in Chrome .');}var _values={memory:{caption:'Used Memory',average:true,avgMs:1000,over:22},total:{caption:'Total Memory'}};var _groups=[{caption:'Browser',values:['memory','total']}];var _fractions=[{base:'total',steps:['memory']}];var log1024=Math.log(1024);function _size(v){var precision=100;//Math.pow(10, 2);\nvar i=Math.floor(Math.log(v)/log1024);return Math.round(v*precision/Math.pow(1024,i))/precision;// + ' ' + sizes[i];\n}function _update(){_usedJSHeapSize=_size(performance.memory.usedJSHeapSize);_totalJSHeapSize=_size(performance.memory.totalJSHeapSize);_rS('memory').set(_usedJSHeapSize);_rS('total').set(_totalJSHeapSize);}function _start(){_usedJSHeapSize=0;}function _end(){}function _attach(r){_rS=r;}return{update:_update,start:_start,end:_end,attach:_attach,values:_values,groups:_groups,fractions:_fractions};};if(typeof module==='object'){module.exports={glStats:window.glStats,threeStats:window.threeStats,BrowserStats:window.BrowserStats};}},{}],186:[function(_dereq_,module,exports){// performance.now() polyfill from https://gist.github.com/paulirish/5438650\n'use strict';(function(){if('performance'in window==false){window.performance={};}var performance=window.performance;if('now'in performance==false){var nowOffset=Date.now();if(performance.timing&&performance.timing.navigationStart){nowOffset=performance.timing.navigationStart;}performance.now=function now(){return Date.now()-nowOffset;};}if(!performance.mark){performance.mark=function(){};}if(!performance.measure){performance.measure=function(){};}})();window.rStats=function rStats(settings){function iterateKeys(array,callback){var keys=Object.keys(array);for(var j=0,l=keys.length;j<l;j++){callback(keys[j]);}}function importCSS(url){var element=document.createElement('link');element.href=url;element.rel='stylesheet';element.type='text/css';document.getElementsByTagName('head')[0].appendChild(element);}var _settings=settings||{};var _colours=_settings.colours||['#850700','#c74900','#fcb300','#284280','#4c7c0c'];var _cssFont='https://fonts.googleapis.com/css?family=Roboto+Condensed:400,700,300';var _cssRStats=(_settings.CSSPath?_settings.CSSPath:'')+'rStats.css';var _css=_settings.css||[_cssFont,_cssRStats];_css.forEach(function(uri){importCSS(uri);});if(!_settings.values)_settings.values={};var _base,_div,_elHeight=10,_elWidth=200;var _perfCounters={};function Graph(_dom,_id,_defArg){var _def=_defArg||{};var _canvas=document.createElement('canvas'),_ctx=_canvas.getContext('2d'),_max=0,_current=0;var c=_def.color?_def.color:'#666666';var _dotCanvas=document.createElement('canvas'),_dotCtx=_dotCanvas.getContext('2d');_dotCanvas.width=1;_dotCanvas.height=2*_elHeight;_dotCtx.fillStyle='#444444';_dotCtx.fillRect(0,0,1,2*_elHeight);_dotCtx.fillStyle=c;_dotCtx.fillRect(0,_elHeight,1,_elHeight);_dotCtx.fillStyle='#ffffff';_dotCtx.globalAlpha=0.5;_dotCtx.fillRect(0,_elHeight,1,1);_dotCtx.globalAlpha=1;var _alarmCanvas=document.createElement('canvas'),_alarmCtx=_alarmCanvas.getContext('2d');_alarmCanvas.width=1;_alarmCanvas.height=2*_elHeight;_alarmCtx.fillStyle='#444444';_alarmCtx.fillRect(0,0,1,2*_elHeight);_alarmCtx.fillStyle='#b70000';_alarmCtx.fillRect(0,_elHeight,1,_elHeight);_alarmCtx.globalAlpha=0.5;_alarmCtx.fillStyle='#ffffff';_alarmCtx.fillRect(0,_elHeight,1,1);_alarmCtx.globalAlpha=1;function _init(){_canvas.width=_elWidth;_canvas.height=_elHeight;_canvas.style.width=_canvas.width+'px';_canvas.style.height=_canvas.height+'px';_canvas.className='rs-canvas';_dom.appendChild(_canvas);_ctx.fillStyle='#444444';_ctx.fillRect(0,0,_canvas.width,_canvas.height);}function _draw(v,alarm){_current+=(v-_current)*0.1;_max*=0.99;if(_current>_max)_max=_current;_ctx.drawImage(_canvas,1,0,_canvas.width-1,_canvas.height,0,0,_canvas.width-1,_canvas.height);if(alarm){_ctx.drawImage(_alarmCanvas,_canvas.width-1,_canvas.height-_current*_canvas.height/_max-_elHeight);}else{_ctx.drawImage(_dotCanvas,_canvas.width-1,_canvas.height-_current*_canvas.height/_max-_elHeight);}}_init();return{draw:_draw};}function StackGraph(_dom,_num){var _canvas=document.createElement('canvas'),_ctx=_canvas.getContext('2d');function _init(){_canvas.width=_elWidth;_canvas.height=_elHeight*_num;_canvas.style.width=_canvas.width+'px';_canvas.style.height=_canvas.height+'px';_canvas.className='rs-canvas';_dom.appendChild(_canvas);_ctx.fillStyle='#444444';_ctx.fillRect(0,0,_canvas.width,_canvas.height);}function _draw(v){_ctx.drawImage(_canvas,1,0,_canvas.width-1,_canvas.height,0,0,_canvas.width-1,_canvas.height);var th=0;iterateKeys(v,function(j){var h=v[j]*_canvas.height;_ctx.fillStyle=_colours[j];_ctx.fillRect(_canvas.width-1,th,1,h);th+=h;});}_init();return{draw:_draw};}function PerfCounter(id,group){var _id=id,_time,_value=0,_total=0,_averageValue=0,_accumValue=0,_accumStart=performance.now(),_accumSamples=0,_dom=document.createElement('div'),_spanId=document.createElement('span'),_spanValue=document.createElement('div'),_spanValueText=document.createTextNode(''),_def=_settings?_settings.values[_id.toLowerCase()]:null,_graph=new Graph(_dom,_id,_def),_started=false;_spanId.className='rs-counter-id';_spanId.textContent=_def&&_def.caption?_def.caption:_id;_spanValue.className='rs-counter-value';_spanValue.appendChild(_spanValueText);_dom.appendChild(_spanId);_dom.appendChild(_spanValue);if(group)group.div.appendChild(_dom);else _div.appendChild(_dom);_time=performance.now();function _average(v){if(_def&&_def.average){_accumValue+=v;_accumSamples++;var t=performance.now();if(t-_accumStart>=(_def.avgMs||1000)){_averageValue=_accumValue/_accumSamples;_accumValue=0;_accumStart=t;_accumSamples=0;}}}function _start(){_time=performance.now();if(_settings.userTimingAPI)performance.mark(_id+'-start');_started=true;}function _end(){_value=performance.now()-_time;if(_settings.userTimingAPI){performance.mark(_id+'-end');if(_started){performance.measure(_id,_id+'-start',_id+'-end');}}_average(_value);}function _tick(){_end();_start();}function _draw(){var v=_def&&_def.average?_averageValue:_value;_spanValueText.nodeValue=Math.round(v*100)/100;var a=_def&&(_def.below&&_value<_def.below||_def.over&&_value>_def.over);_graph.draw(_value,a);_dom.className=a?'rs-counter-base alarm':'rs-counter-base';}function _frame(){var t=performance.now();var e=t-_time;_total++;if(e>1000){if(_def&&_def.interpolate===false){_value=_total;}else{_value=_total*1000/e;}_total=0;_time=t;_average(_value);}}function _set(v){_value=v;_average(_value);}return{set:_set,start:_start,tick:_tick,end:_end,frame:_frame,value:function(){return _value;},draw:_draw};}function sample(){var _value=0;function _set(v){_value=v;}return{set:_set,value:function(){return _value;}};}function _perf(idArg){var id=idArg.toLowerCase();if(id===undefined)id='default';if(_perfCounters[id])return _perfCounters[id];var group=null;if(_settings&&_settings.groups){iterateKeys(_settings.groups,function(j){var g=_settings.groups[parseInt(j,10)];if(!group&&g.values.indexOf(id.toLowerCase())!==-1){group=g;}});}var p=new PerfCounter(id,group);_perfCounters[id]=p;return p;}function _init(){if(_settings.plugins){if(!_settings.values)_settings.values={};if(!_settings.groups)_settings.groups=[];if(!_settings.fractions)_settings.fractions=[];for(var j=0;j<_settings.plugins.length;j++){_settings.plugins[j].attach(_perf);iterateKeys(_settings.plugins[j].values,function(k){_settings.values[k]=_settings.plugins[j].values[k];});_settings.groups=_settings.groups.concat(_settings.plugins[j].groups);_settings.fractions=_settings.fractions.concat(_settings.plugins[j].fractions);}}else{_settings.plugins={};}_base=document.createElement('div');_base.className='rs-base';_div=document.createElement('div');_div.className='rs-container';_div.style.height='auto';_base.appendChild(_div);document.body.appendChild(_base);if(!_settings)return;if(_settings.groups){iterateKeys(_settings.groups,function(j){var g=_settings.groups[parseInt(j,10)];var div=document.createElement('div');div.className='rs-group';g.div=div;var h1=document.createElement('h1');h1.textContent=g.caption;h1.addEventListener('click',function(e){this.classList.toggle('hidden');e.preventDefault();}.bind(div));_div.appendChild(h1);_div.appendChild(div);});}if(_settings.fractions){iterateKeys(_settings.fractions,function(j){var f=_settings.fractions[parseInt(j,10)];var div=document.createElement('div');div.className='rs-fraction';var legend=document.createElement('div');legend.className='rs-legend';var h=0;iterateKeys(_settings.fractions[j].steps,function(k){var p=document.createElement('p');p.textContent=_settings.fractions[j].steps[k];p.style.color=_colours[h];legend.appendChild(p);h++;});div.appendChild(legend);div.style.height=h*_elHeight+'px';f.div=div;var graph=new StackGraph(div,h);f.graph=graph;_div.appendChild(div);});}}function _update(){iterateKeys(_settings.plugins,function(j){_settings.plugins[j].update();});iterateKeys(_perfCounters,function(j){_perfCounters[j].draw();});if(_settings&&_settings.fractions){iterateKeys(_settings.fractions,function(j){var f=_settings.fractions[parseInt(j,10)];var v=[];var base=_perfCounters[f.base.toLowerCase()];if(base){base=base.value();iterateKeys(_settings.fractions[j].steps,function(k){var s=_settings.fractions[j].steps[parseInt(k,10)].toLowerCase();var val=_perfCounters[s];if(val){v.push(val.value()/base);}});}f.graph.draw(v);});}/*if( _height != _div.clientHeight ) {\n            _height = _div.clientHeight;\n            _base.style.height = _height + 2 * _elHeight + 'px';\n        console.log( _base.clientHeight );\n        }*/}_init();return function(id){if(id)return _perf(id);return{element:_base,update:_update};};};if(typeof module==='object'){module.exports=window.rStats;}},{}],187:[function(_dereq_,module,exports){// https://stackoverflow.com/a/36213464\nif(!String.prototype.startsWith){String.prototype.startsWith=function(searchString,position){position=position||0;return this.substr(position,searchString.length)===searchString;};}},{}],188:[function(_dereq_,module,exports){/*\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */var Util={};Util.base64=function(mimeType,base64){return'data:'+mimeType+';base64,'+base64;};Util.isMobile=function(){var check=false;(function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4)))check=true;})(navigator.userAgent||navigator.vendor||window.opera);return check;};Util.isIOS=function(){return /(iPad|iPhone|iPod)/g.test(navigator.userAgent);};Util.isIFrame=function(){try{return window.self!==window.top;}catch(e){return true;}};Util.appendQueryParameter=function(url,key,value){// Determine delimiter based on if the URL already GET parameters in it.\nvar delimiter=url.indexOf('?')<0?'?':'&';url+=delimiter+key+'='+value;return url;};// From http://goo.gl/4WX3tg\nUtil.getQueryParameter=function(name){name=name.replace(/[\\[]/,\"\\\\[\").replace(/[\\]]/,\"\\\\]\");var regex=new RegExp(\"[\\\\?&]\"+name+\"=([^&#]*)\"),results=regex.exec(location.search);return results===null?\"\":decodeURIComponent(results[1].replace(/\\+/g,\" \"));};Util.isLandscapeMode=function(){return window.orientation==90||window.orientation==-90;};module.exports=Util;},{}],189:[function(_dereq_,module,exports){/*\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */var Util=_dereq_('./util.js');/**\n * Android and iOS compatible wakelock implementation.\n *\n * Refactored thanks to dkovalev@.\n */function AndroidWakeLock(){var video=document.createElement('video');video.addEventListener('ended',function(){video.play();});this.request=function(){if(video.paused){// Base64 version of videos_src/no-sleep-60s.webm.\nvideo.src=Util.base64('video/webm','GkXfowEAAAAAAAAfQoaBAUL3gQFC8oEEQvOBCEKChHdlYm1Ch4ECQoWBAhhTgGcBAAAAAAAH4xFNm3RALE27i1OrhBVJqWZTrIHfTbuMU6uEFlSua1OsggEwTbuMU6uEHFO7a1OsggfG7AEAAAAAAACkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVSalmAQAAAAAAAEUq17GDD0JATYCNTGF2ZjU2LjQwLjEwMVdBjUxhdmY1Ni40MC4xMDFzpJAGSJTMbsLpDt/ySkipgX1fRImIQO1MAAAAAAAWVK5rAQAAAAAAADuuAQAAAAAAADLXgQFzxYEBnIEAIrWcg3VuZIaFVl9WUDmDgQEj44OEO5rKAOABAAAAAAAABrCBsLqBkB9DtnUBAAAAAAAAo+eBAKOmgQAAgKJJg0IAAV4BHsAHBIODCoAACmH2MAAAZxgz4dPSTFi5JACjloED6ACmAECSnABMQAADYAAAWi0quoCjloEH0ACmAECSnABNwAADYAAAWi0quoCjloELuACmAECSnABNgAADYAAAWi0quoCjloEPoACmAECSnABNYAADYAAAWi0quoCjloETiACmAECSnABNIAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTnghdwo5aBAAAApgBAkpwATOAAA2AAAFotKrqAo5aBA+gApgBAkpwATMAAA2AAAFotKrqAo5aBB9AApgBAkpwATIAAA2AAAFotKrqAo5aBC7gApgBAkpwATEAAA2AAAFotKrqAo5aBD6AApgDAkpwAQ2AAA2AAAFotKrqAo5aBE4gApgBAkpwATCAAA2AAAFotKrqAH0O2dQEAAAAAAACU54Iu4KOWgQAAAKYAQJKcAEvAAANgAABaLSq6gKOWgQPoAKYAQJKcAEtgAANgAABaLSq6gKOWgQfQAKYAQJKcAEsAAANgAABaLSq6gKOWgQu4AKYAQJKcAEqAAANgAABaLSq6gKOWgQ+gAKYAQJKcAEogAANgAABaLSq6gKOWgROIAKYAQJKcAEnAAANgAABaLSq6gB9DtnUBAAAAAAAAlOeCRlCjloEAAACmAECSnABJgAADYAAAWi0quoCjloED6ACmAECSnABJIAADYAAAWi0quoCjloEH0ACmAMCSnABDYAADYAAAWi0quoCjloELuACmAECSnABI4AADYAAAWi0quoCjloEPoACmAECSnABIoAADYAAAWi0quoCjloETiACmAECSnABIYAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTngl3Ao5aBAAAApgBAkpwASCAAA2AAAFotKrqAo5aBA+gApgBAkpwASAAAA2AAAFotKrqAo5aBB9AApgBAkpwAR8AAA2AAAFotKrqAo5aBC7gApgBAkpwAR4AAA2AAAFotKrqAo5aBD6AApgBAkpwAR2AAA2AAAFotKrqAo5aBE4gApgBAkpwARyAAA2AAAFotKrqAH0O2dQEAAAAAAACU54J1MKOWgQAAAKYAwJKcAENgAANgAABaLSq6gKOWgQPoAKYAQJKcAEbgAANgAABaLSq6gKOWgQfQAKYAQJKcAEagAANgAABaLSq6gKOWgQu4AKYAQJKcAEaAAANgAABaLSq6gKOWgQ+gAKYAQJKcAEZAAANgAABaLSq6gKOWgROIAKYAQJKcAEYAAANgAABaLSq6gB9DtnUBAAAAAAAAlOeCjKCjloEAAACmAECSnABF4AADYAAAWi0quoCjloED6ACmAECSnABFwAADYAAAWi0quoCjloEH0ACmAECSnABFoAADYAAAWi0quoCjloELuACmAECSnABFgAADYAAAWi0quoCjloEPoACmAMCSnABDYAADYAAAWi0quoCjloETiACmAECSnABFYAADYAAAWi0quoAfQ7Z1AQAAAAAAAJTngqQQo5aBAAAApgBAkpwARUAAA2AAAFotKrqAo5aBA+gApgBAkpwARSAAA2AAAFotKrqAo5aBB9AApgBAkpwARQAAA2AAAFotKrqAo5aBC7gApgBAkpwARQAAA2AAAFotKrqAo5aBD6AApgBAkpwAROAAA2AAAFotKrqAo5aBE4gApgBAkpwARMAAA2AAAFotKrqAH0O2dQEAAAAAAACU54K7gKOWgQAAAKYAQJKcAESgAANgAABaLSq6gKOWgQPoAKYAQJKcAESAAANgAABaLSq6gKOWgQfQAKYAwJKcAENgAANgAABaLSq6gKOWgQu4AKYAQJKcAERgAANgAABaLSq6gKOWgQ+gAKYAQJKcAERAAANgAABaLSq6gKOWgROIAKYAQJKcAEQgAANgAABaLSq6gB9DtnUBAAAAAAAAlOeC0vCjloEAAACmAECSnABEIAADYAAAWi0quoCjloED6ACmAECSnABEAAADYAAAWi0quoCjloEH0ACmAECSnABD4AADYAAAWi0quoCjloELuACmAECSnABDwAADYAAAWi0quoCjloEPoACmAECSnABDoAADYAAAWi0quoCjloETiACmAECSnABDgAADYAAAWi0quoAcU7trAQAAAAAAABG7j7OBALeK94EB8YIBd/CBAw==');video.play();}};this.release=function(){video.pause();video.src='';};}function iOSWakeLock(){var timer=null;this.request=function(){if(!timer){timer=setInterval(function(){window.location.href='/';setTimeout(window.stop,0);},15000);}};this.release=function(){if(timer){clearInterval(timer);timer=null;}};}function getWakeLock(){var userAgent=navigator.userAgent||navigator.vendor||window.opera;if(userAgent.match(/iPhone/i)||userAgent.match(/iPod/i)){return iOSWakeLock;}else{return AndroidWakeLock;}}module.exports=getWakeLock();},{\"./util.js\":188}]},{},[149])(149);});\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate))\n\n//# sourceURL=webpack:///./node_modules/aframe/dist/aframe-master.js?");

/***/ }),

/***/ "./node_modules/cannon/package.json":
/*!******************************************!*\
  !*** ./node_modules/cannon/package.json ***!
  \******************************************/
/*! exports provided: _args, _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _spec, _where, author, bugs, dependencies, description, devDependencies, engines, homepage, keywords, licenses, main, name, repository, version, default */
/***/ (function(module) {

eval("module.exports = {\"_args\":[[\"github:donmccurdy/cannon.js#v0.6.2-dev1\",\"/home/alvaro/Escritorio/kibotics-websim/Scratch\"]],\"_from\":\"github:donmccurdy/cannon.js#v0.6.2-dev1\",\"_id\":\"cannon@github:donmccurdy/cannon.js#022e8ba53fa83abf0ad8a0e4fd08623123838a17\",\"_inBundle\":false,\"_integrity\":\"\",\"_location\":\"/cannon\",\"_phantomChildren\":{},\"_requested\":{\"type\":\"git\",\"raw\":\"github:donmccurdy/cannon.js#v0.6.2-dev1\",\"rawSpec\":\"github:donmccurdy/cannon.js#v0.6.2-dev1\",\"saveSpec\":\"github:donmccurdy/cannon.js#v0.6.2-dev1\",\"fetchSpec\":null,\"gitCommittish\":\"v0.6.2-dev1\"},\"_requiredBy\":[\"/aframe-physics-system\"],\"_resolved\":\"github:donmccurdy/cannon.js#022e8ba53fa83abf0ad8a0e4fd08623123838a17\",\"_spec\":\"github:donmccurdy/cannon.js#v0.6.2-dev1\",\"_where\":\"/home/alvaro/Escritorio/kibotics-websim/Scratch\",\"author\":{\"name\":\"Stefan Hedman\",\"email\":\"schteppe@gmail.com\",\"url\":\"http://steffe.se\"},\"bugs\":{\"url\":\"https://github.com/schteppe/cannon.js/issues\"},\"dependencies\":{},\"description\":\"A lightweight 3D physics engine written in JavaScript.\",\"devDependencies\":{\"browserify\":\"*\",\"grunt\":\"~0.4.0\",\"grunt-browserify\":\"^2.1.4\",\"grunt-contrib-concat\":\"~0.1.3\",\"grunt-contrib-jshint\":\"~0.1.1\",\"grunt-contrib-nodeunit\":\"^0.4.1\",\"grunt-contrib-uglify\":\"^0.5.1\",\"grunt-contrib-yuidoc\":\"^0.5.2\",\"jshint\":\"latest\",\"nodeunit\":\"^0.9.0\",\"uglify-js\":\"latest\"},\"engines\":{\"node\":\"*\"},\"homepage\":\"https://github.com/schteppe/cannon.js\",\"keywords\":[\"cannon.js\",\"cannon\",\"physics\",\"engine\",\"3d\"],\"licenses\":[{\"type\":\"MIT\"}],\"main\":\"./src/Cannon.js\",\"name\":\"cannon\",\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/schteppe/cannon.js.git\"},\"version\":\"0.6.2\"};\n\n//# sourceURL=webpack:///./node_modules/cannon/package.json?");

/***/ }),

/***/ "./node_modules/cannon/src/Cannon.js":
/*!*******************************************!*\
  !*** ./node_modules/cannon/src/Cannon.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Export classes\nmodule.exports = {\n  version: __webpack_require__(/*! ../package.json */ \"./node_modules/cannon/package.json\").version,\n  AABB: __webpack_require__(/*! ./collision/AABB */ \"./node_modules/cannon/src/collision/AABB.js\"),\n  ArrayCollisionMatrix: __webpack_require__(/*! ./collision/ArrayCollisionMatrix */ \"./node_modules/cannon/src/collision/ArrayCollisionMatrix.js\"),\n  Body: __webpack_require__(/*! ./objects/Body */ \"./node_modules/cannon/src/objects/Body.js\"),\n  Box: __webpack_require__(/*! ./shapes/Box */ \"./node_modules/cannon/src/shapes/Box.js\"),\n  Broadphase: __webpack_require__(/*! ./collision/Broadphase */ \"./node_modules/cannon/src/collision/Broadphase.js\"),\n  Constraint: __webpack_require__(/*! ./constraints/Constraint */ \"./node_modules/cannon/src/constraints/Constraint.js\"),\n  ContactEquation: __webpack_require__(/*! ./equations/ContactEquation */ \"./node_modules/cannon/src/equations/ContactEquation.js\"),\n  Narrowphase: __webpack_require__(/*! ./world/Narrowphase */ \"./node_modules/cannon/src/world/Narrowphase.js\"),\n  ConeTwistConstraint: __webpack_require__(/*! ./constraints/ConeTwistConstraint */ \"./node_modules/cannon/src/constraints/ConeTwistConstraint.js\"),\n  ContactMaterial: __webpack_require__(/*! ./material/ContactMaterial */ \"./node_modules/cannon/src/material/ContactMaterial.js\"),\n  ConvexPolyhedron: __webpack_require__(/*! ./shapes/ConvexPolyhedron */ \"./node_modules/cannon/src/shapes/ConvexPolyhedron.js\"),\n  Cylinder: __webpack_require__(/*! ./shapes/Cylinder */ \"./node_modules/cannon/src/shapes/Cylinder.js\"),\n  DistanceConstraint: __webpack_require__(/*! ./constraints/DistanceConstraint */ \"./node_modules/cannon/src/constraints/DistanceConstraint.js\"),\n  Equation: __webpack_require__(/*! ./equations/Equation */ \"./node_modules/cannon/src/equations/Equation.js\"),\n  EventTarget: __webpack_require__(/*! ./utils/EventTarget */ \"./node_modules/cannon/src/utils/EventTarget.js\"),\n  FrictionEquation: __webpack_require__(/*! ./equations/FrictionEquation */ \"./node_modules/cannon/src/equations/FrictionEquation.js\"),\n  GSSolver: __webpack_require__(/*! ./solver/GSSolver */ \"./node_modules/cannon/src/solver/GSSolver.js\"),\n  GridBroadphase: __webpack_require__(/*! ./collision/GridBroadphase */ \"./node_modules/cannon/src/collision/GridBroadphase.js\"),\n  Heightfield: __webpack_require__(/*! ./shapes/Heightfield */ \"./node_modules/cannon/src/shapes/Heightfield.js\"),\n  HingeConstraint: __webpack_require__(/*! ./constraints/HingeConstraint */ \"./node_modules/cannon/src/constraints/HingeConstraint.js\"),\n  LockConstraint: __webpack_require__(/*! ./constraints/LockConstraint */ \"./node_modules/cannon/src/constraints/LockConstraint.js\"),\n  Mat3: __webpack_require__(/*! ./math/Mat3 */ \"./node_modules/cannon/src/math/Mat3.js\"),\n  Material: __webpack_require__(/*! ./material/Material */ \"./node_modules/cannon/src/material/Material.js\"),\n  NaiveBroadphase: __webpack_require__(/*! ./collision/NaiveBroadphase */ \"./node_modules/cannon/src/collision/NaiveBroadphase.js\"),\n  ObjectCollisionMatrix: __webpack_require__(/*! ./collision/ObjectCollisionMatrix */ \"./node_modules/cannon/src/collision/ObjectCollisionMatrix.js\"),\n  Pool: __webpack_require__(/*! ./utils/Pool */ \"./node_modules/cannon/src/utils/Pool.js\"),\n  Particle: __webpack_require__(/*! ./shapes/Particle */ \"./node_modules/cannon/src/shapes/Particle.js\"),\n  Plane: __webpack_require__(/*! ./shapes/Plane */ \"./node_modules/cannon/src/shapes/Plane.js\"),\n  PointToPointConstraint: __webpack_require__(/*! ./constraints/PointToPointConstraint */ \"./node_modules/cannon/src/constraints/PointToPointConstraint.js\"),\n  Quaternion: __webpack_require__(/*! ./math/Quaternion */ \"./node_modules/cannon/src/math/Quaternion.js\"),\n  Ray: __webpack_require__(/*! ./collision/Ray */ \"./node_modules/cannon/src/collision/Ray.js\"),\n  RaycastVehicle: __webpack_require__(/*! ./objects/RaycastVehicle */ \"./node_modules/cannon/src/objects/RaycastVehicle.js\"),\n  RaycastResult: __webpack_require__(/*! ./collision/RaycastResult */ \"./node_modules/cannon/src/collision/RaycastResult.js\"),\n  RigidVehicle: __webpack_require__(/*! ./objects/RigidVehicle */ \"./node_modules/cannon/src/objects/RigidVehicle.js\"),\n  RotationalEquation: __webpack_require__(/*! ./equations/RotationalEquation */ \"./node_modules/cannon/src/equations/RotationalEquation.js\"),\n  RotationalMotorEquation: __webpack_require__(/*! ./equations/RotationalMotorEquation */ \"./node_modules/cannon/src/equations/RotationalMotorEquation.js\"),\n  SAPBroadphase: __webpack_require__(/*! ./collision/SAPBroadphase */ \"./node_modules/cannon/src/collision/SAPBroadphase.js\"),\n  SPHSystem: __webpack_require__(/*! ./objects/SPHSystem */ \"./node_modules/cannon/src/objects/SPHSystem.js\"),\n  Shape: __webpack_require__(/*! ./shapes/Shape */ \"./node_modules/cannon/src/shapes/Shape.js\"),\n  Solver: __webpack_require__(/*! ./solver/Solver */ \"./node_modules/cannon/src/solver/Solver.js\"),\n  Sphere: __webpack_require__(/*! ./shapes/Sphere */ \"./node_modules/cannon/src/shapes/Sphere.js\"),\n  SplitSolver: __webpack_require__(/*! ./solver/SplitSolver */ \"./node_modules/cannon/src/solver/SplitSolver.js\"),\n  Spring: __webpack_require__(/*! ./objects/Spring */ \"./node_modules/cannon/src/objects/Spring.js\"),\n  Transform: __webpack_require__(/*! ./math/Transform */ \"./node_modules/cannon/src/math/Transform.js\"),\n  Trimesh: __webpack_require__(/*! ./shapes/Trimesh */ \"./node_modules/cannon/src/shapes/Trimesh.js\"),\n  Vec3: __webpack_require__(/*! ./math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\"),\n  Vec3Pool: __webpack_require__(/*! ./utils/Vec3Pool */ \"./node_modules/cannon/src/utils/Vec3Pool.js\"),\n  World: __webpack_require__(/*! ./world/World */ \"./node_modules/cannon/src/world/World.js\")\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/Cannon.js?");

/***/ }),

/***/ "./node_modules/cannon/src/collision/AABB.js":
/*!***************************************************!*\
  !*** ./node_modules/cannon/src/collision/AABB.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Utils = __webpack_require__(/*! ../utils/Utils */ \"./node_modules/cannon/src/utils/Utils.js\");\n\nmodule.exports = AABB;\n/**\n * Axis aligned bounding box class.\n * @class AABB\n * @constructor\n * @param {Object} [options]\n * @param {Vec3}   [options.upperBound]\n * @param {Vec3}   [options.lowerBound]\n */\n\nfunction AABB(options) {\n  options = options || {};\n  /**\n   * The lower bound of the bounding box.\n   * @property lowerBound\n   * @type {Vec3}\n   */\n\n  this.lowerBound = new Vec3();\n\n  if (options.lowerBound) {\n    this.lowerBound.copy(options.lowerBound);\n  }\n  /**\n   * The upper bound of the bounding box.\n   * @property upperBound\n   * @type {Vec3}\n   */\n\n\n  this.upperBound = new Vec3();\n\n  if (options.upperBound) {\n    this.upperBound.copy(options.upperBound);\n  }\n}\n\nvar tmp = new Vec3();\n/**\n * Set the AABB bounds from a set of points.\n * @method setFromPoints\n * @param {Array} points An array of Vec3's.\n * @param {Vec3} position\n * @param {Quaternion} quaternion\n * @param {number} skinSize\n * @return {AABB} The self object\n */\n\nAABB.prototype.setFromPoints = function (points, position, quaternion, skinSize) {\n  var l = this.lowerBound,\n      u = this.upperBound,\n      q = quaternion; // Set to the first point\n\n  l.copy(points[0]);\n\n  if (q) {\n    q.vmult(l, l);\n  }\n\n  u.copy(l);\n\n  for (var i = 1; i < points.length; i++) {\n    var p = points[i];\n\n    if (q) {\n      q.vmult(p, tmp);\n      p = tmp;\n    }\n\n    if (p.x > u.x) {\n      u.x = p.x;\n    }\n\n    if (p.x < l.x) {\n      l.x = p.x;\n    }\n\n    if (p.y > u.y) {\n      u.y = p.y;\n    }\n\n    if (p.y < l.y) {\n      l.y = p.y;\n    }\n\n    if (p.z > u.z) {\n      u.z = p.z;\n    }\n\n    if (p.z < l.z) {\n      l.z = p.z;\n    }\n  } // Add offset\n\n\n  if (position) {\n    position.vadd(l, l);\n    position.vadd(u, u);\n  }\n\n  if (skinSize) {\n    l.x -= skinSize;\n    l.y -= skinSize;\n    l.z -= skinSize;\n    u.x += skinSize;\n    u.y += skinSize;\n    u.z += skinSize;\n  }\n\n  return this;\n};\n/**\n * Copy bounds from an AABB to this AABB\n * @method copy\n * @param  {AABB} aabb Source to copy from\n * @return {AABB} The this object, for chainability\n */\n\n\nAABB.prototype.copy = function (aabb) {\n  this.lowerBound.copy(aabb.lowerBound);\n  this.upperBound.copy(aabb.upperBound);\n  return this;\n};\n/**\n * Clone an AABB\n * @method clone\n */\n\n\nAABB.prototype.clone = function () {\n  return new AABB().copy(this);\n};\n/**\n * Extend this AABB so that it covers the given AABB too.\n * @method extend\n * @param  {AABB} aabb\n */\n\n\nAABB.prototype.extend = function (aabb) {\n  this.lowerBound.x = Math.min(this.lowerBound.x, aabb.lowerBound.x);\n  this.upperBound.x = Math.max(this.upperBound.x, aabb.upperBound.x);\n  this.lowerBound.y = Math.min(this.lowerBound.y, aabb.lowerBound.y);\n  this.upperBound.y = Math.max(this.upperBound.y, aabb.upperBound.y);\n  this.lowerBound.z = Math.min(this.lowerBound.z, aabb.lowerBound.z);\n  this.upperBound.z = Math.max(this.upperBound.z, aabb.upperBound.z);\n};\n/**\n * Returns true if the given AABB overlaps this AABB.\n * @method overlaps\n * @param  {AABB} aabb\n * @return {Boolean}\n */\n\n\nAABB.prototype.overlaps = function (aabb) {\n  var l1 = this.lowerBound,\n      u1 = this.upperBound,\n      l2 = aabb.lowerBound,\n      u2 = aabb.upperBound; //      l2        u2\n  //      |---------|\n  // |--------|\n  // l1       u1\n\n  var overlapsX = l2.x <= u1.x && u1.x <= u2.x || l1.x <= u2.x && u2.x <= u1.x;\n  var overlapsY = l2.y <= u1.y && u1.y <= u2.y || l1.y <= u2.y && u2.y <= u1.y;\n  var overlapsZ = l2.z <= u1.z && u1.z <= u2.z || l1.z <= u2.z && u2.z <= u1.z;\n  return overlapsX && overlapsY && overlapsZ;\n}; // Mostly for debugging\n\n\nAABB.prototype.volume = function () {\n  var l = this.lowerBound,\n      u = this.upperBound;\n  return (u.x - l.x) * (u.y - l.y) * (u.z - l.z);\n};\n/**\n * Returns true if the given AABB is fully contained in this AABB.\n * @method contains\n * @param {AABB} aabb\n * @return {Boolean}\n */\n\n\nAABB.prototype.contains = function (aabb) {\n  var l1 = this.lowerBound,\n      u1 = this.upperBound,\n      l2 = aabb.lowerBound,\n      u2 = aabb.upperBound; //      l2        u2\n  //      |---------|\n  // |---------------|\n  // l1              u1\n\n  return l1.x <= l2.x && u1.x >= u2.x && l1.y <= l2.y && u1.y >= u2.y && l1.z <= l2.z && u1.z >= u2.z;\n};\n/**\n * @method getCorners\n * @param {Vec3} a\n * @param {Vec3} b\n * @param {Vec3} c\n * @param {Vec3} d\n * @param {Vec3} e\n * @param {Vec3} f\n * @param {Vec3} g\n * @param {Vec3} h\n */\n\n\nAABB.prototype.getCorners = function (a, b, c, d, e, f, g, h) {\n  var l = this.lowerBound,\n      u = this.upperBound;\n  a.copy(l);\n  b.set(u.x, l.y, l.z);\n  c.set(u.x, u.y, l.z);\n  d.set(l.x, u.y, u.z);\n  e.set(u.x, l.y, l.z);\n  f.set(l.x, u.y, l.z);\n  g.set(l.x, l.y, u.z);\n  h.copy(u);\n};\n\nvar transformIntoFrame_corners = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n/**\n * Get the representation of an AABB in another frame.\n * @method toLocalFrame\n * @param  {Transform} frame\n * @param  {AABB} target\n * @return {AABB} The \"target\" AABB object.\n */\n\nAABB.prototype.toLocalFrame = function (frame, target) {\n  var corners = transformIntoFrame_corners;\n  var a = corners[0];\n  var b = corners[1];\n  var c = corners[2];\n  var d = corners[3];\n  var e = corners[4];\n  var f = corners[5];\n  var g = corners[6];\n  var h = corners[7]; // Get corners in current frame\n\n  this.getCorners(a, b, c, d, e, f, g, h); // Transform them to new local frame\n\n  for (var i = 0; i !== 8; i++) {\n    var corner = corners[i];\n    frame.pointToLocal(corner, corner);\n  }\n\n  return target.setFromPoints(corners);\n};\n/**\n * Get the representation of an AABB in the global frame.\n * @method toWorldFrame\n * @param  {Transform} frame\n * @param  {AABB} target\n * @return {AABB} The \"target\" AABB object.\n */\n\n\nAABB.prototype.toWorldFrame = function (frame, target) {\n  var corners = transformIntoFrame_corners;\n  var a = corners[0];\n  var b = corners[1];\n  var c = corners[2];\n  var d = corners[3];\n  var e = corners[4];\n  var f = corners[5];\n  var g = corners[6];\n  var h = corners[7]; // Get corners in current frame\n\n  this.getCorners(a, b, c, d, e, f, g, h); // Transform them to new local frame\n\n  for (var i = 0; i !== 8; i++) {\n    var corner = corners[i];\n    frame.pointToWorld(corner, corner);\n  }\n\n  return target.setFromPoints(corners);\n};\n/**\n * Check if the AABB is hit by a ray.\n * @param  {Ray} ray\n * @return {number}\n */\n\n\nAABB.prototype.overlapsRay = function (ray) {\n  var t = 0; // ray.direction is unit direction vector of ray\n\n  var dirFracX = 1 / ray._direction.x;\n  var dirFracY = 1 / ray._direction.y;\n  var dirFracZ = 1 / ray._direction.z; // this.lowerBound is the corner of AABB with minimal coordinates - left bottom, rt is maximal corner\n\n  var t1 = (this.lowerBound.x - ray.from.x) * dirFracX;\n  var t2 = (this.upperBound.x - ray.from.x) * dirFracX;\n  var t3 = (this.lowerBound.y - ray.from.y) * dirFracY;\n  var t4 = (this.upperBound.y - ray.from.y) * dirFracY;\n  var t5 = (this.lowerBound.z - ray.from.z) * dirFracZ;\n  var t6 = (this.upperBound.z - ray.from.z) * dirFracZ; // var tmin = Math.max(Math.max(Math.min(t1, t2), Math.min(t3, t4)));\n  // var tmax = Math.min(Math.min(Math.max(t1, t2), Math.max(t3, t4)));\n\n  var tmin = Math.max(Math.max(Math.min(t1, t2), Math.min(t3, t4)), Math.min(t5, t6));\n  var tmax = Math.min(Math.min(Math.max(t1, t2), Math.max(t3, t4)), Math.max(t5, t6)); // if tmax < 0, ray (line) is intersecting AABB, but whole AABB is behing us\n\n  if (tmax < 0) {\n    //t = tmax;\n    return false;\n  } // if tmin > tmax, ray doesn't intersect AABB\n\n\n  if (tmin > tmax) {\n    //t = tmax;\n    return false;\n  }\n\n  return true;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/collision/AABB.js?");

/***/ }),

/***/ "./node_modules/cannon/src/collision/ArrayCollisionMatrix.js":
/*!*******************************************************************!*\
  !*** ./node_modules/cannon/src/collision/ArrayCollisionMatrix.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = ArrayCollisionMatrix;\n/**\n * Collision \"matrix\". It's actually a triangular-shaped array of whether two bodies are touching this step, for reference next step\n * @class ArrayCollisionMatrix\n * @constructor\n */\n\nfunction ArrayCollisionMatrix() {\n  /**\n   * The matrix storage\n   * @property matrix\n   * @type {Array}\n   */\n  this.matrix = [];\n}\n/**\n * Get an element\n * @method get\n * @param  {Number} i\n * @param  {Number} j\n * @return {Number}\n */\n\n\nArrayCollisionMatrix.prototype.get = function (i, j) {\n  i = i.index;\n  j = j.index;\n\n  if (j > i) {\n    var temp = j;\n    j = i;\n    i = temp;\n  }\n\n  return this.matrix[(i * (i + 1) >> 1) + j - 1];\n};\n/**\n * Set an element\n * @method set\n * @param {Number} i\n * @param {Number} j\n * @param {Number} value\n */\n\n\nArrayCollisionMatrix.prototype.set = function (i, j, value) {\n  i = i.index;\n  j = j.index;\n\n  if (j > i) {\n    var temp = j;\n    j = i;\n    i = temp;\n  }\n\n  this.matrix[(i * (i + 1) >> 1) + j - 1] = value ? 1 : 0;\n};\n/**\n * Sets all elements to zero\n * @method reset\n */\n\n\nArrayCollisionMatrix.prototype.reset = function () {\n  for (var i = 0, l = this.matrix.length; i !== l; i++) {\n    this.matrix[i] = 0;\n  }\n};\n/**\n * Sets the max number of objects\n * @method setNumObjects\n * @param {Number} n\n */\n\n\nArrayCollisionMatrix.prototype.setNumObjects = function (n) {\n  this.matrix.length = n * (n - 1) >> 1;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/collision/ArrayCollisionMatrix.js?");

/***/ }),

/***/ "./node_modules/cannon/src/collision/Broadphase.js":
/*!*********************************************************!*\
  !*** ./node_modules/cannon/src/collision/Broadphase.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Body = __webpack_require__(/*! ../objects/Body */ \"./node_modules/cannon/src/objects/Body.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Quaternion = __webpack_require__(/*! ../math/Quaternion */ \"./node_modules/cannon/src/math/Quaternion.js\");\n\nvar Shape = __webpack_require__(/*! ../shapes/Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar Plane = __webpack_require__(/*! ../shapes/Plane */ \"./node_modules/cannon/src/shapes/Plane.js\");\n\nmodule.exports = Broadphase;\n/**\n * Base class for broadphase implementations\n * @class Broadphase\n * @constructor\n * @author schteppe\n */\n\nfunction Broadphase() {\n  /**\n  * The world to search for collisions in.\n  * @property world\n  * @type {World}\n  */\n  this.world = null;\n  /**\n   * If set to true, the broadphase uses bounding boxes for intersection test, else it uses bounding spheres.\n   * @property useBoundingBoxes\n   * @type {Boolean}\n   */\n\n  this.useBoundingBoxes = false;\n  /**\n   * Set to true if the objects in the world moved.\n   * @property {Boolean} dirty\n   */\n\n  this.dirty = true;\n}\n/**\n * Get the collision pairs from the world\n * @method collisionPairs\n * @param {World} world The world to search in\n * @param {Array} p1 Empty array to be filled with body objects\n * @param {Array} p2 Empty array to be filled with body objects\n */\n\n\nBroadphase.prototype.collisionPairs = function (world, p1, p2) {\n  throw new Error(\"collisionPairs not implemented for this BroadPhase class!\");\n};\n/**\n * Check if a body pair needs to be intersection tested at all.\n * @method needBroadphaseCollision\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @return {bool}\n */\n\n\nBroadphase.prototype.needBroadphaseCollision = function (bodyA, bodyB) {\n  // Check collision filter masks\n  if ((bodyA.collisionFilterGroup & bodyB.collisionFilterMask) === 0 || (bodyB.collisionFilterGroup & bodyA.collisionFilterMask) === 0) {\n    return false;\n  } // Check types\n\n\n  if (((bodyA.type & Body.STATIC) !== 0 || bodyA.sleepState === Body.SLEEPING) && ((bodyB.type & Body.STATIC) !== 0 || bodyB.sleepState === Body.SLEEPING)) {\n    // Both bodies are static or sleeping. Skip.\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check if the bounding volumes of two bodies intersect.\n * @method intersectionTest\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {array} pairs1\n * @param {array} pairs2\n  */\n\n\nBroadphase.prototype.intersectionTest = function (bodyA, bodyB, pairs1, pairs2) {\n  if (this.useBoundingBoxes) {\n    this.doBoundingBoxBroadphase(bodyA, bodyB, pairs1, pairs2);\n  } else {\n    this.doBoundingSphereBroadphase(bodyA, bodyB, pairs1, pairs2);\n  }\n};\n/**\n * Check if the bounding spheres of two bodies are intersecting.\n * @method doBoundingSphereBroadphase\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Array} pairs1 bodyA is appended to this array if intersection\n * @param {Array} pairs2 bodyB is appended to this array if intersection\n */\n\n\nvar Broadphase_collisionPairs_r = new Vec3(),\n    // Temp objects\nBroadphase_collisionPairs_normal = new Vec3(),\n    Broadphase_collisionPairs_quat = new Quaternion(),\n    Broadphase_collisionPairs_relpos = new Vec3();\n\nBroadphase.prototype.doBoundingSphereBroadphase = function (bodyA, bodyB, pairs1, pairs2) {\n  var r = Broadphase_collisionPairs_r;\n  bodyB.position.vsub(bodyA.position, r);\n  var boundingRadiusSum2 = Math.pow(bodyA.boundingRadius + bodyB.boundingRadius, 2);\n  var norm2 = r.norm2();\n\n  if (norm2 < boundingRadiusSum2) {\n    pairs1.push(bodyA);\n    pairs2.push(bodyB);\n  }\n};\n/**\n * Check if the bounding boxes of two bodies are intersecting.\n * @method doBoundingBoxBroadphase\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\n\n\nBroadphase.prototype.doBoundingBoxBroadphase = function (bodyA, bodyB, pairs1, pairs2) {\n  if (bodyA.aabbNeedsUpdate) {\n    bodyA.computeAABB();\n  }\n\n  if (bodyB.aabbNeedsUpdate) {\n    bodyB.computeAABB();\n  } // Check AABB / AABB\n\n\n  if (bodyA.aabb.overlaps(bodyB.aabb)) {\n    pairs1.push(bodyA);\n    pairs2.push(bodyB);\n  }\n};\n/**\n * Removes duplicate pairs from the pair arrays.\n * @method makePairsUnique\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\n\n\nvar Broadphase_makePairsUnique_temp = {\n  keys: []\n},\n    Broadphase_makePairsUnique_p1 = [],\n    Broadphase_makePairsUnique_p2 = [];\n\nBroadphase.prototype.makePairsUnique = function (pairs1, pairs2) {\n  var t = Broadphase_makePairsUnique_temp,\n      p1 = Broadphase_makePairsUnique_p1,\n      p2 = Broadphase_makePairsUnique_p2,\n      N = pairs1.length;\n\n  for (var i = 0; i !== N; i++) {\n    p1[i] = pairs1[i];\n    p2[i] = pairs2[i];\n  }\n\n  pairs1.length = 0;\n  pairs2.length = 0;\n\n  for (var i = 0; i !== N; i++) {\n    var id1 = p1[i].id,\n        id2 = p2[i].id;\n    var key = id1 < id2 ? id1 + \",\" + id2 : id2 + \",\" + id1;\n    t[key] = i;\n    t.keys.push(key);\n  }\n\n  for (var i = 0; i !== t.keys.length; i++) {\n    var key = t.keys.pop(),\n        pairIndex = t[key];\n    pairs1.push(p1[pairIndex]);\n    pairs2.push(p2[pairIndex]);\n    delete t[key];\n  }\n};\n/**\n * To be implemented by subcasses\n * @method setWorld\n * @param {World} world\n */\n\n\nBroadphase.prototype.setWorld = function (world) {};\n/**\n * Check if the bounding spheres of two bodies overlap.\n * @method boundingSphereCheck\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @return {boolean}\n */\n\n\nvar bsc_dist = new Vec3();\n\nBroadphase.boundingSphereCheck = function (bodyA, bodyB) {\n  var dist = bsc_dist;\n  bodyA.position.vsub(bodyB.position, dist);\n  return Math.pow(bodyA.shape.boundingSphereRadius + bodyB.shape.boundingSphereRadius, 2) > dist.norm2();\n};\n/**\n * Returns all the bodies within the AABB.\n * @method aabbQuery\n * @param  {World} world\n * @param  {AABB} aabb\n * @param  {array} result An array to store resulting bodies in.\n * @return {array}\n */\n\n\nBroadphase.prototype.aabbQuery = function (world, aabb, result) {\n  console.warn('.aabbQuery is not implemented in this Broadphase subclass.');\n  return [];\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/collision/Broadphase.js?");

/***/ }),

/***/ "./node_modules/cannon/src/collision/GridBroadphase.js":
/*!*************************************************************!*\
  !*** ./node_modules/cannon/src/collision/GridBroadphase.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = GridBroadphase;\n\nvar Broadphase = __webpack_require__(/*! ./Broadphase */ \"./node_modules/cannon/src/collision/Broadphase.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Shape = __webpack_require__(/*! ../shapes/Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n/**\n * Axis aligned uniform grid broadphase.\n * @class GridBroadphase\n * @constructor\n * @extends Broadphase\n * @todo Needs support for more than just planes and spheres.\n * @param {Vec3} aabbMin\n * @param {Vec3} aabbMax\n * @param {Number} nx Number of boxes along x\n * @param {Number} ny Number of boxes along y\n * @param {Number} nz Number of boxes along z\n */\n\n\nfunction GridBroadphase(aabbMin, aabbMax, nx, ny, nz) {\n  Broadphase.apply(this);\n  this.nx = nx || 10;\n  this.ny = ny || 10;\n  this.nz = nz || 10;\n  this.aabbMin = aabbMin || new Vec3(100, 100, 100);\n  this.aabbMax = aabbMax || new Vec3(-100, -100, -100);\n  var nbins = this.nx * this.ny * this.nz;\n\n  if (nbins <= 0) {\n    throw \"GridBroadphase: Each dimension's n must be >0\";\n  }\n\n  this.bins = [];\n  this.binLengths = []; //Rather than continually resizing arrays (thrashing the memory), just record length and allow them to grow\n\n  this.bins.length = nbins;\n  this.binLengths.length = nbins;\n\n  for (var i = 0; i < nbins; i++) {\n    this.bins[i] = [];\n    this.binLengths[i] = 0;\n  }\n}\n\nGridBroadphase.prototype = new Broadphase();\nGridBroadphase.prototype.constructor = GridBroadphase;\n/**\n * Get all the collision pairs in the physics world\n * @method collisionPairs\n * @param {World} world\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\n\nvar GridBroadphase_collisionPairs_d = new Vec3();\nvar GridBroadphase_collisionPairs_binPos = new Vec3();\n\nGridBroadphase.prototype.collisionPairs = function (world, pairs1, pairs2) {\n  var N = world.numObjects(),\n      bodies = world.bodies;\n  var max = this.aabbMax,\n      min = this.aabbMin,\n      nx = this.nx,\n      ny = this.ny,\n      nz = this.nz;\n  var xstep = ny * nz;\n  var ystep = nz;\n  var zstep = 1;\n  var xmax = max.x,\n      ymax = max.y,\n      zmax = max.z,\n      xmin = min.x,\n      ymin = min.y,\n      zmin = min.z;\n  var xmult = nx / (xmax - xmin),\n      ymult = ny / (ymax - ymin),\n      zmult = nz / (zmax - zmin);\n  var binsizeX = (xmax - xmin) / nx,\n      binsizeY = (ymax - ymin) / ny,\n      binsizeZ = (zmax - zmin) / nz;\n  var binRadius = Math.sqrt(binsizeX * binsizeX + binsizeY * binsizeY + binsizeZ * binsizeZ) * 0.5;\n  var types = Shape.types;\n  var SPHERE = types.SPHERE,\n      PLANE = types.PLANE,\n      BOX = types.BOX,\n      COMPOUND = types.COMPOUND,\n      CONVEXPOLYHEDRON = types.CONVEXPOLYHEDRON;\n  var bins = this.bins,\n      binLengths = this.binLengths,\n      Nbins = this.bins.length; // Reset bins\n\n  for (var i = 0; i !== Nbins; i++) {\n    binLengths[i] = 0;\n  }\n\n  var ceil = Math.ceil;\n  var min = Math.min;\n  var max = Math.max;\n\n  function addBoxToBins(x0, y0, z0, x1, y1, z1, bi) {\n    var xoff0 = (x0 - xmin) * xmult | 0,\n        yoff0 = (y0 - ymin) * ymult | 0,\n        zoff0 = (z0 - zmin) * zmult | 0,\n        xoff1 = ceil((x1 - xmin) * xmult),\n        yoff1 = ceil((y1 - ymin) * ymult),\n        zoff1 = ceil((z1 - zmin) * zmult);\n\n    if (xoff0 < 0) {\n      xoff0 = 0;\n    } else if (xoff0 >= nx) {\n      xoff0 = nx - 1;\n    }\n\n    if (yoff0 < 0) {\n      yoff0 = 0;\n    } else if (yoff0 >= ny) {\n      yoff0 = ny - 1;\n    }\n\n    if (zoff0 < 0) {\n      zoff0 = 0;\n    } else if (zoff0 >= nz) {\n      zoff0 = nz - 1;\n    }\n\n    if (xoff1 < 0) {\n      xoff1 = 0;\n    } else if (xoff1 >= nx) {\n      xoff1 = nx - 1;\n    }\n\n    if (yoff1 < 0) {\n      yoff1 = 0;\n    } else if (yoff1 >= ny) {\n      yoff1 = ny - 1;\n    }\n\n    if (zoff1 < 0) {\n      zoff1 = 0;\n    } else if (zoff1 >= nz) {\n      zoff1 = nz - 1;\n    }\n\n    xoff0 *= xstep;\n    yoff0 *= ystep;\n    zoff0 *= zstep;\n    xoff1 *= xstep;\n    yoff1 *= ystep;\n    zoff1 *= zstep;\n\n    for (var xoff = xoff0; xoff <= xoff1; xoff += xstep) {\n      for (var yoff = yoff0; yoff <= yoff1; yoff += ystep) {\n        for (var zoff = zoff0; zoff <= zoff1; zoff += zstep) {\n          var idx = xoff + yoff + zoff;\n          bins[idx][binLengths[idx]++] = bi;\n        }\n      }\n    }\n  } // Put all bodies into the bins\n\n\n  for (var i = 0; i !== N; i++) {\n    var bi = bodies[i];\n    var si = bi.shape;\n\n    switch (si.type) {\n      case SPHERE:\n        // Put in bin\n        // check if overlap with other bins\n        var x = bi.position.x,\n            y = bi.position.y,\n            z = bi.position.z;\n        var r = si.radius;\n        addBoxToBins(x - r, y - r, z - r, x + r, y + r, z + r, bi);\n        break;\n\n      case PLANE:\n        if (si.worldNormalNeedsUpdate) {\n          si.computeWorldNormal(bi.quaternion);\n        }\n\n        var planeNormal = si.worldNormal; //Relative position from origin of plane object to the first bin\n        //Incremented as we iterate through the bins\n\n        var xreset = xmin + binsizeX * 0.5 - bi.position.x,\n            yreset = ymin + binsizeY * 0.5 - bi.position.y,\n            zreset = zmin + binsizeZ * 0.5 - bi.position.z;\n        var d = GridBroadphase_collisionPairs_d;\n        d.set(xreset, yreset, zreset);\n\n        for (var xi = 0, xoff = 0; xi !== nx; xi++, xoff += xstep, d.y = yreset, d.x += binsizeX) {\n          for (var yi = 0, yoff = 0; yi !== ny; yi++, yoff += ystep, d.z = zreset, d.y += binsizeY) {\n            for (var zi = 0, zoff = 0; zi !== nz; zi++, zoff += zstep, d.z += binsizeZ) {\n              if (d.dot(planeNormal) < binRadius) {\n                var idx = xoff + yoff + zoff;\n                bins[idx][binLengths[idx]++] = bi;\n              }\n            }\n          }\n        }\n\n        break;\n\n      default:\n        if (bi.aabbNeedsUpdate) {\n          bi.computeAABB();\n        }\n\n        addBoxToBins(bi.aabb.lowerBound.x, bi.aabb.lowerBound.y, bi.aabb.lowerBound.z, bi.aabb.upperBound.x, bi.aabb.upperBound.y, bi.aabb.upperBound.z, bi);\n        break;\n    }\n  } // Check each bin\n\n\n  for (var i = 0; i !== Nbins; i++) {\n    var binLength = binLengths[i]; //Skip bins with no potential collisions\n\n    if (binLength > 1) {\n      var bin = bins[i]; // Do N^2 broadphase inside\n\n      for (var xi = 0; xi !== binLength; xi++) {\n        var bi = bin[xi];\n\n        for (var yi = 0; yi !== xi; yi++) {\n          var bj = bin[yi];\n\n          if (this.needBroadphaseCollision(bi, bj)) {\n            this.intersectionTest(bi, bj, pairs1, pairs2);\n          }\n        }\n      }\n    }\n  } //\tfor (var zi = 0, zoff=0; zi < nz; zi++, zoff+= zstep) {\n  //\t\tconsole.log(\"layer \"+zi);\n  //\t\tfor (var yi = 0, yoff=0; yi < ny; yi++, yoff += ystep) {\n  //\t\t\tvar row = '';\n  //\t\t\tfor (var xi = 0, xoff=0; xi < nx; xi++, xoff += xstep) {\n  //\t\t\t\tvar idx = xoff + yoff + zoff;\n  //\t\t\t\trow += ' ' + binLengths[idx];\n  //\t\t\t}\n  //\t\t\tconsole.log(row);\n  //\t\t}\n  //\t}\n\n\n  this.makePairsUnique(pairs1, pairs2);\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/collision/GridBroadphase.js?");

/***/ }),

/***/ "./node_modules/cannon/src/collision/NaiveBroadphase.js":
/*!**************************************************************!*\
  !*** ./node_modules/cannon/src/collision/NaiveBroadphase.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = NaiveBroadphase;\n\nvar Broadphase = __webpack_require__(/*! ./Broadphase */ \"./node_modules/cannon/src/collision/Broadphase.js\");\n\nvar AABB = __webpack_require__(/*! ./AABB */ \"./node_modules/cannon/src/collision/AABB.js\");\n/**\n * Naive broadphase implementation, used in lack of better ones.\n * @class NaiveBroadphase\n * @constructor\n * @description The naive broadphase looks at all possible pairs without restriction, therefore it has complexity N^2 (which is bad)\n * @extends Broadphase\n */\n\n\nfunction NaiveBroadphase() {\n  Broadphase.apply(this);\n}\n\nNaiveBroadphase.prototype = new Broadphase();\nNaiveBroadphase.prototype.constructor = NaiveBroadphase;\n/**\n * Get all the collision pairs in the physics world\n * @method collisionPairs\n * @param {World} world\n * @param {Array} pairs1\n * @param {Array} pairs2\n */\n\nNaiveBroadphase.prototype.collisionPairs = function (world, pairs1, pairs2) {\n  var bodies = world.bodies,\n      n = bodies.length,\n      i,\n      j,\n      bi,\n      bj; // Naive N^2 ftw!\n\n  for (i = 0; i !== n; i++) {\n    for (j = 0; j !== i; j++) {\n      bi = bodies[i];\n      bj = bodies[j];\n\n      if (!this.needBroadphaseCollision(bi, bj)) {\n        continue;\n      }\n\n      this.intersectionTest(bi, bj, pairs1, pairs2);\n    }\n  }\n};\n\nvar tmpAABB = new AABB();\n/**\n * Returns all the bodies within an AABB.\n * @method aabbQuery\n * @param  {World} world\n * @param  {AABB} aabb\n * @param {array} result An array to store resulting bodies in.\n * @return {array}\n */\n\nNaiveBroadphase.prototype.aabbQuery = function (world, aabb, result) {\n  result = result || [];\n\n  for (var i = 0; i < world.bodies.length; i++) {\n    var b = world.bodies[i];\n\n    if (b.aabbNeedsUpdate) {\n      b.computeAABB();\n    } // Ugly hack until Body gets aabb\n\n\n    if (b.aabb.overlaps(aabb)) {\n      result.push(b);\n    }\n  }\n\n  return result;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/collision/NaiveBroadphase.js?");

/***/ }),

/***/ "./node_modules/cannon/src/collision/ObjectCollisionMatrix.js":
/*!********************************************************************!*\
  !*** ./node_modules/cannon/src/collision/ObjectCollisionMatrix.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = ObjectCollisionMatrix;\n/**\n * Records what objects are colliding with each other\n * @class ObjectCollisionMatrix\n * @constructor\n */\n\nfunction ObjectCollisionMatrix() {\n  /**\n   * The matrix storage\n   * @property matrix\n   * @type {Object}\n   */\n  this.matrix = {};\n}\n/**\n * @method get\n * @param  {Number} i\n * @param  {Number} j\n * @return {Number}\n */\n\n\nObjectCollisionMatrix.prototype.get = function (i, j) {\n  i = i.id;\n  j = j.id;\n\n  if (j > i) {\n    var temp = j;\n    j = i;\n    i = temp;\n  }\n\n  return i + '-' + j in this.matrix;\n};\n/**\n * @method set\n * @param  {Number} i\n * @param  {Number} j\n * @param {Number} value\n */\n\n\nObjectCollisionMatrix.prototype.set = function (i, j, value) {\n  i = i.id;\n  j = j.id;\n\n  if (j > i) {\n    var temp = j;\n    j = i;\n    i = temp;\n  }\n\n  if (value) {\n    this.matrix[i + '-' + j] = true;\n  } else {\n    delete this.matrix[i + '-' + j];\n  }\n};\n/**\n * Empty the matrix\n * @method reset\n */\n\n\nObjectCollisionMatrix.prototype.reset = function () {\n  this.matrix = {};\n};\n/**\n * Set max number of objects\n * @method setNumObjects\n * @param {Number} n\n */\n\n\nObjectCollisionMatrix.prototype.setNumObjects = function (n) {};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/collision/ObjectCollisionMatrix.js?");

/***/ }),

/***/ "./node_modules/cannon/src/collision/OverlapKeeper.js":
/*!************************************************************!*\
  !*** ./node_modules/cannon/src/collision/OverlapKeeper.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = OverlapKeeper;\n/**\n * @class OverlapKeeper\n * @constructor\n */\n\nfunction OverlapKeeper() {\n  this.current = [];\n  this.previous = [];\n}\n\nOverlapKeeper.prototype.getKey = function (i, j) {\n  if (j < i) {\n    var temp = j;\n    j = i;\n    i = temp;\n  }\n\n  return i << 16 | j;\n};\n/**\n * @method set\n * @param {Number} i\n * @param {Number} j\n */\n\n\nOverlapKeeper.prototype.set = function (i, j) {\n  // Insertion sort. This way the diff will have linear complexity.\n  var key = this.getKey(i, j);\n  var current = this.current;\n  var index = 0;\n\n  while (key > current[index]) {\n    index++;\n  }\n\n  if (key === current[index]) {\n    return; // Pair was already added\n  }\n\n  for (var j = current.length - 1; j >= index; j--) {\n    current[j + 1] = current[j];\n  }\n\n  current[index] = key;\n};\n/**\n * @method tick\n */\n\n\nOverlapKeeper.prototype.tick = function () {\n  var tmp = this.current;\n  this.current = this.previous;\n  this.previous = tmp;\n  this.current.length = 0;\n};\n\nfunction unpackAndPush(array, key) {\n  array.push((key & 0xFFFF0000) >> 16, key & 0x0000FFFF);\n}\n/**\n * @method getDiff\n * @param  {array} additions\n * @param  {array} removals\n */\n\n\nOverlapKeeper.prototype.getDiff = function (additions, removals) {\n  var a = this.current;\n  var b = this.previous;\n  var al = a.length;\n  var bl = b.length;\n  var j = 0;\n\n  for (var i = 0; i < al; i++) {\n    var found = false;\n    var keyA = a[i];\n\n    while (keyA > b[j]) {\n      j++;\n    }\n\n    found = keyA === b[j];\n\n    if (!found) {\n      unpackAndPush(additions, keyA);\n    }\n  }\n\n  j = 0;\n\n  for (var i = 0; i < bl; i++) {\n    var found = false;\n    var keyB = b[i];\n\n    while (keyB > a[j]) {\n      j++;\n    }\n\n    found = a[j] === keyB;\n\n    if (!found) {\n      unpackAndPush(removals, keyB);\n    }\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/collision/OverlapKeeper.js?");

/***/ }),

/***/ "./node_modules/cannon/src/collision/Ray.js":
/*!**************************************************!*\
  !*** ./node_modules/cannon/src/collision/Ray.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Ray;\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Quaternion = __webpack_require__(/*! ../math/Quaternion */ \"./node_modules/cannon/src/math/Quaternion.js\");\n\nvar Transform = __webpack_require__(/*! ../math/Transform */ \"./node_modules/cannon/src/math/Transform.js\");\n\nvar ConvexPolyhedron = __webpack_require__(/*! ../shapes/ConvexPolyhedron */ \"./node_modules/cannon/src/shapes/ConvexPolyhedron.js\");\n\nvar Box = __webpack_require__(/*! ../shapes/Box */ \"./node_modules/cannon/src/shapes/Box.js\");\n\nvar RaycastResult = __webpack_require__(/*! ../collision/RaycastResult */ \"./node_modules/cannon/src/collision/RaycastResult.js\");\n\nvar Shape = __webpack_require__(/*! ../shapes/Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar AABB = __webpack_require__(/*! ../collision/AABB */ \"./node_modules/cannon/src/collision/AABB.js\");\n/**\n * A line in 3D space that intersects bodies and return points.\n * @class Ray\n * @constructor\n * @param {Vec3} from\n * @param {Vec3} to\n */\n\n\nfunction Ray(from, to) {\n  /**\n   * @property {Vec3} from\n   */\n  this.from = from ? from.clone() : new Vec3();\n  /**\n   * @property {Vec3} to\n   */\n\n  this.to = to ? to.clone() : new Vec3();\n  /**\n   * @private\n   * @property {Vec3} _direction\n   */\n\n  this._direction = new Vec3();\n  /**\n   * The precision of the ray. Used when checking parallelity etc.\n   * @property {Number} precision\n   */\n\n  this.precision = 0.0001;\n  /**\n   * Set to true if you want the Ray to take .collisionResponse flags into account on bodies and shapes.\n   * @property {Boolean} checkCollisionResponse\n   */\n\n  this.checkCollisionResponse = true;\n  /**\n   * If set to true, the ray skips any hits with normal.dot(rayDirection) < 0.\n   * @property {Boolean} skipBackfaces\n   */\n\n  this.skipBackfaces = false;\n  /**\n   * @property {number} collisionFilterMask\n   * @default -1\n   */\n\n  this.collisionFilterMask = -1;\n  /**\n   * @property {number} collisionFilterGroup\n   * @default -1\n   */\n\n  this.collisionFilterGroup = -1;\n  /**\n   * The intersection mode. Should be Ray.ANY, Ray.ALL or Ray.CLOSEST.\n   * @property {number} mode\n   */\n\n  this.mode = Ray.ANY;\n  /**\n   * Current result object.\n   * @property {RaycastResult} result\n   */\n\n  this.result = new RaycastResult();\n  /**\n   * Will be set to true during intersectWorld() if the ray hit anything.\n   * @property {Boolean} hasHit\n   */\n\n  this.hasHit = false;\n  /**\n   * Current, user-provided result callback. Will be used if mode is Ray.ALL.\n   * @property {Function} callback\n   */\n\n  this.callback = function (result) {};\n}\n\nRay.prototype.constructor = Ray;\nRay.CLOSEST = 1;\nRay.ANY = 2;\nRay.ALL = 4;\nvar tmpAABB = new AABB();\nvar tmpArray = [];\n/**\n * Do itersection against all bodies in the given World.\n * @method intersectWorld\n * @param  {World} world\n * @param  {object} options\n * @return {Boolean} True if the ray hit anything, otherwise false.\n */\n\nRay.prototype.intersectWorld = function (world, options) {\n  this.mode = options.mode || Ray.ANY;\n  this.result = options.result || new RaycastResult();\n  this.skipBackfaces = !!options.skipBackfaces;\n  this.collisionFilterMask = typeof options.collisionFilterMask !== 'undefined' ? options.collisionFilterMask : -1;\n  this.collisionFilterGroup = typeof options.collisionFilterGroup !== 'undefined' ? options.collisionFilterGroup : -1;\n\n  if (options.from) {\n    this.from.copy(options.from);\n  }\n\n  if (options.to) {\n    this.to.copy(options.to);\n  }\n\n  this.callback = options.callback || function () {};\n\n  this.hasHit = false;\n  this.result.reset();\n\n  this._updateDirection();\n\n  this.getAABB(tmpAABB);\n  tmpArray.length = 0;\n  world.broadphase.aabbQuery(world, tmpAABB, tmpArray);\n  this.intersectBodies(tmpArray);\n  return this.hasHit;\n};\n\nvar v1 = new Vec3(),\n    v2 = new Vec3();\n/*\n * As per \"Barycentric Technique\" as named here http://www.blackpawn.com/texts/pointinpoly/default.html But without the division\n */\n\nRay.pointInTriangle = pointInTriangle;\n\nfunction pointInTriangle(p, a, b, c) {\n  c.vsub(a, v0);\n  b.vsub(a, v1);\n  p.vsub(a, v2);\n  var dot00 = v0.dot(v0);\n  var dot01 = v0.dot(v1);\n  var dot02 = v0.dot(v2);\n  var dot11 = v1.dot(v1);\n  var dot12 = v1.dot(v2);\n  var u, v;\n  return (u = dot11 * dot02 - dot01 * dot12) >= 0 && (v = dot00 * dot12 - dot01 * dot02) >= 0 && u + v < dot00 * dot11 - dot01 * dot01;\n}\n/**\n * Shoot a ray at a body, get back information about the hit.\n * @method intersectBody\n * @private\n * @param {Body} body\n * @param {RaycastResult} [result] Deprecated - set the result property of the Ray instead.\n */\n\n\nvar intersectBody_xi = new Vec3();\nvar intersectBody_qi = new Quaternion();\n\nRay.prototype.intersectBody = function (body, result) {\n  if (result) {\n    this.result = result;\n\n    this._updateDirection();\n  }\n\n  var checkCollisionResponse = this.checkCollisionResponse;\n\n  if (checkCollisionResponse && !body.collisionResponse) {\n    return;\n  }\n\n  if ((this.collisionFilterGroup & body.collisionFilterMask) === 0 || (body.collisionFilterGroup & this.collisionFilterMask) === 0) {\n    return;\n  }\n\n  var xi = intersectBody_xi;\n  var qi = intersectBody_qi;\n\n  for (var i = 0, N = body.shapes.length; i < N; i++) {\n    var shape = body.shapes[i];\n\n    if (checkCollisionResponse && !shape.collisionResponse) {\n      continue; // Skip\n    }\n\n    body.quaternion.mult(body.shapeOrientations[i], qi);\n    body.quaternion.vmult(body.shapeOffsets[i], xi);\n    xi.vadd(body.position, xi);\n    this.intersectShape(shape, qi, xi, body);\n\n    if (this.result._shouldStop) {\n      break;\n    }\n  }\n};\n/**\n * @method intersectBodies\n * @param {Array} bodies An array of Body objects.\n * @param {RaycastResult} [result] Deprecated\n */\n\n\nRay.prototype.intersectBodies = function (bodies, result) {\n  if (result) {\n    this.result = result;\n\n    this._updateDirection();\n  }\n\n  for (var i = 0, l = bodies.length; !this.result._shouldStop && i < l; i++) {\n    this.intersectBody(bodies[i]);\n  }\n};\n/**\n * Updates the _direction vector.\n * @private\n * @method _updateDirection\n */\n\n\nRay.prototype._updateDirection = function () {\n  this.to.vsub(this.from, this._direction);\n\n  this._direction.normalize();\n};\n/**\n * @method intersectShape\n * @private\n * @param {Shape} shape\n * @param {Quaternion} quat\n * @param {Vec3} position\n * @param {Body} body\n */\n\n\nRay.prototype.intersectShape = function (shape, quat, position, body) {\n  var from = this.from; // Checking boundingSphere\n\n  var distance = distanceFromIntersection(from, this._direction, position);\n\n  if (distance > shape.boundingSphereRadius) {\n    return;\n  }\n\n  var intersectMethod = this[shape.type];\n\n  if (intersectMethod) {\n    intersectMethod.call(this, shape, quat, position, body, shape);\n  }\n};\n\nvar vector = new Vec3();\nvar normal = new Vec3();\nvar intersectPoint = new Vec3();\nvar a = new Vec3();\nvar b = new Vec3();\nvar c = new Vec3();\nvar d = new Vec3();\nvar tmpRaycastResult = new RaycastResult();\n/**\n * @method intersectBox\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\n\nRay.prototype.intersectBox = function (shape, quat, position, body, reportedShape) {\n  return this.intersectConvex(shape.convexPolyhedronRepresentation, quat, position, body, reportedShape);\n};\n\nRay.prototype[Shape.types.BOX] = Ray.prototype.intersectBox;\n/**\n * @method intersectPlane\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\n\nRay.prototype.intersectPlane = function (shape, quat, position, body, reportedShape) {\n  var from = this.from;\n  var to = this.to;\n  var direction = this._direction; // Get plane normal\n\n  var worldNormal = new Vec3(0, 0, 1);\n  quat.vmult(worldNormal, worldNormal);\n  var len = new Vec3();\n  from.vsub(position, len);\n  var planeToFrom = len.dot(worldNormal);\n  to.vsub(position, len);\n  var planeToTo = len.dot(worldNormal);\n\n  if (planeToFrom * planeToTo > 0) {\n    // \"from\" and \"to\" are on the same side of the plane... bail out\n    return;\n  }\n\n  if (from.distanceTo(to) < planeToFrom) {\n    return;\n  }\n\n  var n_dot_dir = worldNormal.dot(direction);\n\n  if (Math.abs(n_dot_dir) < this.precision) {\n    // No intersection\n    return;\n  }\n\n  var planePointToFrom = new Vec3();\n  var dir_scaled_with_t = new Vec3();\n  var hitPointWorld = new Vec3();\n  from.vsub(position, planePointToFrom);\n  var t = -worldNormal.dot(planePointToFrom) / n_dot_dir;\n  direction.scale(t, dir_scaled_with_t);\n  from.vadd(dir_scaled_with_t, hitPointWorld);\n  this.reportIntersection(worldNormal, hitPointWorld, reportedShape, body, -1);\n};\n\nRay.prototype[Shape.types.PLANE] = Ray.prototype.intersectPlane;\n/**\n * Get the world AABB of the ray.\n * @method getAABB\n * @param  {AABB} aabb\n */\n\nRay.prototype.getAABB = function (result) {\n  var to = this.to;\n  var from = this.from;\n  result.lowerBound.x = Math.min(to.x, from.x);\n  result.lowerBound.y = Math.min(to.y, from.y);\n  result.lowerBound.z = Math.min(to.z, from.z);\n  result.upperBound.x = Math.max(to.x, from.x);\n  result.upperBound.y = Math.max(to.y, from.y);\n  result.upperBound.z = Math.max(to.z, from.z);\n};\n\nvar intersectConvexOptions = {\n  faceList: [0]\n};\nvar worldPillarOffset = new Vec3();\nvar intersectHeightfield_localRay = new Ray();\nvar intersectHeightfield_index = [];\nvar intersectHeightfield_minMax = [];\n/**\n * @method intersectHeightfield\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\n\nRay.prototype.intersectHeightfield = function (shape, quat, position, body, reportedShape) {\n  var data = shape.data,\n      w = shape.elementSize; // Convert the ray to local heightfield coordinates\n\n  var localRay = intersectHeightfield_localRay; //new Ray(this.from, this.to);\n\n  localRay.from.copy(this.from);\n  localRay.to.copy(this.to);\n  Transform.pointToLocalFrame(position, quat, localRay.from, localRay.from);\n  Transform.pointToLocalFrame(position, quat, localRay.to, localRay.to);\n\n  localRay._updateDirection(); // Get the index of the data points to test against\n\n\n  var index = intersectHeightfield_index;\n  var iMinX, iMinY, iMaxX, iMaxY; // Set to max\n\n  iMinX = iMinY = 0;\n  iMaxX = iMaxY = shape.data.length - 1;\n  var aabb = new AABB();\n  localRay.getAABB(aabb);\n  shape.getIndexOfPosition(aabb.lowerBound.x, aabb.lowerBound.y, index, true);\n  iMinX = Math.max(iMinX, index[0]);\n  iMinY = Math.max(iMinY, index[1]);\n  shape.getIndexOfPosition(aabb.upperBound.x, aabb.upperBound.y, index, true);\n  iMaxX = Math.min(iMaxX, index[0] + 1);\n  iMaxY = Math.min(iMaxY, index[1] + 1);\n\n  for (var i = iMinX; i < iMaxX; i++) {\n    for (var j = iMinY; j < iMaxY; j++) {\n      if (this.result._shouldStop) {\n        return;\n      }\n\n      shape.getAabbAtIndex(i, j, aabb);\n\n      if (!aabb.overlapsRay(localRay)) {\n        continue;\n      } // Lower triangle\n\n\n      shape.getConvexTrianglePillar(i, j, false);\n      Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\n      this.intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, reportedShape, intersectConvexOptions);\n\n      if (this.result._shouldStop) {\n        return;\n      } // Upper triangle\n\n\n      shape.getConvexTrianglePillar(i, j, true);\n      Transform.pointToWorldFrame(position, quat, shape.pillarOffset, worldPillarOffset);\n      this.intersectConvex(shape.pillarConvex, quat, worldPillarOffset, body, reportedShape, intersectConvexOptions);\n    }\n  }\n};\n\nRay.prototype[Shape.types.HEIGHTFIELD] = Ray.prototype.intersectHeightfield;\nvar Ray_intersectSphere_intersectionPoint = new Vec3();\nvar Ray_intersectSphere_normal = new Vec3();\n/**\n * @method intersectSphere\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n */\n\nRay.prototype.intersectSphere = function (shape, quat, position, body, reportedShape) {\n  var from = this.from,\n      to = this.to,\n      r = shape.radius;\n  var a = Math.pow(to.x - from.x, 2) + Math.pow(to.y - from.y, 2) + Math.pow(to.z - from.z, 2);\n  var b = 2 * ((to.x - from.x) * (from.x - position.x) + (to.y - from.y) * (from.y - position.y) + (to.z - from.z) * (from.z - position.z));\n  var c = Math.pow(from.x - position.x, 2) + Math.pow(from.y - position.y, 2) + Math.pow(from.z - position.z, 2) - Math.pow(r, 2);\n  var delta = Math.pow(b, 2) - 4 * a * c;\n  var intersectionPoint = Ray_intersectSphere_intersectionPoint;\n  var normal = Ray_intersectSphere_normal;\n\n  if (delta < 0) {\n    // No intersection\n    return;\n  } else if (delta === 0) {\n    // single intersection point\n    from.lerp(to, delta, intersectionPoint);\n    intersectionPoint.vsub(position, normal);\n    normal.normalize();\n    this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\n  } else {\n    var d1 = (-b - Math.sqrt(delta)) / (2 * a);\n    var d2 = (-b + Math.sqrt(delta)) / (2 * a);\n\n    if (d1 >= 0 && d1 <= 1) {\n      from.lerp(to, d1, intersectionPoint);\n      intersectionPoint.vsub(position, normal);\n      normal.normalize();\n      this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\n    }\n\n    if (this.result._shouldStop) {\n      return;\n    }\n\n    if (d2 >= 0 && d2 <= 1) {\n      from.lerp(to, d2, intersectionPoint);\n      intersectionPoint.vsub(position, normal);\n      normal.normalize();\n      this.reportIntersection(normal, intersectionPoint, reportedShape, body, -1);\n    }\n  }\n};\n\nRay.prototype[Shape.types.SPHERE] = Ray.prototype.intersectSphere;\nvar intersectConvex_normal = new Vec3();\nvar intersectConvex_minDistNormal = new Vec3();\nvar intersectConvex_minDistIntersect = new Vec3();\nvar intersectConvex_vector = new Vec3();\n/**\n * @method intersectConvex\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n * @param {object} [options]\n * @param {array} [options.faceList]\n */\n\nRay.prototype.intersectConvex = function intersectConvex(shape, quat, position, body, reportedShape, options) {\n  var minDistNormal = intersectConvex_minDistNormal;\n  var normal = intersectConvex_normal;\n  var vector = intersectConvex_vector;\n  var minDistIntersect = intersectConvex_minDistIntersect;\n  var faceList = options && options.faceList || null; // Checking faces\n\n  var faces = shape.faces,\n      vertices = shape.vertices,\n      normals = shape.faceNormals;\n  var direction = this._direction;\n  var from = this.from;\n  var to = this.to;\n  var fromToDistance = from.distanceTo(to);\n  var minDist = -1;\n  var Nfaces = faceList ? faceList.length : faces.length;\n  var result = this.result;\n\n  for (var j = 0; !result._shouldStop && j < Nfaces; j++) {\n    var fi = faceList ? faceList[j] : j;\n    var face = faces[fi];\n    var faceNormal = normals[fi];\n    var q = quat;\n    var x = position; // determine if ray intersects the plane of the face\n    // note: this works regardless of the direction of the face normal\n    // Get plane point in world coordinates...\n\n    vector.copy(vertices[face[0]]);\n    q.vmult(vector, vector);\n    vector.vadd(x, vector); // ...but make it relative to the ray from. We'll fix this later.\n\n    vector.vsub(from, vector); // Get plane normal\n\n    q.vmult(faceNormal, normal); // If this dot product is negative, we have something interesting\n\n    var dot = direction.dot(normal); // Bail out if ray and plane are parallel\n\n    if (Math.abs(dot) < this.precision) {\n      continue;\n    } // calc distance to plane\n\n\n    var scalar = normal.dot(vector) / dot; // if negative distance, then plane is behind ray\n\n    if (scalar < 0) {\n      continue;\n    } // if (dot < 0) {\n    // Intersection point is from + direction * scalar\n\n\n    direction.mult(scalar, intersectPoint);\n    intersectPoint.vadd(from, intersectPoint); // a is the point we compare points b and c with.\n\n    a.copy(vertices[face[0]]);\n    q.vmult(a, a);\n    x.vadd(a, a);\n\n    for (var i = 1; !result._shouldStop && i < face.length - 1; i++) {\n      // Transform 3 vertices to world coords\n      b.copy(vertices[face[i]]);\n      c.copy(vertices[face[i + 1]]);\n      q.vmult(b, b);\n      q.vmult(c, c);\n      x.vadd(b, b);\n      x.vadd(c, c);\n      var distance = intersectPoint.distanceTo(from);\n\n      if (!(pointInTriangle(intersectPoint, a, b, c) || pointInTriangle(intersectPoint, b, a, c)) || distance > fromToDistance) {\n        continue;\n      }\n\n      this.reportIntersection(normal, intersectPoint, reportedShape, body, fi);\n    } // }\n\n  }\n};\n\nRay.prototype[Shape.types.CONVEXPOLYHEDRON] = Ray.prototype.intersectConvex;\nvar intersectTrimesh_normal = new Vec3();\nvar intersectTrimesh_localDirection = new Vec3();\nvar intersectTrimesh_localFrom = new Vec3();\nvar intersectTrimesh_localTo = new Vec3();\nvar intersectTrimesh_worldNormal = new Vec3();\nvar intersectTrimesh_worldIntersectPoint = new Vec3();\nvar intersectTrimesh_localAABB = new AABB();\nvar intersectTrimesh_triangles = [];\nvar intersectTrimesh_treeTransform = new Transform();\n/**\n * @method intersectTrimesh\n * @private\n * @param  {Shape} shape\n * @param  {Quaternion} quat\n * @param  {Vec3} position\n * @param  {Body} body\n * @param {object} [options]\n * @todo Optimize by transforming the world to local space first.\n * @todo Use Octree lookup\n */\n\nRay.prototype.intersectTrimesh = function intersectTrimesh(mesh, quat, position, body, reportedShape, options) {\n  var normal = intersectTrimesh_normal;\n  var triangles = intersectTrimesh_triangles;\n  var treeTransform = intersectTrimesh_treeTransform;\n  var minDistNormal = intersectConvex_minDistNormal;\n  var vector = intersectConvex_vector;\n  var minDistIntersect = intersectConvex_minDistIntersect;\n  var localAABB = intersectTrimesh_localAABB;\n  var localDirection = intersectTrimesh_localDirection;\n  var localFrom = intersectTrimesh_localFrom;\n  var localTo = intersectTrimesh_localTo;\n  var worldIntersectPoint = intersectTrimesh_worldIntersectPoint;\n  var worldNormal = intersectTrimesh_worldNormal;\n  var faceList = options && options.faceList || null; // Checking faces\n\n  var indices = mesh.indices,\n      vertices = mesh.vertices,\n      normals = mesh.faceNormals;\n  var from = this.from;\n  var to = this.to;\n  var direction = this._direction;\n  var minDist = -1;\n  treeTransform.position.copy(position);\n  treeTransform.quaternion.copy(quat); // Transform ray to local space!\n\n  Transform.vectorToLocalFrame(position, quat, direction, localDirection);\n  Transform.pointToLocalFrame(position, quat, from, localFrom);\n  Transform.pointToLocalFrame(position, quat, to, localTo);\n  localTo.x *= mesh.scale.x;\n  localTo.y *= mesh.scale.y;\n  localTo.z *= mesh.scale.z;\n  localFrom.x *= mesh.scale.x;\n  localFrom.y *= mesh.scale.y;\n  localFrom.z *= mesh.scale.z;\n  localTo.vsub(localFrom, localDirection);\n  localDirection.normalize();\n  var fromToDistanceSquared = localFrom.distanceSquared(localTo);\n  mesh.tree.rayQuery(this, treeTransform, triangles);\n\n  for (var i = 0, N = triangles.length; !this.result._shouldStop && i !== N; i++) {\n    var trianglesIndex = triangles[i];\n    mesh.getNormal(trianglesIndex, normal); // determine if ray intersects the plane of the face\n    // note: this works regardless of the direction of the face normal\n    // Get plane point in world coordinates...\n\n    mesh.getVertex(indices[trianglesIndex * 3], a); // ...but make it relative to the ray from. We'll fix this later.\n\n    a.vsub(localFrom, vector); // If this dot product is negative, we have something interesting\n\n    var dot = localDirection.dot(normal); // Bail out if ray and plane are parallel\n    // if (Math.abs( dot ) < this.precision){\n    //     continue;\n    // }\n    // calc distance to plane\n\n    var scalar = normal.dot(vector) / dot; // if negative distance, then plane is behind ray\n\n    if (scalar < 0) {\n      continue;\n    } // Intersection point is from + direction * scalar\n\n\n    localDirection.scale(scalar, intersectPoint);\n    intersectPoint.vadd(localFrom, intersectPoint); // Get triangle vertices\n\n    mesh.getVertex(indices[trianglesIndex * 3 + 1], b);\n    mesh.getVertex(indices[trianglesIndex * 3 + 2], c);\n    var squaredDistance = intersectPoint.distanceSquared(localFrom);\n\n    if (!(pointInTriangle(intersectPoint, b, a, c) || pointInTriangle(intersectPoint, a, b, c)) || squaredDistance > fromToDistanceSquared) {\n      continue;\n    } // transform intersectpoint and normal to world\n\n\n    Transform.vectorToWorldFrame(quat, normal, worldNormal);\n    Transform.pointToWorldFrame(position, quat, intersectPoint, worldIntersectPoint);\n    this.reportIntersection(worldNormal, worldIntersectPoint, reportedShape, body, trianglesIndex);\n  }\n\n  triangles.length = 0;\n};\n\nRay.prototype[Shape.types.TRIMESH] = Ray.prototype.intersectTrimesh;\n/**\n * @method reportIntersection\n * @private\n * @param  {Vec3} normal\n * @param  {Vec3} hitPointWorld\n * @param  {Shape} shape\n * @param  {Body} body\n * @return {boolean} True if the intersections should continue\n */\n\nRay.prototype.reportIntersection = function (normal, hitPointWorld, shape, body, hitFaceIndex) {\n  var from = this.from;\n  var to = this.to;\n  var distance = from.distanceTo(hitPointWorld);\n  var result = this.result; // Skip back faces?\n\n  if (this.skipBackfaces && normal.dot(this._direction) > 0) {\n    return;\n  }\n\n  result.hitFaceIndex = typeof hitFaceIndex !== 'undefined' ? hitFaceIndex : -1;\n\n  switch (this.mode) {\n    case Ray.ALL:\n      this.hasHit = true;\n      result.set(from, to, normal, hitPointWorld, shape, body, distance);\n      result.hasHit = true;\n      this.callback(result);\n      break;\n\n    case Ray.CLOSEST:\n      // Store if closer than current closest\n      if (distance < result.distance || !result.hasHit) {\n        this.hasHit = true;\n        result.hasHit = true;\n        result.set(from, to, normal, hitPointWorld, shape, body, distance);\n      }\n\n      break;\n\n    case Ray.ANY:\n      // Report and stop.\n      this.hasHit = true;\n      result.hasHit = true;\n      result.set(from, to, normal, hitPointWorld, shape, body, distance);\n      result._shouldStop = true;\n      break;\n  }\n};\n\nvar v0 = new Vec3(),\n    intersect = new Vec3();\n\nfunction distanceFromIntersection(from, direction, position) {\n  // v0 is vector from from to position\n  position.vsub(from, v0);\n  var dot = v0.dot(direction); // intersect = direction*dot + from\n\n  direction.mult(dot, intersect);\n  intersect.vadd(from, intersect);\n  var distance = position.distanceTo(intersect);\n  return distance;\n}\n\n//# sourceURL=webpack:///./node_modules/cannon/src/collision/Ray.js?");

/***/ }),

/***/ "./node_modules/cannon/src/collision/RaycastResult.js":
/*!************************************************************!*\
  !*** ./node_modules/cannon/src/collision/RaycastResult.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nmodule.exports = RaycastResult;\n/**\n * Storage for Ray casting data.\n * @class RaycastResult\n * @constructor\n */\n\nfunction RaycastResult() {\n  /**\n   * @property {Vec3} rayFromWorld\n   */\n  this.rayFromWorld = new Vec3();\n  /**\n   * @property {Vec3} rayToWorld\n   */\n\n  this.rayToWorld = new Vec3();\n  /**\n   * @property {Vec3} hitNormalWorld\n   */\n\n  this.hitNormalWorld = new Vec3();\n  /**\n   * @property {Vec3} hitPointWorld\n   */\n\n  this.hitPointWorld = new Vec3();\n  /**\n   * @property {boolean} hasHit\n   */\n\n  this.hasHit = false;\n  /**\n   * The hit shape, or null.\n   * @property {Shape} shape\n   */\n\n  this.shape = null;\n  /**\n   * The hit body, or null.\n   * @property {Body} body\n   */\n\n  this.body = null;\n  /**\n   * The index of the hit triangle, if the hit shape was a trimesh.\n   * @property {number} hitFaceIndex\n   * @default -1\n   */\n\n  this.hitFaceIndex = -1;\n  /**\n   * Distance to the hit. Will be set to -1 if there was no hit.\n   * @property {number} distance\n   * @default -1\n   */\n\n  this.distance = -1;\n  /**\n   * If the ray should stop traversing the bodies.\n   * @private\n   * @property {Boolean} _shouldStop\n   * @default false\n   */\n\n  this._shouldStop = false;\n}\n/**\n * Reset all result data.\n * @method reset\n */\n\n\nRaycastResult.prototype.reset = function () {\n  this.rayFromWorld.setZero();\n  this.rayToWorld.setZero();\n  this.hitNormalWorld.setZero();\n  this.hitPointWorld.setZero();\n  this.hasHit = false;\n  this.shape = null;\n  this.body = null;\n  this.hitFaceIndex = -1;\n  this.distance = -1;\n  this._shouldStop = false;\n};\n/**\n * @method abort\n */\n\n\nRaycastResult.prototype.abort = function () {\n  this._shouldStop = true;\n};\n/**\n * @method set\n * @param {Vec3} rayFromWorld\n * @param {Vec3} rayToWorld\n * @param {Vec3} hitNormalWorld\n * @param {Vec3} hitPointWorld\n * @param {Shape} shape\n * @param {Body} body\n * @param {number} distance\n */\n\n\nRaycastResult.prototype.set = function (rayFromWorld, rayToWorld, hitNormalWorld, hitPointWorld, shape, body, distance) {\n  this.rayFromWorld.copy(rayFromWorld);\n  this.rayToWorld.copy(rayToWorld);\n  this.hitNormalWorld.copy(hitNormalWorld);\n  this.hitPointWorld.copy(hitPointWorld);\n  this.shape = shape;\n  this.body = body;\n  this.distance = distance;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/collision/RaycastResult.js?");

/***/ }),

/***/ "./node_modules/cannon/src/collision/SAPBroadphase.js":
/*!************************************************************!*\
  !*** ./node_modules/cannon/src/collision/SAPBroadphase.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Shape = __webpack_require__(/*! ../shapes/Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar Broadphase = __webpack_require__(/*! ../collision/Broadphase */ \"./node_modules/cannon/src/collision/Broadphase.js\");\n\nmodule.exports = SAPBroadphase;\n/**\n * Sweep and prune broadphase along one axis.\n *\n * @class SAPBroadphase\n * @constructor\n * @param {World} [world]\n * @extends Broadphase\n */\n\nfunction SAPBroadphase(world) {\n  Broadphase.apply(this);\n  /**\n   * List of bodies currently in the broadphase.\n   * @property axisList\n   * @type {Array}\n   */\n\n  this.axisList = [];\n  /**\n   * The world to search in.\n   * @property world\n   * @type {World}\n   */\n\n  this.world = null;\n  /**\n   * Axis to sort the bodies along. Set to 0 for x axis, and 1 for y axis. For best performance, choose an axis that the bodies are spread out more on.\n   * @property axisIndex\n   * @type {Number}\n   */\n\n  this.axisIndex = 0;\n  var axisList = this.axisList;\n\n  this._addBodyHandler = function (e) {\n    axisList.push(e.body);\n  };\n\n  this._removeBodyHandler = function (e) {\n    var idx = axisList.indexOf(e.body);\n\n    if (idx !== -1) {\n      axisList.splice(idx, 1);\n    }\n  };\n\n  if (world) {\n    this.setWorld(world);\n  }\n}\n\nSAPBroadphase.prototype = new Broadphase();\n/**\n * Change the world\n * @method setWorld\n * @param  {World} world\n */\n\nSAPBroadphase.prototype.setWorld = function (world) {\n  // Clear the old axis array\n  this.axisList.length = 0; // Add all bodies from the new world\n\n  for (var i = 0; i < world.bodies.length; i++) {\n    this.axisList.push(world.bodies[i]);\n  } // Remove old handlers, if any\n\n\n  world.removeEventListener(\"addBody\", this._addBodyHandler);\n  world.removeEventListener(\"removeBody\", this._removeBodyHandler); // Add handlers to update the list of bodies.\n\n  world.addEventListener(\"addBody\", this._addBodyHandler);\n  world.addEventListener(\"removeBody\", this._removeBodyHandler);\n  this.world = world;\n  this.dirty = true;\n};\n/**\n * @static\n * @method insertionSortX\n * @param  {Array} a\n * @return {Array}\n */\n\n\nSAPBroadphase.insertionSortX = function (a) {\n  for (var i = 1, l = a.length; i < l; i++) {\n    var v = a[i];\n\n    for (var j = i - 1; j >= 0; j--) {\n      if (a[j].aabb.lowerBound.x <= v.aabb.lowerBound.x) {\n        break;\n      }\n\n      a[j + 1] = a[j];\n    }\n\n    a[j + 1] = v;\n  }\n\n  return a;\n};\n/**\n * @static\n * @method insertionSortY\n * @param  {Array} a\n * @return {Array}\n */\n\n\nSAPBroadphase.insertionSortY = function (a) {\n  for (var i = 1, l = a.length; i < l; i++) {\n    var v = a[i];\n\n    for (var j = i - 1; j >= 0; j--) {\n      if (a[j].aabb.lowerBound.y <= v.aabb.lowerBound.y) {\n        break;\n      }\n\n      a[j + 1] = a[j];\n    }\n\n    a[j + 1] = v;\n  }\n\n  return a;\n};\n/**\n * @static\n * @method insertionSortZ\n * @param  {Array} a\n * @return {Array}\n */\n\n\nSAPBroadphase.insertionSortZ = function (a) {\n  for (var i = 1, l = a.length; i < l; i++) {\n    var v = a[i];\n\n    for (var j = i - 1; j >= 0; j--) {\n      if (a[j].aabb.lowerBound.z <= v.aabb.lowerBound.z) {\n        break;\n      }\n\n      a[j + 1] = a[j];\n    }\n\n    a[j + 1] = v;\n  }\n\n  return a;\n};\n/**\n * Collect all collision pairs\n * @method collisionPairs\n * @param  {World} world\n * @param  {Array} p1\n * @param  {Array} p2\n */\n\n\nSAPBroadphase.prototype.collisionPairs = function (world, p1, p2) {\n  var bodies = this.axisList,\n      N = bodies.length,\n      axisIndex = this.axisIndex,\n      i,\n      j;\n\n  if (this.dirty) {\n    this.sortList();\n    this.dirty = false;\n  } // Look through the list\n\n\n  for (i = 0; i !== N; i++) {\n    var bi = bodies[i];\n\n    for (j = i + 1; j < N; j++) {\n      var bj = bodies[j];\n\n      if (!this.needBroadphaseCollision(bi, bj)) {\n        continue;\n      }\n\n      if (!SAPBroadphase.checkBounds(bi, bj, axisIndex)) {\n        break;\n      }\n\n      this.intersectionTest(bi, bj, p1, p2);\n    }\n  }\n};\n\nSAPBroadphase.prototype.sortList = function () {\n  var axisList = this.axisList;\n  var axisIndex = this.axisIndex;\n  var N = axisList.length; // Update AABBs\n\n  for (var i = 0; i !== N; i++) {\n    var bi = axisList[i];\n\n    if (bi.aabbNeedsUpdate) {\n      bi.computeAABB();\n    }\n  } // Sort the list\n\n\n  if (axisIndex === 0) {\n    SAPBroadphase.insertionSortX(axisList);\n  } else if (axisIndex === 1) {\n    SAPBroadphase.insertionSortY(axisList);\n  } else if (axisIndex === 2) {\n    SAPBroadphase.insertionSortZ(axisList);\n  }\n};\n/**\n * Check if the bounds of two bodies overlap, along the given SAP axis.\n * @static\n * @method checkBounds\n * @param  {Body} bi\n * @param  {Body} bj\n * @param  {Number} axisIndex\n * @return {Boolean}\n */\n\n\nSAPBroadphase.checkBounds = function (bi, bj, axisIndex) {\n  var biPos;\n  var bjPos;\n\n  if (axisIndex === 0) {\n    biPos = bi.position.x;\n    bjPos = bj.position.x;\n  } else if (axisIndex === 1) {\n    biPos = bi.position.y;\n    bjPos = bj.position.y;\n  } else if (axisIndex === 2) {\n    biPos = bi.position.z;\n    bjPos = bj.position.z;\n  }\n\n  var ri = bi.boundingRadius,\n      rj = bj.boundingRadius,\n      boundA1 = biPos - ri,\n      boundA2 = biPos + ri,\n      boundB1 = bjPos - rj,\n      boundB2 = bjPos + rj;\n  return boundB1 < boundA2;\n};\n/**\n * Computes the variance of the body positions and estimates the best\n * axis to use. Will automatically set property .axisIndex.\n * @method autoDetectAxis\n */\n\n\nSAPBroadphase.prototype.autoDetectAxis = function () {\n  var sumX = 0,\n      sumX2 = 0,\n      sumY = 0,\n      sumY2 = 0,\n      sumZ = 0,\n      sumZ2 = 0,\n      bodies = this.axisList,\n      N = bodies.length,\n      invN = 1 / N;\n\n  for (var i = 0; i !== N; i++) {\n    var b = bodies[i];\n    var centerX = b.position.x;\n    sumX += centerX;\n    sumX2 += centerX * centerX;\n    var centerY = b.position.y;\n    sumY += centerY;\n    sumY2 += centerY * centerY;\n    var centerZ = b.position.z;\n    sumZ += centerZ;\n    sumZ2 += centerZ * centerZ;\n  }\n\n  var varianceX = sumX2 - sumX * sumX * invN,\n      varianceY = sumY2 - sumY * sumY * invN,\n      varianceZ = sumZ2 - sumZ * sumZ * invN;\n\n  if (varianceX > varianceY) {\n    if (varianceX > varianceZ) {\n      this.axisIndex = 0;\n    } else {\n      this.axisIndex = 2;\n    }\n  } else if (varianceY > varianceZ) {\n    this.axisIndex = 1;\n  } else {\n    this.axisIndex = 2;\n  }\n};\n/**\n * Returns all the bodies within an AABB.\n * @method aabbQuery\n * @param  {World} world\n * @param  {AABB} aabb\n * @param {array} result An array to store resulting bodies in.\n * @return {array}\n */\n\n\nSAPBroadphase.prototype.aabbQuery = function (world, aabb, result) {\n  result = result || [];\n\n  if (this.dirty) {\n    this.sortList();\n    this.dirty = false;\n  }\n\n  var axisIndex = this.axisIndex,\n      axis = 'x';\n\n  if (axisIndex === 1) {\n    axis = 'y';\n  }\n\n  if (axisIndex === 2) {\n    axis = 'z';\n  }\n\n  var axisList = this.axisList;\n  var lower = aabb.lowerBound[axis];\n  var upper = aabb.upperBound[axis];\n\n  for (var i = 0; i < axisList.length; i++) {\n    var b = axisList[i];\n\n    if (b.aabbNeedsUpdate) {\n      b.computeAABB();\n    }\n\n    if (b.aabb.overlaps(aabb)) {\n      result.push(b);\n    }\n  }\n\n  return result;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/collision/SAPBroadphase.js?");

/***/ }),

/***/ "./node_modules/cannon/src/constraints/ConeTwistConstraint.js":
/*!********************************************************************!*\
  !*** ./node_modules/cannon/src/constraints/ConeTwistConstraint.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = ConeTwistConstraint;\n\nvar Constraint = __webpack_require__(/*! ./Constraint */ \"./node_modules/cannon/src/constraints/Constraint.js\");\n\nvar PointToPointConstraint = __webpack_require__(/*! ./PointToPointConstraint */ \"./node_modules/cannon/src/constraints/PointToPointConstraint.js\");\n\nvar ConeEquation = __webpack_require__(/*! ../equations/ConeEquation */ \"./node_modules/cannon/src/equations/ConeEquation.js\");\n\nvar RotationalEquation = __webpack_require__(/*! ../equations/RotationalEquation */ \"./node_modules/cannon/src/equations/RotationalEquation.js\");\n\nvar ContactEquation = __webpack_require__(/*! ../equations/ContactEquation */ \"./node_modules/cannon/src/equations/ContactEquation.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n/**\n * @class ConeTwistConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {Vec3} [options.pivotA]\n * @param {Vec3} [options.pivotB]\n * @param {Vec3} [options.axisA]\n * @param {Vec3} [options.axisB]\n * @param {Number} [options.maxForce=1e6]\n * @extends PointToPointConstraint\n */\n\n\nfunction ConeTwistConstraint(bodyA, bodyB, options) {\n  options = options || {};\n  var maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6; // Set pivot point in between\n\n  var pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\n  var pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\n  this.axisA = options.axisA ? options.axisA.clone() : new Vec3();\n  this.axisB = options.axisB ? options.axisB.clone() : new Vec3();\n  PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\n  this.collideConnected = !!options.collideConnected;\n  this.angle = typeof options.angle !== 'undefined' ? options.angle : 0;\n  /**\n   * @property {ConeEquation} coneEquation\n   */\n\n  var c = this.coneEquation = new ConeEquation(bodyA, bodyB, options);\n  /**\n   * @property {RotationalEquation} twistEquation\n   */\n\n  var t = this.twistEquation = new RotationalEquation(bodyA, bodyB, options);\n  this.twistAngle = typeof options.twistAngle !== 'undefined' ? options.twistAngle : 0; // Make the cone equation push the bodies toward the cone axis, not outward\n\n  c.maxForce = 0;\n  c.minForce = -maxForce; // Make the twist equation add torque toward the initial position\n\n  t.maxForce = 0;\n  t.minForce = -maxForce;\n  this.equations.push(c, t);\n}\n\nConeTwistConstraint.prototype = new PointToPointConstraint();\nConeTwistConstraint.constructor = ConeTwistConstraint;\nvar ConeTwistConstraint_update_tmpVec1 = new Vec3();\nvar ConeTwistConstraint_update_tmpVec2 = new Vec3();\n\nConeTwistConstraint.prototype.update = function () {\n  var bodyA = this.bodyA,\n      bodyB = this.bodyB,\n      cone = this.coneEquation,\n      twist = this.twistEquation;\n  PointToPointConstraint.prototype.update.call(this); // Update the axes to the cone constraint\n\n  bodyA.vectorToWorldFrame(this.axisA, cone.axisA);\n  bodyB.vectorToWorldFrame(this.axisB, cone.axisB); // Update the world axes in the twist constraint\n\n  this.axisA.tangents(twist.axisA, twist.axisA);\n  bodyA.vectorToWorldFrame(twist.axisA, twist.axisA);\n  this.axisB.tangents(twist.axisB, twist.axisB);\n  bodyB.vectorToWorldFrame(twist.axisB, twist.axisB);\n  cone.angle = this.angle;\n  twist.maxAngle = this.twistAngle;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/constraints/ConeTwistConstraint.js?");

/***/ }),

/***/ "./node_modules/cannon/src/constraints/Constraint.js":
/*!***********************************************************!*\
  !*** ./node_modules/cannon/src/constraints/Constraint.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Constraint;\n\nvar Utils = __webpack_require__(/*! ../utils/Utils */ \"./node_modules/cannon/src/utils/Utils.js\");\n/**\n * Constraint base class\n * @class Constraint\n * @author schteppe\n * @constructor\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {boolean} [options.collideConnected=true]\n * @param {boolean} [options.wakeUpBodies=true]\n */\n\n\nfunction Constraint(bodyA, bodyB, options) {\n  options = Utils.defaults(options, {\n    collideConnected: true,\n    wakeUpBodies: true\n  });\n  /**\n   * Equations to be solved in this constraint\n   * @property equations\n   * @type {Array}\n   */\n\n  this.equations = [];\n  /**\n   * @property {Body} bodyA\n   */\n\n  this.bodyA = bodyA;\n  /**\n   * @property {Body} bodyB\n   */\n\n  this.bodyB = bodyB;\n  /**\n   * @property {Number} id\n   */\n\n  this.id = Constraint.idCounter++;\n  /**\n   * Set to true if you want the bodies to collide when they are connected.\n   * @property collideConnected\n   * @type {boolean}\n   */\n\n  this.collideConnected = options.collideConnected;\n\n  if (options.wakeUpBodies) {\n    if (bodyA) {\n      bodyA.wakeUp();\n    }\n\n    if (bodyB) {\n      bodyB.wakeUp();\n    }\n  }\n}\n/**\n * Update all the equations with data.\n * @method update\n */\n\n\nConstraint.prototype.update = function () {\n  throw new Error(\"method update() not implmemented in this Constraint subclass!\");\n};\n/**\n * Enables all equations in the constraint.\n * @method enable\n */\n\n\nConstraint.prototype.enable = function () {\n  var eqs = this.equations;\n\n  for (var i = 0; i < eqs.length; i++) {\n    eqs[i].enabled = true;\n  }\n};\n/**\n * Disables all equations in the constraint.\n * @method disable\n */\n\n\nConstraint.prototype.disable = function () {\n  var eqs = this.equations;\n\n  for (var i = 0; i < eqs.length; i++) {\n    eqs[i].enabled = false;\n  }\n};\n\nConstraint.idCounter = 0;\n\n//# sourceURL=webpack:///./node_modules/cannon/src/constraints/Constraint.js?");

/***/ }),

/***/ "./node_modules/cannon/src/constraints/DistanceConstraint.js":
/*!*******************************************************************!*\
  !*** ./node_modules/cannon/src/constraints/DistanceConstraint.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = DistanceConstraint;\n\nvar Constraint = __webpack_require__(/*! ./Constraint */ \"./node_modules/cannon/src/constraints/Constraint.js\");\n\nvar ContactEquation = __webpack_require__(/*! ../equations/ContactEquation */ \"./node_modules/cannon/src/equations/ContactEquation.js\");\n/**\n * Constrains two bodies to be at a constant distance from each others center of mass.\n * @class DistanceConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Number} [distance] The distance to keep. If undefined, it will be set to the current distance between bodyA and bodyB\n * @param {Number} [maxForce=1e6]\n * @extends Constraint\n */\n\n\nfunction DistanceConstraint(bodyA, bodyB, distance, maxForce) {\n  Constraint.call(this, bodyA, bodyB);\n\n  if (typeof distance === \"undefined\") {\n    distance = bodyA.position.distanceTo(bodyB.position);\n  }\n\n  if (typeof maxForce === \"undefined\") {\n    maxForce = 1e6;\n  }\n  /**\n   * @property {number} distance\n   */\n\n\n  this.distance = distance;\n  /**\n   * @property {ContactEquation} distanceEquation\n   */\n\n  var eq = this.distanceEquation = new ContactEquation(bodyA, bodyB);\n  this.equations.push(eq); // Make it bidirectional\n\n  eq.minForce = -maxForce;\n  eq.maxForce = maxForce;\n}\n\nDistanceConstraint.prototype = new Constraint();\n\nDistanceConstraint.prototype.update = function () {\n  var bodyA = this.bodyA;\n  var bodyB = this.bodyB;\n  var eq = this.distanceEquation;\n  var halfDist = this.distance * 0.5;\n  var normal = eq.ni;\n  bodyB.position.vsub(bodyA.position, normal);\n  normal.normalize();\n  normal.mult(halfDist, eq.ri);\n  normal.mult(-halfDist, eq.rj);\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/constraints/DistanceConstraint.js?");

/***/ }),

/***/ "./node_modules/cannon/src/constraints/HingeConstraint.js":
/*!****************************************************************!*\
  !*** ./node_modules/cannon/src/constraints/HingeConstraint.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = HingeConstraint;\n\nvar Constraint = __webpack_require__(/*! ./Constraint */ \"./node_modules/cannon/src/constraints/Constraint.js\");\n\nvar PointToPointConstraint = __webpack_require__(/*! ./PointToPointConstraint */ \"./node_modules/cannon/src/constraints/PointToPointConstraint.js\");\n\nvar RotationalEquation = __webpack_require__(/*! ../equations/RotationalEquation */ \"./node_modules/cannon/src/equations/RotationalEquation.js\");\n\nvar RotationalMotorEquation = __webpack_require__(/*! ../equations/RotationalMotorEquation */ \"./node_modules/cannon/src/equations/RotationalMotorEquation.js\");\n\nvar ContactEquation = __webpack_require__(/*! ../equations/ContactEquation */ \"./node_modules/cannon/src/equations/ContactEquation.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n/**\n * Hinge constraint. Think of it as a door hinge. It tries to keep the door in the correct place and with the correct orientation.\n * @class HingeConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {Vec3} [options.pivotA] A point defined locally in bodyA. This defines the offset of axisA.\n * @param {Vec3} [options.axisA] An axis that bodyA can rotate around, defined locally in bodyA.\n * @param {Vec3} [options.pivotB]\n * @param {Vec3} [options.axisB]\n * @param {Number} [options.maxForce=1e6]\n * @extends PointToPointConstraint\n */\n\n\nfunction HingeConstraint(bodyA, bodyB, options) {\n  options = options || {};\n  var maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6;\n  var pivotA = options.pivotA ? options.pivotA.clone() : new Vec3();\n  var pivotB = options.pivotB ? options.pivotB.clone() : new Vec3();\n  PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce);\n  /**\n   * Rotation axis, defined locally in bodyA.\n   * @property {Vec3} axisA\n   */\n\n  var axisA = this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n  axisA.normalize();\n  /**\n   * Rotation axis, defined locally in bodyB.\n   * @property {Vec3} axisB\n   */\n\n  var axisB = this.axisB = options.axisB ? options.axisB.clone() : new Vec3(1, 0, 0);\n  axisB.normalize();\n  /**\n   * @property {RotationalEquation} rotationalEquation1\n   */\n\n  var r1 = this.rotationalEquation1 = new RotationalEquation(bodyA, bodyB, options);\n  /**\n   * @property {RotationalEquation} rotationalEquation2\n   */\n\n  var r2 = this.rotationalEquation2 = new RotationalEquation(bodyA, bodyB, options);\n  /**\n   * @property {RotationalMotorEquation} motorEquation\n   */\n\n  var motor = this.motorEquation = new RotationalMotorEquation(bodyA, bodyB, maxForce);\n  motor.enabled = false; // Not enabled by default\n  // Equations to be fed to the solver\n\n  this.equations.push(r1, // rotational1\n  r2, // rotational2\n  motor);\n}\n\nHingeConstraint.prototype = new PointToPointConstraint();\nHingeConstraint.constructor = HingeConstraint;\n/**\n * @method enableMotor\n */\n\nHingeConstraint.prototype.enableMotor = function () {\n  this.motorEquation.enabled = true;\n};\n/**\n * @method disableMotor\n */\n\n\nHingeConstraint.prototype.disableMotor = function () {\n  this.motorEquation.enabled = false;\n};\n/**\n * @method setMotorSpeed\n * @param {number} speed\n */\n\n\nHingeConstraint.prototype.setMotorSpeed = function (speed) {\n  this.motorEquation.targetVelocity = speed;\n};\n/**\n * @method setMotorMaxForce\n * @param {number} maxForce\n */\n\n\nHingeConstraint.prototype.setMotorMaxForce = function (maxForce) {\n  this.motorEquation.maxForce = maxForce;\n  this.motorEquation.minForce = -maxForce;\n};\n\nvar HingeConstraint_update_tmpVec1 = new Vec3();\nvar HingeConstraint_update_tmpVec2 = new Vec3();\n\nHingeConstraint.prototype.update = function () {\n  var bodyA = this.bodyA,\n      bodyB = this.bodyB,\n      motor = this.motorEquation,\n      r1 = this.rotationalEquation1,\n      r2 = this.rotationalEquation2,\n      worldAxisA = HingeConstraint_update_tmpVec1,\n      worldAxisB = HingeConstraint_update_tmpVec2;\n  var axisA = this.axisA;\n  var axisB = this.axisB;\n  PointToPointConstraint.prototype.update.call(this); // Get world axes\n\n  bodyA.quaternion.vmult(axisA, worldAxisA);\n  bodyB.quaternion.vmult(axisB, worldAxisB);\n  worldAxisA.tangents(r1.axisA, r2.axisA);\n  r1.axisB.copy(worldAxisB);\n  r2.axisB.copy(worldAxisB);\n\n  if (this.motorEquation.enabled) {\n    bodyA.quaternion.vmult(this.axisA, motor.axisA);\n    bodyB.quaternion.vmult(this.axisB, motor.axisB);\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/constraints/HingeConstraint.js?");

/***/ }),

/***/ "./node_modules/cannon/src/constraints/LockConstraint.js":
/*!***************************************************************!*\
  !*** ./node_modules/cannon/src/constraints/LockConstraint.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = LockConstraint;\n\nvar Constraint = __webpack_require__(/*! ./Constraint */ \"./node_modules/cannon/src/constraints/Constraint.js\");\n\nvar PointToPointConstraint = __webpack_require__(/*! ./PointToPointConstraint */ \"./node_modules/cannon/src/constraints/PointToPointConstraint.js\");\n\nvar RotationalEquation = __webpack_require__(/*! ../equations/RotationalEquation */ \"./node_modules/cannon/src/equations/RotationalEquation.js\");\n\nvar RotationalMotorEquation = __webpack_require__(/*! ../equations/RotationalMotorEquation */ \"./node_modules/cannon/src/equations/RotationalMotorEquation.js\");\n\nvar ContactEquation = __webpack_require__(/*! ../equations/ContactEquation */ \"./node_modules/cannon/src/equations/ContactEquation.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n/**\n * Lock constraint. Will remove all degrees of freedom between the bodies.\n * @class LockConstraint\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {object} [options]\n * @param {Number} [options.maxForce=1e6]\n * @extends PointToPointConstraint\n */\n\n\nfunction LockConstraint(bodyA, bodyB, options) {\n  options = options || {};\n  var maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6; // Set pivot point in between\n\n  var pivotA = new Vec3();\n  var pivotB = new Vec3();\n  var halfWay = new Vec3();\n  bodyA.position.vadd(bodyB.position, halfWay);\n  halfWay.scale(0.5, halfWay);\n  bodyB.pointToLocalFrame(halfWay, pivotB);\n  bodyA.pointToLocalFrame(halfWay, pivotA); // The point-to-point constraint will keep a point shared between the bodies\n\n  PointToPointConstraint.call(this, bodyA, pivotA, bodyB, pivotB, maxForce); // Store initial rotation of the bodies as unit vectors in the local body spaces\n\n  this.xA = bodyA.vectorToLocalFrame(Vec3.UNIT_X);\n  this.xB = bodyB.vectorToLocalFrame(Vec3.UNIT_X);\n  this.yA = bodyA.vectorToLocalFrame(Vec3.UNIT_Y);\n  this.yB = bodyB.vectorToLocalFrame(Vec3.UNIT_Y);\n  this.zA = bodyA.vectorToLocalFrame(Vec3.UNIT_Z);\n  this.zB = bodyB.vectorToLocalFrame(Vec3.UNIT_Z); // ...and the following rotational equations will keep all rotational DOF's in place\n\n  /**\n   * @property {RotationalEquation} rotationalEquation1\n   */\n\n  var r1 = this.rotationalEquation1 = new RotationalEquation(bodyA, bodyB, options);\n  /**\n   * @property {RotationalEquation} rotationalEquation2\n   */\n\n  var r2 = this.rotationalEquation2 = new RotationalEquation(bodyA, bodyB, options);\n  /**\n   * @property {RotationalEquation} rotationalEquation3\n   */\n\n  var r3 = this.rotationalEquation3 = new RotationalEquation(bodyA, bodyB, options);\n  this.equations.push(r1, r2, r3);\n}\n\nLockConstraint.prototype = new PointToPointConstraint();\nLockConstraint.constructor = LockConstraint;\nvar LockConstraint_update_tmpVec1 = new Vec3();\nvar LockConstraint_update_tmpVec2 = new Vec3();\n\nLockConstraint.prototype.update = function () {\n  var bodyA = this.bodyA,\n      bodyB = this.bodyB,\n      motor = this.motorEquation,\n      r1 = this.rotationalEquation1,\n      r2 = this.rotationalEquation2,\n      r3 = this.rotationalEquation3,\n      worldAxisA = LockConstraint_update_tmpVec1,\n      worldAxisB = LockConstraint_update_tmpVec2;\n  PointToPointConstraint.prototype.update.call(this); // These vector pairs must be orthogonal\n\n  bodyA.vectorToWorldFrame(this.xA, r1.axisA);\n  bodyB.vectorToWorldFrame(this.yB, r1.axisB);\n  bodyA.vectorToWorldFrame(this.yA, r2.axisA);\n  bodyB.vectorToWorldFrame(this.zB, r2.axisB);\n  bodyA.vectorToWorldFrame(this.zA, r3.axisA);\n  bodyB.vectorToWorldFrame(this.xB, r3.axisB);\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/constraints/LockConstraint.js?");

/***/ }),

/***/ "./node_modules/cannon/src/constraints/PointToPointConstraint.js":
/*!***********************************************************************!*\
  !*** ./node_modules/cannon/src/constraints/PointToPointConstraint.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = PointToPointConstraint;\n\nvar Constraint = __webpack_require__(/*! ./Constraint */ \"./node_modules/cannon/src/constraints/Constraint.js\");\n\nvar ContactEquation = __webpack_require__(/*! ../equations/ContactEquation */ \"./node_modules/cannon/src/equations/ContactEquation.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n/**\n * Connects two bodies at given offset points.\n * @class PointToPointConstraint\n * @extends Constraint\n * @constructor\n * @param {Body} bodyA\n * @param {Vec3} pivotA The point relative to the center of mass of bodyA which bodyA is constrained to.\n * @param {Body} bodyB Body that will be constrained in a similar way to the same point as bodyA. We will therefore get a link between bodyA and bodyB. If not specified, bodyA will be constrained to a static point.\n * @param {Vec3} pivotB See pivotA.\n * @param {Number} maxForce The maximum force that should be applied to constrain the bodies.\n *\n * @example\n *     var bodyA = new Body({ mass: 1 });\n *     var bodyB = new Body({ mass: 1 });\n *     bodyA.position.set(-1, 0, 0);\n *     bodyB.position.set(1, 0, 0);\n *     bodyA.addShape(shapeA);\n *     bodyB.addShape(shapeB);\n *     world.addBody(bodyA);\n *     world.addBody(bodyB);\n *     var localPivotA = new Vec3(1, 0, 0);\n *     var localPivotB = new Vec3(-1, 0, 0);\n *     var constraint = new PointToPointConstraint(bodyA, localPivotA, bodyB, localPivotB);\n *     world.addConstraint(constraint);\n */\n\n\nfunction PointToPointConstraint(bodyA, pivotA, bodyB, pivotB, maxForce) {\n  Constraint.call(this, bodyA, bodyB);\n  maxForce = typeof maxForce !== 'undefined' ? maxForce : 1e6;\n  /**\n   * Pivot, defined locally in bodyA.\n   * @property {Vec3} pivotA\n   */\n\n  this.pivotA = pivotA ? pivotA.clone() : new Vec3();\n  /**\n   * Pivot, defined locally in bodyB.\n   * @property {Vec3} pivotB\n   */\n\n  this.pivotB = pivotB ? pivotB.clone() : new Vec3();\n  /**\n   * @property {ContactEquation} equationX\n   */\n\n  var x = this.equationX = new ContactEquation(bodyA, bodyB);\n  /**\n   * @property {ContactEquation} equationY\n   */\n\n  var y = this.equationY = new ContactEquation(bodyA, bodyB);\n  /**\n   * @property {ContactEquation} equationZ\n   */\n\n  var z = this.equationZ = new ContactEquation(bodyA, bodyB); // Equations to be fed to the solver\n\n  this.equations.push(x, y, z); // Make the equations bidirectional\n\n  x.minForce = y.minForce = z.minForce = -maxForce;\n  x.maxForce = y.maxForce = z.maxForce = maxForce;\n  x.ni.set(1, 0, 0);\n  y.ni.set(0, 1, 0);\n  z.ni.set(0, 0, 1);\n}\n\nPointToPointConstraint.prototype = new Constraint();\n\nPointToPointConstraint.prototype.update = function () {\n  var bodyA = this.bodyA;\n  var bodyB = this.bodyB;\n  var x = this.equationX;\n  var y = this.equationY;\n  var z = this.equationZ; // Rotate the pivots to world space\n\n  bodyA.quaternion.vmult(this.pivotA, x.ri);\n  bodyB.quaternion.vmult(this.pivotB, x.rj);\n  y.ri.copy(x.ri);\n  y.rj.copy(x.rj);\n  z.ri.copy(x.ri);\n  z.rj.copy(x.rj);\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/constraints/PointToPointConstraint.js?");

/***/ }),

/***/ "./node_modules/cannon/src/equations/ConeEquation.js":
/*!***********************************************************!*\
  !*** ./node_modules/cannon/src/equations/ConeEquation.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = ConeEquation;\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Mat3 = __webpack_require__(/*! ../math/Mat3 */ \"./node_modules/cannon/src/math/Mat3.js\");\n\nvar Equation = __webpack_require__(/*! ./Equation */ \"./node_modules/cannon/src/equations/Equation.js\");\n/**\n * Cone equation. Works to keep the given body world vectors aligned, or tilted within a given angle from each other.\n * @class ConeEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec3} [options.axisA] Local axis in A\n * @param {Vec3} [options.axisB] Local axis in B\n * @param {Vec3} [options.angle] The \"cone angle\" to keep\n * @param {number} [options.maxForce=1e6]\n * @extends Equation\n */\n\n\nfunction ConeEquation(bodyA, bodyB, options) {\n  options = options || {};\n  var maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6;\n  Equation.call(this, bodyA, bodyB, -maxForce, maxForce);\n  this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n  this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\n  /**\n   * The cone angle to keep\n   * @property {number} angle\n   */\n\n  this.angle = typeof options.angle !== 'undefined' ? options.angle : 0;\n}\n\nConeEquation.prototype = new Equation();\nConeEquation.prototype.constructor = ConeEquation;\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\n\nConeEquation.prototype.computeB = function (h) {\n  var a = this.a,\n      b = this.b,\n      ni = this.axisA,\n      nj = this.axisB,\n      nixnj = tmpVec1,\n      njxni = tmpVec2,\n      GA = this.jacobianElementA,\n      GB = this.jacobianElementB; // Caluclate cross products\n\n  ni.cross(nj, nixnj);\n  nj.cross(ni, njxni); // The angle between two vector is:\n  // cos(theta) = a * b / (length(a) * length(b) = { len(a) = len(b) = 1 } = a * b\n  // g = a * b\n  // gdot = (b x a) * wi + (a x b) * wj\n  // G = [0 bxa 0 axb]\n  // W = [vi wi vj wj]\n\n  GA.rotational.copy(njxni);\n  GB.rotational.copy(nixnj);\n  var g = Math.cos(this.angle) - ni.dot(nj),\n      GW = this.computeGW(),\n      GiMf = this.computeGiMf();\n  var B = -g * a - GW * b - h * GiMf;\n  return B;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/equations/ConeEquation.js?");

/***/ }),

/***/ "./node_modules/cannon/src/equations/ContactEquation.js":
/*!**************************************************************!*\
  !*** ./node_modules/cannon/src/equations/ContactEquation.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = ContactEquation;\n\nvar Equation = __webpack_require__(/*! ./Equation */ \"./node_modules/cannon/src/equations/Equation.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Mat3 = __webpack_require__(/*! ../math/Mat3 */ \"./node_modules/cannon/src/math/Mat3.js\");\n/**\n * Contact/non-penetration constraint equation\n * @class ContactEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @extends Equation\n */\n\n\nfunction ContactEquation(bodyA, bodyB, maxForce) {\n  maxForce = typeof maxForce !== 'undefined' ? maxForce : 1e6;\n  Equation.call(this, bodyA, bodyB, 0, maxForce);\n  /**\n   * @property restitution\n   * @type {Number}\n   */\n\n  this.restitution = 0.0; // \"bounciness\": u1 = -e*u0\n\n  /**\n   * World-oriented vector that goes from the center of bi to the contact point.\n   * @property {Vec3} ri\n   */\n\n  this.ri = new Vec3();\n  /**\n   * World-oriented vector that starts in body j position and goes to the contact point.\n   * @property {Vec3} rj\n   */\n\n  this.rj = new Vec3();\n  /**\n   * Contact normal, pointing out of body i.\n   * @property {Vec3} ni\n   */\n\n  this.ni = new Vec3();\n}\n\nContactEquation.prototype = new Equation();\nContactEquation.prototype.constructor = ContactEquation;\nvar ContactEquation_computeB_temp1 = new Vec3(); // Temp vectors\n\nvar ContactEquation_computeB_temp2 = new Vec3();\nvar ContactEquation_computeB_temp3 = new Vec3();\n\nContactEquation.prototype.computeB = function (h) {\n  var a = this.a,\n      b = this.b,\n      bi = this.bi,\n      bj = this.bj,\n      ri = this.ri,\n      rj = this.rj,\n      rixn = ContactEquation_computeB_temp1,\n      rjxn = ContactEquation_computeB_temp2,\n      vi = bi.velocity,\n      wi = bi.angularVelocity,\n      fi = bi.force,\n      taui = bi.torque,\n      vj = bj.velocity,\n      wj = bj.angularVelocity,\n      fj = bj.force,\n      tauj = bj.torque,\n      penetrationVec = ContactEquation_computeB_temp3,\n      GA = this.jacobianElementA,\n      GB = this.jacobianElementB,\n      n = this.ni; // Caluclate cross products\n\n  ri.cross(n, rixn);\n  rj.cross(n, rjxn); // g = xj+rj -(xi+ri)\n  // G = [ -ni  -rixn  ni  rjxn ]\n\n  n.negate(GA.spatial);\n  rixn.negate(GA.rotational);\n  GB.spatial.copy(n);\n  GB.rotational.copy(rjxn); // Calculate the penetration vector\n\n  penetrationVec.copy(bj.position);\n  penetrationVec.vadd(rj, penetrationVec);\n  penetrationVec.vsub(bi.position, penetrationVec);\n  penetrationVec.vsub(ri, penetrationVec);\n  var g = n.dot(penetrationVec); // Compute iteration\n\n  var ePlusOne = this.restitution + 1;\n  var GW = ePlusOne * vj.dot(n) - ePlusOne * vi.dot(n) + wj.dot(rjxn) - wi.dot(rixn);\n  var GiMf = this.computeGiMf();\n  var B = -g * a - GW * b - h * GiMf;\n  return B;\n};\n\nvar ContactEquation_getImpactVelocityAlongNormal_vi = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_vj = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_xi = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_xj = new Vec3();\nvar ContactEquation_getImpactVelocityAlongNormal_relVel = new Vec3();\n/**\n * Get the current relative velocity in the contact point.\n * @method getImpactVelocityAlongNormal\n * @return {number}\n */\n\nContactEquation.prototype.getImpactVelocityAlongNormal = function () {\n  var vi = ContactEquation_getImpactVelocityAlongNormal_vi;\n  var vj = ContactEquation_getImpactVelocityAlongNormal_vj;\n  var xi = ContactEquation_getImpactVelocityAlongNormal_xi;\n  var xj = ContactEquation_getImpactVelocityAlongNormal_xj;\n  var relVel = ContactEquation_getImpactVelocityAlongNormal_relVel;\n  this.bi.position.vadd(this.ri, xi);\n  this.bj.position.vadd(this.rj, xj);\n  this.bi.getVelocityAtWorldPoint(xi, vi);\n  this.bj.getVelocityAtWorldPoint(xj, vj);\n  vi.vsub(vj, relVel);\n  return this.ni.dot(relVel);\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/equations/ContactEquation.js?");

/***/ }),

/***/ "./node_modules/cannon/src/equations/Equation.js":
/*!*******************************************************!*\
  !*** ./node_modules/cannon/src/equations/Equation.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Equation;\n\nvar JacobianElement = __webpack_require__(/*! ../math/JacobianElement */ \"./node_modules/cannon/src/math/JacobianElement.js\"),\n    Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n/**\n * Equation base class\n * @class Equation\n * @constructor\n * @author schteppe\n * @param {Body} bi\n * @param {Body} bj\n * @param {Number} minForce Minimum (read: negative max) force to be applied by the constraint.\n * @param {Number} maxForce Maximum (read: positive max) force to be applied by the constraint.\n */\n\n\nfunction Equation(bi, bj, minForce, maxForce) {\n  this.id = Equation.id++;\n  /**\n   * @property {number} minForce\n   */\n\n  this.minForce = typeof minForce === \"undefined\" ? -1e6 : minForce;\n  /**\n   * @property {number} maxForce\n   */\n\n  this.maxForce = typeof maxForce === \"undefined\" ? 1e6 : maxForce;\n  /**\n   * @property bi\n   * @type {Body}\n   */\n\n  this.bi = bi;\n  /**\n   * @property bj\n   * @type {Body}\n   */\n\n  this.bj = bj;\n  /**\n   * SPOOK parameter\n   * @property {number} a\n   */\n\n  this.a = 0.0;\n  /**\n   * SPOOK parameter\n   * @property {number} b\n   */\n\n  this.b = 0.0;\n  /**\n   * SPOOK parameter\n   * @property {number} eps\n   */\n\n  this.eps = 0.0;\n  /**\n   * @property {JacobianElement} jacobianElementA\n   */\n\n  this.jacobianElementA = new JacobianElement();\n  /**\n   * @property {JacobianElement} jacobianElementB\n   */\n\n  this.jacobianElementB = new JacobianElement();\n  /**\n   * @property {boolean} enabled\n   * @default true\n   */\n\n  this.enabled = true;\n  /**\n   * A number, proportional to the force added to the bodies.\n   * @property {number} multiplier\n   * @readonly\n   */\n\n  this.multiplier = 0; // Set typical spook params\n\n  this.setSpookParams(1e7, 4, 1 / 60);\n}\n\nEquation.prototype.constructor = Equation;\nEquation.id = 0;\n/**\n * Recalculates a,b,eps.\n * @method setSpookParams\n */\n\nEquation.prototype.setSpookParams = function (stiffness, relaxation, timeStep) {\n  var d = relaxation,\n      k = stiffness,\n      h = timeStep;\n  this.a = 4.0 / (h * (1 + 4 * d));\n  this.b = 4.0 * d / (1 + 4 * d);\n  this.eps = 4.0 / (h * h * k * (1 + 4 * d));\n};\n/**\n * Computes the RHS of the SPOOK equation\n * @method computeB\n * @return {Number}\n */\n\n\nEquation.prototype.computeB = function (a, b, h) {\n  var GW = this.computeGW(),\n      Gq = this.computeGq(),\n      GiMf = this.computeGiMf();\n  return -Gq * a - GW * b - GiMf * h;\n};\n/**\n * Computes G*q, where q are the generalized body coordinates\n * @method computeGq\n * @return {Number}\n */\n\n\nEquation.prototype.computeGq = function () {\n  var GA = this.jacobianElementA,\n      GB = this.jacobianElementB,\n      bi = this.bi,\n      bj = this.bj,\n      xi = bi.position,\n      xj = bj.position;\n  return GA.spatial.dot(xi) + GB.spatial.dot(xj);\n};\n\nvar zero = new Vec3();\n/**\n * Computes G*W, where W are the body velocities\n * @method computeGW\n * @return {Number}\n */\n\nEquation.prototype.computeGW = function () {\n  var GA = this.jacobianElementA,\n      GB = this.jacobianElementB,\n      bi = this.bi,\n      bj = this.bj,\n      vi = bi.velocity,\n      vj = bj.velocity,\n      wi = bi.angularVelocity,\n      wj = bj.angularVelocity;\n  return GA.multiplyVectors(vi, wi) + GB.multiplyVectors(vj, wj);\n};\n/**\n * Computes G*Wlambda, where W are the body velocities\n * @method computeGWlambda\n * @return {Number}\n */\n\n\nEquation.prototype.computeGWlambda = function () {\n  var GA = this.jacobianElementA,\n      GB = this.jacobianElementB,\n      bi = this.bi,\n      bj = this.bj,\n      vi = bi.vlambda,\n      vj = bj.vlambda,\n      wi = bi.wlambda,\n      wj = bj.wlambda;\n  return GA.multiplyVectors(vi, wi) + GB.multiplyVectors(vj, wj);\n};\n/**\n * Computes G*inv(M)*f, where M is the mass matrix with diagonal blocks for each body, and f are the forces on the bodies.\n * @method computeGiMf\n * @return {Number}\n */\n\n\nvar iMfi = new Vec3(),\n    iMfj = new Vec3(),\n    invIi_vmult_taui = new Vec3(),\n    invIj_vmult_tauj = new Vec3();\n\nEquation.prototype.computeGiMf = function () {\n  var GA = this.jacobianElementA,\n      GB = this.jacobianElementB,\n      bi = this.bi,\n      bj = this.bj,\n      fi = bi.force,\n      ti = bi.torque,\n      fj = bj.force,\n      tj = bj.torque,\n      invMassi = bi.invMassSolve,\n      invMassj = bj.invMassSolve;\n  fi.scale(invMassi, iMfi);\n  fj.scale(invMassj, iMfj);\n  bi.invInertiaWorldSolve.vmult(ti, invIi_vmult_taui);\n  bj.invInertiaWorldSolve.vmult(tj, invIj_vmult_tauj);\n  return GA.multiplyVectors(iMfi, invIi_vmult_taui) + GB.multiplyVectors(iMfj, invIj_vmult_tauj);\n};\n/**\n * Computes G*inv(M)*G'\n * @method computeGiMGt\n * @return {Number}\n */\n\n\nvar tmp = new Vec3();\n\nEquation.prototype.computeGiMGt = function () {\n  var GA = this.jacobianElementA,\n      GB = this.jacobianElementB,\n      bi = this.bi,\n      bj = this.bj,\n      invMassi = bi.invMassSolve,\n      invMassj = bj.invMassSolve,\n      invIi = bi.invInertiaWorldSolve,\n      invIj = bj.invInertiaWorldSolve,\n      result = invMassi + invMassj;\n  invIi.vmult(GA.rotational, tmp);\n  result += tmp.dot(GA.rotational);\n  invIj.vmult(GB.rotational, tmp);\n  result += tmp.dot(GB.rotational);\n  return result;\n};\n\nvar addToWlambda_temp = new Vec3(),\n    addToWlambda_Gi = new Vec3(),\n    addToWlambda_Gj = new Vec3(),\n    addToWlambda_ri = new Vec3(),\n    addToWlambda_rj = new Vec3(),\n    addToWlambda_Mdiag = new Vec3();\n/**\n * Add constraint velocity to the bodies.\n * @method addToWlambda\n * @param {Number} deltalambda\n */\n\nEquation.prototype.addToWlambda = function (deltalambda) {\n  var GA = this.jacobianElementA,\n      GB = this.jacobianElementB,\n      bi = this.bi,\n      bj = this.bj,\n      temp = addToWlambda_temp; // Add to linear velocity\n  // v_lambda += inv(M) * delta_lamba * G\n\n  bi.vlambda.addScaledVector(bi.invMassSolve * deltalambda, GA.spatial, bi.vlambda);\n  bj.vlambda.addScaledVector(bj.invMassSolve * deltalambda, GB.spatial, bj.vlambda); // Add to angular velocity\n\n  bi.invInertiaWorldSolve.vmult(GA.rotational, temp);\n  bi.wlambda.addScaledVector(deltalambda, temp, bi.wlambda);\n  bj.invInertiaWorldSolve.vmult(GB.rotational, temp);\n  bj.wlambda.addScaledVector(deltalambda, temp, bj.wlambda);\n};\n/**\n * Compute the denominator part of the SPOOK equation: C = G*inv(M)*G' + eps\n * @method computeInvC\n * @param  {Number} eps\n * @return {Number}\n */\n\n\nEquation.prototype.computeC = function () {\n  return this.computeGiMGt() + this.eps;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/equations/Equation.js?");

/***/ }),

/***/ "./node_modules/cannon/src/equations/FrictionEquation.js":
/*!***************************************************************!*\
  !*** ./node_modules/cannon/src/equations/FrictionEquation.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = FrictionEquation;\n\nvar Equation = __webpack_require__(/*! ./Equation */ \"./node_modules/cannon/src/equations/Equation.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Mat3 = __webpack_require__(/*! ../math/Mat3 */ \"./node_modules/cannon/src/math/Mat3.js\");\n/**\n * Constrains the slipping in a contact along a tangent\n * @class FrictionEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Number} slipForce should be +-F_friction = +-mu * F_normal = +-mu * m * g\n * @extends Equation\n */\n\n\nfunction FrictionEquation(bodyA, bodyB, slipForce) {\n  Equation.call(this, bodyA, bodyB, -slipForce, slipForce);\n  this.ri = new Vec3();\n  this.rj = new Vec3();\n  this.t = new Vec3(); // tangent\n}\n\nFrictionEquation.prototype = new Equation();\nFrictionEquation.prototype.constructor = FrictionEquation;\nvar FrictionEquation_computeB_temp1 = new Vec3();\nvar FrictionEquation_computeB_temp2 = new Vec3();\n\nFrictionEquation.prototype.computeB = function (h) {\n  var a = this.a,\n      b = this.b,\n      bi = this.bi,\n      bj = this.bj,\n      ri = this.ri,\n      rj = this.rj,\n      rixt = FrictionEquation_computeB_temp1,\n      rjxt = FrictionEquation_computeB_temp2,\n      t = this.t; // Caluclate cross products\n\n  ri.cross(t, rixt);\n  rj.cross(t, rjxt); // G = [-t -rixt t rjxt]\n  // And remember, this is a pure velocity constraint, g is always zero!\n\n  var GA = this.jacobianElementA,\n      GB = this.jacobianElementB;\n  t.negate(GA.spatial);\n  rixt.negate(GA.rotational);\n  GB.spatial.copy(t);\n  GB.rotational.copy(rjxt);\n  var GW = this.computeGW();\n  var GiMf = this.computeGiMf();\n  var B = -GW * b - h * GiMf;\n  return B;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/equations/FrictionEquation.js?");

/***/ }),

/***/ "./node_modules/cannon/src/equations/RotationalEquation.js":
/*!*****************************************************************!*\
  !*** ./node_modules/cannon/src/equations/RotationalEquation.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = RotationalEquation;\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Mat3 = __webpack_require__(/*! ../math/Mat3 */ \"./node_modules/cannon/src/math/Mat3.js\");\n\nvar Equation = __webpack_require__(/*! ./Equation */ \"./node_modules/cannon/src/equations/Equation.js\");\n/**\n * Rotational constraint. Works to keep the local vectors orthogonal to each other in world space.\n * @class RotationalEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec3} [options.axisA]\n * @param {Vec3} [options.axisB]\n * @param {number} [options.maxForce]\n * @extends Equation\n */\n\n\nfunction RotationalEquation(bodyA, bodyB, options) {\n  options = options || {};\n  var maxForce = typeof options.maxForce !== 'undefined' ? options.maxForce : 1e6;\n  Equation.call(this, bodyA, bodyB, -maxForce, maxForce);\n  this.axisA = options.axisA ? options.axisA.clone() : new Vec3(1, 0, 0);\n  this.axisB = options.axisB ? options.axisB.clone() : new Vec3(0, 1, 0);\n  this.maxAngle = Math.PI / 2;\n}\n\nRotationalEquation.prototype = new Equation();\nRotationalEquation.prototype.constructor = RotationalEquation;\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\n\nRotationalEquation.prototype.computeB = function (h) {\n  var a = this.a,\n      b = this.b,\n      ni = this.axisA,\n      nj = this.axisB,\n      nixnj = tmpVec1,\n      njxni = tmpVec2,\n      GA = this.jacobianElementA,\n      GB = this.jacobianElementB; // Caluclate cross products\n\n  ni.cross(nj, nixnj);\n  nj.cross(ni, njxni); // g = ni * nj\n  // gdot = (nj x ni) * wi + (ni x nj) * wj\n  // G = [0 njxni 0 nixnj]\n  // W = [vi wi vj wj]\n\n  GA.rotational.copy(njxni);\n  GB.rotational.copy(nixnj);\n  var g = Math.cos(this.maxAngle) - ni.dot(nj),\n      GW = this.computeGW(),\n      GiMf = this.computeGiMf();\n  var B = -g * a - GW * b - h * GiMf;\n  return B;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/equations/RotationalEquation.js?");

/***/ }),

/***/ "./node_modules/cannon/src/equations/RotationalMotorEquation.js":
/*!**********************************************************************!*\
  !*** ./node_modules/cannon/src/equations/RotationalMotorEquation.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = RotationalMotorEquation;\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Mat3 = __webpack_require__(/*! ../math/Mat3 */ \"./node_modules/cannon/src/math/Mat3.js\");\n\nvar Equation = __webpack_require__(/*! ./Equation */ \"./node_modules/cannon/src/equations/Equation.js\");\n/**\n * Rotational motor constraint. Tries to keep the relative angular velocity of the bodies to a given value.\n * @class RotationalMotorEquation\n * @constructor\n * @author schteppe\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Number} maxForce\n * @extends Equation\n */\n\n\nfunction RotationalMotorEquation(bodyA, bodyB, maxForce) {\n  maxForce = typeof maxForce !== 'undefined' ? maxForce : 1e6;\n  Equation.call(this, bodyA, bodyB, -maxForce, maxForce);\n  /**\n   * World oriented rotational axis\n   * @property {Vec3} axisA\n   */\n\n  this.axisA = new Vec3();\n  /**\n   * World oriented rotational axis\n   * @property {Vec3} axisB\n   */\n\n  this.axisB = new Vec3(); // World oriented rotational axis\n\n  /**\n   * Motor velocity\n   * @property {Number} targetVelocity\n   */\n\n  this.targetVelocity = 0;\n}\n\nRotationalMotorEquation.prototype = new Equation();\nRotationalMotorEquation.prototype.constructor = RotationalMotorEquation;\n\nRotationalMotorEquation.prototype.computeB = function (h) {\n  var a = this.a,\n      b = this.b,\n      bi = this.bi,\n      bj = this.bj,\n      axisA = this.axisA,\n      axisB = this.axisB,\n      GA = this.jacobianElementA,\n      GB = this.jacobianElementB; // g = 0\n  // gdot = axisA * wi - axisB * wj\n  // gdot = G * W = G * [vi wi vj wj]\n  // =>\n  // G = [0 axisA 0 -axisB]\n\n  GA.rotational.copy(axisA);\n  axisB.negate(GB.rotational);\n  var GW = this.computeGW() - this.targetVelocity,\n      GiMf = this.computeGiMf();\n  var B = -GW * b - h * GiMf;\n  return B;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/equations/RotationalMotorEquation.js?");

/***/ }),

/***/ "./node_modules/cannon/src/material/ContactMaterial.js":
/*!*************************************************************!*\
  !*** ./node_modules/cannon/src/material/ContactMaterial.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Utils = __webpack_require__(/*! ../utils/Utils */ \"./node_modules/cannon/src/utils/Utils.js\");\n\nmodule.exports = ContactMaterial;\n/**\n * Defines what happens when two materials meet.\n * @class ContactMaterial\n * @constructor\n * @param {Material} m1\n * @param {Material} m2\n * @param {object} [options]\n * @param {Number} [options.friction=0.3]\n * @param {Number} [options.restitution=0.3]\n * @param {number} [options.contactEquationStiffness=1e7]\n * @param {number} [options.contactEquationRelaxation=3]\n * @param {number} [options.frictionEquationStiffness=1e7]\n * @param {Number} [options.frictionEquationRelaxation=3]\n */\n\nfunction ContactMaterial(m1, m2, options) {\n  options = Utils.defaults(options, {\n    friction: 0.3,\n    restitution: 0.3,\n    contactEquationStiffness: 1e7,\n    contactEquationRelaxation: 3,\n    frictionEquationStiffness: 1e7,\n    frictionEquationRelaxation: 3\n  });\n  /**\n   * Identifier of this material\n   * @property {Number} id\n   */\n\n  this.id = ContactMaterial.idCounter++;\n  /**\n   * Participating materials\n   * @property {Array} materials\n   * @todo  Should be .materialA and .materialB instead\n   */\n\n  this.materials = [m1, m2];\n  /**\n   * Friction coefficient\n   * @property {Number} friction\n   */\n\n  this.friction = options.friction;\n  /**\n   * Restitution coefficient\n   * @property {Number} restitution\n   */\n\n  this.restitution = options.restitution;\n  /**\n   * Stiffness of the produced contact equations\n   * @property {Number} contactEquationStiffness\n   */\n\n  this.contactEquationStiffness = options.contactEquationStiffness;\n  /**\n   * Relaxation time of the produced contact equations\n   * @property {Number} contactEquationRelaxation\n   */\n\n  this.contactEquationRelaxation = options.contactEquationRelaxation;\n  /**\n   * Stiffness of the produced friction equations\n   * @property {Number} frictionEquationStiffness\n   */\n\n  this.frictionEquationStiffness = options.frictionEquationStiffness;\n  /**\n   * Relaxation time of the produced friction equations\n   * @property {Number} frictionEquationRelaxation\n   */\n\n  this.frictionEquationRelaxation = options.frictionEquationRelaxation;\n}\n\nContactMaterial.idCounter = 0;\n\n//# sourceURL=webpack:///./node_modules/cannon/src/material/ContactMaterial.js?");

/***/ }),

/***/ "./node_modules/cannon/src/material/Material.js":
/*!******************************************************!*\
  !*** ./node_modules/cannon/src/material/Material.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = Material;\n/**\n * Defines a physics material.\n * @class Material\n * @constructor\n * @param {object} [options]\n * @author schteppe\n */\n\nfunction Material(options) {\n  var name = '';\n  options = options || {}; // Backwards compatibility fix\n\n  if (typeof options === 'string') {\n    name = options;\n    options = {};\n  } else if (typeof options === 'object') {\n    name = '';\n  }\n  /**\n   * @property name\n   * @type {String}\n   */\n\n\n  this.name = name;\n  /**\n   * material id.\n   * @property id\n   * @type {number}\n   */\n\n  this.id = Material.idCounter++;\n  /**\n   * Friction for this material. If non-negative, it will be used instead of the friction given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\n   * @property {number} friction\n   */\n\n  this.friction = typeof options.friction !== 'undefined' ? options.friction : -1;\n  /**\n   * Restitution for this material. If non-negative, it will be used instead of the restitution given by ContactMaterials. If there's no matching ContactMaterial, the value from .defaultContactMaterial in the World will be used.\n   * @property {number} restitution\n   */\n\n  this.restitution = typeof options.restitution !== 'undefined' ? options.restitution : -1;\n}\n\nMaterial.idCounter = 0;\n\n//# sourceURL=webpack:///./node_modules/cannon/src/material/Material.js?");

/***/ }),

/***/ "./node_modules/cannon/src/math/JacobianElement.js":
/*!*********************************************************!*\
  !*** ./node_modules/cannon/src/math/JacobianElement.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = JacobianElement;\n\nvar Vec3 = __webpack_require__(/*! ./Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n/**\n * An element containing 6 entries, 3 spatial and 3 rotational degrees of freedom.\n * @class JacobianElement\n * @constructor\n */\n\n\nfunction JacobianElement() {\n  /**\n   * @property {Vec3} spatial\n   */\n  this.spatial = new Vec3();\n  /**\n   * @property {Vec3} rotational\n   */\n\n  this.rotational = new Vec3();\n}\n/**\n * Multiply with other JacobianElement\n * @method multiplyElement\n * @param  {JacobianElement} element\n * @return {Number}\n */\n\n\nJacobianElement.prototype.multiplyElement = function (element) {\n  return element.spatial.dot(this.spatial) + element.rotational.dot(this.rotational);\n};\n/**\n * Multiply with two vectors\n * @method multiplyVectors\n * @param  {Vec3} spatial\n * @param  {Vec3} rotational\n * @return {Number}\n */\n\n\nJacobianElement.prototype.multiplyVectors = function (spatial, rotational) {\n  return spatial.dot(this.spatial) + rotational.dot(this.rotational);\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/math/JacobianElement.js?");

/***/ }),

/***/ "./node_modules/cannon/src/math/Mat3.js":
/*!**********************************************!*\
  !*** ./node_modules/cannon/src/math/Mat3.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Mat3;\n\nvar Vec3 = __webpack_require__(/*! ./Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n/**\n * A 3x3 matrix.\n * @class Mat3\n * @constructor\n * @param array elements Array of nine elements. Optional.\n * @author schteppe / http://github.com/schteppe\n */\n\n\nfunction Mat3(elements) {\n  /**\n   * A vector of length 9, containing all matrix elements\n   * @property {Array} elements\n   */\n  if (elements) {\n    this.elements = elements;\n  } else {\n    this.elements = [0, 0, 0, 0, 0, 0, 0, 0, 0];\n  }\n}\n/**\n * Sets the matrix to identity\n * @method identity\n * @todo Should perhaps be renamed to setIdentity() to be more clear.\n * @todo Create another function that immediately creates an identity matrix eg. eye()\n */\n\n\nMat3.prototype.identity = function () {\n  var e = this.elements;\n  e[0] = 1;\n  e[1] = 0;\n  e[2] = 0;\n  e[3] = 0;\n  e[4] = 1;\n  e[5] = 0;\n  e[6] = 0;\n  e[7] = 0;\n  e[8] = 1;\n};\n/**\n * Set all elements to zero\n * @method setZero\n */\n\n\nMat3.prototype.setZero = function () {\n  var e = this.elements;\n  e[0] = 0;\n  e[1] = 0;\n  e[2] = 0;\n  e[3] = 0;\n  e[4] = 0;\n  e[5] = 0;\n  e[6] = 0;\n  e[7] = 0;\n  e[8] = 0;\n};\n/**\n * Sets the matrix diagonal elements from a Vec3\n * @method setTrace\n * @param {Vec3} vec3\n */\n\n\nMat3.prototype.setTrace = function (vec3) {\n  var e = this.elements;\n  e[0] = vec3.x;\n  e[4] = vec3.y;\n  e[8] = vec3.z;\n};\n/**\n * Gets the matrix diagonal elements\n * @method getTrace\n * @return {Vec3}\n */\n\n\nMat3.prototype.getTrace = function (target) {\n  var target = target || new Vec3();\n  var e = this.elements;\n  target.x = e[0];\n  target.y = e[4];\n  target.z = e[8];\n};\n/**\n * Matrix-Vector multiplication\n * @method vmult\n * @param {Vec3} v The vector to multiply with\n * @param {Vec3} target Optional, target to save the result in.\n */\n\n\nMat3.prototype.vmult = function (v, target) {\n  target = target || new Vec3();\n  var e = this.elements,\n      x = v.x,\n      y = v.y,\n      z = v.z;\n  target.x = e[0] * x + e[1] * y + e[2] * z;\n  target.y = e[3] * x + e[4] * y + e[5] * z;\n  target.z = e[6] * x + e[7] * y + e[8] * z;\n  return target;\n};\n/**\n * Matrix-scalar multiplication\n * @method smult\n * @param {Number} s\n */\n\n\nMat3.prototype.smult = function (s) {\n  for (var i = 0; i < this.elements.length; i++) {\n    this.elements[i] *= s;\n  }\n};\n/**\n * Matrix multiplication\n * @method mmult\n * @param {Mat3} m Matrix to multiply with from left side.\n * @return {Mat3} The result.\n */\n\n\nMat3.prototype.mmult = function (m, target) {\n  var r = target || new Mat3();\n\n  for (var i = 0; i < 3; i++) {\n    for (var j = 0; j < 3; j++) {\n      var sum = 0.0;\n\n      for (var k = 0; k < 3; k++) {\n        sum += m.elements[i + k * 3] * this.elements[k + j * 3];\n      }\n\n      r.elements[i + j * 3] = sum;\n    }\n  }\n\n  return r;\n};\n/**\n * Scale each column of the matrix\n * @method scale\n * @param {Vec3} v\n * @return {Mat3} The result.\n */\n\n\nMat3.prototype.scale = function (v, target) {\n  target = target || new Mat3();\n  var e = this.elements,\n      t = target.elements;\n\n  for (var i = 0; i !== 3; i++) {\n    t[3 * i + 0] = v.x * e[3 * i + 0];\n    t[3 * i + 1] = v.y * e[3 * i + 1];\n    t[3 * i + 2] = v.z * e[3 * i + 2];\n  }\n\n  return target;\n};\n/**\n * Solve Ax=b\n * @method solve\n * @param {Vec3} b The right hand side\n * @param {Vec3} target Optional. Target vector to save in.\n * @return {Vec3} The solution x\n * @todo should reuse arrays\n */\n\n\nMat3.prototype.solve = function (b, target) {\n  target = target || new Vec3(); // Construct equations\n\n  var nr = 3; // num rows\n\n  var nc = 4; // num cols\n\n  var eqns = [];\n\n  for (var i = 0; i < nr * nc; i++) {\n    eqns.push(0);\n  }\n\n  var i, j;\n\n  for (i = 0; i < 3; i++) {\n    for (j = 0; j < 3; j++) {\n      eqns[i + nc * j] = this.elements[i + 3 * j];\n    }\n  }\n\n  eqns[3 + 4 * 0] = b.x;\n  eqns[3 + 4 * 1] = b.y;\n  eqns[3 + 4 * 2] = b.z; // Compute right upper triangular version of the matrix - Gauss elimination\n\n  var n = 3,\n      k = n,\n      np;\n  var kp = 4; // num rows\n\n  var p, els;\n\n  do {\n    i = k - n;\n\n    if (eqns[i + nc * i] === 0) {\n      // the pivot is null, swap lines\n      for (j = i + 1; j < k; j++) {\n        if (eqns[i + nc * j] !== 0) {\n          np = kp;\n\n          do {\n            // do ligne( i ) = ligne( i ) + ligne( k )\n            p = kp - np;\n            eqns[p + nc * i] += eqns[p + nc * j];\n          } while (--np);\n\n          break;\n        }\n      }\n    }\n\n    if (eqns[i + nc * i] !== 0) {\n      for (j = i + 1; j < k; j++) {\n        var multiplier = eqns[i + nc * j] / eqns[i + nc * i];\n        np = kp;\n\n        do {\n          // do ligne( k ) = ligne( k ) - multiplier * ligne( i )\n          p = kp - np;\n          eqns[p + nc * j] = p <= i ? 0 : eqns[p + nc * j] - eqns[p + nc * i] * multiplier;\n        } while (--np);\n      }\n    }\n  } while (--n); // Get the solution\n\n\n  target.z = eqns[2 * nc + 3] / eqns[2 * nc + 2];\n  target.y = (eqns[1 * nc + 3] - eqns[1 * nc + 2] * target.z) / eqns[1 * nc + 1];\n  target.x = (eqns[0 * nc + 3] - eqns[0 * nc + 2] * target.z - eqns[0 * nc + 1] * target.y) / eqns[0 * nc + 0];\n\n  if (isNaN(target.x) || isNaN(target.y) || isNaN(target.z) || target.x === Infinity || target.y === Infinity || target.z === Infinity) {\n    throw \"Could not solve equation! Got x=[\" + target.toString() + \"], b=[\" + b.toString() + \"], A=[\" + this.toString() + \"]\";\n  }\n\n  return target;\n};\n/**\n * Get an element in the matrix by index. Index starts at 0, not 1!!!\n * @method e\n * @param {Number} row\n * @param {Number} column\n * @param {Number} value Optional. If provided, the matrix element will be set to this value.\n * @return {Number}\n */\n\n\nMat3.prototype.e = function (row, column, value) {\n  if (value === undefined) {\n    return this.elements[column + 3 * row];\n  } else {\n    // Set value\n    this.elements[column + 3 * row] = value;\n  }\n};\n/**\n * Copy another matrix into this matrix object.\n * @method copy\n * @param {Mat3} source\n * @return {Mat3} this\n */\n\n\nMat3.prototype.copy = function (source) {\n  for (var i = 0; i < source.elements.length; i++) {\n    this.elements[i] = source.elements[i];\n  }\n\n  return this;\n};\n/**\n * Returns a string representation of the matrix.\n * @method toString\n * @return string\n */\n\n\nMat3.prototype.toString = function () {\n  var r = \"\";\n  var sep = \",\";\n\n  for (var i = 0; i < 9; i++) {\n    r += this.elements[i] + sep;\n  }\n\n  return r;\n};\n/**\n * reverse the matrix\n * @method reverse\n * @param {Mat3} target Optional. Target matrix to save in.\n * @return {Mat3} The solution x\n */\n\n\nMat3.prototype.reverse = function (target) {\n  target = target || new Mat3(); // Construct equations\n\n  var nr = 3; // num rows\n\n  var nc = 6; // num cols\n\n  var eqns = [];\n\n  for (var i = 0; i < nr * nc; i++) {\n    eqns.push(0);\n  }\n\n  var i, j;\n\n  for (i = 0; i < 3; i++) {\n    for (j = 0; j < 3; j++) {\n      eqns[i + nc * j] = this.elements[i + 3 * j];\n    }\n  }\n\n  eqns[3 + 6 * 0] = 1;\n  eqns[3 + 6 * 1] = 0;\n  eqns[3 + 6 * 2] = 0;\n  eqns[4 + 6 * 0] = 0;\n  eqns[4 + 6 * 1] = 1;\n  eqns[4 + 6 * 2] = 0;\n  eqns[5 + 6 * 0] = 0;\n  eqns[5 + 6 * 1] = 0;\n  eqns[5 + 6 * 2] = 1; // Compute right upper triangular version of the matrix - Gauss elimination\n\n  var n = 3,\n      k = n,\n      np;\n  var kp = nc; // num rows\n\n  var p;\n\n  do {\n    i = k - n;\n\n    if (eqns[i + nc * i] === 0) {\n      // the pivot is null, swap lines\n      for (j = i + 1; j < k; j++) {\n        if (eqns[i + nc * j] !== 0) {\n          np = kp;\n\n          do {\n            // do line( i ) = line( i ) + line( k )\n            p = kp - np;\n            eqns[p + nc * i] += eqns[p + nc * j];\n          } while (--np);\n\n          break;\n        }\n      }\n    }\n\n    if (eqns[i + nc * i] !== 0) {\n      for (j = i + 1; j < k; j++) {\n        var multiplier = eqns[i + nc * j] / eqns[i + nc * i];\n        np = kp;\n\n        do {\n          // do line( k ) = line( k ) - multiplier * line( i )\n          p = kp - np;\n          eqns[p + nc * j] = p <= i ? 0 : eqns[p + nc * j] - eqns[p + nc * i] * multiplier;\n        } while (--np);\n      }\n    }\n  } while (--n); // eliminate the upper left triangle of the matrix\n\n\n  i = 2;\n\n  do {\n    j = i - 1;\n\n    do {\n      var multiplier = eqns[i + nc * j] / eqns[i + nc * i];\n      np = nc;\n\n      do {\n        p = nc - np;\n        eqns[p + nc * j] = eqns[p + nc * j] - eqns[p + nc * i] * multiplier;\n      } while (--np);\n    } while (j--);\n  } while (--i); // operations on the diagonal\n\n\n  i = 2;\n\n  do {\n    var multiplier = 1 / eqns[i + nc * i];\n    np = nc;\n\n    do {\n      p = nc - np;\n      eqns[p + nc * i] = eqns[p + nc * i] * multiplier;\n    } while (--np);\n  } while (i--);\n\n  i = 2;\n\n  do {\n    j = 2;\n\n    do {\n      p = eqns[nr + j + nc * i];\n\n      if (isNaN(p) || p === Infinity) {\n        throw \"Could not reverse! A=[\" + this.toString() + \"]\";\n      }\n\n      target.e(i, j, p);\n    } while (j--);\n  } while (i--);\n\n  return target;\n};\n/**\n * Set the matrix from a quaterion\n * @method setRotationFromQuaternion\n * @param {Quaternion} q\n */\n\n\nMat3.prototype.setRotationFromQuaternion = function (q) {\n  var x = q.x,\n      y = q.y,\n      z = q.z,\n      w = q.w,\n      x2 = x + x,\n      y2 = y + y,\n      z2 = z + z,\n      xx = x * x2,\n      xy = x * y2,\n      xz = x * z2,\n      yy = y * y2,\n      yz = y * z2,\n      zz = z * z2,\n      wx = w * x2,\n      wy = w * y2,\n      wz = w * z2,\n      e = this.elements;\n  e[3 * 0 + 0] = 1 - (yy + zz);\n  e[3 * 0 + 1] = xy - wz;\n  e[3 * 0 + 2] = xz + wy;\n  e[3 * 1 + 0] = xy + wz;\n  e[3 * 1 + 1] = 1 - (xx + zz);\n  e[3 * 1 + 2] = yz - wx;\n  e[3 * 2 + 0] = xz - wy;\n  e[3 * 2 + 1] = yz + wx;\n  e[3 * 2 + 2] = 1 - (xx + yy);\n  return this;\n};\n/**\n * Transpose the matrix\n * @method transpose\n * @param  {Mat3} target Where to store the result.\n * @return {Mat3} The target Mat3, or a new Mat3 if target was omitted.\n */\n\n\nMat3.prototype.transpose = function (target) {\n  target = target || new Mat3();\n  var Mt = target.elements,\n      M = this.elements;\n\n  for (var i = 0; i !== 3; i++) {\n    for (var j = 0; j !== 3; j++) {\n      Mt[3 * i + j] = M[3 * j + i];\n    }\n  }\n\n  return target;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/math/Mat3.js?");

/***/ }),

/***/ "./node_modules/cannon/src/math/Quaternion.js":
/*!****************************************************!*\
  !*** ./node_modules/cannon/src/math/Quaternion.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Quaternion;\n\nvar Vec3 = __webpack_require__(/*! ./Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n/**\n * A Quaternion describes a rotation in 3D space. The Quaternion is mathematically defined as Q = x*i + y*j + z*k + w, where (i,j,k) are imaginary basis vectors. (x,y,z) can be seen as a vector related to the axis of rotation, while the real multiplier, w, is related to the amount of rotation.\n * @class Quaternion\n * @constructor\n * @param {Number} x Multiplier of the imaginary basis vector i.\n * @param {Number} y Multiplier of the imaginary basis vector j.\n * @param {Number} z Multiplier of the imaginary basis vector k.\n * @param {Number} w Multiplier of the real part.\n * @see http://en.wikipedia.org/wiki/Quaternion\n */\n\n\nfunction Quaternion(x, y, z, w) {\n  /**\n   * @property {Number} x\n   */\n  this.x = x !== undefined ? x : 0;\n  /**\n   * @property {Number} y\n   */\n\n  this.y = y !== undefined ? y : 0;\n  /**\n   * @property {Number} z\n   */\n\n  this.z = z !== undefined ? z : 0;\n  /**\n   * The multiplier of the real quaternion basis vector.\n   * @property {Number} w\n   */\n\n  this.w = w !== undefined ? w : 1;\n}\n/**\n * Set the value of the quaternion.\n * @method set\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @param {Number} w\n */\n\n\nQuaternion.prototype.set = function (x, y, z, w) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  this.w = w;\n  return this;\n};\n/**\n * Convert to a readable format\n * @method toString\n * @return string\n */\n\n\nQuaternion.prototype.toString = function () {\n  return this.x + \",\" + this.y + \",\" + this.z + \",\" + this.w;\n};\n/**\n * Convert to an Array\n * @method toArray\n * @return Array\n */\n\n\nQuaternion.prototype.toArray = function () {\n  return [this.x, this.y, this.z, this.w];\n};\n/**\n * Set the quaternion components given an axis and an angle.\n * @method setFromAxisAngle\n * @param {Vec3} axis\n * @param {Number} angle in radians\n */\n\n\nQuaternion.prototype.setFromAxisAngle = function (axis, angle) {\n  var s = Math.sin(angle * 0.5);\n  this.x = axis.x * s;\n  this.y = axis.y * s;\n  this.z = axis.z * s;\n  this.w = Math.cos(angle * 0.5);\n  return this;\n};\n/**\n * Converts the quaternion to axis/angle representation.\n * @method toAxisAngle\n * @param {Vec3} [targetAxis] A vector object to reuse for storing the axis.\n * @return {Array} An array, first elemnt is the axis and the second is the angle in radians.\n */\n\n\nQuaternion.prototype.toAxisAngle = function (targetAxis) {\n  targetAxis = targetAxis || new Vec3();\n  this.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalised\n\n  var angle = 2 * Math.acos(this.w);\n  var s = Math.sqrt(1 - this.w * this.w); // assuming quaternion normalised then w is less than 1, so term always positive.\n\n  if (s < 0.001) {\n    // test to avoid divide by zero, s is always positive due to sqrt\n    // if s close to zero then direction of axis not important\n    targetAxis.x = this.x; // if it is important that axis is normalised then replace with x=1; y=z=0;\n\n    targetAxis.y = this.y;\n    targetAxis.z = this.z;\n  } else {\n    targetAxis.x = this.x / s; // normalise axis\n\n    targetAxis.y = this.y / s;\n    targetAxis.z = this.z / s;\n  }\n\n  return [targetAxis, angle];\n};\n\nvar sfv_t1 = new Vec3(),\n    sfv_t2 = new Vec3();\n/**\n * Set the quaternion value given two vectors. The resulting rotation will be the needed rotation to rotate u to v.\n * @method setFromVectors\n * @param {Vec3} u\n * @param {Vec3} v\n */\n\nQuaternion.prototype.setFromVectors = function (u, v) {\n  if (u.isAntiparallelTo(v)) {\n    var t1 = sfv_t1;\n    var t2 = sfv_t2;\n    u.tangents(t1, t2);\n    this.setFromAxisAngle(t1, Math.PI);\n  } else {\n    var a = u.cross(v);\n    this.x = a.x;\n    this.y = a.y;\n    this.z = a.z;\n    this.w = Math.sqrt(Math.pow(u.norm(), 2) * Math.pow(v.norm(), 2)) + u.dot(v);\n    this.normalize();\n  }\n\n  return this;\n};\n/**\n * Quaternion multiplication\n * @method mult\n * @param {Quaternion} q\n * @param {Quaternion} target Optional.\n * @return {Quaternion}\n */\n\n\nvar Quaternion_mult_va = new Vec3();\nvar Quaternion_mult_vb = new Vec3();\nvar Quaternion_mult_vaxvb = new Vec3();\n\nQuaternion.prototype.mult = function (q, target) {\n  target = target || new Quaternion();\n  var ax = this.x,\n      ay = this.y,\n      az = this.z,\n      aw = this.w,\n      bx = q.x,\n      by = q.y,\n      bz = q.z,\n      bw = q.w;\n  target.x = ax * bw + aw * bx + ay * bz - az * by;\n  target.y = ay * bw + aw * by + az * bx - ax * bz;\n  target.z = az * bw + aw * bz + ax * by - ay * bx;\n  target.w = aw * bw - ax * bx - ay * by - az * bz;\n  return target;\n};\n/**\n * Get the inverse quaternion rotation.\n * @method inverse\n * @param {Quaternion} target\n * @return {Quaternion}\n */\n\n\nQuaternion.prototype.inverse = function (target) {\n  var x = this.x,\n      y = this.y,\n      z = this.z,\n      w = this.w;\n  target = target || new Quaternion();\n  this.conjugate(target);\n  var inorm2 = 1 / (x * x + y * y + z * z + w * w);\n  target.x *= inorm2;\n  target.y *= inorm2;\n  target.z *= inorm2;\n  target.w *= inorm2;\n  return target;\n};\n/**\n * Get the quaternion conjugate\n * @method conjugate\n * @param {Quaternion} target\n * @return {Quaternion}\n */\n\n\nQuaternion.prototype.conjugate = function (target) {\n  target = target || new Quaternion();\n  target.x = -this.x;\n  target.y = -this.y;\n  target.z = -this.z;\n  target.w = this.w;\n  return target;\n};\n/**\n * Normalize the quaternion. Note that this changes the values of the quaternion.\n * @method normalize\n */\n\n\nQuaternion.prototype.normalize = function () {\n  var l = Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n\n  if (l === 0) {\n    this.x = 0;\n    this.y = 0;\n    this.z = 0;\n    this.w = 0;\n  } else {\n    l = 1 / l;\n    this.x *= l;\n    this.y *= l;\n    this.z *= l;\n    this.w *= l;\n  }\n\n  return this;\n};\n/**\n * Approximation of quaternion normalization. Works best when quat is already almost-normalized.\n * @method normalizeFast\n * @see http://jsperf.com/fast-quaternion-normalization\n * @author unphased, https://github.com/unphased\n */\n\n\nQuaternion.prototype.normalizeFast = function () {\n  var f = (3.0 - (this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)) / 2.0;\n\n  if (f === 0) {\n    this.x = 0;\n    this.y = 0;\n    this.z = 0;\n    this.w = 0;\n  } else {\n    this.x *= f;\n    this.y *= f;\n    this.z *= f;\n    this.w *= f;\n  }\n\n  return this;\n};\n/**\n * Multiply the quaternion by a vector\n * @method vmult\n * @param {Vec3} v\n * @param {Vec3} target Optional\n * @return {Vec3}\n */\n\n\nQuaternion.prototype.vmult = function (v, target) {\n  target = target || new Vec3();\n  var x = v.x,\n      y = v.y,\n      z = v.z;\n  var qx = this.x,\n      qy = this.y,\n      qz = this.z,\n      qw = this.w; // q*v\n\n  var ix = qw * x + qy * z - qz * y,\n      iy = qw * y + qz * x - qx * z,\n      iz = qw * z + qx * y - qy * x,\n      iw = -qx * x - qy * y - qz * z;\n  target.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  target.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  target.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  return target;\n};\n/**\n * Copies value of source to this quaternion.\n * @method copy\n * @param {Quaternion} source\n * @return {Quaternion} this\n */\n\n\nQuaternion.prototype.copy = function (source) {\n  this.x = source.x;\n  this.y = source.y;\n  this.z = source.z;\n  this.w = source.w;\n  return this;\n};\n/**\n * Convert the quaternion to euler angle representation. Order: YZX, as this page describes: http://www.euclideanspace.com/maths/standards/index.htm\n * @method toEuler\n * @param {Vec3} target\n * @param string order Three-character string e.g. \"YZX\", which also is default.\n */\n\n\nQuaternion.prototype.toEuler = function (target, order) {\n  order = order || \"YZX\";\n  var heading, attitude, bank;\n  var x = this.x,\n      y = this.y,\n      z = this.z,\n      w = this.w;\n\n  switch (order) {\n    case \"YZX\":\n      var test = x * y + z * w;\n\n      if (test > 0.499) {\n        // singularity at north pole\n        heading = 2 * Math.atan2(x, w);\n        attitude = Math.PI / 2;\n        bank = 0;\n      }\n\n      if (test < -0.499) {\n        // singularity at south pole\n        heading = -2 * Math.atan2(x, w);\n        attitude = -Math.PI / 2;\n        bank = 0;\n      }\n\n      if (isNaN(heading)) {\n        var sqx = x * x;\n        var sqy = y * y;\n        var sqz = z * z;\n        heading = Math.atan2(2 * y * w - 2 * x * z, 1 - 2 * sqy - 2 * sqz); // Heading\n\n        attitude = Math.asin(2 * test); // attitude\n\n        bank = Math.atan2(2 * x * w - 2 * y * z, 1 - 2 * sqx - 2 * sqz); // bank\n      }\n\n      break;\n\n    default:\n      throw new Error(\"Euler order \" + order + \" not supported yet.\");\n  }\n\n  target.y = heading;\n  target.z = attitude;\n  target.x = bank;\n};\n/**\n * See http://www.mathworks.com/matlabcentral/fileexchange/20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/content/SpinCalc.m\n * @method setFromEuler\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @param {String} order The order to apply angles: 'XYZ' or 'YXZ' or any other combination\n */\n\n\nQuaternion.prototype.setFromEuler = function (x, y, z, order) {\n  order = order || \"XYZ\";\n  var c1 = Math.cos(x / 2);\n  var c2 = Math.cos(y / 2);\n  var c3 = Math.cos(z / 2);\n  var s1 = Math.sin(x / 2);\n  var s2 = Math.sin(y / 2);\n  var s3 = Math.sin(z / 2);\n\n  if (order === 'XYZ') {\n    this.x = s1 * c2 * c3 + c1 * s2 * s3;\n    this.y = c1 * s2 * c3 - s1 * c2 * s3;\n    this.z = c1 * c2 * s3 + s1 * s2 * c3;\n    this.w = c1 * c2 * c3 - s1 * s2 * s3;\n  } else if (order === 'YXZ') {\n    this.x = s1 * c2 * c3 + c1 * s2 * s3;\n    this.y = c1 * s2 * c3 - s1 * c2 * s3;\n    this.z = c1 * c2 * s3 - s1 * s2 * c3;\n    this.w = c1 * c2 * c3 + s1 * s2 * s3;\n  } else if (order === 'ZXY') {\n    this.x = s1 * c2 * c3 - c1 * s2 * s3;\n    this.y = c1 * s2 * c3 + s1 * c2 * s3;\n    this.z = c1 * c2 * s3 + s1 * s2 * c3;\n    this.w = c1 * c2 * c3 - s1 * s2 * s3;\n  } else if (order === 'ZYX') {\n    this.x = s1 * c2 * c3 - c1 * s2 * s3;\n    this.y = c1 * s2 * c3 + s1 * c2 * s3;\n    this.z = c1 * c2 * s3 - s1 * s2 * c3;\n    this.w = c1 * c2 * c3 + s1 * s2 * s3;\n  } else if (order === 'YZX') {\n    this.x = s1 * c2 * c3 + c1 * s2 * s3;\n    this.y = c1 * s2 * c3 + s1 * c2 * s3;\n    this.z = c1 * c2 * s3 - s1 * s2 * c3;\n    this.w = c1 * c2 * c3 - s1 * s2 * s3;\n  } else if (order === 'XZY') {\n    this.x = s1 * c2 * c3 - c1 * s2 * s3;\n    this.y = c1 * s2 * c3 - s1 * c2 * s3;\n    this.z = c1 * c2 * s3 + s1 * s2 * c3;\n    this.w = c1 * c2 * c3 + s1 * s2 * s3;\n  }\n\n  return this;\n};\n/**\n * @method clone\n * @return {Quaternion}\n */\n\n\nQuaternion.prototype.clone = function () {\n  return new Quaternion(this.x, this.y, this.z, this.w);\n};\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @method slerp\n * @param {Quaternion} toQuat second operand\n * @param {Number} t interpolation amount between the self quaternion and toQuat\n * @param {Quaternion} [target] A quaternion to store the result in. If not provided, a new one will be created.\n * @returns {Quaternion} The \"target\" object\n */\n\n\nQuaternion.prototype.slerp = function (toQuat, t, target) {\n  target = target || new Quaternion();\n  var ax = this.x,\n      ay = this.y,\n      az = this.z,\n      aw = this.w,\n      bx = toQuat.x,\n      by = toQuat.y,\n      bz = toQuat.z,\n      bw = toQuat.w;\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > 0.000001) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  target.x = scale0 * ax + scale1 * bx;\n  target.y = scale0 * ay + scale1 * by;\n  target.z = scale0 * az + scale1 * bz;\n  target.w = scale0 * aw + scale1 * bw;\n  return target;\n};\n/**\n * Rotate an absolute orientation quaternion given an angular velocity and a time step.\n * @param  {Vec3} angularVelocity\n * @param  {number} dt\n * @param  {Vec3} angularFactor\n * @param  {Quaternion} target\n * @return {Quaternion} The \"target\" object\n */\n\n\nQuaternion.prototype.integrate = function (angularVelocity, dt, angularFactor, target) {\n  target = target || new Quaternion();\n  var ax = angularVelocity.x * angularFactor.x,\n      ay = angularVelocity.y * angularFactor.y,\n      az = angularVelocity.z * angularFactor.z,\n      bx = this.x,\n      by = this.y,\n      bz = this.z,\n      bw = this.w;\n  var half_dt = dt * 0.5;\n  target.x += half_dt * (ax * bw + ay * bz - az * by);\n  target.y += half_dt * (ay * bw + az * bx - ax * bz);\n  target.z += half_dt * (az * bw + ax * by - ay * bx);\n  target.w += half_dt * (-ax * bx - ay * by - az * bz);\n  return target;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/math/Quaternion.js?");

/***/ }),

/***/ "./node_modules/cannon/src/math/Transform.js":
/*!***************************************************!*\
  !*** ./node_modules/cannon/src/math/Transform.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Vec3 = __webpack_require__(/*! ./Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Quaternion = __webpack_require__(/*! ./Quaternion */ \"./node_modules/cannon/src/math/Quaternion.js\");\n\nmodule.exports = Transform;\n/**\n * @class Transform\n * @constructor\n */\n\nfunction Transform(options) {\n  options = options || {};\n  /**\n   * @property {Vec3} position\n   */\n\n  this.position = new Vec3();\n\n  if (options.position) {\n    this.position.copy(options.position);\n  }\n  /**\n   * @property {Quaternion} quaternion\n   */\n\n\n  this.quaternion = new Quaternion();\n\n  if (options.quaternion) {\n    this.quaternion.copy(options.quaternion);\n  }\n}\n\nvar tmpQuat = new Quaternion();\n/**\n * @static\n * @method pointToLocaFrame\n * @param {Vec3} position\n * @param {Quaternion} quaternion\n * @param {Vec3} worldPoint\n * @param {Vec3} result\n */\n\nTransform.pointToLocalFrame = function (position, quaternion, worldPoint, result) {\n  var result = result || new Vec3();\n  worldPoint.vsub(position, result);\n  quaternion.conjugate(tmpQuat);\n  tmpQuat.vmult(result, result);\n  return result;\n};\n/**\n * Get a global point in local transform coordinates.\n * @method pointToLocal\n * @param  {Vec3} point\n * @param  {Vec3} result\n * @return {Vec3} The \"result\" vector object\n */\n\n\nTransform.prototype.pointToLocal = function (worldPoint, result) {\n  return Transform.pointToLocalFrame(this.position, this.quaternion, worldPoint, result);\n};\n/**\n * @static\n * @method pointToWorldFrame\n * @param {Vec3} position\n * @param {Vec3} quaternion\n * @param {Vec3} localPoint\n * @param {Vec3} result\n */\n\n\nTransform.pointToWorldFrame = function (position, quaternion, localPoint, result) {\n  var result = result || new Vec3();\n  quaternion.vmult(localPoint, result);\n  result.vadd(position, result);\n  return result;\n};\n/**\n * Get a local point in global transform coordinates.\n * @method pointToWorld\n * @param  {Vec3} point\n * @param  {Vec3} result\n * @return {Vec3} The \"result\" vector object\n */\n\n\nTransform.prototype.pointToWorld = function (localPoint, result) {\n  return Transform.pointToWorldFrame(this.position, this.quaternion, localPoint, result);\n};\n\nTransform.prototype.vectorToWorldFrame = function (localVector, result) {\n  var result = result || new Vec3();\n  this.quaternion.vmult(localVector, result);\n  return result;\n};\n\nTransform.vectorToWorldFrame = function (quaternion, localVector, result) {\n  quaternion.vmult(localVector, result);\n  return result;\n};\n\nTransform.vectorToLocalFrame = function (position, quaternion, worldVector, result) {\n  var result = result || new Vec3();\n  quaternion.w *= -1;\n  quaternion.vmult(worldVector, result);\n  quaternion.w *= -1;\n  return result;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/math/Transform.js?");

/***/ }),

/***/ "./node_modules/cannon/src/math/Vec3.js":
/*!**********************************************!*\
  !*** ./node_modules/cannon/src/math/Vec3.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Vec3;\n\nvar Mat3 = __webpack_require__(/*! ./Mat3 */ \"./node_modules/cannon/src/math/Mat3.js\");\n/**\n * 3-dimensional vector\n * @class Vec3\n * @constructor\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @author schteppe\n * @example\n *     var v = new Vec3(1, 2, 3);\n *     console.log('x=' + v.x); // x=1\n */\n\n\nfunction Vec3(x, y, z) {\n  /**\n   * @property x\n   * @type {Number}\n   */\n  this.x = x || 0.0;\n  /**\n   * @property y\n   * @type {Number}\n   */\n\n  this.y = y || 0.0;\n  /**\n   * @property z\n   * @type {Number}\n   */\n\n  this.z = z || 0.0;\n}\n/**\n * @static\n * @property {Vec3} ZERO\n */\n\n\nVec3.ZERO = new Vec3(0, 0, 0);\n/**\n * @static\n * @property {Vec3} UNIT_X\n */\n\nVec3.UNIT_X = new Vec3(1, 0, 0);\n/**\n * @static\n * @property {Vec3} UNIT_Y\n */\n\nVec3.UNIT_Y = new Vec3(0, 1, 0);\n/**\n * @static\n * @property {Vec3} UNIT_Z\n */\n\nVec3.UNIT_Z = new Vec3(0, 0, 1);\n/**\n * Vector cross product\n * @method cross\n * @param {Vec3} v\n * @param {Vec3} target Optional. Target to save in.\n * @return {Vec3}\n */\n\nVec3.prototype.cross = function (v, target) {\n  var vx = v.x,\n      vy = v.y,\n      vz = v.z,\n      x = this.x,\n      y = this.y,\n      z = this.z;\n  target = target || new Vec3();\n  target.x = y * vz - z * vy;\n  target.y = z * vx - x * vz;\n  target.z = x * vy - y * vx;\n  return target;\n};\n/**\n * Set the vectors' 3 elements\n * @method set\n * @param {Number} x\n * @param {Number} y\n * @param {Number} z\n * @return Vec3\n */\n\n\nVec3.prototype.set = function (x, y, z) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  return this;\n};\n/**\n * Set all components of the vector to zero.\n * @method setZero\n */\n\n\nVec3.prototype.setZero = function () {\n  this.x = this.y = this.z = 0;\n};\n/**\n * Vector addition\n * @method vadd\n * @param {Vec3} v\n * @param {Vec3} target Optional.\n * @return {Vec3}\n */\n\n\nVec3.prototype.vadd = function (v, target) {\n  if (target) {\n    target.x = v.x + this.x;\n    target.y = v.y + this.y;\n    target.z = v.z + this.z;\n  } else {\n    return new Vec3(this.x + v.x, this.y + v.y, this.z + v.z);\n  }\n};\n/**\n * Vector subtraction\n * @method vsub\n * @param {Vec3} v\n * @param {Vec3} target Optional. Target to save in.\n * @return {Vec3}\n */\n\n\nVec3.prototype.vsub = function (v, target) {\n  if (target) {\n    target.x = this.x - v.x;\n    target.y = this.y - v.y;\n    target.z = this.z - v.z;\n  } else {\n    return new Vec3(this.x - v.x, this.y - v.y, this.z - v.z);\n  }\n};\n/**\n * Get the cross product matrix a_cross from a vector, such that a x b = a_cross * b = c\n * @method crossmat\n * @see http://www8.cs.umu.se/kurser/TDBD24/VT06/lectures/Lecture6.pdf\n * @return {Mat3}\n */\n\n\nVec3.prototype.crossmat = function () {\n  return new Mat3([0, -this.z, this.y, this.z, 0, -this.x, -this.y, this.x, 0]);\n};\n/**\n * Normalize the vector. Note that this changes the values in the vector.\n * @method normalize\n * @return {Number} Returns the norm of the vector\n */\n\n\nVec3.prototype.normalize = function () {\n  var x = this.x,\n      y = this.y,\n      z = this.z;\n  var n = Math.sqrt(x * x + y * y + z * z);\n\n  if (n > 0.0) {\n    var invN = 1 / n;\n    this.x *= invN;\n    this.y *= invN;\n    this.z *= invN;\n  } else {\n    // Make something up\n    this.x = 0;\n    this.y = 0;\n    this.z = 0;\n  }\n\n  return n;\n};\n/**\n * Get the version of this vector that is of length 1.\n * @method unit\n * @param {Vec3} target Optional target to save in\n * @return {Vec3} Returns the unit vector\n */\n\n\nVec3.prototype.unit = function (target) {\n  target = target || new Vec3();\n  var x = this.x,\n      y = this.y,\n      z = this.z;\n  var ninv = Math.sqrt(x * x + y * y + z * z);\n\n  if (ninv > 0.0) {\n    ninv = 1.0 / ninv;\n    target.x = x * ninv;\n    target.y = y * ninv;\n    target.z = z * ninv;\n  } else {\n    target.x = 1;\n    target.y = 0;\n    target.z = 0;\n  }\n\n  return target;\n};\n/**\n * Get the length of the vector\n * @method norm\n * @return {Number}\n * @deprecated Use .length() instead\n */\n\n\nVec3.prototype.norm = function () {\n  var x = this.x,\n      y = this.y,\n      z = this.z;\n  return Math.sqrt(x * x + y * y + z * z);\n};\n/**\n * Get the length of the vector\n * @method length\n * @return {Number}\n */\n\n\nVec3.prototype.length = Vec3.prototype.norm;\n/**\n * Get the squared length of the vector\n * @method norm2\n * @return {Number}\n * @deprecated Use .lengthSquared() instead.\n */\n\nVec3.prototype.norm2 = function () {\n  return this.dot(this);\n};\n/**\n * Get the squared length of the vector.\n * @method lengthSquared\n * @return {Number}\n */\n\n\nVec3.prototype.lengthSquared = Vec3.prototype.norm2;\n/**\n * Get distance from this point to another point\n * @method distanceTo\n * @param  {Vec3} p\n * @return {Number}\n */\n\nVec3.prototype.distanceTo = function (p) {\n  var x = this.x,\n      y = this.y,\n      z = this.z;\n  var px = p.x,\n      py = p.y,\n      pz = p.z;\n  return Math.sqrt((px - x) * (px - x) + (py - y) * (py - y) + (pz - z) * (pz - z));\n};\n/**\n * Get squared distance from this point to another point\n * @method distanceSquared\n * @param  {Vec3} p\n * @return {Number}\n */\n\n\nVec3.prototype.distanceSquared = function (p) {\n  var x = this.x,\n      y = this.y,\n      z = this.z;\n  var px = p.x,\n      py = p.y,\n      pz = p.z;\n  return (px - x) * (px - x) + (py - y) * (py - y) + (pz - z) * (pz - z);\n};\n/**\n * Multiply all the components of the vector with a scalar.\n * @deprecated Use .scale instead\n * @method mult\n * @param {Number} scalar\n * @param {Vec3} target The vector to save the result in.\n * @return {Vec3}\n * @deprecated Use .scale() instead\n */\n\n\nVec3.prototype.mult = function (scalar, target) {\n  target = target || new Vec3();\n  var x = this.x,\n      y = this.y,\n      z = this.z;\n  target.x = scalar * x;\n  target.y = scalar * y;\n  target.z = scalar * z;\n  return target;\n};\n/**\n * Multiply the vector with an other vector, component-wise.\n * @method mult\n * @param {Number} vector\n * @param {Vec3} target The vector to save the result in.\n * @return {Vec3}\n */\n\n\nVec3.prototype.vmul = function (vector, target) {\n  target = target || new Vec3();\n  target.x = vector.x * this.x;\n  target.y = vector.y * this.y;\n  target.z = vector.z * this.z;\n  return target;\n};\n/**\n * Multiply the vector with a scalar.\n * @method scale\n * @param {Number} scalar\n * @param {Vec3} target\n * @return {Vec3}\n */\n\n\nVec3.prototype.scale = Vec3.prototype.mult;\n/**\n * Scale a vector and add it to this vector. Save the result in \"target\". (target = this + vector * scalar)\n * @method addScaledVector\n * @param {Number} scalar\n * @param {Vec3} vector\n * @param {Vec3} target The vector to save the result in.\n * @return {Vec3}\n */\n\nVec3.prototype.addScaledVector = function (scalar, vector, target) {\n  target = target || new Vec3();\n  target.x = this.x + scalar * vector.x;\n  target.y = this.y + scalar * vector.y;\n  target.z = this.z + scalar * vector.z;\n  return target;\n};\n/**\n * Calculate dot product\n * @method dot\n * @param {Vec3} v\n * @return {Number}\n */\n\n\nVec3.prototype.dot = function (v) {\n  return this.x * v.x + this.y * v.y + this.z * v.z;\n};\n/**\n * @method isZero\n * @return bool\n */\n\n\nVec3.prototype.isZero = function () {\n  return this.x === 0 && this.y === 0 && this.z === 0;\n};\n/**\n * Make the vector point in the opposite direction.\n * @method negate\n * @param {Vec3} target Optional target to save in\n * @return {Vec3}\n */\n\n\nVec3.prototype.negate = function (target) {\n  target = target || new Vec3();\n  target.x = -this.x;\n  target.y = -this.y;\n  target.z = -this.z;\n  return target;\n};\n/**\n * Compute two artificial tangents to the vector\n * @method tangents\n * @param {Vec3} t1 Vector object to save the first tangent in\n * @param {Vec3} t2 Vector object to save the second tangent in\n */\n\n\nvar Vec3_tangents_n = new Vec3();\nvar Vec3_tangents_randVec = new Vec3();\n\nVec3.prototype.tangents = function (t1, t2) {\n  var norm = this.norm();\n\n  if (norm > 0.0) {\n    var n = Vec3_tangents_n;\n    var inorm = 1 / norm;\n    n.set(this.x * inorm, this.y * inorm, this.z * inorm);\n    var randVec = Vec3_tangents_randVec;\n\n    if (Math.abs(n.x) < 0.9) {\n      randVec.set(1, 0, 0);\n      n.cross(randVec, t1);\n    } else {\n      randVec.set(0, 1, 0);\n      n.cross(randVec, t1);\n    }\n\n    n.cross(t1, t2);\n  } else {\n    // The normal length is zero, make something up\n    t1.set(1, 0, 0);\n    t2.set(0, 1, 0);\n  }\n};\n/**\n * Converts to a more readable format\n * @method toString\n * @return string\n */\n\n\nVec3.prototype.toString = function () {\n  return this.x + \",\" + this.y + \",\" + this.z;\n};\n/**\n * Converts to an array\n * @method toArray\n * @return Array\n */\n\n\nVec3.prototype.toArray = function () {\n  return [this.x, this.y, this.z];\n};\n/**\n * Copies value of source to this vector.\n * @method copy\n * @param {Vec3} source\n * @return {Vec3} this\n */\n\n\nVec3.prototype.copy = function (source) {\n  this.x = source.x;\n  this.y = source.y;\n  this.z = source.z;\n  return this;\n};\n/**\n * Do a linear interpolation between two vectors\n * @method lerp\n * @param {Vec3} v\n * @param {Number} t A number between 0 and 1. 0 will make this function return u, and 1 will make it return v. Numbers in between will generate a vector in between them.\n * @param {Vec3} target\n */\n\n\nVec3.prototype.lerp = function (v, t, target) {\n  var x = this.x,\n      y = this.y,\n      z = this.z;\n  target.x = x + (v.x - x) * t;\n  target.y = y + (v.y - y) * t;\n  target.z = z + (v.z - z) * t;\n};\n/**\n * Check if a vector equals is almost equal to another one.\n * @method almostEquals\n * @param {Vec3} v\n * @param {Number} precision\n * @return bool\n */\n\n\nVec3.prototype.almostEquals = function (v, precision) {\n  if (precision === undefined) {\n    precision = 1e-6;\n  }\n\n  if (Math.abs(this.x - v.x) > precision || Math.abs(this.y - v.y) > precision || Math.abs(this.z - v.z) > precision) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check if a vector is almost zero\n * @method almostZero\n * @param {Number} precision\n */\n\n\nVec3.prototype.almostZero = function (precision) {\n  if (precision === undefined) {\n    precision = 1e-6;\n  }\n\n  if (Math.abs(this.x) > precision || Math.abs(this.y) > precision || Math.abs(this.z) > precision) {\n    return false;\n  }\n\n  return true;\n};\n\nvar antip_neg = new Vec3();\n/**\n * Check if the vector is anti-parallel to another vector.\n * @method isAntiparallelTo\n * @param  {Vec3}  v\n * @param  {Number}  precision Set to zero for exact comparisons\n * @return {Boolean}\n */\n\nVec3.prototype.isAntiparallelTo = function (v, precision) {\n  this.negate(antip_neg);\n  return antip_neg.almostEquals(v, precision);\n};\n/**\n * Clone the vector\n * @method clone\n * @return {Vec3}\n */\n\n\nVec3.prototype.clone = function () {\n  return new Vec3(this.x, this.y, this.z);\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/math/Vec3.js?");

/***/ }),

/***/ "./node_modules/cannon/src/objects/Body.js":
/*!*************************************************!*\
  !*** ./node_modules/cannon/src/objects/Body.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Body;\n\nvar EventTarget = __webpack_require__(/*! ../utils/EventTarget */ \"./node_modules/cannon/src/utils/EventTarget.js\");\n\nvar Shape = __webpack_require__(/*! ../shapes/Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Mat3 = __webpack_require__(/*! ../math/Mat3 */ \"./node_modules/cannon/src/math/Mat3.js\");\n\nvar Quaternion = __webpack_require__(/*! ../math/Quaternion */ \"./node_modules/cannon/src/math/Quaternion.js\");\n\nvar Material = __webpack_require__(/*! ../material/Material */ \"./node_modules/cannon/src/material/Material.js\");\n\nvar AABB = __webpack_require__(/*! ../collision/AABB */ \"./node_modules/cannon/src/collision/AABB.js\");\n\nvar Box = __webpack_require__(/*! ../shapes/Box */ \"./node_modules/cannon/src/shapes/Box.js\");\n/**\n * Base class for all body types.\n * @class Body\n * @constructor\n * @extends EventTarget\n * @param {object} [options]\n * @param {Vec3} [options.position]\n * @param {Vec3} [options.velocity]\n * @param {Vec3} [options.angularVelocity]\n * @param {Quaternion} [options.quaternion]\n * @param {number} [options.mass]\n * @param {Material} [options.material]\n * @param {number} [options.type]\n * @param {number} [options.linearDamping=0.01]\n * @param {number} [options.angularDamping=0.01]\n * @param {boolean} [options.allowSleep=true]\n * @param {number} [options.sleepSpeedLimit=0.1]\n * @param {number} [options.sleepTimeLimit=1]\n * @param {number} [options.collisionFilterGroup=1]\n * @param {number} [options.collisionFilterMask=1]\n * @param {boolean} [options.fixedRotation=false]\n * @param {Vec3} [options.linearFactor]\n * @param {Vec3} [options.angularFactor]\n * @param {Shape} [options.shape]\n * @example\n *     var body = new Body({\n *         mass: 1\n *     });\n *     var shape = new Sphere(1);\n *     body.addShape(shape);\n *     world.addBody(body);\n */\n\n\nfunction Body(options) {\n  options = options || {};\n  EventTarget.apply(this);\n  this.id = Body.idCounter++;\n  /**\n   * Reference to the world the body is living in\n   * @property world\n   * @type {World}\n   */\n\n  this.world = null;\n  /**\n   * Callback function that is used BEFORE stepping the system. Use it to apply forces, for example. Inside the function, \"this\" will refer to this Body object.\n   * @property preStep\n   * @type {Function}\n   * @deprecated Use World events instead\n   */\n\n  this.preStep = null;\n  /**\n   * Callback function that is used AFTER stepping the system. Inside the function, \"this\" will refer to this Body object.\n   * @property postStep\n   * @type {Function}\n   * @deprecated Use World events instead\n   */\n\n  this.postStep = null;\n  this.vlambda = new Vec3();\n  /**\n   * @property {Number} collisionFilterGroup\n   */\n\n  this.collisionFilterGroup = typeof options.collisionFilterGroup === 'number' ? options.collisionFilterGroup : 1;\n  /**\n   * @property {Number} collisionFilterMask\n   */\n\n  this.collisionFilterMask = typeof options.collisionFilterMask === 'number' ? options.collisionFilterMask : 1;\n  /**\n   * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\n   * @property {Number} collisionResponse\n   */\n\n  this.collisionResponse = true;\n  /**\n   * @property position\n   * @type {Vec3}\n   */\n\n  this.position = new Vec3();\n  /**\n   * @property {Vec3} previousPosition\n   */\n\n  this.previousPosition = new Vec3();\n  /**\n   * Interpolated position of the body.\n   * @property {Vec3} interpolatedPosition\n   */\n\n  this.interpolatedPosition = new Vec3();\n  /**\n   * Initial position of the body\n   * @property initPosition\n   * @type {Vec3}\n   */\n\n  this.initPosition = new Vec3();\n\n  if (options.position) {\n    this.position.copy(options.position);\n    this.previousPosition.copy(options.position);\n    this.interpolatedPosition.copy(options.position);\n    this.initPosition.copy(options.position);\n  }\n  /**\n   * @property velocity\n   * @type {Vec3}\n   */\n\n\n  this.velocity = new Vec3();\n\n  if (options.velocity) {\n    this.velocity.copy(options.velocity);\n  }\n  /**\n   * @property initVelocity\n   * @type {Vec3}\n   */\n\n\n  this.initVelocity = new Vec3();\n  /**\n   * Linear force on the body\n   * @property force\n   * @type {Vec3}\n   */\n\n  this.force = new Vec3();\n  var mass = typeof options.mass === 'number' ? options.mass : 0;\n  /**\n   * @property mass\n   * @type {Number}\n   * @default 0\n   */\n\n  this.mass = mass;\n  /**\n   * @property invMass\n   * @type {Number}\n   */\n\n  this.invMass = mass > 0 ? 1.0 / mass : 0;\n  /**\n   * @property material\n   * @type {Material}\n   */\n\n  this.material = options.material || null;\n  /**\n   * @property linearDamping\n   * @type {Number}\n   */\n\n  this.linearDamping = typeof options.linearDamping === 'number' ? options.linearDamping : 0.01;\n  /**\n   * One of: Body.DYNAMIC, Body.STATIC and Body.KINEMATIC.\n   * @property type\n   * @type {Number}\n   */\n\n  this.type = mass <= 0.0 ? Body.STATIC : Body.DYNAMIC;\n\n  if (typeof options.type === typeof Body.STATIC) {\n    this.type = options.type;\n  }\n  /**\n   * If true, the body will automatically fall to sleep.\n   * @property allowSleep\n   * @type {Boolean}\n   * @default true\n   */\n\n\n  this.allowSleep = typeof options.allowSleep !== 'undefined' ? options.allowSleep : true;\n  /**\n   * Current sleep state.\n   * @property sleepState\n   * @type {Number}\n   */\n\n  this.sleepState = 0;\n  /**\n   * If the speed (the norm of the velocity) is smaller than this value, the body is considered sleepy.\n   * @property sleepSpeedLimit\n   * @type {Number}\n   * @default 0.1\n   */\n\n  this.sleepSpeedLimit = typeof options.sleepSpeedLimit !== 'undefined' ? options.sleepSpeedLimit : 0.1;\n  /**\n   * If the body has been sleepy for this sleepTimeLimit seconds, it is considered sleeping.\n   * @property sleepTimeLimit\n   * @type {Number}\n   * @default 1\n   */\n\n  this.sleepTimeLimit = typeof options.sleepTimeLimit !== 'undefined' ? options.sleepTimeLimit : 1;\n  this.timeLastSleepy = 0;\n  this._wakeUpAfterNarrowphase = false;\n  /**\n   * Rotational force on the body, around center of mass\n   * @property {Vec3} torque\n   */\n\n  this.torque = new Vec3();\n  /**\n   * Orientation of the body\n   * @property quaternion\n   * @type {Quaternion}\n   */\n\n  this.quaternion = new Quaternion();\n  /**\n   * @property initQuaternion\n   * @type {Quaternion}\n   */\n\n  this.initQuaternion = new Quaternion();\n  /**\n   * @property {Quaternion} previousQuaternion\n   */\n\n  this.previousQuaternion = new Quaternion();\n  /**\n   * Interpolated orientation of the body.\n   * @property {Quaternion} interpolatedQuaternion\n   */\n\n  this.interpolatedQuaternion = new Quaternion();\n\n  if (options.quaternion) {\n    this.quaternion.copy(options.quaternion);\n    this.initQuaternion.copy(options.quaternion);\n    this.previousQuaternion.copy(options.quaternion);\n    this.interpolatedQuaternion.copy(options.quaternion);\n  }\n  /**\n   * @property angularVelocity\n   * @type {Vec3}\n   */\n\n\n  this.angularVelocity = new Vec3();\n\n  if (options.angularVelocity) {\n    this.angularVelocity.copy(options.angularVelocity);\n  }\n  /**\n   * @property initAngularVelocity\n   * @type {Vec3}\n   */\n\n\n  this.initAngularVelocity = new Vec3();\n  /**\n   * @property shapes\n   * @type {array}\n   */\n\n  this.shapes = [];\n  /**\n   * @property shapeOffsets\n   * @type {array}\n   */\n\n  this.shapeOffsets = [];\n  /**\n   * @property shapeOrientations\n   * @type {array}\n   */\n\n  this.shapeOrientations = [];\n  /**\n   * @property inertia\n   * @type {Vec3}\n   */\n\n  this.inertia = new Vec3();\n  /**\n   * @property {Vec3} invInertia\n   */\n\n  this.invInertia = new Vec3();\n  /**\n   * @property {Mat3} invInertiaWorld\n   */\n\n  this.invInertiaWorld = new Mat3();\n  this.invMassSolve = 0;\n  /**\n   * @property {Vec3} invInertiaSolve\n   */\n\n  this.invInertiaSolve = new Vec3();\n  /**\n   * @property {Mat3} invInertiaWorldSolve\n   */\n\n  this.invInertiaWorldSolve = new Mat3();\n  /**\n   * Set to true if you don't want the body to rotate. Make sure to run .updateMassProperties() after changing this.\n   * @property {Boolean} fixedRotation\n   * @default false\n   */\n\n  this.fixedRotation = typeof options.fixedRotation !== \"undefined\" ? options.fixedRotation : false;\n  /**\n   * @property {Number} angularDamping\n   */\n\n  this.angularDamping = typeof options.angularDamping !== 'undefined' ? options.angularDamping : 0.01;\n  /**\n   * @property {Vec3} linearFactor\n   */\n\n  this.linearFactor = new Vec3(1, 1, 1);\n\n  if (options.linearFactor) {\n    this.linearFactor.copy(options.linearFactor);\n  }\n  /**\n   * @property {Vec3} angularFactor\n   */\n\n\n  this.angularFactor = new Vec3(1, 1, 1);\n\n  if (options.angularFactor) {\n    this.angularFactor.copy(options.angularFactor);\n  }\n  /**\n   * @property aabb\n   * @type {AABB}\n   */\n\n\n  this.aabb = new AABB();\n  /**\n   * Indicates if the AABB needs to be updated before use.\n   * @property aabbNeedsUpdate\n   * @type {Boolean}\n   */\n\n  this.aabbNeedsUpdate = true;\n  this.wlambda = new Vec3();\n\n  if (options.shape) {\n    this.addShape(options.shape);\n  }\n\n  this.updateMassProperties();\n}\n\nBody.prototype = new EventTarget();\nBody.prototype.constructor = Body;\n/**\n * Dispatched after two bodies collide. This event is dispatched on each\n * of the two bodies involved in the collision.\n * @event collide\n * @param {Body} body The body that was involved in the collision.\n * @param {ContactEquation} contact The details of the collision.\n */\n\nBody.COLLIDE_EVENT_NAME = \"collide\";\n/**\n * A dynamic body is fully simulated. Can be moved manually by the user, but normally they move according to forces. A dynamic body can collide with all body types. A dynamic body always has finite, non-zero mass.\n * @static\n * @property DYNAMIC\n * @type {Number}\n */\n\nBody.DYNAMIC = 1;\n/**\n * A static body does not move during simulation and behaves as if it has infinite mass. Static bodies can be moved manually by setting the position of the body. The velocity of a static body is always zero. Static bodies do not collide with other static or kinematic bodies.\n * @static\n * @property STATIC\n * @type {Number}\n */\n\nBody.STATIC = 2;\n/**\n * A kinematic body moves under simulation according to its velocity. They do not respond to forces. They can be moved manually, but normally a kinematic body is moved by setting its velocity. A kinematic body behaves as if it has infinite mass. Kinematic bodies do not collide with other static or kinematic bodies.\n * @static\n * @property KINEMATIC\n * @type {Number}\n */\n\nBody.KINEMATIC = 4;\n/**\n * @static\n * @property AWAKE\n * @type {number}\n */\n\nBody.AWAKE = 0;\n/**\n * @static\n * @property SLEEPY\n * @type {number}\n */\n\nBody.SLEEPY = 1;\n/**\n * @static\n * @property SLEEPING\n * @type {number}\n */\n\nBody.SLEEPING = 2;\nBody.idCounter = 0;\n/**\n * Dispatched after a sleeping body has woken up.\n * @event wakeup\n */\n\nBody.wakeupEvent = {\n  type: \"wakeup\"\n};\n/**\n * Wake the body up.\n * @method wakeUp\n */\n\nBody.prototype.wakeUp = function () {\n  var s = this.sleepState;\n  this.sleepState = 0;\n  this._wakeUpAfterNarrowphase = false;\n\n  if (s === Body.SLEEPING) {\n    this.dispatchEvent(Body.wakeupEvent);\n  }\n};\n/**\n * Force body sleep\n * @method sleep\n */\n\n\nBody.prototype.sleep = function () {\n  this.sleepState = Body.SLEEPING;\n  this.velocity.set(0, 0, 0);\n  this.angularVelocity.set(0, 0, 0);\n  this._wakeUpAfterNarrowphase = false;\n};\n/**\n * Dispatched after a body has gone in to the sleepy state.\n * @event sleepy\n */\n\n\nBody.sleepyEvent = {\n  type: \"sleepy\"\n};\n/**\n * Dispatched after a body has fallen asleep.\n * @event sleep\n */\n\nBody.sleepEvent = {\n  type: \"sleep\"\n};\n/**\n * Called every timestep to update internal sleep timer and change sleep state if needed.\n * @method sleepTick\n * @param {Number} time The world time in seconds\n */\n\nBody.prototype.sleepTick = function (time) {\n  if (this.allowSleep) {\n    var sleepState = this.sleepState;\n    var speedSquared = this.velocity.norm2() + this.angularVelocity.norm2();\n    var speedLimitSquared = Math.pow(this.sleepSpeedLimit, 2);\n\n    if (sleepState === Body.AWAKE && speedSquared < speedLimitSquared) {\n      this.sleepState = Body.SLEEPY; // Sleepy\n\n      this.timeLastSleepy = time;\n      this.dispatchEvent(Body.sleepyEvent);\n    } else if (sleepState === Body.SLEEPY && speedSquared > speedLimitSquared) {\n      this.wakeUp(); // Wake up\n    } else if (sleepState === Body.SLEEPY && time - this.timeLastSleepy > this.sleepTimeLimit) {\n      this.sleep(); // Sleeping\n\n      this.dispatchEvent(Body.sleepEvent);\n    }\n  }\n};\n/**\n * If the body is sleeping, it should be immovable / have infinite mass during solve. We solve it by having a separate \"solve mass\".\n * @method updateSolveMassProperties\n */\n\n\nBody.prototype.updateSolveMassProperties = function () {\n  if (this.sleepState === Body.SLEEPING || this.type === Body.KINEMATIC) {\n    this.invMassSolve = 0;\n    this.invInertiaSolve.setZero();\n    this.invInertiaWorldSolve.setZero();\n  } else {\n    this.invMassSolve = this.invMass;\n    this.invInertiaSolve.copy(this.invInertia);\n    this.invInertiaWorldSolve.copy(this.invInertiaWorld);\n  }\n};\n/**\n * Convert a world point to local body frame.\n * @method pointToLocalFrame\n * @param  {Vec3} worldPoint\n * @param  {Vec3} result\n * @return {Vec3}\n */\n\n\nBody.prototype.pointToLocalFrame = function (worldPoint, result) {\n  var result = result || new Vec3();\n  worldPoint.vsub(this.position, result);\n  this.quaternion.conjugate().vmult(result, result);\n  return result;\n};\n/**\n * Convert a world vector to local body frame.\n * @method vectorToLocalFrame\n * @param  {Vec3} worldPoint\n * @param  {Vec3} result\n * @return {Vec3}\n */\n\n\nBody.prototype.vectorToLocalFrame = function (worldVector, result) {\n  var result = result || new Vec3();\n  this.quaternion.conjugate().vmult(worldVector, result);\n  return result;\n};\n/**\n * Convert a local body point to world frame.\n * @method pointToWorldFrame\n * @param  {Vec3} localPoint\n * @param  {Vec3} result\n * @return {Vec3}\n */\n\n\nBody.prototype.pointToWorldFrame = function (localPoint, result) {\n  var result = result || new Vec3();\n  this.quaternion.vmult(localPoint, result);\n  result.vadd(this.position, result);\n  return result;\n};\n/**\n * Convert a local body point to world frame.\n * @method vectorToWorldFrame\n * @param  {Vec3} localVector\n * @param  {Vec3} result\n * @return {Vec3}\n */\n\n\nBody.prototype.vectorToWorldFrame = function (localVector, result) {\n  var result = result || new Vec3();\n  this.quaternion.vmult(localVector, result);\n  return result;\n};\n\nvar tmpVec = new Vec3();\nvar tmpQuat = new Quaternion();\n/**\n * Add a shape to the body with a local offset and orientation.\n * @method addShape\n * @param {Shape} shape\n * @param {Vec3} [_offset]\n * @param {Quaternion} [_orientation]\n * @return {Body} The body object, for chainability.\n */\n\nBody.prototype.addShape = function (shape, _offset, _orientation) {\n  var offset = new Vec3();\n  var orientation = new Quaternion();\n\n  if (_offset) {\n    offset.copy(_offset);\n  }\n\n  if (_orientation) {\n    orientation.copy(_orientation);\n  }\n\n  this.shapes.push(shape);\n  this.shapeOffsets.push(offset);\n  this.shapeOrientations.push(orientation);\n  this.updateMassProperties();\n  this.updateBoundingRadius();\n  this.aabbNeedsUpdate = true;\n  shape.body = this;\n  return this;\n};\n/**\n * Update the bounding radius of the body. Should be done if any of the shapes are changed.\n * @method updateBoundingRadius\n */\n\n\nBody.prototype.updateBoundingRadius = function () {\n  var shapes = this.shapes,\n      shapeOffsets = this.shapeOffsets,\n      N = shapes.length,\n      radius = 0;\n\n  for (var i = 0; i !== N; i++) {\n    var shape = shapes[i];\n    shape.updateBoundingSphereRadius();\n    var offset = shapeOffsets[i].norm(),\n        r = shape.boundingSphereRadius;\n\n    if (offset + r > radius) {\n      radius = offset + r;\n    }\n  }\n\n  this.boundingRadius = radius;\n};\n\nvar computeAABB_shapeAABB = new AABB();\n/**\n * Updates the .aabb\n * @method computeAABB\n * @todo rename to updateAABB()\n */\n\nBody.prototype.computeAABB = function () {\n  var shapes = this.shapes,\n      shapeOffsets = this.shapeOffsets,\n      shapeOrientations = this.shapeOrientations,\n      N = shapes.length,\n      offset = tmpVec,\n      orientation = tmpQuat,\n      bodyQuat = this.quaternion,\n      aabb = this.aabb,\n      shapeAABB = computeAABB_shapeAABB;\n\n  for (var i = 0; i !== N; i++) {\n    var shape = shapes[i]; // Get shape world position\n\n    bodyQuat.vmult(shapeOffsets[i], offset);\n    offset.vadd(this.position, offset); // Get shape world quaternion\n\n    shapeOrientations[i].mult(bodyQuat, orientation); // Get shape AABB\n\n    shape.calculateWorldAABB(offset, orientation, shapeAABB.lowerBound, shapeAABB.upperBound);\n\n    if (i === 0) {\n      aabb.copy(shapeAABB);\n    } else {\n      aabb.extend(shapeAABB);\n    }\n  }\n\n  this.aabbNeedsUpdate = false;\n};\n\nvar uiw_m1 = new Mat3(),\n    uiw_m2 = new Mat3(),\n    uiw_m3 = new Mat3();\n/**\n * Update .inertiaWorld and .invInertiaWorld\n * @method updateInertiaWorld\n */\n\nBody.prototype.updateInertiaWorld = function (force) {\n  var I = this.invInertia;\n\n  if (I.x === I.y && I.y === I.z && !force) {// If inertia M = s*I, where I is identity and s a scalar, then\n    //    R*M*R' = R*(s*I)*R' = s*R*I*R' = s*R*R' = s*I = M\n    // where R is the rotation matrix.\n    // In other words, we don't have to transform the inertia if all\n    // inertia diagonal entries are equal.\n  } else {\n    var m1 = uiw_m1,\n        m2 = uiw_m2,\n        m3 = uiw_m3;\n    m1.setRotationFromQuaternion(this.quaternion);\n    m1.transpose(m2);\n    m1.scale(I, m1);\n    m1.mmult(m2, this.invInertiaWorld);\n  }\n};\n/**\n * Apply force to a world point. This could for example be a point on the Body surface. Applying force this way will add to Body.force and Body.torque.\n * @method applyForce\n * @param  {Vec3} force The amount of force to add.\n * @param  {Vec3} relativePoint A point relative to the center of mass to apply the force on.\n */\n\n\nvar Body_applyForce_r = new Vec3();\nvar Body_applyForce_rotForce = new Vec3();\n\nBody.prototype.applyForce = function (force, relativePoint) {\n  if (this.type !== Body.DYNAMIC) {\n    // Needed?\n    return;\n  } // Compute produced rotational force\n\n\n  var rotForce = Body_applyForce_rotForce;\n  relativePoint.cross(force, rotForce); // Add linear force\n\n  this.force.vadd(force, this.force); // Add rotational force\n\n  this.torque.vadd(rotForce, this.torque);\n};\n/**\n * Apply force to a local point in the body.\n * @method applyLocalForce\n * @param  {Vec3} force The force vector to apply, defined locally in the body frame.\n * @param  {Vec3} localPoint A local point in the body to apply the force on.\n */\n\n\nvar Body_applyLocalForce_worldForce = new Vec3();\nvar Body_applyLocalForce_relativePointWorld = new Vec3();\n\nBody.prototype.applyLocalForce = function (localForce, localPoint) {\n  if (this.type !== Body.DYNAMIC) {\n    return;\n  }\n\n  var worldForce = Body_applyLocalForce_worldForce;\n  var relativePointWorld = Body_applyLocalForce_relativePointWorld; // Transform the force vector to world space\n\n  this.vectorToWorldFrame(localForce, worldForce);\n  this.vectorToWorldFrame(localPoint, relativePointWorld);\n  this.applyForce(worldForce, relativePointWorld);\n};\n/**\n * Apply impulse to a world point. This could for example be a point on the Body surface. An impulse is a force added to a body during a short period of time (impulse = force * time). Impulses will be added to Body.velocity and Body.angularVelocity.\n * @method applyImpulse\n * @param  {Vec3} impulse The amount of impulse to add.\n * @param  {Vec3} relativePoint A point relative to the center of mass to apply the force on.\n */\n\n\nvar Body_applyImpulse_r = new Vec3();\nvar Body_applyImpulse_velo = new Vec3();\nvar Body_applyImpulse_rotVelo = new Vec3();\n\nBody.prototype.applyImpulse = function (impulse, relativePoint) {\n  if (this.type !== Body.DYNAMIC) {\n    return;\n  } // Compute point position relative to the body center\n\n\n  var r = relativePoint; // Compute produced central impulse velocity\n\n  var velo = Body_applyImpulse_velo;\n  velo.copy(impulse);\n  velo.mult(this.invMass, velo); // Add linear impulse\n\n  this.velocity.vadd(velo, this.velocity); // Compute produced rotational impulse velocity\n\n  var rotVelo = Body_applyImpulse_rotVelo;\n  r.cross(impulse, rotVelo);\n  /*\n  rotVelo.x *= this.invInertia.x;\n  rotVelo.y *= this.invInertia.y;\n  rotVelo.z *= this.invInertia.z;\n  */\n\n  this.invInertiaWorld.vmult(rotVelo, rotVelo); // Add rotational Impulse\n\n  this.angularVelocity.vadd(rotVelo, this.angularVelocity);\n};\n/**\n * Apply locally-defined impulse to a local point in the body.\n * @method applyLocalImpulse\n * @param  {Vec3} force The force vector to apply, defined locally in the body frame.\n * @param  {Vec3} localPoint A local point in the body to apply the force on.\n */\n\n\nvar Body_applyLocalImpulse_worldImpulse = new Vec3();\nvar Body_applyLocalImpulse_relativePoint = new Vec3();\n\nBody.prototype.applyLocalImpulse = function (localImpulse, localPoint) {\n  if (this.type !== Body.DYNAMIC) {\n    return;\n  }\n\n  var worldImpulse = Body_applyLocalImpulse_worldImpulse;\n  var relativePointWorld = Body_applyLocalImpulse_relativePoint; // Transform the force vector to world space\n\n  this.vectorToWorldFrame(localImpulse, worldImpulse);\n  this.vectorToWorldFrame(localPoint, relativePointWorld);\n  this.applyImpulse(worldImpulse, relativePointWorld);\n};\n\nvar Body_updateMassProperties_halfExtents = new Vec3();\n/**\n * Should be called whenever you change the body shape or mass.\n * @method updateMassProperties\n */\n\nBody.prototype.updateMassProperties = function () {\n  var halfExtents = Body_updateMassProperties_halfExtents;\n  this.invMass = this.mass > 0 ? 1.0 / this.mass : 0;\n  var I = this.inertia;\n  var fixed = this.fixedRotation; // Approximate with AABB box\n\n  this.computeAABB();\n  halfExtents.set((this.aabb.upperBound.x - this.aabb.lowerBound.x) / 2, (this.aabb.upperBound.y - this.aabb.lowerBound.y) / 2, (this.aabb.upperBound.z - this.aabb.lowerBound.z) / 2);\n  Box.calculateInertia(halfExtents, this.mass, I);\n  this.invInertia.set(I.x > 0 && !fixed ? 1.0 / I.x : 0, I.y > 0 && !fixed ? 1.0 / I.y : 0, I.z > 0 && !fixed ? 1.0 / I.z : 0);\n  this.updateInertiaWorld(true);\n};\n/**\n * Get world velocity of a point in the body.\n * @method getVelocityAtWorldPoint\n * @param  {Vec3} worldPoint\n * @param  {Vec3} result\n * @return {Vec3} The result vector.\n */\n\n\nBody.prototype.getVelocityAtWorldPoint = function (worldPoint, result) {\n  var r = new Vec3();\n  worldPoint.vsub(this.position, r);\n  this.angularVelocity.cross(r, result);\n  this.velocity.vadd(result, result);\n  return result;\n};\n\nvar torque = new Vec3();\nvar invI_tau_dt = new Vec3();\nvar w = new Quaternion();\nvar wq = new Quaternion();\n/**\n * Move the body forward in time.\n * @param {number} dt Time step\n * @param {boolean} quatNormalize Set to true to normalize the body quaternion\n * @param {boolean} quatNormalizeFast If the quaternion should be normalized using \"fast\" quaternion normalization\n */\n\nBody.prototype.integrate = function (dt, quatNormalize, quatNormalizeFast) {\n  // Save previous position\n  this.previousPosition.copy(this.position);\n  this.previousQuaternion.copy(this.quaternion);\n\n  if (!(this.type === Body.DYNAMIC || this.type === Body.KINEMATIC) || this.sleepState === Body.SLEEPING) {\n    // Only for dynamic\n    return;\n  }\n\n  var velo = this.velocity,\n      angularVelo = this.angularVelocity,\n      pos = this.position,\n      force = this.force,\n      torque = this.torque,\n      quat = this.quaternion,\n      invMass = this.invMass,\n      invInertia = this.invInertiaWorld,\n      linearFactor = this.linearFactor;\n  var iMdt = invMass * dt;\n  velo.x += force.x * iMdt * linearFactor.x;\n  velo.y += force.y * iMdt * linearFactor.y;\n  velo.z += force.z * iMdt * linearFactor.z;\n  var e = invInertia.elements;\n  var angularFactor = this.angularFactor;\n  var tx = torque.x * angularFactor.x;\n  var ty = torque.y * angularFactor.y;\n  var tz = torque.z * angularFactor.z;\n  angularVelo.x += dt * (e[0] * tx + e[1] * ty + e[2] * tz);\n  angularVelo.y += dt * (e[3] * tx + e[4] * ty + e[5] * tz);\n  angularVelo.z += dt * (e[6] * tx + e[7] * ty + e[8] * tz); // Use new velocity  - leap frog\n\n  pos.x += velo.x * dt;\n  pos.y += velo.y * dt;\n  pos.z += velo.z * dt;\n  quat.integrate(this.angularVelocity, dt, this.angularFactor, quat);\n\n  if (quatNormalize) {\n    if (quatNormalizeFast) {\n      quat.normalizeFast();\n    } else {\n      quat.normalize();\n    }\n  }\n\n  this.aabbNeedsUpdate = true; // Update world inertia\n\n  this.updateInertiaWorld();\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/objects/Body.js?");

/***/ }),

/***/ "./node_modules/cannon/src/objects/RaycastVehicle.js":
/*!***********************************************************!*\
  !*** ./node_modules/cannon/src/objects/RaycastVehicle.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Body = __webpack_require__(/*! ./Body */ \"./node_modules/cannon/src/objects/Body.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Quaternion = __webpack_require__(/*! ../math/Quaternion */ \"./node_modules/cannon/src/math/Quaternion.js\");\n\nvar RaycastResult = __webpack_require__(/*! ../collision/RaycastResult */ \"./node_modules/cannon/src/collision/RaycastResult.js\");\n\nvar Ray = __webpack_require__(/*! ../collision/Ray */ \"./node_modules/cannon/src/collision/Ray.js\");\n\nvar WheelInfo = __webpack_require__(/*! ../objects/WheelInfo */ \"./node_modules/cannon/src/objects/WheelInfo.js\");\n\nmodule.exports = RaycastVehicle;\n/**\n * Vehicle helper class that casts rays from the wheel positions towards the ground and applies forces.\n * @class RaycastVehicle\n * @constructor\n * @param {object} [options]\n * @param {Body} [options.chassisBody] The car chassis body.\n * @param {integer} [options.indexRightAxis] Axis to use for right. x=0, y=1, z=2\n * @param {integer} [options.indexLeftAxis]\n * @param {integer} [options.indexUpAxis]\n */\n\nfunction RaycastVehicle(options) {\n  /**\n   * @property {Body} chassisBody\n   */\n  this.chassisBody = options.chassisBody;\n  /**\n   * An array of WheelInfo objects.\n   * @property {array} wheelInfos\n   */\n\n  this.wheelInfos = [];\n  /**\n   * Will be set to true if the car is sliding.\n   * @property {boolean} sliding\n   */\n\n  this.sliding = false;\n  /**\n   * @property {World} world\n   */\n\n  this.world = null;\n  /**\n   * Index of the right axis, 0=x, 1=y, 2=z\n   * @property {integer} indexRightAxis\n   * @default 1\n   */\n\n  this.indexRightAxis = typeof options.indexRightAxis !== 'undefined' ? options.indexRightAxis : 1;\n  /**\n   * Index of the forward axis, 0=x, 1=y, 2=z\n   * @property {integer} indexForwardAxis\n   * @default 0\n   */\n\n  this.indexForwardAxis = typeof options.indexForwardAxis !== 'undefined' ? options.indexForwardAxis : 0;\n  /**\n   * Index of the up axis, 0=x, 1=y, 2=z\n   * @property {integer} indexUpAxis\n   * @default 2\n   */\n\n  this.indexUpAxis = typeof options.indexUpAxis !== 'undefined' ? options.indexUpAxis : 2;\n}\n\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\nvar tmpVec3 = new Vec3();\nvar tmpVec4 = new Vec3();\nvar tmpVec5 = new Vec3();\nvar tmpVec6 = new Vec3();\nvar tmpRay = new Ray();\n/**\n * Add a wheel. For information about the options, see WheelInfo.\n * @method addWheel\n * @param {object} [options]\n */\n\nRaycastVehicle.prototype.addWheel = function (options) {\n  options = options || {};\n  var info = new WheelInfo(options);\n  var index = this.wheelInfos.length;\n  this.wheelInfos.push(info);\n  return index;\n};\n/**\n * Set the steering value of a wheel.\n * @method setSteeringValue\n * @param {number} value\n * @param {integer} wheelIndex\n */\n\n\nRaycastVehicle.prototype.setSteeringValue = function (value, wheelIndex) {\n  var wheel = this.wheelInfos[wheelIndex];\n  wheel.steering = value;\n};\n\nvar torque = new Vec3();\n/**\n * Set the wheel force to apply on one of the wheels each time step\n * @method applyEngineForce\n * @param  {number} value\n * @param  {integer} wheelIndex\n */\n\nRaycastVehicle.prototype.applyEngineForce = function (value, wheelIndex) {\n  this.wheelInfos[wheelIndex].engineForce = value;\n};\n/**\n * Set the braking force of a wheel\n * @method setBrake\n * @param {number} brake\n * @param {integer} wheelIndex\n */\n\n\nRaycastVehicle.prototype.setBrake = function (brake, wheelIndex) {\n  this.wheelInfos[wheelIndex].brake = brake;\n};\n/**\n * Add the vehicle including its constraints to the world.\n * @method addToWorld\n * @param {World} world\n */\n\n\nRaycastVehicle.prototype.addToWorld = function (world) {\n  var constraints = this.constraints;\n  world.addBody(this.chassisBody);\n  var that = this;\n\n  this.preStepCallback = function () {\n    that.updateVehicle(world.dt);\n  };\n\n  world.addEventListener('preStep', this.preStepCallback);\n  this.world = world;\n};\n/**\n * Get one of the wheel axles, world-oriented.\n * @private\n * @method getVehicleAxisWorld\n * @param  {integer} axisIndex\n * @param  {Vec3} result\n */\n\n\nRaycastVehicle.prototype.getVehicleAxisWorld = function (axisIndex, result) {\n  result.set(axisIndex === 0 ? 1 : 0, axisIndex === 1 ? 1 : 0, axisIndex === 2 ? 1 : 0);\n  this.chassisBody.vectorToWorldFrame(result, result);\n};\n\nRaycastVehicle.prototype.updateVehicle = function (timeStep) {\n  var wheelInfos = this.wheelInfos;\n  var numWheels = wheelInfos.length;\n  var chassisBody = this.chassisBody;\n\n  for (var i = 0; i < numWheels; i++) {\n    this.updateWheelTransform(i);\n  }\n\n  this.currentVehicleSpeedKmHour = 3.6 * chassisBody.velocity.norm();\n  var forwardWorld = new Vec3();\n  this.getVehicleAxisWorld(this.indexForwardAxis, forwardWorld);\n\n  if (forwardWorld.dot(chassisBody.velocity) < 0) {\n    this.currentVehicleSpeedKmHour *= -1;\n  } // simulate suspension\n\n\n  for (var i = 0; i < numWheels; i++) {\n    this.castRay(wheelInfos[i]);\n  }\n\n  this.updateSuspension(timeStep);\n  var impulse = new Vec3();\n  var relpos = new Vec3();\n\n  for (var i = 0; i < numWheels; i++) {\n    //apply suspension force\n    var wheel = wheelInfos[i];\n    var suspensionForce = wheel.suspensionForce;\n\n    if (suspensionForce > wheel.maxSuspensionForce) {\n      suspensionForce = wheel.maxSuspensionForce;\n    }\n\n    wheel.raycastResult.hitNormalWorld.scale(suspensionForce * timeStep, impulse);\n    wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, relpos);\n    chassisBody.applyImpulse(impulse, relpos);\n  }\n\n  this.updateFriction(timeStep);\n  var hitNormalWorldScaledWithProj = new Vec3();\n  var fwd = new Vec3();\n  var vel = new Vec3();\n\n  for (i = 0; i < numWheels; i++) {\n    var wheel = wheelInfos[i]; //var relpos = new Vec3();\n    //wheel.chassisConnectionPointWorld.vsub(chassisBody.position, relpos);\n\n    chassisBody.getVelocityAtWorldPoint(wheel.chassisConnectionPointWorld, vel); // Hack to get the rotation in the correct direction\n\n    var m = 1;\n\n    switch (this.indexUpAxis) {\n      case 1:\n        m = -1;\n        break;\n    }\n\n    if (wheel.isInContact) {\n      this.getVehicleAxisWorld(this.indexForwardAxis, fwd);\n      var proj = fwd.dot(wheel.raycastResult.hitNormalWorld);\n      wheel.raycastResult.hitNormalWorld.scale(proj, hitNormalWorldScaledWithProj);\n      fwd.vsub(hitNormalWorldScaledWithProj, fwd);\n      var proj2 = fwd.dot(vel);\n      wheel.deltaRotation = m * proj2 * timeStep / wheel.radius;\n    }\n\n    if ((wheel.sliding || !wheel.isInContact) && wheel.engineForce !== 0 && wheel.useCustomSlidingRotationalSpeed) {\n      // Apply custom rotation when accelerating and sliding\n      wheel.deltaRotation = (wheel.engineForce > 0 ? 1 : -1) * wheel.customSlidingRotationalSpeed * timeStep;\n    } // Lock wheels\n\n\n    if (Math.abs(wheel.brake) > Math.abs(wheel.engineForce)) {\n      wheel.deltaRotation = 0;\n    }\n\n    wheel.rotation += wheel.deltaRotation; // Use the old value\n\n    wheel.deltaRotation *= 0.99; // damping of rotation when not in contact\n  }\n};\n\nRaycastVehicle.prototype.updateSuspension = function (deltaTime) {\n  var chassisBody = this.chassisBody;\n  var chassisMass = chassisBody.mass;\n  var wheelInfos = this.wheelInfos;\n  var numWheels = wheelInfos.length;\n\n  for (var w_it = 0; w_it < numWheels; w_it++) {\n    var wheel = wheelInfos[w_it];\n\n    if (wheel.isInContact) {\n      var force; // Spring\n\n      var susp_length = wheel.suspensionRestLength;\n      var current_length = wheel.suspensionLength;\n      var length_diff = susp_length - current_length;\n      force = wheel.suspensionStiffness * length_diff * wheel.clippedInvContactDotSuspension; // Damper\n\n      var projected_rel_vel = wheel.suspensionRelativeVelocity;\n      var susp_damping;\n\n      if (projected_rel_vel < 0) {\n        susp_damping = wheel.dampingCompression;\n      } else {\n        susp_damping = wheel.dampingRelaxation;\n      }\n\n      force -= susp_damping * projected_rel_vel;\n      wheel.suspensionForce = force * chassisMass;\n\n      if (wheel.suspensionForce < 0) {\n        wheel.suspensionForce = 0;\n      }\n    } else {\n      wheel.suspensionForce = 0;\n    }\n  }\n};\n/**\n * Remove the vehicle including its constraints from the world.\n * @method removeFromWorld\n * @param {World} world\n */\n\n\nRaycastVehicle.prototype.removeFromWorld = function (world) {\n  var constraints = this.constraints;\n  world.remove(this.chassisBody);\n  world.removeEventListener('preStep', this.preStepCallback);\n  this.world = null;\n};\n\nvar castRay_rayvector = new Vec3();\nvar castRay_target = new Vec3();\n\nRaycastVehicle.prototype.castRay = function (wheel) {\n  var rayvector = castRay_rayvector;\n  var target = castRay_target;\n  this.updateWheelTransformWorld(wheel);\n  var chassisBody = this.chassisBody;\n  var depth = -1;\n  var raylen = wheel.suspensionRestLength + wheel.radius;\n  wheel.directionWorld.scale(raylen, rayvector);\n  var source = wheel.chassisConnectionPointWorld;\n  source.vadd(rayvector, target);\n  var raycastResult = wheel.raycastResult;\n  var param = 0;\n  raycastResult.reset(); // Turn off ray collision with the chassis temporarily\n\n  var oldState = chassisBody.collisionResponse;\n  chassisBody.collisionResponse = false; // Cast ray against world\n\n  this.world.rayTest(source, target, raycastResult);\n  chassisBody.collisionResponse = oldState;\n  var object = raycastResult.body;\n  wheel.raycastResult.groundObject = 0;\n\n  if (object) {\n    depth = raycastResult.distance;\n    wheel.raycastResult.hitNormalWorld = raycastResult.hitNormalWorld;\n    wheel.isInContact = true;\n    var hitDistance = raycastResult.distance;\n    wheel.suspensionLength = hitDistance - wheel.radius; // clamp on max suspension travel\n\n    var minSuspensionLength = wheel.suspensionRestLength - wheel.maxSuspensionTravel;\n    var maxSuspensionLength = wheel.suspensionRestLength + wheel.maxSuspensionTravel;\n\n    if (wheel.suspensionLength < minSuspensionLength) {\n      wheel.suspensionLength = minSuspensionLength;\n    }\n\n    if (wheel.suspensionLength > maxSuspensionLength) {\n      wheel.suspensionLength = maxSuspensionLength;\n      wheel.raycastResult.reset();\n    }\n\n    var denominator = wheel.raycastResult.hitNormalWorld.dot(wheel.directionWorld);\n    var chassis_velocity_at_contactPoint = new Vec3();\n    chassisBody.getVelocityAtWorldPoint(wheel.raycastResult.hitPointWorld, chassis_velocity_at_contactPoint);\n    var projVel = wheel.raycastResult.hitNormalWorld.dot(chassis_velocity_at_contactPoint);\n\n    if (denominator >= -0.1) {\n      wheel.suspensionRelativeVelocity = 0;\n      wheel.clippedInvContactDotSuspension = 1 / 0.1;\n    } else {\n      var inv = -1 / denominator;\n      wheel.suspensionRelativeVelocity = projVel * inv;\n      wheel.clippedInvContactDotSuspension = inv;\n    }\n  } else {\n    //put wheel info as in rest position\n    wheel.suspensionLength = wheel.suspensionRestLength + 0 * wheel.maxSuspensionTravel;\n    wheel.suspensionRelativeVelocity = 0.0;\n    wheel.directionWorld.scale(-1, wheel.raycastResult.hitNormalWorld);\n    wheel.clippedInvContactDotSuspension = 1.0;\n  }\n\n  return depth;\n};\n\nRaycastVehicle.prototype.updateWheelTransformWorld = function (wheel) {\n  wheel.isInContact = false;\n  var chassisBody = this.chassisBody;\n  chassisBody.pointToWorldFrame(wheel.chassisConnectionPointLocal, wheel.chassisConnectionPointWorld);\n  chassisBody.vectorToWorldFrame(wheel.directionLocal, wheel.directionWorld);\n  chassisBody.vectorToWorldFrame(wheel.axleLocal, wheel.axleWorld);\n};\n/**\n * Update one of the wheel transform.\n * Note when rendering wheels: during each step, wheel transforms are updated BEFORE the chassis; ie. their position becomes invalid after the step. Thus when you render wheels, you must update wheel transforms before rendering them. See raycastVehicle demo for an example.\n * @method updateWheelTransform\n * @param {integer} wheelIndex The wheel index to update.\n */\n\n\nRaycastVehicle.prototype.updateWheelTransform = function (wheelIndex) {\n  var up = tmpVec4;\n  var right = tmpVec5;\n  var fwd = tmpVec6;\n  var wheel = this.wheelInfos[wheelIndex];\n  this.updateWheelTransformWorld(wheel);\n  wheel.directionLocal.scale(-1, up);\n  right.copy(wheel.axleLocal);\n  up.cross(right, fwd);\n  fwd.normalize();\n  right.normalize(); // Rotate around steering over the wheelAxle\n\n  var steering = wheel.steering;\n  var steeringOrn = new Quaternion();\n  steeringOrn.setFromAxisAngle(up, steering);\n  var rotatingOrn = new Quaternion();\n  rotatingOrn.setFromAxisAngle(right, wheel.rotation); // World rotation of the wheel\n\n  var q = wheel.worldTransform.quaternion;\n  this.chassisBody.quaternion.mult(steeringOrn, q);\n  q.mult(rotatingOrn, q);\n  q.normalize(); // world position of the wheel\n\n  var p = wheel.worldTransform.position;\n  p.copy(wheel.directionWorld);\n  p.scale(wheel.suspensionLength, p);\n  p.vadd(wheel.chassisConnectionPointWorld, p);\n};\n\nvar directions = [new Vec3(1, 0, 0), new Vec3(0, 1, 0), new Vec3(0, 0, 1)];\n/**\n * Get the world transform of one of the wheels\n * @method getWheelTransformWorld\n * @param  {integer} wheelIndex\n * @return {Transform}\n */\n\nRaycastVehicle.prototype.getWheelTransformWorld = function (wheelIndex) {\n  return this.wheelInfos[wheelIndex].worldTransform;\n};\n\nvar updateFriction_surfNormalWS_scaled_proj = new Vec3();\nvar updateFriction_axle = [];\nvar updateFriction_forwardWS = [];\nvar sideFrictionStiffness2 = 1;\n\nRaycastVehicle.prototype.updateFriction = function (timeStep) {\n  var surfNormalWS_scaled_proj = updateFriction_surfNormalWS_scaled_proj; //calculate the impulse, so that the wheels don't move sidewards\n\n  var wheelInfos = this.wheelInfos;\n  var numWheels = wheelInfos.length;\n  var chassisBody = this.chassisBody;\n  var forwardWS = updateFriction_forwardWS;\n  var axle = updateFriction_axle;\n  var numWheelsOnGround = 0;\n\n  for (var i = 0; i < numWheels; i++) {\n    var wheel = wheelInfos[i];\n    var groundObject = wheel.raycastResult.body;\n\n    if (groundObject) {\n      numWheelsOnGround++;\n    }\n\n    wheel.sideImpulse = 0;\n    wheel.forwardImpulse = 0;\n\n    if (!forwardWS[i]) {\n      forwardWS[i] = new Vec3();\n    }\n\n    if (!axle[i]) {\n      axle[i] = new Vec3();\n    }\n  }\n\n  for (var i = 0; i < numWheels; i++) {\n    var wheel = wheelInfos[i];\n    var groundObject = wheel.raycastResult.body;\n\n    if (groundObject) {\n      var axlei = axle[i];\n      var wheelTrans = this.getWheelTransformWorld(i); // Get world axle\n\n      wheelTrans.vectorToWorldFrame(directions[this.indexRightAxis], axlei);\n      var surfNormalWS = wheel.raycastResult.hitNormalWorld;\n      var proj = axlei.dot(surfNormalWS);\n      surfNormalWS.scale(proj, surfNormalWS_scaled_proj);\n      axlei.vsub(surfNormalWS_scaled_proj, axlei);\n      axlei.normalize();\n      surfNormalWS.cross(axlei, forwardWS[i]);\n      forwardWS[i].normalize();\n      wheel.sideImpulse = resolveSingleBilateral(chassisBody, wheel.raycastResult.hitPointWorld, groundObject, wheel.raycastResult.hitPointWorld, axlei);\n      wheel.sideImpulse *= sideFrictionStiffness2;\n    }\n  }\n\n  var sideFactor = 1;\n  var fwdFactor = 0.5;\n  this.sliding = false;\n\n  for (var i = 0; i < numWheels; i++) {\n    var wheel = wheelInfos[i];\n    var groundObject = wheel.raycastResult.body;\n    var rollingFriction = 0;\n    wheel.slipInfo = 1;\n\n    if (groundObject) {\n      var defaultRollingFrictionImpulse = 0;\n      var maxImpulse = wheel.brake ? wheel.brake : defaultRollingFrictionImpulse; // btWheelContactPoint contactPt(chassisBody,groundObject,wheelInfraycastInfo.hitPointWorld,forwardWS[wheel],maxImpulse);\n      // rollingFriction = calcRollingFriction(contactPt);\n\n      rollingFriction = calcRollingFriction(chassisBody, groundObject, wheel.raycastResult.hitPointWorld, forwardWS[i], maxImpulse);\n      rollingFriction += wheel.engineForce * timeStep; // rollingFriction = 0;\n\n      var factor = maxImpulse / rollingFriction;\n      wheel.slipInfo *= factor;\n    } //switch between active rolling (throttle), braking and non-active rolling friction (nthrottle/break)\n\n\n    wheel.forwardImpulse = 0;\n    wheel.skidInfo = 1;\n\n    if (groundObject) {\n      wheel.skidInfo = 1;\n      var maximp = wheel.suspensionForce * timeStep * wheel.frictionSlip;\n      var maximpSide = maximp;\n      var maximpSquared = maximp * maximpSide;\n      wheel.forwardImpulse = rollingFriction; //wheelInfo.engineForce* timeStep;\n\n      var x = wheel.forwardImpulse * fwdFactor;\n      var y = wheel.sideImpulse * sideFactor;\n      var impulseSquared = x * x + y * y;\n      wheel.sliding = false;\n\n      if (impulseSquared > maximpSquared) {\n        this.sliding = true;\n        wheel.sliding = true;\n        var factor = maximp / Math.sqrt(impulseSquared);\n        wheel.skidInfo *= factor;\n      }\n    }\n  }\n\n  if (this.sliding) {\n    for (var i = 0; i < numWheels; i++) {\n      var wheel = wheelInfos[i];\n\n      if (wheel.sideImpulse !== 0) {\n        if (wheel.skidInfo < 1) {\n          wheel.forwardImpulse *= wheel.skidInfo;\n          wheel.sideImpulse *= wheel.skidInfo;\n        }\n      }\n    }\n  } // apply the impulses\n\n\n  for (var i = 0; i < numWheels; i++) {\n    var wheel = wheelInfos[i];\n    var rel_pos = new Vec3();\n    wheel.raycastResult.hitPointWorld.vsub(chassisBody.position, rel_pos); // cannons applyimpulse is using world coord for the position\n    //rel_pos.copy(wheel.raycastResult.hitPointWorld);\n\n    if (wheel.forwardImpulse !== 0) {\n      var impulse = new Vec3();\n      forwardWS[i].scale(wheel.forwardImpulse, impulse);\n      chassisBody.applyImpulse(impulse, rel_pos);\n    }\n\n    if (wheel.sideImpulse !== 0) {\n      var groundObject = wheel.raycastResult.body;\n      var rel_pos2 = new Vec3();\n      wheel.raycastResult.hitPointWorld.vsub(groundObject.position, rel_pos2); //rel_pos2.copy(wheel.raycastResult.hitPointWorld);\n\n      var sideImp = new Vec3();\n      axle[i].scale(wheel.sideImpulse, sideImp); // Scale the relative position in the up direction with rollInfluence.\n      // If rollInfluence is 1, the impulse will be applied on the hitPoint (easy to roll over), if it is zero it will be applied in the same plane as the center of mass (not easy to roll over).\n\n      chassisBody.vectorToLocalFrame(rel_pos, rel_pos);\n      rel_pos['xyz'[this.indexUpAxis]] *= wheel.rollInfluence;\n      chassisBody.vectorToWorldFrame(rel_pos, rel_pos);\n      chassisBody.applyImpulse(sideImp, rel_pos); //apply friction impulse on the ground\n\n      sideImp.scale(-1, sideImp);\n      groundObject.applyImpulse(sideImp, rel_pos2);\n    }\n  }\n};\n\nvar calcRollingFriction_vel1 = new Vec3();\nvar calcRollingFriction_vel2 = new Vec3();\nvar calcRollingFriction_vel = new Vec3();\n\nfunction calcRollingFriction(body0, body1, frictionPosWorld, frictionDirectionWorld, maxImpulse) {\n  var j1 = 0;\n  var contactPosWorld = frictionPosWorld; // var rel_pos1 = new Vec3();\n  // var rel_pos2 = new Vec3();\n\n  var vel1 = calcRollingFriction_vel1;\n  var vel2 = calcRollingFriction_vel2;\n  var vel = calcRollingFriction_vel; // contactPosWorld.vsub(body0.position, rel_pos1);\n  // contactPosWorld.vsub(body1.position, rel_pos2);\n\n  body0.getVelocityAtWorldPoint(contactPosWorld, vel1);\n  body1.getVelocityAtWorldPoint(contactPosWorld, vel2);\n  vel1.vsub(vel2, vel);\n  var vrel = frictionDirectionWorld.dot(vel);\n  var denom0 = computeImpulseDenominator(body0, frictionPosWorld, frictionDirectionWorld);\n  var denom1 = computeImpulseDenominator(body1, frictionPosWorld, frictionDirectionWorld);\n  var relaxation = 1;\n  var jacDiagABInv = relaxation / (denom0 + denom1); // calculate j that moves us to zero relative velocity\n\n  j1 = -vrel * jacDiagABInv;\n\n  if (maxImpulse < j1) {\n    j1 = maxImpulse;\n  }\n\n  if (j1 < -maxImpulse) {\n    j1 = -maxImpulse;\n  }\n\n  return j1;\n}\n\nvar computeImpulseDenominator_r0 = new Vec3();\nvar computeImpulseDenominator_c0 = new Vec3();\nvar computeImpulseDenominator_vec = new Vec3();\nvar computeImpulseDenominator_m = new Vec3();\n\nfunction computeImpulseDenominator(body, pos, normal) {\n  var r0 = computeImpulseDenominator_r0;\n  var c0 = computeImpulseDenominator_c0;\n  var vec = computeImpulseDenominator_vec;\n  var m = computeImpulseDenominator_m;\n  pos.vsub(body.position, r0);\n  r0.cross(normal, c0);\n  body.invInertiaWorld.vmult(c0, m);\n  m.cross(r0, vec);\n  return body.invMass + normal.dot(vec);\n}\n\nvar resolveSingleBilateral_vel1 = new Vec3();\nvar resolveSingleBilateral_vel2 = new Vec3();\nvar resolveSingleBilateral_vel = new Vec3(); //bilateral constraint between two dynamic objects\n\nfunction resolveSingleBilateral(body1, pos1, body2, pos2, normal, impulse) {\n  var normalLenSqr = normal.norm2();\n\n  if (normalLenSqr > 1.1) {\n    return 0; // no impulse\n  } // var rel_pos1 = new Vec3();\n  // var rel_pos2 = new Vec3();\n  // pos1.vsub(body1.position, rel_pos1);\n  // pos2.vsub(body2.position, rel_pos2);\n\n\n  var vel1 = resolveSingleBilateral_vel1;\n  var vel2 = resolveSingleBilateral_vel2;\n  var vel = resolveSingleBilateral_vel;\n  body1.getVelocityAtWorldPoint(pos1, vel1);\n  body2.getVelocityAtWorldPoint(pos2, vel2);\n  vel1.vsub(vel2, vel);\n  var rel_vel = normal.dot(vel);\n  var contactDamping = 0.2;\n  var massTerm = 1 / (body1.invMass + body2.invMass);\n  var impulse = -contactDamping * rel_vel * massTerm;\n  return impulse;\n}\n\n//# sourceURL=webpack:///./node_modules/cannon/src/objects/RaycastVehicle.js?");

/***/ }),

/***/ "./node_modules/cannon/src/objects/RigidVehicle.js":
/*!*********************************************************!*\
  !*** ./node_modules/cannon/src/objects/RigidVehicle.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Body = __webpack_require__(/*! ./Body */ \"./node_modules/cannon/src/objects/Body.js\");\n\nvar Sphere = __webpack_require__(/*! ../shapes/Sphere */ \"./node_modules/cannon/src/shapes/Sphere.js\");\n\nvar Box = __webpack_require__(/*! ../shapes/Box */ \"./node_modules/cannon/src/shapes/Box.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar HingeConstraint = __webpack_require__(/*! ../constraints/HingeConstraint */ \"./node_modules/cannon/src/constraints/HingeConstraint.js\");\n\nmodule.exports = RigidVehicle;\n/**\n * Simple vehicle helper class with spherical rigid body wheels.\n * @class RigidVehicle\n * @constructor\n * @param {Body} [options.chassisBody]\n */\n\nfunction RigidVehicle(options) {\n  this.wheelBodies = [];\n  /**\n   * @property coordinateSystem\n   * @type {Vec3}\n   */\n\n  this.coordinateSystem = typeof options.coordinateSystem === 'undefined' ? new Vec3(1, 2, 3) : options.coordinateSystem.clone();\n  /**\n   * @property {Body} chassisBody\n   */\n\n  this.chassisBody = options.chassisBody;\n\n  if (!this.chassisBody) {\n    // No chassis body given. Create it!\n    var chassisShape = new Box(new Vec3(5, 2, 0.5));\n    this.chassisBody = new Body(1, chassisShape);\n  }\n  /**\n   * @property constraints\n   * @type {Array}\n   */\n\n\n  this.constraints = [];\n  this.wheelAxes = [];\n  this.wheelForces = [];\n}\n/**\n * Add a wheel\n * @method addWheel\n * @param {object} options\n * @param {boolean} [options.isFrontWheel]\n * @param {Vec3} [options.position] Position of the wheel, locally in the chassis body.\n * @param {Vec3} [options.direction] Slide direction of the wheel along the suspension.\n * @param {Vec3} [options.axis] Axis of rotation of the wheel, locally defined in the chassis.\n * @param {Body} [options.body] The wheel body.\n */\n\n\nRigidVehicle.prototype.addWheel = function (options) {\n  options = options || {};\n  var wheelBody = options.body;\n\n  if (!wheelBody) {\n    wheelBody = new Body(1, new Sphere(1.2));\n  }\n\n  this.wheelBodies.push(wheelBody);\n  this.wheelForces.push(0); // Position constrain wheels\n\n  var zero = new Vec3();\n  var position = typeof options.position !== 'undefined' ? options.position.clone() : new Vec3(); // Set position locally to the chassis\n\n  var worldPosition = new Vec3();\n  this.chassisBody.pointToWorldFrame(position, worldPosition);\n  wheelBody.position.set(worldPosition.x, worldPosition.y, worldPosition.z); // Constrain wheel\n\n  var axis = typeof options.axis !== 'undefined' ? options.axis.clone() : new Vec3(0, 1, 0);\n  this.wheelAxes.push(axis);\n  var hingeConstraint = new HingeConstraint(this.chassisBody, wheelBody, {\n    pivotA: position,\n    axisA: axis,\n    pivotB: Vec3.ZERO,\n    axisB: axis,\n    collideConnected: false\n  });\n  this.constraints.push(hingeConstraint);\n  return this.wheelBodies.length - 1;\n};\n/**\n * Set the steering value of a wheel.\n * @method setSteeringValue\n * @param {number} value\n * @param {integer} wheelIndex\n * @todo check coordinateSystem\n */\n\n\nRigidVehicle.prototype.setSteeringValue = function (value, wheelIndex) {\n  // Set angle of the hinge axis\n  var axis = this.wheelAxes[wheelIndex];\n  var c = Math.cos(value),\n      s = Math.sin(value),\n      x = axis.x,\n      y = axis.y;\n  this.constraints[wheelIndex].axisA.set(c * x - s * y, s * x + c * y, 0);\n};\n/**\n * Set the target rotational speed of the hinge constraint.\n * @method setMotorSpeed\n * @param {number} value\n * @param {integer} wheelIndex\n */\n\n\nRigidVehicle.prototype.setMotorSpeed = function (value, wheelIndex) {\n  var hingeConstraint = this.constraints[wheelIndex];\n  hingeConstraint.enableMotor();\n  hingeConstraint.motorTargetVelocity = value;\n};\n/**\n * Set the target rotational speed of the hinge constraint.\n * @method disableMotor\n * @param {number} value\n * @param {integer} wheelIndex\n */\n\n\nRigidVehicle.prototype.disableMotor = function (wheelIndex) {\n  var hingeConstraint = this.constraints[wheelIndex];\n  hingeConstraint.disableMotor();\n};\n\nvar torque = new Vec3();\n/**\n * Set the wheel force to apply on one of the wheels each time step\n * @method setWheelForce\n * @param  {number} value\n * @param  {integer} wheelIndex\n */\n\nRigidVehicle.prototype.setWheelForce = function (value, wheelIndex) {\n  this.wheelForces[wheelIndex] = value;\n};\n/**\n * Apply a torque on one of the wheels.\n * @method applyWheelForce\n * @param  {number} value\n * @param  {integer} wheelIndex\n */\n\n\nRigidVehicle.prototype.applyWheelForce = function (value, wheelIndex) {\n  var axis = this.wheelAxes[wheelIndex];\n  var wheelBody = this.wheelBodies[wheelIndex];\n  var bodyTorque = wheelBody.torque;\n  axis.scale(value, torque);\n  wheelBody.vectorToWorldFrame(torque, torque);\n  bodyTorque.vadd(torque, bodyTorque);\n};\n/**\n * Add the vehicle including its constraints to the world.\n * @method addToWorld\n * @param {World} world\n */\n\n\nRigidVehicle.prototype.addToWorld = function (world) {\n  var constraints = this.constraints;\n  var bodies = this.wheelBodies.concat([this.chassisBody]);\n\n  for (var i = 0; i < bodies.length; i++) {\n    world.addBody(bodies[i]);\n  }\n\n  for (var i = 0; i < constraints.length; i++) {\n    world.addConstraint(constraints[i]);\n  }\n\n  world.addEventListener('preStep', this._update.bind(this));\n};\n\nRigidVehicle.prototype._update = function () {\n  var wheelForces = this.wheelForces;\n\n  for (var i = 0; i < wheelForces.length; i++) {\n    this.applyWheelForce(wheelForces[i], i);\n  }\n};\n/**\n * Remove the vehicle including its constraints from the world.\n * @method removeFromWorld\n * @param {World} world\n */\n\n\nRigidVehicle.prototype.removeFromWorld = function (world) {\n  var constraints = this.constraints;\n  var bodies = this.wheelBodies.concat([this.chassisBody]);\n\n  for (var i = 0; i < bodies.length; i++) {\n    world.remove(bodies[i]);\n  }\n\n  for (var i = 0; i < constraints.length; i++) {\n    world.removeConstraint(constraints[i]);\n  }\n};\n\nvar worldAxis = new Vec3();\n/**\n * Get current rotational velocity of a wheel\n * @method getWheelSpeed\n * @param {integer} wheelIndex\n */\n\nRigidVehicle.prototype.getWheelSpeed = function (wheelIndex) {\n  var axis = this.wheelAxes[wheelIndex];\n  var wheelBody = this.wheelBodies[wheelIndex];\n  var w = wheelBody.angularVelocity;\n  this.chassisBody.vectorToWorldFrame(axis, worldAxis);\n  return w.dot(worldAxis);\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/objects/RigidVehicle.js?");

/***/ }),

/***/ "./node_modules/cannon/src/objects/SPHSystem.js":
/*!******************************************************!*\
  !*** ./node_modules/cannon/src/objects/SPHSystem.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = SPHSystem;\n\nvar Shape = __webpack_require__(/*! ../shapes/Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Quaternion = __webpack_require__(/*! ../math/Quaternion */ \"./node_modules/cannon/src/math/Quaternion.js\");\n\nvar Particle = __webpack_require__(/*! ../shapes/Particle */ \"./node_modules/cannon/src/shapes/Particle.js\");\n\nvar Body = __webpack_require__(/*! ../objects/Body */ \"./node_modules/cannon/src/objects/Body.js\");\n\nvar Material = __webpack_require__(/*! ../material/Material */ \"./node_modules/cannon/src/material/Material.js\");\n/**\n * Smoothed-particle hydrodynamics system\n * @class SPHSystem\n * @constructor\n */\n\n\nfunction SPHSystem() {\n  this.particles = [];\n  /**\n   * Density of the system (kg/m3).\n   * @property {number} density\n   */\n\n  this.density = 1;\n  /**\n   * Distance below which two particles are considered to be neighbors.\n   * It should be adjusted so there are about 15-20 neighbor particles within this radius.\n   * @property {number} smoothingRadius\n   */\n\n  this.smoothingRadius = 1;\n  this.speedOfSound = 1;\n  /**\n   * Viscosity of the system.\n   * @property {number} viscosity\n   */\n\n  this.viscosity = 0.01;\n  this.eps = 0.000001; // Stuff Computed per particle\n\n  this.pressures = [];\n  this.densities = [];\n  this.neighbors = [];\n}\n/**\n * Add a particle to the system.\n * @method add\n * @param {Body} particle\n */\n\n\nSPHSystem.prototype.add = function (particle) {\n  this.particles.push(particle);\n\n  if (this.neighbors.length < this.particles.length) {\n    this.neighbors.push([]);\n  }\n};\n/**\n * Remove a particle from the system.\n * @method remove\n * @param {Body} particle\n */\n\n\nSPHSystem.prototype.remove = function (particle) {\n  var idx = this.particles.indexOf(particle);\n\n  if (idx !== -1) {\n    this.particles.splice(idx, 1);\n\n    if (this.neighbors.length > this.particles.length) {\n      this.neighbors.pop();\n    }\n  }\n};\n/**\n * Get neighbors within smoothing volume, save in the array neighbors\n * @method getNeighbors\n * @param {Body} particle\n * @param {Array} neighbors\n */\n\n\nvar SPHSystem_getNeighbors_dist = new Vec3();\n\nSPHSystem.prototype.getNeighbors = function (particle, neighbors) {\n  var N = this.particles.length,\n      id = particle.id,\n      R2 = this.smoothingRadius * this.smoothingRadius,\n      dist = SPHSystem_getNeighbors_dist;\n\n  for (var i = 0; i !== N; i++) {\n    var p = this.particles[i];\n    p.position.vsub(particle.position, dist);\n\n    if (id !== p.id && dist.norm2() < R2) {\n      neighbors.push(p);\n    }\n  }\n}; // Temp vectors for calculation\n\n\nvar SPHSystem_update_dist = new Vec3(),\n    SPHSystem_update_a_pressure = new Vec3(),\n    SPHSystem_update_a_visc = new Vec3(),\n    SPHSystem_update_gradW = new Vec3(),\n    SPHSystem_update_r_vec = new Vec3(),\n    SPHSystem_update_u = new Vec3(); // Relative velocity\n\nSPHSystem.prototype.update = function () {\n  var N = this.particles.length,\n      dist = SPHSystem_update_dist,\n      cs = this.speedOfSound,\n      eps = this.eps;\n\n  for (var i = 0; i !== N; i++) {\n    var p = this.particles[i]; // Current particle\n\n    var neighbors = this.neighbors[i]; // Get neighbors\n\n    neighbors.length = 0;\n    this.getNeighbors(p, neighbors);\n    neighbors.push(this.particles[i]); // Add current too\n\n    var numNeighbors = neighbors.length; // Accumulate density for the particle\n\n    var sum = 0.0;\n\n    for (var j = 0; j !== numNeighbors; j++) {\n      //printf(\"Current particle has position %f %f %f\\n\",objects[id].pos.x(),objects[id].pos.y(),objects[id].pos.z());\n      p.position.vsub(neighbors[j].position, dist);\n      var len = dist.norm();\n      var weight = this.w(len);\n      sum += neighbors[j].mass * weight;\n    } // Save\n\n\n    this.densities[i] = sum;\n    this.pressures[i] = cs * cs * (this.densities[i] - this.density);\n  } // Add forces\n  // Sum to these accelerations\n\n\n  var a_pressure = SPHSystem_update_a_pressure;\n  var a_visc = SPHSystem_update_a_visc;\n  var gradW = SPHSystem_update_gradW;\n  var r_vec = SPHSystem_update_r_vec;\n  var u = SPHSystem_update_u;\n\n  for (var i = 0; i !== N; i++) {\n    var particle = this.particles[i];\n    a_pressure.set(0, 0, 0);\n    a_visc.set(0, 0, 0); // Init vars\n\n    var Pij;\n    var nabla;\n    var Vij; // Sum up for all other neighbors\n\n    var neighbors = this.neighbors[i];\n    var numNeighbors = neighbors.length; //printf(\"Neighbors: \");\n\n    for (var j = 0; j !== numNeighbors; j++) {\n      var neighbor = neighbors[j]; //printf(\"%d \",nj);\n      // Get r once for all..\n\n      particle.position.vsub(neighbor.position, r_vec);\n      var r = r_vec.norm(); // Pressure contribution\n\n      Pij = -neighbor.mass * (this.pressures[i] / (this.densities[i] * this.densities[i] + eps) + this.pressures[j] / (this.densities[j] * this.densities[j] + eps));\n      this.gradw(r_vec, gradW); // Add to pressure acceleration\n\n      gradW.mult(Pij, gradW);\n      a_pressure.vadd(gradW, a_pressure); // Viscosity contribution\n\n      neighbor.velocity.vsub(particle.velocity, u);\n      u.mult(1.0 / (0.0001 + this.densities[i] * this.densities[j]) * this.viscosity * neighbor.mass, u);\n      nabla = this.nablaw(r);\n      u.mult(nabla, u); // Add to viscosity acceleration\n\n      a_visc.vadd(u, a_visc);\n    } // Calculate force\n\n\n    a_visc.mult(particle.mass, a_visc);\n    a_pressure.mult(particle.mass, a_pressure); // Add force to particles\n\n    particle.force.vadd(a_visc, particle.force);\n    particle.force.vadd(a_pressure, particle.force);\n  }\n}; // Calculate the weight using the W(r) weightfunction\n\n\nSPHSystem.prototype.w = function (r) {\n  // 315\n  var h = this.smoothingRadius;\n  return 315.0 / (64.0 * Math.PI * Math.pow(h, 9)) * Math.pow(h * h - r * r, 3);\n}; // calculate gradient of the weight function\n\n\nSPHSystem.prototype.gradw = function (rVec, resultVec) {\n  var r = rVec.norm(),\n      h = this.smoothingRadius;\n  rVec.mult(945.0 / (32.0 * Math.PI * Math.pow(h, 9)) * Math.pow(h * h - r * r, 2), resultVec);\n}; // Calculate nabla(W)\n\n\nSPHSystem.prototype.nablaw = function (r) {\n  var h = this.smoothingRadius;\n  var nabla = 945.0 / (32.0 * Math.PI * Math.pow(h, 9)) * (h * h - r * r) * (7 * r * r - 3 * h * h);\n  return nabla;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/objects/SPHSystem.js?");

/***/ }),

/***/ "./node_modules/cannon/src/objects/Spring.js":
/*!***************************************************!*\
  !*** ./node_modules/cannon/src/objects/Spring.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nmodule.exports = Spring;\n/**\n * A spring, connecting two bodies.\n *\n * @class Spring\n * @constructor\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Object} [options]\n * @param {number} [options.restLength]   A number > 0. Default: 1\n * @param {number} [options.stiffness]    A number >= 0. Default: 100\n * @param {number} [options.damping]      A number >= 0. Default: 1\n * @param {Vec3}  [options.worldAnchorA] Where to hook the spring to body A, in world coordinates.\n * @param {Vec3}  [options.worldAnchorB]\n * @param {Vec3}  [options.localAnchorA] Where to hook the spring to body A, in local body coordinates.\n * @param {Vec3}  [options.localAnchorB]\n */\n\nfunction Spring(bodyA, bodyB, options) {\n  options = options || {};\n  /**\n   * Rest length of the spring.\n   * @property restLength\n   * @type {number}\n   */\n\n  this.restLength = typeof options.restLength === \"number\" ? options.restLength : 1;\n  /**\n   * Stiffness of the spring.\n   * @property stiffness\n   * @type {number}\n   */\n\n  this.stiffness = options.stiffness || 100;\n  /**\n   * Damping of the spring.\n   * @property damping\n   * @type {number}\n   */\n\n  this.damping = options.damping || 1;\n  /**\n   * First connected body.\n   * @property bodyA\n   * @type {Body}\n   */\n\n  this.bodyA = bodyA;\n  /**\n   * Second connected body.\n   * @property bodyB\n   * @type {Body}\n   */\n\n  this.bodyB = bodyB;\n  /**\n   * Anchor for bodyA in local bodyA coordinates.\n   * @property localAnchorA\n   * @type {Vec3}\n   */\n\n  this.localAnchorA = new Vec3();\n  /**\n   * Anchor for bodyB in local bodyB coordinates.\n   * @property localAnchorB\n   * @type {Vec3}\n   */\n\n  this.localAnchorB = new Vec3();\n\n  if (options.localAnchorA) {\n    this.localAnchorA.copy(options.localAnchorA);\n  }\n\n  if (options.localAnchorB) {\n    this.localAnchorB.copy(options.localAnchorB);\n  }\n\n  if (options.worldAnchorA) {\n    this.setWorldAnchorA(options.worldAnchorA);\n  }\n\n  if (options.worldAnchorB) {\n    this.setWorldAnchorB(options.worldAnchorB);\n  }\n}\n/**\n * Set the anchor point on body A, using world coordinates.\n * @method setWorldAnchorA\n * @param {Vec3} worldAnchorA\n */\n\n\nSpring.prototype.setWorldAnchorA = function (worldAnchorA) {\n  this.bodyA.pointToLocalFrame(worldAnchorA, this.localAnchorA);\n};\n/**\n * Set the anchor point on body B, using world coordinates.\n * @method setWorldAnchorB\n * @param {Vec3} worldAnchorB\n */\n\n\nSpring.prototype.setWorldAnchorB = function (worldAnchorB) {\n  this.bodyB.pointToLocalFrame(worldAnchorB, this.localAnchorB);\n};\n/**\n * Get the anchor point on body A, in world coordinates.\n * @method getWorldAnchorA\n * @param {Vec3} result The vector to store the result in.\n */\n\n\nSpring.prototype.getWorldAnchorA = function (result) {\n  this.bodyA.pointToWorldFrame(this.localAnchorA, result);\n};\n/**\n * Get the anchor point on body B, in world coordinates.\n * @method getWorldAnchorB\n * @param {Vec3} result The vector to store the result in.\n */\n\n\nSpring.prototype.getWorldAnchorB = function (result) {\n  this.bodyB.pointToWorldFrame(this.localAnchorB, result);\n};\n\nvar applyForce_r = new Vec3(),\n    applyForce_r_unit = new Vec3(),\n    applyForce_u = new Vec3(),\n    applyForce_f = new Vec3(),\n    applyForce_worldAnchorA = new Vec3(),\n    applyForce_worldAnchorB = new Vec3(),\n    applyForce_ri = new Vec3(),\n    applyForce_rj = new Vec3(),\n    applyForce_ri_x_f = new Vec3(),\n    applyForce_rj_x_f = new Vec3(),\n    applyForce_tmp = new Vec3();\n/**\n * Apply the spring force to the connected bodies.\n * @method applyForce\n */\n\nSpring.prototype.applyForce = function () {\n  var k = this.stiffness,\n      d = this.damping,\n      l = this.restLength,\n      bodyA = this.bodyA,\n      bodyB = this.bodyB,\n      r = applyForce_r,\n      r_unit = applyForce_r_unit,\n      u = applyForce_u,\n      f = applyForce_f,\n      tmp = applyForce_tmp;\n  var worldAnchorA = applyForce_worldAnchorA,\n      worldAnchorB = applyForce_worldAnchorB,\n      ri = applyForce_ri,\n      rj = applyForce_rj,\n      ri_x_f = applyForce_ri_x_f,\n      rj_x_f = applyForce_rj_x_f; // Get world anchors\n\n  this.getWorldAnchorA(worldAnchorA);\n  this.getWorldAnchorB(worldAnchorB); // Get offset points\n\n  worldAnchorA.vsub(bodyA.position, ri);\n  worldAnchorB.vsub(bodyB.position, rj); // Compute distance vector between world anchor points\n\n  worldAnchorB.vsub(worldAnchorA, r);\n  var rlen = r.norm();\n  r_unit.copy(r);\n  r_unit.normalize(); // Compute relative velocity of the anchor points, u\n\n  bodyB.velocity.vsub(bodyA.velocity, u); // Add rotational velocity\n\n  bodyB.angularVelocity.cross(rj, tmp);\n  u.vadd(tmp, u);\n  bodyA.angularVelocity.cross(ri, tmp);\n  u.vsub(tmp, u); // F = - k * ( x - L ) - D * ( u )\n\n  r_unit.mult(-k * (rlen - l) - d * u.dot(r_unit), f); // Add forces to bodies\n\n  bodyA.force.vsub(f, bodyA.force);\n  bodyB.force.vadd(f, bodyB.force); // Angular force\n\n  ri.cross(f, ri_x_f);\n  rj.cross(f, rj_x_f);\n  bodyA.torque.vsub(ri_x_f, bodyA.torque);\n  bodyB.torque.vadd(rj_x_f, bodyB.torque);\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/objects/Spring.js?");

/***/ }),

/***/ "./node_modules/cannon/src/objects/WheelInfo.js":
/*!******************************************************!*\
  !*** ./node_modules/cannon/src/objects/WheelInfo.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Transform = __webpack_require__(/*! ../math/Transform */ \"./node_modules/cannon/src/math/Transform.js\");\n\nvar RaycastResult = __webpack_require__(/*! ../collision/RaycastResult */ \"./node_modules/cannon/src/collision/RaycastResult.js\");\n\nvar Utils = __webpack_require__(/*! ../utils/Utils */ \"./node_modules/cannon/src/utils/Utils.js\");\n\nmodule.exports = WheelInfo;\n/**\n * @class WheelInfo\n * @constructor\n * @param {Object} [options]\n *\n * @param {Vec3} [options.chassisConnectionPointLocal]\n * @param {Vec3} [options.chassisConnectionPointWorld]\n * @param {Vec3} [options.directionLocal]\n * @param {Vec3} [options.directionWorld]\n * @param {Vec3} [options.axleLocal]\n * @param {Vec3} [options.axleWorld]\n * @param {number} [options.suspensionRestLength=1]\n * @param {number} [options.suspensionMaxLength=2]\n * @param {number} [options.radius=1]\n * @param {number} [options.suspensionStiffness=100]\n * @param {number} [options.dampingCompression=10]\n * @param {number} [options.dampingRelaxation=10]\n * @param {number} [options.frictionSlip=10000]\n * @param {number} [options.steering=0]\n * @param {number} [options.rotation=0]\n * @param {number} [options.deltaRotation=0]\n * @param {number} [options.rollInfluence=0.01]\n * @param {number} [options.maxSuspensionForce]\n * @param {boolean} [options.isFrontWheel=true]\n * @param {number} [options.clippedInvContactDotSuspension=1]\n * @param {number} [options.suspensionRelativeVelocity=0]\n * @param {number} [options.suspensionForce=0]\n * @param {number} [options.skidInfo=0]\n * @param {number} [options.suspensionLength=0]\n * @param {number} [options.maxSuspensionTravel=1]\n * @param {boolean} [options.useCustomSlidingRotationalSpeed=false]\n * @param {number} [options.customSlidingRotationalSpeed=-0.1]\n */\n\nfunction WheelInfo(options) {\n  options = Utils.defaults(options, {\n    chassisConnectionPointLocal: new Vec3(),\n    chassisConnectionPointWorld: new Vec3(),\n    directionLocal: new Vec3(),\n    directionWorld: new Vec3(),\n    axleLocal: new Vec3(),\n    axleWorld: new Vec3(),\n    suspensionRestLength: 1,\n    suspensionMaxLength: 2,\n    radius: 1,\n    suspensionStiffness: 100,\n    dampingCompression: 10,\n    dampingRelaxation: 10,\n    frictionSlip: 10000,\n    steering: 0,\n    rotation: 0,\n    deltaRotation: 0,\n    rollInfluence: 0.01,\n    maxSuspensionForce: Number.MAX_VALUE,\n    isFrontWheel: true,\n    clippedInvContactDotSuspension: 1,\n    suspensionRelativeVelocity: 0,\n    suspensionForce: 0,\n    skidInfo: 0,\n    suspensionLength: 0,\n    maxSuspensionTravel: 1,\n    useCustomSlidingRotationalSpeed: false,\n    customSlidingRotationalSpeed: -0.1\n  });\n  /**\n   * Max travel distance of the suspension, in meters.\n   * @property {number} maxSuspensionTravel\n   */\n\n  this.maxSuspensionTravel = options.maxSuspensionTravel;\n  /**\n   * Speed to apply to the wheel rotation when the wheel is sliding.\n   * @property {number} customSlidingRotationalSpeed\n   */\n\n  this.customSlidingRotationalSpeed = options.customSlidingRotationalSpeed;\n  /**\n   * If the customSlidingRotationalSpeed should be used.\n   * @property {Boolean} useCustomSlidingRotationalSpeed\n   */\n\n  this.useCustomSlidingRotationalSpeed = options.useCustomSlidingRotationalSpeed;\n  /**\n   * @property {Boolean} sliding\n   */\n\n  this.sliding = false;\n  /**\n   * Connection point, defined locally in the chassis body frame.\n   * @property {Vec3} chassisConnectionPointLocal\n   */\n\n  this.chassisConnectionPointLocal = options.chassisConnectionPointLocal.clone();\n  /**\n   * @property {Vec3} chassisConnectionPointWorld\n   */\n\n  this.chassisConnectionPointWorld = options.chassisConnectionPointWorld.clone();\n  /**\n   * @property {Vec3} directionLocal\n   */\n\n  this.directionLocal = options.directionLocal.clone();\n  /**\n   * @property {Vec3} directionWorld\n   */\n\n  this.directionWorld = options.directionWorld.clone();\n  /**\n   * @property {Vec3} axleLocal\n   */\n\n  this.axleLocal = options.axleLocal.clone();\n  /**\n   * @property {Vec3} axleWorld\n   */\n\n  this.axleWorld = options.axleWorld.clone();\n  /**\n   * @property {number} suspensionRestLength\n   */\n\n  this.suspensionRestLength = options.suspensionRestLength;\n  /**\n   * @property {number} suspensionMaxLength\n   */\n\n  this.suspensionMaxLength = options.suspensionMaxLength;\n  /**\n   * @property {number} radius\n   */\n\n  this.radius = options.radius;\n  /**\n   * @property {number} suspensionStiffness\n   */\n\n  this.suspensionStiffness = options.suspensionStiffness;\n  /**\n   * @property {number} dampingCompression\n   */\n\n  this.dampingCompression = options.dampingCompression;\n  /**\n   * @property {number} dampingRelaxation\n   */\n\n  this.dampingRelaxation = options.dampingRelaxation;\n  /**\n   * @property {number} frictionSlip\n   */\n\n  this.frictionSlip = options.frictionSlip;\n  /**\n   * @property {number} steering\n   */\n\n  this.steering = 0;\n  /**\n   * Rotation value, in radians.\n   * @property {number} rotation\n   */\n\n  this.rotation = 0;\n  /**\n   * @property {number} deltaRotation\n   */\n\n  this.deltaRotation = 0;\n  /**\n   * @property {number} rollInfluence\n   */\n\n  this.rollInfluence = options.rollInfluence;\n  /**\n   * @property {number} maxSuspensionForce\n   */\n\n  this.maxSuspensionForce = options.maxSuspensionForce;\n  /**\n   * @property {number} engineForce\n   */\n\n  this.engineForce = 0;\n  /**\n   * @property {number} brake\n   */\n\n  this.brake = 0;\n  /**\n   * @property {number} isFrontWheel\n   */\n\n  this.isFrontWheel = options.isFrontWheel;\n  /**\n   * @property {number} clippedInvContactDotSuspension\n   */\n\n  this.clippedInvContactDotSuspension = 1;\n  /**\n   * @property {number} suspensionRelativeVelocity\n   */\n\n  this.suspensionRelativeVelocity = 0;\n  /**\n   * @property {number} suspensionForce\n   */\n\n  this.suspensionForce = 0;\n  /**\n   * @property {number} skidInfo\n   */\n\n  this.skidInfo = 0;\n  /**\n   * @property {number} suspensionLength\n   */\n\n  this.suspensionLength = 0;\n  /**\n   * @property {number} sideImpulse\n   */\n\n  this.sideImpulse = 0;\n  /**\n   * @property {number} forwardImpulse\n   */\n\n  this.forwardImpulse = 0;\n  /**\n   * The result from raycasting\n   * @property {RaycastResult} raycastResult\n   */\n\n  this.raycastResult = new RaycastResult();\n  /**\n   * Wheel world transform\n   * @property {Transform} worldTransform\n   */\n\n  this.worldTransform = new Transform();\n  /**\n   * @property {boolean} isInContact\n   */\n\n  this.isInContact = false;\n}\n\nvar chassis_velocity_at_contactPoint = new Vec3();\nvar relpos = new Vec3();\nvar chassis_velocity_at_contactPoint = new Vec3();\n\nWheelInfo.prototype.updateWheel = function (chassis) {\n  var raycastResult = this.raycastResult;\n\n  if (this.isInContact) {\n    var project = raycastResult.hitNormalWorld.dot(raycastResult.directionWorld);\n    raycastResult.hitPointWorld.vsub(chassis.position, relpos);\n    chassis.getVelocityAtWorldPoint(relpos, chassis_velocity_at_contactPoint);\n    var projVel = raycastResult.hitNormalWorld.dot(chassis_velocity_at_contactPoint);\n\n    if (project >= -0.1) {\n      this.suspensionRelativeVelocity = 0.0;\n      this.clippedInvContactDotSuspension = 1.0 / 0.1;\n    } else {\n      var inv = -1 / project;\n      this.suspensionRelativeVelocity = projVel * inv;\n      this.clippedInvContactDotSuspension = inv;\n    }\n  } else {\n    // Not in contact : position wheel in a nice (rest length) position\n    raycastResult.suspensionLength = this.suspensionRestLength;\n    this.suspensionRelativeVelocity = 0.0;\n    raycastResult.directionWorld.scale(-1, raycastResult.hitNormalWorld);\n    this.clippedInvContactDotSuspension = 1.0;\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/objects/WheelInfo.js?");

/***/ }),

/***/ "./node_modules/cannon/src/shapes/Box.js":
/*!***********************************************!*\
  !*** ./node_modules/cannon/src/shapes/Box.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Box;\n\nvar Shape = __webpack_require__(/*! ./Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar ConvexPolyhedron = __webpack_require__(/*! ./ConvexPolyhedron */ \"./node_modules/cannon/src/shapes/ConvexPolyhedron.js\");\n/**\n * A 3d box shape.\n * @class Box\n * @constructor\n * @param {Vec3} halfExtents\n * @author schteppe\n * @extends Shape\n */\n\n\nfunction Box(halfExtents) {\n  Shape.call(this);\n  this.type = Shape.types.BOX;\n  /**\n   * @property halfExtents\n   * @type {Vec3}\n   */\n\n  this.halfExtents = halfExtents;\n  /**\n   * Used by the contact generator to make contacts with other convex polyhedra for example\n   * @property convexPolyhedronRepresentation\n   * @type {ConvexPolyhedron}\n   */\n\n  this.convexPolyhedronRepresentation = null;\n  this.updateConvexPolyhedronRepresentation();\n  this.updateBoundingSphereRadius();\n}\n\nBox.prototype = new Shape();\nBox.prototype.constructor = Box;\n/**\n * Updates the local convex polyhedron representation used for some collisions.\n * @method updateConvexPolyhedronRepresentation\n */\n\nBox.prototype.updateConvexPolyhedronRepresentation = function () {\n  var sx = this.halfExtents.x;\n  var sy = this.halfExtents.y;\n  var sz = this.halfExtents.z;\n  var V = Vec3;\n  var vertices = [new V(-sx, -sy, -sz), new V(sx, -sy, -sz), new V(sx, sy, -sz), new V(-sx, sy, -sz), new V(-sx, -sy, sz), new V(sx, -sy, sz), new V(sx, sy, sz), new V(-sx, sy, sz)];\n  var indices = [[3, 2, 1, 0], // -z\n  [4, 5, 6, 7], // +z\n  [5, 4, 0, 1], // -y\n  [2, 3, 7, 6], // +y\n  [0, 4, 7, 3], // -x\n  [1, 2, 6, 5]];\n  var axes = [new V(0, 0, 1), new V(0, 1, 0), new V(1, 0, 0)];\n  var h = new ConvexPolyhedron(vertices, indices);\n  this.convexPolyhedronRepresentation = h;\n  h.material = this.material;\n};\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n * @return {Vec3}\n */\n\n\nBox.prototype.calculateLocalInertia = function (mass, target) {\n  target = target || new Vec3();\n  Box.calculateInertia(this.halfExtents, mass, target);\n  return target;\n};\n\nBox.calculateInertia = function (halfExtents, mass, target) {\n  var e = halfExtents;\n  target.x = 1.0 / 12.0 * mass * (2 * e.y * 2 * e.y + 2 * e.z * 2 * e.z);\n  target.y = 1.0 / 12.0 * mass * (2 * e.x * 2 * e.x + 2 * e.z * 2 * e.z);\n  target.z = 1.0 / 12.0 * mass * (2 * e.y * 2 * e.y + 2 * e.x * 2 * e.x);\n};\n/**\n * Get the box 6 side normals\n * @method getSideNormals\n * @param {array}      sixTargetVectors An array of 6 vectors, to store the resulting side normals in.\n * @param {Quaternion} quat             Orientation to apply to the normal vectors. If not provided, the vectors will be in respect to the local frame.\n * @return {array}\n */\n\n\nBox.prototype.getSideNormals = function (sixTargetVectors, quat) {\n  var sides = sixTargetVectors;\n  var ex = this.halfExtents;\n  sides[0].set(ex.x, 0, 0);\n  sides[1].set(0, ex.y, 0);\n  sides[2].set(0, 0, ex.z);\n  sides[3].set(-ex.x, 0, 0);\n  sides[4].set(0, -ex.y, 0);\n  sides[5].set(0, 0, -ex.z);\n\n  if (quat !== undefined) {\n    for (var i = 0; i !== sides.length; i++) {\n      quat.vmult(sides[i], sides[i]);\n    }\n  }\n\n  return sides;\n};\n\nBox.prototype.volume = function () {\n  return 8.0 * this.halfExtents.x * this.halfExtents.y * this.halfExtents.z;\n};\n\nBox.prototype.updateBoundingSphereRadius = function () {\n  this.boundingSphereRadius = this.halfExtents.norm();\n};\n\nvar worldCornerTempPos = new Vec3();\nvar worldCornerTempNeg = new Vec3();\n\nBox.prototype.forEachWorldCorner = function (pos, quat, callback) {\n  var e = this.halfExtents;\n  var corners = [[e.x, e.y, e.z], [-e.x, e.y, e.z], [-e.x, -e.y, e.z], [-e.x, -e.y, -e.z], [e.x, -e.y, -e.z], [e.x, e.y, -e.z], [-e.x, e.y, -e.z], [e.x, -e.y, e.z]];\n\n  for (var i = 0; i < corners.length; i++) {\n    worldCornerTempPos.set(corners[i][0], corners[i][1], corners[i][2]);\n    quat.vmult(worldCornerTempPos, worldCornerTempPos);\n    pos.vadd(worldCornerTempPos, worldCornerTempPos);\n    callback(worldCornerTempPos.x, worldCornerTempPos.y, worldCornerTempPos.z);\n  }\n};\n\nvar worldCornersTemp = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n\nBox.prototype.calculateWorldAABB = function (pos, quat, min, max) {\n  var e = this.halfExtents;\n  worldCornersTemp[0].set(e.x, e.y, e.z);\n  worldCornersTemp[1].set(-e.x, e.y, e.z);\n  worldCornersTemp[2].set(-e.x, -e.y, e.z);\n  worldCornersTemp[3].set(-e.x, -e.y, -e.z);\n  worldCornersTemp[4].set(e.x, -e.y, -e.z);\n  worldCornersTemp[5].set(e.x, e.y, -e.z);\n  worldCornersTemp[6].set(-e.x, e.y, -e.z);\n  worldCornersTemp[7].set(e.x, -e.y, e.z);\n  var wc = worldCornersTemp[0];\n  quat.vmult(wc, wc);\n  pos.vadd(wc, wc);\n  max.copy(wc);\n  min.copy(wc);\n\n  for (var i = 1; i < 8; i++) {\n    var wc = worldCornersTemp[i];\n    quat.vmult(wc, wc);\n    pos.vadd(wc, wc);\n    var x = wc.x;\n    var y = wc.y;\n    var z = wc.z;\n\n    if (x > max.x) {\n      max.x = x;\n    }\n\n    if (y > max.y) {\n      max.y = y;\n    }\n\n    if (z > max.z) {\n      max.z = z;\n    }\n\n    if (x < min.x) {\n      min.x = x;\n    }\n\n    if (y < min.y) {\n      min.y = y;\n    }\n\n    if (z < min.z) {\n      min.z = z;\n    }\n  } // Get each axis max\n  // min.set(Infinity,Infinity,Infinity);\n  // max.set(-Infinity,-Infinity,-Infinity);\n  // this.forEachWorldCorner(pos,quat,function(x,y,z){\n  //     if(x > max.x){\n  //         max.x = x;\n  //     }\n  //     if(y > max.y){\n  //         max.y = y;\n  //     }\n  //     if(z > max.z){\n  //         max.z = z;\n  //     }\n  //     if(x < min.x){\n  //         min.x = x;\n  //     }\n  //     if(y < min.y){\n  //         min.y = y;\n  //     }\n  //     if(z < min.z){\n  //         min.z = z;\n  //     }\n  // });\n\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/shapes/Box.js?");

/***/ }),

/***/ "./node_modules/cannon/src/shapes/ConvexPolyhedron.js":
/*!************************************************************!*\
  !*** ./node_modules/cannon/src/shapes/ConvexPolyhedron.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = ConvexPolyhedron;\n\nvar Shape = __webpack_require__(/*! ./Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Quaternion = __webpack_require__(/*! ../math/Quaternion */ \"./node_modules/cannon/src/math/Quaternion.js\");\n\nvar Transform = __webpack_require__(/*! ../math/Transform */ \"./node_modules/cannon/src/math/Transform.js\");\n/**\n * A set of polygons describing a convex shape.\n * @class ConvexPolyhedron\n * @constructor\n * @extends Shape\n * @description The shape MUST be convex for the code to work properly. No polygons may be coplanar (contained\n * in the same 3D plane), instead these should be merged into one polygon.\n *\n * @param {array} points An array of Vec3's\n * @param {array} faces Array of integer arrays, describing which vertices that is included in each face.\n *\n * @author qiao / https://github.com/qiao (original author, see https://github.com/qiao/three.js/commit/85026f0c769e4000148a67d45a9e9b9c5108836f)\n * @author schteppe / https://github.com/schteppe\n * @see http://www.altdevblogaday.com/2011/05/13/contact-generation-between-3d-convex-meshes/\n * @see http://bullet.googlecode.com/svn/trunk/src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\n *\n * @todo Move the clipping functions to ContactGenerator?\n * @todo Automatically merge coplanar polygons in constructor.\n */\n\n\nfunction ConvexPolyhedron(points, faces, uniqueAxes) {\n  var that = this;\n  Shape.call(this);\n  this.type = Shape.types.CONVEXPOLYHEDRON;\n  /**\n   * Array of Vec3\n   * @property vertices\n   * @type {Array}\n   */\n\n  this.vertices = points || [];\n  this.worldVertices = []; // World transformed version of .vertices\n\n  this.worldVerticesNeedsUpdate = true;\n  /**\n   * Array of integer arrays, indicating which vertices each face consists of\n   * @property faces\n   * @type {Array}\n   */\n\n  this.faces = faces || [];\n  /**\n   * Array of Vec3\n   * @property faceNormals\n   * @type {Array}\n   */\n\n  this.faceNormals = [];\n  this.computeNormals();\n  this.worldFaceNormalsNeedsUpdate = true;\n  this.worldFaceNormals = []; // World transformed version of .faceNormals\n\n  /**\n   * Array of Vec3\n   * @property uniqueEdges\n   * @type {Array}\n   */\n\n  this.uniqueEdges = [];\n  /**\n   * If given, these locally defined, normalized axes are the only ones being checked when doing separating axis check.\n   * @property {Array} uniqueAxes\n   */\n\n  this.uniqueAxes = uniqueAxes ? uniqueAxes.slice() : null;\n  this.computeEdges();\n  this.updateBoundingSphereRadius();\n}\n\nConvexPolyhedron.prototype = new Shape();\nConvexPolyhedron.prototype.constructor = ConvexPolyhedron;\nvar computeEdges_tmpEdge = new Vec3();\n/**\n * Computes uniqueEdges\n * @method computeEdges\n */\n\nConvexPolyhedron.prototype.computeEdges = function () {\n  var faces = this.faces;\n  var vertices = this.vertices;\n  var nv = vertices.length;\n  var edges = this.uniqueEdges;\n  edges.length = 0;\n  var edge = computeEdges_tmpEdge;\n\n  for (var i = 0; i !== faces.length; i++) {\n    var face = faces[i];\n    var numVertices = face.length;\n\n    for (var j = 0; j !== numVertices; j++) {\n      var k = (j + 1) % numVertices;\n      vertices[face[j]].vsub(vertices[face[k]], edge);\n      edge.normalize();\n      var found = false;\n\n      for (var p = 0; p !== edges.length; p++) {\n        if (edges[p].almostEquals(edge) || edges[p].almostEquals(edge)) {\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        edges.push(edge.clone());\n      }\n    }\n  }\n};\n/**\n * Compute the normals of the faces. Will reuse existing Vec3 objects in the .faceNormals array if they exist.\n * @method computeNormals\n */\n\n\nConvexPolyhedron.prototype.computeNormals = function () {\n  this.faceNormals.length = this.faces.length; // Generate normals\n\n  for (var i = 0; i < this.faces.length; i++) {\n    // Check so all vertices exists for this face\n    for (var j = 0; j < this.faces[i].length; j++) {\n      if (!this.vertices[this.faces[i][j]]) {\n        throw new Error(\"Vertex \" + this.faces[i][j] + \" not found!\");\n      }\n    }\n\n    var n = this.faceNormals[i] || new Vec3();\n    this.getFaceNormal(i, n);\n    n.negate(n);\n    this.faceNormals[i] = n;\n    var vertex = this.vertices[this.faces[i][0]];\n\n    if (n.dot(vertex) < 0) {\n      console.error(\".faceNormals[\" + i + \"] = Vec3(\" + n.toString() + \") looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.\");\n\n      for (var j = 0; j < this.faces[i].length; j++) {\n        console.warn(\".vertices[\" + this.faces[i][j] + \"] = Vec3(\" + this.vertices[this.faces[i][j]].toString() + \")\");\n      }\n    }\n  }\n};\n/**\n * Get face normal given 3 vertices\n * @static\n * @method getFaceNormal\n * @param {Vec3} va\n * @param {Vec3} vb\n * @param {Vec3} vc\n * @param {Vec3} target\n */\n\n\nvar cb = new Vec3();\nvar ab = new Vec3();\n\nConvexPolyhedron.computeNormal = function (va, vb, vc, target) {\n  vb.vsub(va, ab);\n  vc.vsub(vb, cb);\n  cb.cross(ab, target);\n\n  if (!target.isZero()) {\n    target.normalize();\n  }\n};\n/**\n * Compute the normal of a face from its vertices\n * @method getFaceNormal\n * @param  {Number} i\n * @param  {Vec3} target\n */\n\n\nConvexPolyhedron.prototype.getFaceNormal = function (i, target) {\n  var f = this.faces[i];\n  var va = this.vertices[f[0]];\n  var vb = this.vertices[f[1]];\n  var vc = this.vertices[f[2]];\n  return ConvexPolyhedron.computeNormal(va, vb, vc, target);\n};\n/**\n * @method clipAgainstHull\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {ConvexPolyhedron} hullB\n * @param {Vec3} posB\n * @param {Quaternion} quatB\n * @param {Vec3} separatingNormal\n * @param {Number} minDist Clamp distance\n * @param {Number} maxDist\n * @param {array} result The an array of contact point objects, see clipFaceAgainstHull\n * @see http://bullet.googlecode.com/svn/trunk/src/BulletCollision/NarrowPhaseCollision/btPolyhedralContactClipping.cpp\n */\n\n\nvar cah_WorldNormal = new Vec3();\n\nConvexPolyhedron.prototype.clipAgainstHull = function (posA, quatA, hullB, posB, quatB, separatingNormal, minDist, maxDist, result) {\n  var WorldNormal = cah_WorldNormal;\n  var hullA = this;\n  var curMaxDist = maxDist;\n  var closestFaceB = -1;\n  var dmax = -Number.MAX_VALUE;\n\n  for (var face = 0; face < hullB.faces.length; face++) {\n    WorldNormal.copy(hullB.faceNormals[face]);\n    quatB.vmult(WorldNormal, WorldNormal); //posB.vadd(WorldNormal,WorldNormal);\n\n    var d = WorldNormal.dot(separatingNormal);\n\n    if (d > dmax) {\n      dmax = d;\n      closestFaceB = face;\n    }\n  }\n\n  var worldVertsB1 = [];\n  var polyB = hullB.faces[closestFaceB];\n  var numVertices = polyB.length;\n\n  for (var e0 = 0; e0 < numVertices; e0++) {\n    var b = hullB.vertices[polyB[e0]];\n    var worldb = new Vec3();\n    worldb.copy(b);\n    quatB.vmult(worldb, worldb);\n    posB.vadd(worldb, worldb);\n    worldVertsB1.push(worldb);\n  }\n\n  if (closestFaceB >= 0) {\n    this.clipFaceAgainstHull(separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist, result);\n  }\n};\n/**\n * Find the separating axis between this hull and another\n * @method findSeparatingAxis\n * @param {ConvexPolyhedron} hullB\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {Vec3} posB\n * @param {Quaternion} quatB\n * @param {Vec3} target The target vector to save the axis in\n * @return {bool} Returns false if a separation is found, else true\n */\n\n\nvar fsa_faceANormalWS3 = new Vec3(),\n    fsa_Worldnormal1 = new Vec3(),\n    fsa_deltaC = new Vec3(),\n    fsa_worldEdge0 = new Vec3(),\n    fsa_worldEdge1 = new Vec3(),\n    fsa_Cross = new Vec3();\n\nConvexPolyhedron.prototype.findSeparatingAxis = function (hullB, posA, quatA, posB, quatB, target, faceListA, faceListB) {\n  var faceANormalWS3 = fsa_faceANormalWS3,\n      Worldnormal1 = fsa_Worldnormal1,\n      deltaC = fsa_deltaC,\n      worldEdge0 = fsa_worldEdge0,\n      worldEdge1 = fsa_worldEdge1,\n      Cross = fsa_Cross;\n  var dmin = Number.MAX_VALUE;\n  var hullA = this;\n  var curPlaneTests = 0;\n\n  if (!hullA.uniqueAxes) {\n    var numFacesA = faceListA ? faceListA.length : hullA.faces.length; // Test face normals from hullA\n\n    for (var i = 0; i < numFacesA; i++) {\n      var fi = faceListA ? faceListA[i] : i; // Get world face normal\n\n      faceANormalWS3.copy(hullA.faceNormals[fi]);\n      quatA.vmult(faceANormalWS3, faceANormalWS3);\n      var d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\n\n      if (d === false) {\n        return false;\n      }\n\n      if (d < dmin) {\n        dmin = d;\n        target.copy(faceANormalWS3);\n      }\n    }\n  } else {\n    // Test unique axes\n    for (var i = 0; i !== hullA.uniqueAxes.length; i++) {\n      // Get world axis\n      quatA.vmult(hullA.uniqueAxes[i], faceANormalWS3);\n      var d = hullA.testSepAxis(faceANormalWS3, hullB, posA, quatA, posB, quatB);\n\n      if (d === false) {\n        return false;\n      }\n\n      if (d < dmin) {\n        dmin = d;\n        target.copy(faceANormalWS3);\n      }\n    }\n  }\n\n  if (!hullB.uniqueAxes) {\n    // Test face normals from hullB\n    var numFacesB = faceListB ? faceListB.length : hullB.faces.length;\n\n    for (var i = 0; i < numFacesB; i++) {\n      var fi = faceListB ? faceListB[i] : i;\n      Worldnormal1.copy(hullB.faceNormals[fi]);\n      quatB.vmult(Worldnormal1, Worldnormal1);\n      curPlaneTests++;\n      var d = hullA.testSepAxis(Worldnormal1, hullB, posA, quatA, posB, quatB);\n\n      if (d === false) {\n        return false;\n      }\n\n      if (d < dmin) {\n        dmin = d;\n        target.copy(Worldnormal1);\n      }\n    }\n  } else {\n    // Test unique axes in B\n    for (var i = 0; i !== hullB.uniqueAxes.length; i++) {\n      quatB.vmult(hullB.uniqueAxes[i], Worldnormal1);\n      curPlaneTests++;\n      var d = hullA.testSepAxis(Worldnormal1, hullB, posA, quatA, posB, quatB);\n\n      if (d === false) {\n        return false;\n      }\n\n      if (d < dmin) {\n        dmin = d;\n        target.copy(Worldnormal1);\n      }\n    }\n  } // Test edges\n\n\n  for (var e0 = 0; e0 !== hullA.uniqueEdges.length; e0++) {\n    // Get world edge\n    quatA.vmult(hullA.uniqueEdges[e0], worldEdge0);\n\n    for (var e1 = 0; e1 !== hullB.uniqueEdges.length; e1++) {\n      // Get world edge 2\n      quatB.vmult(hullB.uniqueEdges[e1], worldEdge1);\n      worldEdge0.cross(worldEdge1, Cross);\n\n      if (!Cross.almostZero()) {\n        Cross.normalize();\n        var dist = hullA.testSepAxis(Cross, hullB, posA, quatA, posB, quatB);\n\n        if (dist === false) {\n          return false;\n        }\n\n        if (dist < dmin) {\n          dmin = dist;\n          target.copy(Cross);\n        }\n      }\n    }\n  }\n\n  posB.vsub(posA, deltaC);\n\n  if (deltaC.dot(target) > 0.0) {\n    target.negate(target);\n  }\n\n  return true;\n};\n\nvar maxminA = [],\n    maxminB = [];\n/**\n * Test separating axis against two hulls. Both hulls are projected onto the axis and the overlap size is returned if there is one.\n * @method testSepAxis\n * @param {Vec3} axis\n * @param {ConvexPolyhedron} hullB\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {Vec3} posB\n * @param {Quaternion} quatB\n * @return {number} The overlap depth, or FALSE if no penetration.\n */\n\nConvexPolyhedron.prototype.testSepAxis = function (axis, hullB, posA, quatA, posB, quatB) {\n  var hullA = this;\n  ConvexPolyhedron.project(hullA, axis, posA, quatA, maxminA);\n  ConvexPolyhedron.project(hullB, axis, posB, quatB, maxminB);\n  var maxA = maxminA[0];\n  var minA = maxminA[1];\n  var maxB = maxminB[0];\n  var minB = maxminB[1];\n\n  if (maxA < minB || maxB < minA) {\n    return false; // Separated\n  }\n\n  var d0 = maxA - minB;\n  var d1 = maxB - minA;\n  var depth = d0 < d1 ? d0 : d1;\n  return depth;\n};\n\nvar cli_aabbmin = new Vec3(),\n    cli_aabbmax = new Vec3();\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n */\n\nConvexPolyhedron.prototype.calculateLocalInertia = function (mass, target) {\n  // Approximate with box inertia\n  // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\n  this.computeLocalAABB(cli_aabbmin, cli_aabbmax);\n  var x = cli_aabbmax.x - cli_aabbmin.x,\n      y = cli_aabbmax.y - cli_aabbmin.y,\n      z = cli_aabbmax.z - cli_aabbmin.z;\n  target.x = 1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * z * 2 * z);\n  target.y = 1.0 / 12.0 * mass * (2 * x * 2 * x + 2 * z * 2 * z);\n  target.z = 1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * x * 2 * x);\n};\n/**\n * @method getPlaneConstantOfFace\n * @param  {Number} face_i Index of the face\n * @return {Number}\n */\n\n\nConvexPolyhedron.prototype.getPlaneConstantOfFace = function (face_i) {\n  var f = this.faces[face_i];\n  var n = this.faceNormals[face_i];\n  var v = this.vertices[f[0]];\n  var c = -n.dot(v);\n  return c;\n};\n/**\n * Clip a face against a hull.\n * @method clipFaceAgainstHull\n * @param {Vec3} separatingNormal\n * @param {Vec3} posA\n * @param {Quaternion} quatA\n * @param {Array} worldVertsB1 An array of Vec3 with vertices in the world frame.\n * @param {Number} minDist Distance clamping\n * @param {Number} maxDist\n * @param Array result Array to store resulting contact points in. Will be objects with properties: point, depth, normal. These are represented in world coordinates.\n */\n\n\nvar cfah_faceANormalWS = new Vec3(),\n    cfah_edge0 = new Vec3(),\n    cfah_WorldEdge0 = new Vec3(),\n    cfah_worldPlaneAnormal1 = new Vec3(),\n    cfah_planeNormalWS1 = new Vec3(),\n    cfah_worldA1 = new Vec3(),\n    cfah_localPlaneNormal = new Vec3(),\n    cfah_planeNormalWS = new Vec3();\n\nConvexPolyhedron.prototype.clipFaceAgainstHull = function (separatingNormal, posA, quatA, worldVertsB1, minDist, maxDist, result) {\n  var faceANormalWS = cfah_faceANormalWS,\n      edge0 = cfah_edge0,\n      WorldEdge0 = cfah_WorldEdge0,\n      worldPlaneAnormal1 = cfah_worldPlaneAnormal1,\n      planeNormalWS1 = cfah_planeNormalWS1,\n      worldA1 = cfah_worldA1,\n      localPlaneNormal = cfah_localPlaneNormal,\n      planeNormalWS = cfah_planeNormalWS;\n  var hullA = this;\n  var worldVertsB2 = [];\n  var pVtxIn = worldVertsB1;\n  var pVtxOut = worldVertsB2; // Find the face with normal closest to the separating axis\n\n  var closestFaceA = -1;\n  var dmin = Number.MAX_VALUE;\n\n  for (var face = 0; face < hullA.faces.length; face++) {\n    faceANormalWS.copy(hullA.faceNormals[face]);\n    quatA.vmult(faceANormalWS, faceANormalWS); //posA.vadd(faceANormalWS,faceANormalWS);\n\n    var d = faceANormalWS.dot(separatingNormal);\n\n    if (d < dmin) {\n      dmin = d;\n      closestFaceA = face;\n    }\n  }\n\n  if (closestFaceA < 0) {\n    // console.log(\"--- did not find any closest face... ---\");\n    return;\n  } //console.log(\"closest A: \",closestFaceA);\n  // Get the face and construct connected faces\n\n\n  var polyA = hullA.faces[closestFaceA];\n  polyA.connectedFaces = [];\n\n  for (var i = 0; i < hullA.faces.length; i++) {\n    for (var j = 0; j < hullA.faces[i].length; j++) {\n      if (polyA.indexOf(hullA.faces[i][j]) !== -1\n      /* Sharing a vertex*/\n      && i !== closestFaceA\n      /* Not the one we are looking for connections from */\n      && polyA.connectedFaces.indexOf(i) === -1\n      /* Not already added */\n      ) {\n          polyA.connectedFaces.push(i);\n        }\n    }\n  } // Clip the polygon to the back of the planes of all faces of hull A, that are adjacent to the witness face\n\n\n  var numContacts = pVtxIn.length;\n  var numVerticesA = polyA.length;\n  var res = [];\n\n  for (var e0 = 0; e0 < numVerticesA; e0++) {\n    var a = hullA.vertices[polyA[e0]];\n    var b = hullA.vertices[polyA[(e0 + 1) % numVerticesA]];\n    a.vsub(b, edge0);\n    WorldEdge0.copy(edge0);\n    quatA.vmult(WorldEdge0, WorldEdge0);\n    posA.vadd(WorldEdge0, WorldEdge0);\n    worldPlaneAnormal1.copy(this.faceNormals[closestFaceA]); //transA.getBasis()* btVector3(polyA.m_plane[0],polyA.m_plane[1],polyA.m_plane[2]);\n\n    quatA.vmult(worldPlaneAnormal1, worldPlaneAnormal1);\n    posA.vadd(worldPlaneAnormal1, worldPlaneAnormal1);\n    WorldEdge0.cross(worldPlaneAnormal1, planeNormalWS1);\n    planeNormalWS1.negate(planeNormalWS1);\n    worldA1.copy(a);\n    quatA.vmult(worldA1, worldA1);\n    posA.vadd(worldA1, worldA1);\n    var planeEqWS1 = -worldA1.dot(planeNormalWS1);\n    var planeEqWS;\n\n    if (true) {\n      var otherFace = polyA.connectedFaces[e0];\n      localPlaneNormal.copy(this.faceNormals[otherFace]);\n      var localPlaneEq = this.getPlaneConstantOfFace(otherFace);\n      planeNormalWS.copy(localPlaneNormal);\n      quatA.vmult(planeNormalWS, planeNormalWS); //posA.vadd(planeNormalWS,planeNormalWS);\n\n      var planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\n    } else {} // Clip face against our constructed plane\n\n\n    this.clipFaceAgainstPlane(pVtxIn, pVtxOut, planeNormalWS, planeEqWS); // Throw away all clipped points, but save the reamining until next clip\n\n    while (pVtxIn.length) {\n      pVtxIn.shift();\n    }\n\n    while (pVtxOut.length) {\n      pVtxIn.push(pVtxOut.shift());\n    }\n  } //console.log(\"Resulting points after clip:\",pVtxIn);\n  // only keep contact points that are behind the witness face\n\n\n  localPlaneNormal.copy(this.faceNormals[closestFaceA]);\n  var localPlaneEq = this.getPlaneConstantOfFace(closestFaceA);\n  planeNormalWS.copy(localPlaneNormal);\n  quatA.vmult(planeNormalWS, planeNormalWS);\n  var planeEqWS = localPlaneEq - planeNormalWS.dot(posA);\n\n  for (var i = 0; i < pVtxIn.length; i++) {\n    var depth = planeNormalWS.dot(pVtxIn[i]) + planeEqWS; //???\n\n    /*console.log(\"depth calc from normal=\",planeNormalWS.toString(),\" and constant \"+planeEqWS+\" and vertex \",pVtxIn[i].toString(),\" gives \"+depth);*/\n\n    if (depth <= minDist) {\n      console.log(\"clamped: depth=\" + depth + \" to minDist=\" + (minDist + \"\"));\n      depth = minDist;\n    }\n\n    if (depth <= maxDist) {\n      var point = pVtxIn[i];\n\n      if (depth <= 0) {\n        /*console.log(\"Got contact point \",point.toString(),\n          \", depth=\",depth,\n          \"contact normal=\",separatingNormal.toString(),\n          \"plane\",planeNormalWS.toString(),\n          \"planeConstant\",planeEqWS);*/\n        var p = {\n          point: point,\n          normal: planeNormalWS,\n          depth: depth\n        };\n        result.push(p);\n      }\n    }\n  }\n};\n/**\n * Clip a face in a hull against the back of a plane.\n * @method clipFaceAgainstPlane\n * @param {Array} inVertices\n * @param {Array} outVertices\n * @param {Vec3} planeNormal\n * @param {Number} planeConstant The constant in the mathematical plane equation\n */\n\n\nConvexPolyhedron.prototype.clipFaceAgainstPlane = function (inVertices, outVertices, planeNormal, planeConstant) {\n  var n_dot_first, n_dot_last;\n  var numVerts = inVertices.length;\n\n  if (numVerts < 2) {\n    return outVertices;\n  }\n\n  var firstVertex = inVertices[inVertices.length - 1],\n      lastVertex = inVertices[0];\n  n_dot_first = planeNormal.dot(firstVertex) + planeConstant;\n\n  for (var vi = 0; vi < numVerts; vi++) {\n    lastVertex = inVertices[vi];\n    n_dot_last = planeNormal.dot(lastVertex) + planeConstant;\n\n    if (n_dot_first < 0) {\n      if (n_dot_last < 0) {\n        // Start < 0, end < 0, so output lastVertex\n        var newv = new Vec3();\n        newv.copy(lastVertex);\n        outVertices.push(newv);\n      } else {\n        // Start < 0, end >= 0, so output intersection\n        var newv = new Vec3();\n        firstVertex.lerp(lastVertex, n_dot_first / (n_dot_first - n_dot_last), newv);\n        outVertices.push(newv);\n      }\n    } else {\n      if (n_dot_last < 0) {\n        // Start >= 0, end < 0 so output intersection and end\n        var newv = new Vec3();\n        firstVertex.lerp(lastVertex, n_dot_first / (n_dot_first - n_dot_last), newv);\n        outVertices.push(newv);\n        outVertices.push(lastVertex);\n      }\n    }\n\n    firstVertex = lastVertex;\n    n_dot_first = n_dot_last;\n  }\n\n  return outVertices;\n}; // Updates .worldVertices and sets .worldVerticesNeedsUpdate to false.\n\n\nConvexPolyhedron.prototype.computeWorldVertices = function (position, quat) {\n  var N = this.vertices.length;\n\n  while (this.worldVertices.length < N) {\n    this.worldVertices.push(new Vec3());\n  }\n\n  var verts = this.vertices,\n      worldVerts = this.worldVertices;\n\n  for (var i = 0; i !== N; i++) {\n    quat.vmult(verts[i], worldVerts[i]);\n    position.vadd(worldVerts[i], worldVerts[i]);\n  }\n\n  this.worldVerticesNeedsUpdate = false;\n};\n\nvar computeLocalAABB_worldVert = new Vec3();\n\nConvexPolyhedron.prototype.computeLocalAABB = function (aabbmin, aabbmax) {\n  var n = this.vertices.length,\n      vertices = this.vertices,\n      worldVert = computeLocalAABB_worldVert;\n  aabbmin.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n  aabbmax.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n\n  for (var i = 0; i < n; i++) {\n    var v = vertices[i];\n\n    if (v.x < aabbmin.x) {\n      aabbmin.x = v.x;\n    } else if (v.x > aabbmax.x) {\n      aabbmax.x = v.x;\n    }\n\n    if (v.y < aabbmin.y) {\n      aabbmin.y = v.y;\n    } else if (v.y > aabbmax.y) {\n      aabbmax.y = v.y;\n    }\n\n    if (v.z < aabbmin.z) {\n      aabbmin.z = v.z;\n    } else if (v.z > aabbmax.z) {\n      aabbmax.z = v.z;\n    }\n  }\n};\n/**\n * Updates .worldVertices and sets .worldVerticesNeedsUpdate to false.\n * @method computeWorldFaceNormals\n * @param  {Quaternion} quat\n */\n\n\nConvexPolyhedron.prototype.computeWorldFaceNormals = function (quat) {\n  var N = this.faceNormals.length;\n\n  while (this.worldFaceNormals.length < N) {\n    this.worldFaceNormals.push(new Vec3());\n  }\n\n  var normals = this.faceNormals,\n      worldNormals = this.worldFaceNormals;\n\n  for (var i = 0; i !== N; i++) {\n    quat.vmult(normals[i], worldNormals[i]);\n  }\n\n  this.worldFaceNormalsNeedsUpdate = false;\n};\n/**\n * @method updateBoundingSphereRadius\n */\n\n\nConvexPolyhedron.prototype.updateBoundingSphereRadius = function () {\n  // Assume points are distributed with local (0,0,0) as center\n  var max2 = 0;\n  var verts = this.vertices;\n\n  for (var i = 0, N = verts.length; i !== N; i++) {\n    var norm2 = verts[i].norm2();\n\n    if (norm2 > max2) {\n      max2 = norm2;\n    }\n  }\n\n  this.boundingSphereRadius = Math.sqrt(max2);\n};\n\nvar tempWorldVertex = new Vec3();\n/**\n * @method calculateWorldAABB\n * @param {Vec3}        pos\n * @param {Quaternion}  quat\n * @param {Vec3}        min\n * @param {Vec3}        max\n */\n\nConvexPolyhedron.prototype.calculateWorldAABB = function (pos, quat, min, max) {\n  var n = this.vertices.length,\n      verts = this.vertices;\n  var minx, miny, minz, maxx, maxy, maxz;\n\n  for (var i = 0; i < n; i++) {\n    tempWorldVertex.copy(verts[i]);\n    quat.vmult(tempWorldVertex, tempWorldVertex);\n    pos.vadd(tempWorldVertex, tempWorldVertex);\n    var v = tempWorldVertex;\n\n    if (v.x < minx || minx === undefined) {\n      minx = v.x;\n    } else if (v.x > maxx || maxx === undefined) {\n      maxx = v.x;\n    }\n\n    if (v.y < miny || miny === undefined) {\n      miny = v.y;\n    } else if (v.y > maxy || maxy === undefined) {\n      maxy = v.y;\n    }\n\n    if (v.z < minz || minz === undefined) {\n      minz = v.z;\n    } else if (v.z > maxz || maxz === undefined) {\n      maxz = v.z;\n    }\n  }\n\n  min.set(minx, miny, minz);\n  max.set(maxx, maxy, maxz);\n};\n/**\n * Get approximate convex volume\n * @method volume\n * @return {Number}\n */\n\n\nConvexPolyhedron.prototype.volume = function () {\n  return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\n};\n/**\n * Get an average of all the vertices positions\n * @method getAveragePointLocal\n * @param  {Vec3} target\n * @return {Vec3}\n */\n\n\nConvexPolyhedron.prototype.getAveragePointLocal = function (target) {\n  target = target || new Vec3();\n  var n = this.vertices.length,\n      verts = this.vertices;\n\n  for (var i = 0; i < n; i++) {\n    target.vadd(verts[i], target);\n  }\n\n  target.mult(1 / n, target);\n  return target;\n};\n/**\n * Transform all local points. Will change the .vertices\n * @method transformAllPoints\n * @param  {Vec3} offset\n * @param  {Quaternion} quat\n */\n\n\nConvexPolyhedron.prototype.transformAllPoints = function (offset, quat) {\n  var n = this.vertices.length,\n      verts = this.vertices; // Apply rotation\n\n  if (quat) {\n    // Rotate vertices\n    for (var i = 0; i < n; i++) {\n      var v = verts[i];\n      quat.vmult(v, v);\n    } // Rotate face normals\n\n\n    for (var i = 0; i < this.faceNormals.length; i++) {\n      var v = this.faceNormals[i];\n      quat.vmult(v, v);\n    }\n    /*\n    // Rotate edges\n    for(var i=0; i<this.uniqueEdges.length; i++){\n        var v = this.uniqueEdges[i];\n        quat.vmult(v,v);\n    }*/\n\n  } // Apply offset\n\n\n  if (offset) {\n    for (var i = 0; i < n; i++) {\n      var v = verts[i];\n      v.vadd(offset, v);\n    }\n  }\n};\n/**\n * Checks whether p is inside the polyhedra. Must be in local coords. The point lies outside of the convex hull of the other points if and only if the direction of all the vectors from it to those other points are on less than one half of a sphere around it.\n * @method pointIsInside\n * @param  {Vec3} p      A point given in local coordinates\n * @return {Boolean}\n */\n\n\nvar ConvexPolyhedron_pointIsInside = new Vec3();\nvar ConvexPolyhedron_vToP = new Vec3();\nvar ConvexPolyhedron_vToPointInside = new Vec3();\n\nConvexPolyhedron.prototype.pointIsInside = function (p) {\n  var n = this.vertices.length,\n      verts = this.vertices,\n      faces = this.faces,\n      normals = this.faceNormals;\n  var positiveResult = null;\n  var N = this.faces.length;\n  var pointInside = ConvexPolyhedron_pointIsInside;\n  this.getAveragePointLocal(pointInside);\n\n  for (var i = 0; i < N; i++) {\n    var numVertices = this.faces[i].length;\n    var n = normals[i];\n    var v = verts[faces[i][0]]; // We only need one point in the face\n    // This dot product determines which side of the edge the point is\n\n    var vToP = ConvexPolyhedron_vToP;\n    p.vsub(v, vToP);\n    var r1 = n.dot(vToP);\n    var vToPointInside = ConvexPolyhedron_vToPointInside;\n    pointInside.vsub(v, vToPointInside);\n    var r2 = n.dot(vToPointInside);\n\n    if (r1 < 0 && r2 > 0 || r1 > 0 && r2 < 0) {\n      return false; // Encountered some other sign. Exit.\n    } else {}\n  } // If we got here, all dot products were of the same sign.\n\n\n  return positiveResult ? 1 : -1;\n};\n/**\n * Get max and min dot product of a convex hull at position (pos,quat) projected onto an axis. Results are saved in the array maxmin.\n * @static\n * @method project\n * @param {ConvexPolyhedron} hull\n * @param {Vec3} axis\n * @param {Vec3} pos\n * @param {Quaternion} quat\n * @param {array} result result[0] and result[1] will be set to maximum and minimum, respectively.\n */\n\n\nvar project_worldVertex = new Vec3();\nvar project_localAxis = new Vec3();\nvar project_localOrigin = new Vec3();\n\nConvexPolyhedron.project = function (hull, axis, pos, quat, result) {\n  var n = hull.vertices.length,\n      worldVertex = project_worldVertex,\n      localAxis = project_localAxis,\n      max = 0,\n      min = 0,\n      localOrigin = project_localOrigin,\n      vs = hull.vertices;\n  localOrigin.setZero(); // Transform the axis to local\n\n  Transform.vectorToLocalFrame(pos, quat, axis, localAxis);\n  Transform.pointToLocalFrame(pos, quat, localOrigin, localOrigin);\n  var add = localOrigin.dot(localAxis);\n  min = max = vs[0].dot(localAxis);\n\n  for (var i = 1; i < n; i++) {\n    var val = vs[i].dot(localAxis);\n\n    if (val > max) {\n      max = val;\n    }\n\n    if (val < min) {\n      min = val;\n    }\n  }\n\n  min -= add;\n  max -= add;\n\n  if (min > max) {\n    // Inconsistent - swap\n    var temp = min;\n    min = max;\n    max = temp;\n  } // Output\n\n\n  result[0] = max;\n  result[1] = min;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/shapes/ConvexPolyhedron.js?");

/***/ }),

/***/ "./node_modules/cannon/src/shapes/Cylinder.js":
/*!****************************************************!*\
  !*** ./node_modules/cannon/src/shapes/Cylinder.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Cylinder;\n\nvar Shape = __webpack_require__(/*! ./Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Quaternion = __webpack_require__(/*! ../math/Quaternion */ \"./node_modules/cannon/src/math/Quaternion.js\");\n\nvar ConvexPolyhedron = __webpack_require__(/*! ./ConvexPolyhedron */ \"./node_modules/cannon/src/shapes/ConvexPolyhedron.js\");\n/**\n * @class Cylinder\n * @constructor\n * @extends ConvexPolyhedron\n * @author schteppe / https://github.com/schteppe\n * @param {Number} radiusTop\n * @param {Number} radiusBottom\n * @param {Number} height\n * @param {Number} numSegments The number of segments to build the cylinder out of\n */\n\n\nfunction Cylinder(radiusTop, radiusBottom, height, numSegments) {\n  var N = numSegments,\n      verts = [],\n      axes = [],\n      faces = [],\n      bottomface = [],\n      topface = [],\n      cos = Math.cos,\n      sin = Math.sin; // First bottom point\n\n  verts.push(new Vec3(radiusBottom * cos(0), radiusBottom * sin(0), -height * 0.5));\n  bottomface.push(0); // First top point\n\n  verts.push(new Vec3(radiusTop * cos(0), radiusTop * sin(0), height * 0.5));\n  topface.push(1);\n\n  for (var i = 0; i < N; i++) {\n    var theta = 2 * Math.PI / N * (i + 1);\n    var thetaN = 2 * Math.PI / N * (i + 0.5);\n\n    if (i < N - 1) {\n      // Bottom\n      verts.push(new Vec3(radiusBottom * cos(theta), radiusBottom * sin(theta), -height * 0.5));\n      bottomface.push(2 * i + 2); // Top\n\n      verts.push(new Vec3(radiusTop * cos(theta), radiusTop * sin(theta), height * 0.5));\n      topface.push(2 * i + 3); // Face\n\n      faces.push([2 * i + 2, 2 * i + 3, 2 * i + 1, 2 * i]);\n    } else {\n      faces.push([0, 1, 2 * i + 1, 2 * i]); // Connect\n    } // Axis: we can cut off half of them if we have even number of segments\n\n\n    if (N % 2 === 1 || i < N / 2) {\n      axes.push(new Vec3(cos(thetaN), sin(thetaN), 0));\n    }\n  }\n\n  faces.push(topface);\n  axes.push(new Vec3(0, 0, 1)); // Reorder bottom face\n\n  var temp = [];\n\n  for (var i = 0; i < bottomface.length; i++) {\n    temp.push(bottomface[bottomface.length - i - 1]);\n  }\n\n  faces.push(temp);\n  this.type = Shape.types.CONVEXPOLYHEDRON;\n  ConvexPolyhedron.call(this, verts, faces, axes);\n}\n\nCylinder.prototype = new ConvexPolyhedron();\n\n//# sourceURL=webpack:///./node_modules/cannon/src/shapes/Cylinder.js?");

/***/ }),

/***/ "./node_modules/cannon/src/shapes/Heightfield.js":
/*!*******************************************************!*\
  !*** ./node_modules/cannon/src/shapes/Heightfield.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Shape = __webpack_require__(/*! ./Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar ConvexPolyhedron = __webpack_require__(/*! ./ConvexPolyhedron */ \"./node_modules/cannon/src/shapes/ConvexPolyhedron.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Utils = __webpack_require__(/*! ../utils/Utils */ \"./node_modules/cannon/src/utils/Utils.js\");\n\nmodule.exports = Heightfield;\n/**\n * Heightfield shape class. Height data is given as an array. These data points are spread out evenly with a given distance.\n * @class Heightfield\n * @extends Shape\n * @constructor\n * @param {Array} data An array of Y values that will be used to construct the terrain.\n * @param {object} options\n * @param {Number} [options.minValue] Minimum value of the data points in the data array. Will be computed automatically if not given.\n * @param {Number} [options.maxValue] Maximum value.\n * @param {Number} [options.elementSize=0.1] World spacing between the data points in X direction.\n * @todo Should be possible to use along all axes, not just y\n * @todo should be possible to scale along all axes\n *\n * @example\n *     // Generate some height data (y-values).\n *     var data = [];\n *     for(var i = 0; i < 1000; i++){\n *         var y = 0.5 * Math.cos(0.2 * i);\n *         data.push(y);\n *     }\n *\n *     // Create the heightfield shape\n *     var heightfieldShape = new Heightfield(data, {\n *         elementSize: 1 // Distance between the data points in X and Y directions\n *     });\n *     var heightfieldBody = new Body();\n *     heightfieldBody.addShape(heightfieldShape);\n *     world.addBody(heightfieldBody);\n */\n\nfunction Heightfield(data, options) {\n  options = Utils.defaults(options, {\n    maxValue: null,\n    minValue: null,\n    elementSize: 1\n  });\n  /**\n   * An array of numbers, or height values, that are spread out along the x axis.\n   * @property {array} data\n   */\n\n  this.data = data;\n  /**\n   * Max value of the data\n   * @property {number} maxValue\n   */\n\n  this.maxValue = options.maxValue;\n  /**\n   * Max value of the data\n   * @property {number} minValue\n   */\n\n  this.minValue = options.minValue;\n  /**\n   * The width of each element\n   * @property {number} elementSize\n   * @todo elementSizeX and Y\n   */\n\n  this.elementSize = options.elementSize;\n\n  if (options.minValue === null) {\n    this.updateMinValue();\n  }\n\n  if (options.maxValue === null) {\n    this.updateMaxValue();\n  }\n\n  this.cacheEnabled = true;\n  Shape.call(this);\n  this.pillarConvex = new ConvexPolyhedron();\n  this.pillarOffset = new Vec3();\n  this.type = Shape.types.HEIGHTFIELD;\n  this.updateBoundingSphereRadius(); // \"i_j_isUpper\" => { convex: ..., offset: ... }\n  // for example:\n  // _cachedPillars[\"0_2_1\"]\n\n  this._cachedPillars = {};\n}\n\nHeightfield.prototype = new Shape();\n/**\n * Call whenever you change the data array.\n * @method update\n */\n\nHeightfield.prototype.update = function () {\n  this._cachedPillars = {};\n};\n/**\n * Update the .minValue property\n * @method updateMinValue\n */\n\n\nHeightfield.prototype.updateMinValue = function () {\n  var data = this.data;\n  var minValue = data[0][0];\n\n  for (var i = 0; i !== data.length; i++) {\n    for (var j = 0; j !== data[i].length; j++) {\n      var v = data[i][j];\n\n      if (v < minValue) {\n        minValue = v;\n      }\n    }\n  }\n\n  this.minValue = minValue;\n};\n/**\n * Update the .maxValue property\n * @method updateMaxValue\n */\n\n\nHeightfield.prototype.updateMaxValue = function () {\n  var data = this.data;\n  var maxValue = data[0][0];\n\n  for (var i = 0; i !== data.length; i++) {\n    for (var j = 0; j !== data[i].length; j++) {\n      var v = data[i][j];\n\n      if (v > maxValue) {\n        maxValue = v;\n      }\n    }\n  }\n\n  this.maxValue = maxValue;\n};\n/**\n * Set the height value at an index. Don't forget to update maxValue and minValue after you're done.\n * @method setHeightValueAtIndex\n * @param {integer} xi\n * @param {integer} yi\n * @param {number} value\n */\n\n\nHeightfield.prototype.setHeightValueAtIndex = function (xi, yi, value) {\n  var data = this.data;\n  data[xi][yi] = value; // Invalidate cache\n\n  this.clearCachedConvexTrianglePillar(xi, yi, false);\n\n  if (xi > 0) {\n    this.clearCachedConvexTrianglePillar(xi - 1, yi, true);\n    this.clearCachedConvexTrianglePillar(xi - 1, yi, false);\n  }\n\n  if (yi > 0) {\n    this.clearCachedConvexTrianglePillar(xi, yi - 1, true);\n    this.clearCachedConvexTrianglePillar(xi, yi - 1, false);\n  }\n\n  if (yi > 0 && xi > 0) {\n    this.clearCachedConvexTrianglePillar(xi - 1, yi - 1, true);\n  }\n};\n/**\n * Get max/min in a rectangle in the matrix data\n * @method getRectMinMax\n * @param  {integer} iMinX\n * @param  {integer} iMinY\n * @param  {integer} iMaxX\n * @param  {integer} iMaxY\n * @param  {array} [result] An array to store the results in.\n * @return {array} The result array, if it was passed in. Minimum will be at position 0 and max at 1.\n */\n\n\nHeightfield.prototype.getRectMinMax = function (iMinX, iMinY, iMaxX, iMaxY, result) {\n  result = result || []; // Get max and min of the data\n\n  var data = this.data,\n      max = this.minValue; // Set first value\n\n  for (var i = iMinX; i <= iMaxX; i++) {\n    for (var j = iMinY; j <= iMaxY; j++) {\n      var height = data[i][j];\n\n      if (height > max) {\n        max = height;\n      }\n    }\n  }\n\n  result[0] = this.minValue;\n  result[1] = max;\n};\n/**\n * Get the index of a local position on the heightfield. The indexes indicate the rectangles, so if your terrain is made of N x N height data points, you will have rectangle indexes ranging from 0 to N-1.\n * @method getIndexOfPosition\n * @param  {number} x\n * @param  {number} y\n * @param  {array} result Two-element array\n * @param  {boolean} clamp If the position should be clamped to the heightfield edge.\n * @return {boolean}\n */\n\n\nHeightfield.prototype.getIndexOfPosition = function (x, y, result, clamp) {\n  // Get the index of the data points to test against\n  var w = this.elementSize;\n  var data = this.data;\n  var xi = Math.floor(x / w);\n  var yi = Math.floor(y / w);\n  result[0] = xi;\n  result[1] = yi;\n\n  if (clamp) {\n    // Clamp index to edges\n    if (xi < 0) {\n      xi = 0;\n    }\n\n    if (yi < 0) {\n      yi = 0;\n    }\n\n    if (xi >= data.length - 1) {\n      xi = data.length - 1;\n    }\n\n    if (yi >= data[0].length - 1) {\n      yi = data[0].length - 1;\n    }\n  } // Bail out if we are out of the terrain\n\n\n  if (xi < 0 || yi < 0 || xi >= data.length - 1 || yi >= data[0].length - 1) {\n    return false;\n  }\n\n  return true;\n};\n\nvar getHeightAt_idx = [];\nvar getHeightAt_weights = new Vec3();\nvar getHeightAt_a = new Vec3();\nvar getHeightAt_b = new Vec3();\nvar getHeightAt_c = new Vec3();\n\nHeightfield.prototype.getTriangleAt = function (x, y, edgeClamp, a, b, c) {\n  var idx = getHeightAt_idx;\n  this.getIndexOfPosition(x, y, idx, edgeClamp);\n  var xi = idx[0];\n  var yi = idx[1];\n  var data = this.data;\n\n  if (edgeClamp) {\n    xi = Math.min(data.length - 2, Math.max(0, xi));\n    yi = Math.min(data[0].length - 2, Math.max(0, yi));\n  }\n\n  var elementSize = this.elementSize;\n  var lowerDist2 = Math.pow(x / elementSize - xi, 2) + Math.pow(y / elementSize - yi, 2);\n  var upperDist2 = Math.pow(x / elementSize - (xi + 1), 2) + Math.pow(y / elementSize - (yi + 1), 2);\n  var upper = lowerDist2 > upperDist2;\n  this.getTriangle(xi, yi, upper, a, b, c);\n  return upper;\n};\n\nvar getNormalAt_a = new Vec3();\nvar getNormalAt_b = new Vec3();\nvar getNormalAt_c = new Vec3();\nvar getNormalAt_e0 = new Vec3();\nvar getNormalAt_e1 = new Vec3();\n\nHeightfield.prototype.getNormalAt = function (x, y, edgeClamp, result) {\n  var a = getNormalAt_a;\n  var b = getNormalAt_b;\n  var c = getNormalAt_c;\n  var e0 = getNormalAt_e0;\n  var e1 = getNormalAt_e1;\n  this.getTriangleAt(x, y, edgeClamp, a, b, c);\n  b.vsub(a, e0);\n  c.vsub(a, e1);\n  e0.cross(e1, result);\n  result.normalize();\n};\n/**\n * Get an AABB of a square in the heightfield\n * @param  {number} xi\n * @param  {number} yi\n * @param  {AABB} result\n */\n\n\nHeightfield.prototype.getAabbAtIndex = function (xi, yi, result) {\n  var data = this.data;\n  var elementSize = this.elementSize;\n  result.lowerBound.set(xi * elementSize, yi * elementSize, data[xi][yi]);\n  result.upperBound.set((xi + 1) * elementSize, (yi + 1) * elementSize, data[xi + 1][yi + 1]);\n};\n/**\n * Get the height in the heightfield at a given position\n * @param  {number} x\n * @param  {number} y\n * @param  {boolean} edgeClamp\n * @return {number}\n */\n\n\nHeightfield.prototype.getHeightAt = function (x, y, edgeClamp) {\n  var data = this.data;\n  var a = getHeightAt_a;\n  var b = getHeightAt_b;\n  var c = getHeightAt_c;\n  var idx = getHeightAt_idx;\n  this.getIndexOfPosition(x, y, idx, edgeClamp);\n  var xi = idx[0];\n  var yi = idx[1];\n\n  if (edgeClamp) {\n    xi = Math.min(data.length - 2, Math.max(0, xi));\n    yi = Math.min(data[0].length - 2, Math.max(0, yi));\n  }\n\n  var upper = this.getTriangleAt(x, y, edgeClamp, a, b, c);\n  barycentricWeights(x, y, a.x, a.y, b.x, b.y, c.x, c.y, getHeightAt_weights);\n  var w = getHeightAt_weights;\n\n  if (upper) {\n    // Top triangle verts\n    return data[xi + 1][yi + 1] * w.x + data[xi][yi + 1] * w.y + data[xi + 1][yi] * w.z;\n  } else {\n    // Top triangle verts\n    return data[xi][yi] * w.x + data[xi + 1][yi] * w.y + data[xi][yi + 1] * w.z;\n  }\n}; // from https://en.wikipedia.org/wiki/Barycentric_coordinate_system\n\n\nfunction barycentricWeights(x, y, ax, ay, bx, by, cx, cy, result) {\n  result.x = ((by - cy) * (x - cx) + (cx - bx) * (y - cy)) / ((by - cy) * (ax - cx) + (cx - bx) * (ay - cy));\n  result.y = ((cy - ay) * (x - cx) + (ax - cx) * (y - cy)) / ((by - cy) * (ax - cx) + (cx - bx) * (ay - cy));\n  result.z = 1 - result.x - result.y;\n}\n\nHeightfield.prototype.getCacheConvexTrianglePillarKey = function (xi, yi, getUpperTriangle) {\n  return xi + '_' + yi + '_' + (getUpperTriangle ? 1 : 0);\n};\n\nHeightfield.prototype.getCachedConvexTrianglePillar = function (xi, yi, getUpperTriangle) {\n  return this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\n};\n\nHeightfield.prototype.setCachedConvexTrianglePillar = function (xi, yi, getUpperTriangle, convex, offset) {\n  this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)] = {\n    convex: convex,\n    offset: offset\n  };\n};\n\nHeightfield.prototype.clearCachedConvexTrianglePillar = function (xi, yi, getUpperTriangle) {\n  delete this._cachedPillars[this.getCacheConvexTrianglePillarKey(xi, yi, getUpperTriangle)];\n};\n/**\n * Get a triangle from the heightfield\n * @param  {number} xi\n * @param  {number} yi\n * @param  {boolean} upper\n * @param  {Vec3} a\n * @param  {Vec3} b\n * @param  {Vec3} c\n */\n\n\nHeightfield.prototype.getTriangle = function (xi, yi, upper, a, b, c) {\n  var data = this.data;\n  var elementSize = this.elementSize;\n\n  if (upper) {\n    // Top triangle verts\n    a.set((xi + 1) * elementSize, (yi + 1) * elementSize, data[xi + 1][yi + 1]);\n    b.set(xi * elementSize, (yi + 1) * elementSize, data[xi][yi + 1]);\n    c.set((xi + 1) * elementSize, yi * elementSize, data[xi + 1][yi]);\n  } else {\n    // Top triangle verts\n    a.set(xi * elementSize, yi * elementSize, data[xi][yi]);\n    b.set((xi + 1) * elementSize, yi * elementSize, data[xi + 1][yi]);\n    c.set(xi * elementSize, (yi + 1) * elementSize, data[xi][yi + 1]);\n  }\n};\n/**\n * Get a triangle in the terrain in the form of a triangular convex shape.\n * @method getConvexTrianglePillar\n * @param  {integer} i\n * @param  {integer} j\n * @param  {boolean} getUpperTriangle\n */\n\n\nHeightfield.prototype.getConvexTrianglePillar = function (xi, yi, getUpperTriangle) {\n  var result = this.pillarConvex;\n  var offsetResult = this.pillarOffset;\n\n  if (this.cacheEnabled) {\n    var data = this.getCachedConvexTrianglePillar(xi, yi, getUpperTriangle);\n\n    if (data) {\n      this.pillarConvex = data.convex;\n      this.pillarOffset = data.offset;\n      return;\n    }\n\n    result = new ConvexPolyhedron();\n    offsetResult = new Vec3();\n    this.pillarConvex = result;\n    this.pillarOffset = offsetResult;\n  }\n\n  var data = this.data;\n  var elementSize = this.elementSize;\n  var faces = result.faces; // Reuse verts if possible\n\n  result.vertices.length = 6;\n\n  for (var i = 0; i < 6; i++) {\n    if (!result.vertices[i]) {\n      result.vertices[i] = new Vec3();\n    }\n  } // Reuse faces if possible\n\n\n  faces.length = 5;\n\n  for (var i = 0; i < 5; i++) {\n    if (!faces[i]) {\n      faces[i] = [];\n    }\n  }\n\n  var verts = result.vertices;\n  var h = (Math.min(data[xi][yi], data[xi + 1][yi], data[xi][yi + 1], data[xi + 1][yi + 1]) - this.minValue) / 2 + this.minValue;\n\n  if (!getUpperTriangle) {\n    // Center of the triangle pillar - all polygons are given relative to this one\n    offsetResult.set((xi + 0.25) * elementSize, // sort of center of a triangle\n    (yi + 0.25) * elementSize, h // vertical center\n    ); // Top triangle verts\n\n    verts[0].set(-0.25 * elementSize, -0.25 * elementSize, data[xi][yi] - h);\n    verts[1].set(0.75 * elementSize, -0.25 * elementSize, data[xi + 1][yi] - h);\n    verts[2].set(-0.25 * elementSize, 0.75 * elementSize, data[xi][yi + 1] - h); // bottom triangle verts\n\n    verts[3].set(-0.25 * elementSize, -0.25 * elementSize, -h - 1);\n    verts[4].set(0.75 * elementSize, -0.25 * elementSize, -h - 1);\n    verts[5].set(-0.25 * elementSize, 0.75 * elementSize, -h - 1); // top triangle\n\n    faces[0][0] = 0;\n    faces[0][1] = 1;\n    faces[0][2] = 2; // bottom triangle\n\n    faces[1][0] = 5;\n    faces[1][1] = 4;\n    faces[1][2] = 3; // -x facing quad\n\n    faces[2][0] = 0;\n    faces[2][1] = 2;\n    faces[2][2] = 5;\n    faces[2][3] = 3; // -y facing quad\n\n    faces[3][0] = 1;\n    faces[3][1] = 0;\n    faces[3][2] = 3;\n    faces[3][3] = 4; // +xy facing quad\n\n    faces[4][0] = 4;\n    faces[4][1] = 5;\n    faces[4][2] = 2;\n    faces[4][3] = 1;\n  } else {\n    // Center of the triangle pillar - all polygons are given relative to this one\n    offsetResult.set((xi + 0.75) * elementSize, // sort of center of a triangle\n    (yi + 0.75) * elementSize, h // vertical center\n    ); // Top triangle verts\n\n    verts[0].set(0.25 * elementSize, 0.25 * elementSize, data[xi + 1][yi + 1] - h);\n    verts[1].set(-0.75 * elementSize, 0.25 * elementSize, data[xi][yi + 1] - h);\n    verts[2].set(0.25 * elementSize, -0.75 * elementSize, data[xi + 1][yi] - h); // bottom triangle verts\n\n    verts[3].set(0.25 * elementSize, 0.25 * elementSize, -h - 1);\n    verts[4].set(-0.75 * elementSize, 0.25 * elementSize, -h - 1);\n    verts[5].set(0.25 * elementSize, -0.75 * elementSize, -h - 1); // Top triangle\n\n    faces[0][0] = 0;\n    faces[0][1] = 1;\n    faces[0][2] = 2; // bottom triangle\n\n    faces[1][0] = 5;\n    faces[1][1] = 4;\n    faces[1][2] = 3; // +x facing quad\n\n    faces[2][0] = 2;\n    faces[2][1] = 5;\n    faces[2][2] = 3;\n    faces[2][3] = 0; // +y facing quad\n\n    faces[3][0] = 3;\n    faces[3][1] = 4;\n    faces[3][2] = 1;\n    faces[3][3] = 0; // -xy facing quad\n\n    faces[4][0] = 1;\n    faces[4][1] = 4;\n    faces[4][2] = 5;\n    faces[4][3] = 2;\n  }\n\n  result.computeNormals();\n  result.computeEdges();\n  result.updateBoundingSphereRadius();\n  this.setCachedConvexTrianglePillar(xi, yi, getUpperTriangle, result, offsetResult);\n};\n\nHeightfield.prototype.calculateLocalInertia = function (mass, target) {\n  target = target || new Vec3();\n  target.set(0, 0, 0);\n  return target;\n};\n\nHeightfield.prototype.volume = function () {\n  return Number.MAX_VALUE; // The terrain is infinite\n};\n\nHeightfield.prototype.calculateWorldAABB = function (pos, quat, min, max) {\n  // TODO: do it properly\n  min.set(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n  max.set(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n};\n\nHeightfield.prototype.updateBoundingSphereRadius = function () {\n  // Use the bounding box of the min/max values\n  var data = this.data,\n      s = this.elementSize;\n  this.boundingSphereRadius = new Vec3(data.length * s, data[0].length * s, Math.max(Math.abs(this.maxValue), Math.abs(this.minValue))).norm();\n};\n/**\n * Sets the height values from an image. Currently only supported in browser.\n * @method setHeightsFromImage\n * @param {Image} image\n * @param {Vec3} scale\n */\n\n\nHeightfield.prototype.setHeightsFromImage = function (image, scale) {\n  var canvas = document.createElement('canvas');\n  canvas.width = image.width;\n  canvas.height = image.height;\n  var context = canvas.getContext('2d');\n  context.drawImage(image, 0, 0);\n  var imageData = context.getImageData(0, 0, image.width, image.height);\n  var matrix = this.data;\n  matrix.length = 0;\n  this.elementSize = Math.abs(scale.x) / imageData.width;\n\n  for (var i = 0; i < imageData.height; i++) {\n    var row = [];\n\n    for (var j = 0; j < imageData.width; j++) {\n      var a = imageData.data[(i * imageData.height + j) * 4];\n      var b = imageData.data[(i * imageData.height + j) * 4 + 1];\n      var c = imageData.data[(i * imageData.height + j) * 4 + 2];\n      var height = (a + b + c) / 4 / 255 * scale.z;\n\n      if (scale.x < 0) {\n        row.push(height);\n      } else {\n        row.unshift(height);\n      }\n    }\n\n    if (scale.y < 0) {\n      matrix.unshift(row);\n    } else {\n      matrix.push(row);\n    }\n  }\n\n  this.updateMaxValue();\n  this.updateMinValue();\n  this.update();\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/shapes/Heightfield.js?");

/***/ }),

/***/ "./node_modules/cannon/src/shapes/Particle.js":
/*!****************************************************!*\
  !*** ./node_modules/cannon/src/shapes/Particle.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Particle;\n\nvar Shape = __webpack_require__(/*! ./Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n/**\n * Particle shape.\n * @class Particle\n * @constructor\n * @author schteppe\n * @extends Shape\n */\n\n\nfunction Particle() {\n  Shape.call(this);\n  this.type = Shape.types.PARTICLE;\n}\n\nParticle.prototype = new Shape();\nParticle.prototype.constructor = Particle;\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n * @return {Vec3}\n */\n\nParticle.prototype.calculateLocalInertia = function (mass, target) {\n  target = target || new Vec3();\n  target.set(0, 0, 0);\n  return target;\n};\n\nParticle.prototype.volume = function () {\n  return 0;\n};\n\nParticle.prototype.updateBoundingSphereRadius = function () {\n  this.boundingSphereRadius = 0;\n};\n\nParticle.prototype.calculateWorldAABB = function (pos, quat, min, max) {\n  // Get each axis max\n  min.copy(pos);\n  max.copy(pos);\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/shapes/Particle.js?");

/***/ }),

/***/ "./node_modules/cannon/src/shapes/Plane.js":
/*!*************************************************!*\
  !*** ./node_modules/cannon/src/shapes/Plane.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Plane;\n\nvar Shape = __webpack_require__(/*! ./Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n/**\n * A plane, facing in the Z direction. The plane has its surface at z=0 and everything below z=0 is assumed to be solid plane. To make the plane face in some other direction than z, you must put it inside a RigidBody and rotate that body. See the demos.\n * @class Plane\n * @constructor\n * @extends Shape\n * @author schteppe\n */\n\n\nfunction Plane() {\n  Shape.call(this);\n  this.type = Shape.types.PLANE; // World oriented normal\n\n  this.worldNormal = new Vec3();\n  this.worldNormalNeedsUpdate = true;\n  this.boundingSphereRadius = Number.MAX_VALUE;\n}\n\nPlane.prototype = new Shape();\nPlane.prototype.constructor = Plane;\n\nPlane.prototype.computeWorldNormal = function (quat) {\n  var n = this.worldNormal;\n  n.set(0, 0, 1);\n  quat.vmult(n, n);\n  this.worldNormalNeedsUpdate = false;\n};\n\nPlane.prototype.calculateLocalInertia = function (mass, target) {\n  target = target || new Vec3();\n  return target;\n};\n\nPlane.prototype.volume = function () {\n  return Number.MAX_VALUE; // The plane is infinite...\n};\n\nvar tempNormal = new Vec3();\n\nPlane.prototype.calculateWorldAABB = function (pos, quat, min, max) {\n  // The plane AABB is infinite, except if the normal is pointing along any axis\n  tempNormal.set(0, 0, 1); // Default plane normal is z\n\n  quat.vmult(tempNormal, tempNormal);\n  var maxVal = Number.MAX_VALUE;\n  min.set(-maxVal, -maxVal, -maxVal);\n  max.set(maxVal, maxVal, maxVal);\n\n  if (tempNormal.x === 1) {\n    max.x = pos.x;\n  }\n\n  if (tempNormal.y === 1) {\n    max.y = pos.y;\n  }\n\n  if (tempNormal.z === 1) {\n    max.z = pos.z;\n  }\n\n  if (tempNormal.x === -1) {\n    min.x = pos.x;\n  }\n\n  if (tempNormal.y === -1) {\n    min.y = pos.y;\n  }\n\n  if (tempNormal.z === -1) {\n    min.z = pos.z;\n  }\n};\n\nPlane.prototype.updateBoundingSphereRadius = function () {\n  this.boundingSphereRadius = Number.MAX_VALUE;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/shapes/Plane.js?");

/***/ }),

/***/ "./node_modules/cannon/src/shapes/Shape.js":
/*!*************************************************!*\
  !*** ./node_modules/cannon/src/shapes/Shape.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Shape;\n\nvar Shape = __webpack_require__(/*! ./Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Quaternion = __webpack_require__(/*! ../math/Quaternion */ \"./node_modules/cannon/src/math/Quaternion.js\");\n\nvar Material = __webpack_require__(/*! ../material/Material */ \"./node_modules/cannon/src/material/Material.js\");\n/**\n * Base class for shapes\n * @class Shape\n * @constructor\n * @author schteppe\n * @todo Should have a mechanism for caching bounding sphere radius instead of calculating it each time\n */\n\n\nfunction Shape() {\n  /**\n   * Identifyer of the Shape.\n   * @property {number} id\n   */\n  this.id = Shape.idCounter++;\n  /**\n   * The type of this shape. Must be set to an int > 0 by subclasses.\n   * @property type\n   * @type {Number}\n   * @see Shape.types\n   */\n\n  this.type = 0;\n  /**\n   * The local bounding sphere radius of this shape.\n   * @property {Number} boundingSphereRadius\n   */\n\n  this.boundingSphereRadius = 0;\n  /**\n   * Whether to produce contact forces when in contact with other bodies. Note that contacts will be generated, but they will be disabled.\n   * @property {boolean} collisionResponse\n   */\n\n  this.collisionResponse = true;\n  /**\n   * @property {Material} material\n   */\n\n  this.material = null;\n  /**\n   * @property {Body} body\n   */\n\n  this.body = null;\n}\n\nShape.prototype.constructor = Shape;\n/**\n * Computes the bounding sphere radius. The result is stored in the property .boundingSphereRadius\n * @method updateBoundingSphereRadius\n */\n\nShape.prototype.updateBoundingSphereRadius = function () {\n  throw \"computeBoundingSphereRadius() not implemented for shape type \" + this.type;\n};\n/**\n * Get the volume of this shape\n * @method volume\n * @return {Number}\n */\n\n\nShape.prototype.volume = function () {\n  throw \"volume() not implemented for shape type \" + this.type;\n};\n/**\n * Calculates the inertia in the local frame for this shape.\n * @method calculateLocalInertia\n * @param {Number} mass\n * @param {Vec3} target\n * @see http://en.wikipedia.org/wiki/List_of_moments_of_inertia\n */\n\n\nShape.prototype.calculateLocalInertia = function (mass, target) {\n  throw \"calculateLocalInertia() not implemented for shape type \" + this.type;\n};\n\nShape.idCounter = 0;\n/**\n * The available shape types.\n * @static\n * @property types\n * @type {Object}\n */\n\nShape.types = {\n  SPHERE: 1,\n  PLANE: 2,\n  BOX: 4,\n  COMPOUND: 8,\n  CONVEXPOLYHEDRON: 16,\n  HEIGHTFIELD: 32,\n  PARTICLE: 64,\n  CYLINDER: 128,\n  TRIMESH: 256\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/shapes/Shape.js?");

/***/ }),

/***/ "./node_modules/cannon/src/shapes/Sphere.js":
/*!**************************************************!*\
  !*** ./node_modules/cannon/src/shapes/Sphere.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Sphere;\n\nvar Shape = __webpack_require__(/*! ./Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n/**\n * Spherical shape\n * @class Sphere\n * @constructor\n * @extends Shape\n * @param {Number} radius The radius of the sphere, a non-negative number.\n * @author schteppe / http://github.com/schteppe\n */\n\n\nfunction Sphere(radius) {\n  Shape.call(this);\n  /**\n   * @property {Number} radius\n   */\n\n  this.radius = radius !== undefined ? Number(radius) : 1.0;\n  this.type = Shape.types.SPHERE;\n\n  if (this.radius < 0) {\n    throw new Error('The sphere radius cannot be negative.');\n  }\n\n  this.updateBoundingSphereRadius();\n}\n\nSphere.prototype = new Shape();\nSphere.prototype.constructor = Sphere;\n\nSphere.prototype.calculateLocalInertia = function (mass, target) {\n  target = target || new Vec3();\n  var I = 2.0 * mass * this.radius * this.radius / 5.0;\n  target.x = I;\n  target.y = I;\n  target.z = I;\n  return target;\n};\n\nSphere.prototype.volume = function () {\n  return 4.0 * Math.PI * this.radius / 3.0;\n};\n\nSphere.prototype.updateBoundingSphereRadius = function () {\n  this.boundingSphereRadius = this.radius;\n};\n\nSphere.prototype.calculateWorldAABB = function (pos, quat, min, max) {\n  var r = this.radius;\n  var axes = ['x', 'y', 'z'];\n\n  for (var i = 0; i < axes.length; i++) {\n    var ax = axes[i];\n    min[ax] = pos[ax] - r;\n    max[ax] = pos[ax] + r;\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/shapes/Sphere.js?");

/***/ }),

/***/ "./node_modules/cannon/src/shapes/Trimesh.js":
/*!***************************************************!*\
  !*** ./node_modules/cannon/src/shapes/Trimesh.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Trimesh;\n\nvar Shape = __webpack_require__(/*! ./Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Quaternion = __webpack_require__(/*! ../math/Quaternion */ \"./node_modules/cannon/src/math/Quaternion.js\");\n\nvar Transform = __webpack_require__(/*! ../math/Transform */ \"./node_modules/cannon/src/math/Transform.js\");\n\nvar AABB = __webpack_require__(/*! ../collision/AABB */ \"./node_modules/cannon/src/collision/AABB.js\");\n\nvar Octree = __webpack_require__(/*! ../utils/Octree */ \"./node_modules/cannon/src/utils/Octree.js\");\n/**\n * @class Trimesh\n * @constructor\n * @param {array} vertices\n * @param {array} indices\n * @extends Shape\n * @example\n *     // How to make a mesh with a single triangle\n *     var vertices = [\n *         0, 0, 0, // vertex 0\n *         1, 0, 0, // vertex 1\n *         0, 1, 0  // vertex 2\n *     ];\n *     var indices = [\n *         0, 1, 2  // triangle 0\n *     ];\n *     var trimeshShape = new Trimesh(vertices, indices);\n */\n\n\nfunction Trimesh(vertices, indices) {\n  Shape.call(this);\n  this.type = Shape.types.TRIMESH;\n  /**\n   * @property vertices\n   * @type {Array}\n   */\n\n  this.vertices = new Float32Array(vertices);\n  /**\n   * Array of integers, indicating which vertices each triangle consists of. The length of this array is thus 3 times the number of triangles.\n   * @property indices\n   * @type {Array}\n   */\n\n  this.indices = new Int16Array(indices);\n  /**\n   * The normals data.\n   * @property normals\n   * @type {Array}\n   */\n\n  this.normals = new Float32Array(indices.length);\n  /**\n   * The local AABB of the mesh.\n   * @property aabb\n   * @type {Array}\n   */\n\n  this.aabb = new AABB();\n  /**\n   * References to vertex pairs, making up all unique edges in the trimesh.\n   * @property {array} edges\n   */\n\n  this.edges = null;\n  /**\n   * Local scaling of the mesh. Use .setScale() to set it.\n   * @property {Vec3} scale\n   */\n\n  this.scale = new Vec3(1, 1, 1);\n  /**\n   * The indexed triangles. Use .updateTree() to update it.\n   * @property {Octree} tree\n   */\n\n  this.tree = new Octree();\n  this.updateEdges();\n  this.updateNormals();\n  this.updateAABB();\n  this.updateBoundingSphereRadius();\n  this.updateTree();\n}\n\nTrimesh.prototype = new Shape();\nTrimesh.prototype.constructor = Trimesh;\nvar computeNormals_n = new Vec3();\n/**\n * @method updateTree\n */\n\nTrimesh.prototype.updateTree = function () {\n  var tree = this.tree;\n  tree.reset();\n  tree.aabb.copy(this.aabb);\n  var scale = this.scale; // The local mesh AABB is scaled, but the octree AABB should be unscaled\n\n  tree.aabb.lowerBound.x *= 1 / scale.x;\n  tree.aabb.lowerBound.y *= 1 / scale.y;\n  tree.aabb.lowerBound.z *= 1 / scale.z;\n  tree.aabb.upperBound.x *= 1 / scale.x;\n  tree.aabb.upperBound.y *= 1 / scale.y;\n  tree.aabb.upperBound.z *= 1 / scale.z; // Insert all triangles\n\n  var triangleAABB = new AABB();\n  var a = new Vec3();\n  var b = new Vec3();\n  var c = new Vec3();\n  var points = [a, b, c];\n\n  for (var i = 0; i < this.indices.length / 3; i++) {\n    //this.getTriangleVertices(i, a, b, c);\n    // Get unscaled triangle verts\n    var i3 = i * 3;\n\n    this._getUnscaledVertex(this.indices[i3], a);\n\n    this._getUnscaledVertex(this.indices[i3 + 1], b);\n\n    this._getUnscaledVertex(this.indices[i3 + 2], c);\n\n    triangleAABB.setFromPoints(points);\n    tree.insert(triangleAABB, i);\n  }\n\n  tree.removeEmptyNodes();\n};\n\nvar unscaledAABB = new AABB();\n/**\n * Get triangles in a local AABB from the trimesh.\n * @method getTrianglesInAABB\n * @param  {AABB} aabb\n * @param  {array} result An array of integers, referencing the queried triangles.\n */\n\nTrimesh.prototype.getTrianglesInAABB = function (aabb, result) {\n  unscaledAABB.copy(aabb); // Scale it to local\n\n  var scale = this.scale;\n  var isx = scale.x;\n  var isy = scale.y;\n  var isz = scale.z;\n  var l = unscaledAABB.lowerBound;\n  var u = unscaledAABB.upperBound;\n  l.x /= isx;\n  l.y /= isy;\n  l.z /= isz;\n  u.x /= isx;\n  u.y /= isy;\n  u.z /= isz;\n  return this.tree.aabbQuery(unscaledAABB, result);\n};\n/**\n * @method setScale\n * @param {Vec3} scale\n */\n\n\nTrimesh.prototype.setScale = function (scale) {\n  var wasUniform = this.scale.x === this.scale.y === this.scale.z;\n  var isUniform = scale.x === scale.y === scale.z;\n\n  if (!(wasUniform && isUniform)) {\n    // Non-uniform scaling. Need to update normals.\n    this.updateNormals();\n  }\n\n  this.scale.copy(scale);\n  this.updateAABB();\n  this.updateBoundingSphereRadius();\n};\n/**\n * Compute the normals of the faces. Will save in the .normals array.\n * @method updateNormals\n */\n\n\nTrimesh.prototype.updateNormals = function () {\n  var n = computeNormals_n; // Generate normals\n\n  var normals = this.normals;\n\n  for (var i = 0; i < this.indices.length / 3; i++) {\n    var i3 = i * 3;\n    var a = this.indices[i3],\n        b = this.indices[i3 + 1],\n        c = this.indices[i3 + 2];\n    this.getVertex(a, va);\n    this.getVertex(b, vb);\n    this.getVertex(c, vc);\n    Trimesh.computeNormal(vb, va, vc, n);\n    normals[i3] = n.x;\n    normals[i3 + 1] = n.y;\n    normals[i3 + 2] = n.z;\n  }\n};\n/**\n * Update the .edges property\n * @method updateEdges\n */\n\n\nTrimesh.prototype.updateEdges = function () {\n  var edges = {};\n\n  var add = function (indexA, indexB) {\n    var key = a < b ? a + '_' + b : b + '_' + a;\n    edges[key] = true;\n  };\n\n  for (var i = 0; i < this.indices.length / 3; i++) {\n    var i3 = i * 3;\n    var a = this.indices[i3],\n        b = this.indices[i3 + 1],\n        c = this.indices[i3 + 2];\n    add(a, b);\n    add(b, c);\n    add(c, a);\n  }\n\n  var keys = Object.keys(edges);\n  this.edges = new Int16Array(keys.length * 2);\n\n  for (var i = 0; i < keys.length; i++) {\n    var indices = keys[i].split('_');\n    this.edges[2 * i] = parseInt(indices[0], 10);\n    this.edges[2 * i + 1] = parseInt(indices[1], 10);\n  }\n};\n/**\n * Get an edge vertex\n * @method getEdgeVertex\n * @param  {number} edgeIndex\n * @param  {number} firstOrSecond 0 or 1, depending on which one of the vertices you need.\n * @param  {Vec3} vertexStore Where to store the result\n */\n\n\nTrimesh.prototype.getEdgeVertex = function (edgeIndex, firstOrSecond, vertexStore) {\n  var vertexIndex = this.edges[edgeIndex * 2 + (firstOrSecond ? 1 : 0)];\n  this.getVertex(vertexIndex, vertexStore);\n};\n\nvar getEdgeVector_va = new Vec3();\nvar getEdgeVector_vb = new Vec3();\n/**\n * Get a vector along an edge.\n * @method getEdgeVector\n * @param  {number} edgeIndex\n * @param  {Vec3} vectorStore\n */\n\nTrimesh.prototype.getEdgeVector = function (edgeIndex, vectorStore) {\n  var va = getEdgeVector_va;\n  var vb = getEdgeVector_vb;\n  this.getEdgeVertex(edgeIndex, 0, va);\n  this.getEdgeVertex(edgeIndex, 1, vb);\n  vb.vsub(va, vectorStore);\n};\n/**\n * Get face normal given 3 vertices\n * @static\n * @method computeNormal\n * @param {Vec3} va\n * @param {Vec3} vb\n * @param {Vec3} vc\n * @param {Vec3} target\n */\n\n\nvar cb = new Vec3();\nvar ab = new Vec3();\n\nTrimesh.computeNormal = function (va, vb, vc, target) {\n  vb.vsub(va, ab);\n  vc.vsub(vb, cb);\n  cb.cross(ab, target);\n\n  if (!target.isZero()) {\n    target.normalize();\n  }\n};\n\nvar va = new Vec3();\nvar vb = new Vec3();\nvar vc = new Vec3();\n/**\n * Get vertex i.\n * @method getVertex\n * @param  {number} i\n * @param  {Vec3} out\n * @return {Vec3} The \"out\" vector object\n */\n\nTrimesh.prototype.getVertex = function (i, out) {\n  var scale = this.scale;\n\n  this._getUnscaledVertex(i, out);\n\n  out.x *= scale.x;\n  out.y *= scale.y;\n  out.z *= scale.z;\n  return out;\n};\n/**\n * Get raw vertex i\n * @private\n * @method _getUnscaledVertex\n * @param  {number} i\n * @param  {Vec3} out\n * @return {Vec3} The \"out\" vector object\n */\n\n\nTrimesh.prototype._getUnscaledVertex = function (i, out) {\n  var i3 = i * 3;\n  var vertices = this.vertices;\n  return out.set(vertices[i3], vertices[i3 + 1], vertices[i3 + 2]);\n};\n/**\n * Get a vertex from the trimesh,transformed by the given position and quaternion.\n * @method getWorldVertex\n * @param  {number} i\n * @param  {Vec3} pos\n * @param  {Quaternion} quat\n * @param  {Vec3} out\n * @return {Vec3} The \"out\" vector object\n */\n\n\nTrimesh.prototype.getWorldVertex = function (i, pos, quat, out) {\n  this.getVertex(i, out);\n  Transform.pointToWorldFrame(pos, quat, out, out);\n  return out;\n};\n/**\n * Get the three vertices for triangle i.\n * @method getTriangleVertices\n * @param  {number} i\n * @param  {Vec3} a\n * @param  {Vec3} b\n * @param  {Vec3} c\n */\n\n\nTrimesh.prototype.getTriangleVertices = function (i, a, b, c) {\n  var i3 = i * 3;\n  this.getVertex(this.indices[i3], a);\n  this.getVertex(this.indices[i3 + 1], b);\n  this.getVertex(this.indices[i3 + 2], c);\n};\n/**\n * Compute the normal of triangle i.\n * @method getNormal\n * @param  {Number} i\n * @param  {Vec3} target\n * @return {Vec3} The \"target\" vector object\n */\n\n\nTrimesh.prototype.getNormal = function (i, target) {\n  var i3 = i * 3;\n  return target.set(this.normals[i3], this.normals[i3 + 1], this.normals[i3 + 2]);\n};\n\nvar cli_aabb = new AABB();\n/**\n * @method calculateLocalInertia\n * @param  {Number} mass\n * @param  {Vec3} target\n * @return {Vec3} The \"target\" vector object\n */\n\nTrimesh.prototype.calculateLocalInertia = function (mass, target) {\n  // Approximate with box inertia\n  // Exact inertia calculation is overkill, but see http://geometrictools.com/Documentation/PolyhedralMassProperties.pdf for the correct way to do it\n  this.computeLocalAABB(cli_aabb);\n  var x = cli_aabb.upperBound.x - cli_aabb.lowerBound.x,\n      y = cli_aabb.upperBound.y - cli_aabb.lowerBound.y,\n      z = cli_aabb.upperBound.z - cli_aabb.lowerBound.z;\n  return target.set(1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * z * 2 * z), 1.0 / 12.0 * mass * (2 * x * 2 * x + 2 * z * 2 * z), 1.0 / 12.0 * mass * (2 * y * 2 * y + 2 * x * 2 * x));\n};\n\nvar computeLocalAABB_worldVert = new Vec3();\n/**\n * Compute the local AABB for the trimesh\n * @method computeLocalAABB\n * @param  {AABB} aabb\n */\n\nTrimesh.prototype.computeLocalAABB = function (aabb) {\n  var l = aabb.lowerBound,\n      u = aabb.upperBound,\n      n = this.vertices.length,\n      vertices = this.vertices,\n      v = computeLocalAABB_worldVert;\n  this.getVertex(0, v);\n  l.copy(v);\n  u.copy(v);\n\n  for (var i = 0; i !== n; i++) {\n    this.getVertex(i, v);\n\n    if (v.x < l.x) {\n      l.x = v.x;\n    } else if (v.x > u.x) {\n      u.x = v.x;\n    }\n\n    if (v.y < l.y) {\n      l.y = v.y;\n    } else if (v.y > u.y) {\n      u.y = v.y;\n    }\n\n    if (v.z < l.z) {\n      l.z = v.z;\n    } else if (v.z > u.z) {\n      u.z = v.z;\n    }\n  }\n};\n/**\n * Update the .aabb property\n * @method updateAABB\n */\n\n\nTrimesh.prototype.updateAABB = function () {\n  this.computeLocalAABB(this.aabb);\n};\n/**\n * Will update the .boundingSphereRadius property\n * @method updateBoundingSphereRadius\n */\n\n\nTrimesh.prototype.updateBoundingSphereRadius = function () {\n  // Assume points are distributed with local (0,0,0) as center\n  var max2 = 0;\n  var vertices = this.vertices;\n  var v = new Vec3();\n\n  for (var i = 0, N = vertices.length / 3; i !== N; i++) {\n    this.getVertex(i, v);\n    var norm2 = v.norm2();\n\n    if (norm2 > max2) {\n      max2 = norm2;\n    }\n  }\n\n  this.boundingSphereRadius = Math.sqrt(max2);\n};\n\nvar tempWorldVertex = new Vec3();\nvar calculateWorldAABB_frame = new Transform();\nvar calculateWorldAABB_aabb = new AABB();\n/**\n * @method calculateWorldAABB\n * @param {Vec3}        pos\n * @param {Quaternion}  quat\n * @param {Vec3}        min\n * @param {Vec3}        max\n */\n\nTrimesh.prototype.calculateWorldAABB = function (pos, quat, min, max) {\n  /*\n  var n = this.vertices.length / 3,\n      verts = this.vertices;\n  var minx,miny,minz,maxx,maxy,maxz;\n   var v = tempWorldVertex;\n  for(var i=0; i<n; i++){\n      this.getVertex(i, v);\n      quat.vmult(v, v);\n      pos.vadd(v, v);\n      if (v.x < minx || minx===undefined){\n          minx = v.x;\n      } else if(v.x > maxx || maxx===undefined){\n          maxx = v.x;\n      }\n       if (v.y < miny || miny===undefined){\n          miny = v.y;\n      } else if(v.y > maxy || maxy===undefined){\n          maxy = v.y;\n      }\n       if (v.z < minz || minz===undefined){\n          minz = v.z;\n      } else if(v.z > maxz || maxz===undefined){\n          maxz = v.z;\n      }\n  }\n  min.set(minx,miny,minz);\n  max.set(maxx,maxy,maxz);\n  */\n  // Faster approximation using local AABB\n  var frame = calculateWorldAABB_frame;\n  var result = calculateWorldAABB_aabb;\n  frame.position = pos;\n  frame.quaternion = quat;\n  this.aabb.toWorldFrame(frame, result);\n  min.copy(result.lowerBound);\n  max.copy(result.upperBound);\n};\n/**\n * Get approximate volume\n * @method volume\n * @return {Number}\n */\n\n\nTrimesh.prototype.volume = function () {\n  return 4.0 * Math.PI * this.boundingSphereRadius / 3.0;\n};\n/**\n * Create a Trimesh instance, shaped as a torus.\n * @static\n * @method createTorus\n * @param  {number} [radius=1]\n * @param  {number} [tube=0.5]\n * @param  {number} [radialSegments=8]\n * @param  {number} [tubularSegments=6]\n * @param  {number} [arc=6.283185307179586]\n * @return {Trimesh} A torus\n */\n\n\nTrimesh.createTorus = function (radius, tube, radialSegments, tubularSegments, arc) {\n  radius = radius || 1;\n  tube = tube || 0.5;\n  radialSegments = radialSegments || 8;\n  tubularSegments = tubularSegments || 6;\n  arc = arc || Math.PI * 2;\n  var vertices = [];\n  var indices = [];\n\n  for (var j = 0; j <= radialSegments; j++) {\n    for (var i = 0; i <= tubularSegments; i++) {\n      var u = i / tubularSegments * arc;\n      var v = j / radialSegments * Math.PI * 2;\n      var x = (radius + tube * Math.cos(v)) * Math.cos(u);\n      var y = (radius + tube * Math.cos(v)) * Math.sin(u);\n      var z = tube * Math.sin(v);\n      vertices.push(x, y, z);\n    }\n  }\n\n  for (var j = 1; j <= radialSegments; j++) {\n    for (var i = 1; i <= tubularSegments; i++) {\n      var a = (tubularSegments + 1) * j + i - 1;\n      var b = (tubularSegments + 1) * (j - 1) + i - 1;\n      var c = (tubularSegments + 1) * (j - 1) + i;\n      var d = (tubularSegments + 1) * j + i;\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  }\n\n  return new Trimesh(vertices, indices);\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/shapes/Trimesh.js?");

/***/ }),

/***/ "./node_modules/cannon/src/solver/GSSolver.js":
/*!****************************************************!*\
  !*** ./node_modules/cannon/src/solver/GSSolver.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = GSSolver;\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Quaternion = __webpack_require__(/*! ../math/Quaternion */ \"./node_modules/cannon/src/math/Quaternion.js\");\n\nvar Solver = __webpack_require__(/*! ./Solver */ \"./node_modules/cannon/src/solver/Solver.js\");\n/**\n * Constraint equation Gauss-Seidel solver.\n * @class GSSolver\n * @constructor\n * @todo The spook parameters should be specified for each constraint, not globally.\n * @author schteppe / https://github.com/schteppe\n * @see https://www8.cs.umu.se/kurser/5DV058/VT09/lectures/spooknotes.pdf\n * @extends Solver\n */\n\n\nfunction GSSolver() {\n  Solver.call(this);\n  /**\n   * The number of solver iterations determines quality of the constraints in the world. The more iterations, the more correct simulation. More iterations need more computations though. If you have a large gravity force in your world, you will need more iterations.\n   * @property iterations\n   * @type {Number}\n   * @todo write more about solver and iterations in the wiki\n   */\n\n  this.iterations = 10;\n  /**\n   * When tolerance is reached, the system is assumed to be converged.\n   * @property tolerance\n   * @type {Number}\n   */\n\n  this.tolerance = 1e-7;\n}\n\nGSSolver.prototype = new Solver();\nvar GSSolver_solve_lambda = []; // Just temporary number holders that we want to reuse each solve.\n\nvar GSSolver_solve_invCs = [];\nvar GSSolver_solve_Bs = [];\n\nGSSolver.prototype.solve = function (dt, world) {\n  var iter = 0,\n      maxIter = this.iterations,\n      tolSquared = this.tolerance * this.tolerance,\n      equations = this.equations,\n      Neq = equations.length,\n      bodies = world.bodies,\n      Nbodies = bodies.length,\n      h = dt,\n      q,\n      B,\n      invC,\n      deltalambda,\n      deltalambdaTot,\n      GWlambda,\n      lambdaj; // Update solve mass\n\n  if (Neq !== 0) {\n    for (var i = 0; i !== Nbodies; i++) {\n      bodies[i].updateSolveMassProperties();\n    }\n  } // Things that does not change during iteration can be computed once\n\n\n  var invCs = GSSolver_solve_invCs,\n      Bs = GSSolver_solve_Bs,\n      lambda = GSSolver_solve_lambda;\n  invCs.length = Neq;\n  Bs.length = Neq;\n  lambda.length = Neq;\n\n  for (var i = 0; i !== Neq; i++) {\n    var c = equations[i];\n    lambda[i] = 0.0;\n    Bs[i] = c.computeB(h);\n    invCs[i] = 1.0 / c.computeC();\n  }\n\n  if (Neq !== 0) {\n    // Reset vlambda\n    for (var i = 0; i !== Nbodies; i++) {\n      var b = bodies[i],\n          vlambda = b.vlambda,\n          wlambda = b.wlambda;\n      vlambda.set(0, 0, 0);\n      wlambda.set(0, 0, 0);\n    } // Iterate over equations\n\n\n    for (iter = 0; iter !== maxIter; iter++) {\n      // Accumulate the total error for each iteration.\n      deltalambdaTot = 0.0;\n\n      for (var j = 0; j !== Neq; j++) {\n        var c = equations[j]; // Compute iteration\n\n        B = Bs[j];\n        invC = invCs[j];\n        lambdaj = lambda[j];\n        GWlambda = c.computeGWlambda();\n        deltalambda = invC * (B - GWlambda - c.eps * lambdaj); // Clamp if we are not within the min/max interval\n\n        if (lambdaj + deltalambda < c.minForce) {\n          deltalambda = c.minForce - lambdaj;\n        } else if (lambdaj + deltalambda > c.maxForce) {\n          deltalambda = c.maxForce - lambdaj;\n        }\n\n        lambda[j] += deltalambda;\n        deltalambdaTot += deltalambda > 0.0 ? deltalambda : -deltalambda; // abs(deltalambda)\n\n        c.addToWlambda(deltalambda);\n      } // If the total error is small enough - stop iterate\n\n\n      if (deltalambdaTot * deltalambdaTot < tolSquared) {\n        break;\n      }\n    } // Add result to velocity\n\n\n    for (var i = 0; i !== Nbodies; i++) {\n      var b = bodies[i],\n          v = b.velocity,\n          w = b.angularVelocity;\n      b.vlambda.vmul(b.linearFactor, b.vlambda);\n      v.vadd(b.vlambda, v);\n      b.wlambda.vmul(b.angularFactor, b.wlambda);\n      w.vadd(b.wlambda, w);\n    } // Set the .multiplier property of each equation\n\n\n    var l = equations.length;\n    var invDt = 1 / h;\n\n    while (l--) {\n      equations[l].multiplier = lambda[l] * invDt;\n    }\n  }\n\n  return iter;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/solver/GSSolver.js?");

/***/ }),

/***/ "./node_modules/cannon/src/solver/Solver.js":
/*!**************************************************!*\
  !*** ./node_modules/cannon/src/solver/Solver.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = Solver;\n/**\n * Constraint equation solver base class.\n * @class Solver\n * @constructor\n * @author schteppe / https://github.com/schteppe\n */\n\nfunction Solver() {\n  /**\n   * All equations to be solved\n   * @property {Array} equations\n   */\n  this.equations = [];\n}\n/**\n * Should be implemented in subclasses!\n * @method solve\n * @param  {Number} dt\n * @param  {World} world\n */\n\n\nSolver.prototype.solve = function (dt, world) {\n  // Should return the number of iterations done!\n  return 0;\n};\n/**\n * Add an equation\n * @method addEquation\n * @param {Equation} eq\n */\n\n\nSolver.prototype.addEquation = function (eq) {\n  if (eq.enabled) {\n    this.equations.push(eq);\n  }\n};\n/**\n * Remove an equation\n * @method removeEquation\n * @param {Equation} eq\n */\n\n\nSolver.prototype.removeEquation = function (eq) {\n  var eqs = this.equations;\n  var i = eqs.indexOf(eq);\n\n  if (i !== -1) {\n    eqs.splice(i, 1);\n  }\n};\n/**\n * Add all equations\n * @method removeAllEquations\n */\n\n\nSolver.prototype.removeAllEquations = function () {\n  this.equations.length = 0;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/solver/Solver.js?");

/***/ }),

/***/ "./node_modules/cannon/src/solver/SplitSolver.js":
/*!*******************************************************!*\
  !*** ./node_modules/cannon/src/solver/SplitSolver.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = SplitSolver;\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Quaternion = __webpack_require__(/*! ../math/Quaternion */ \"./node_modules/cannon/src/math/Quaternion.js\");\n\nvar Solver = __webpack_require__(/*! ./Solver */ \"./node_modules/cannon/src/solver/Solver.js\");\n\nvar Body = __webpack_require__(/*! ../objects/Body */ \"./node_modules/cannon/src/objects/Body.js\");\n/**\n * Splits the equations into islands and solves them independently. Can improve performance.\n * @class SplitSolver\n * @constructor\n * @extends Solver\n * @param {Solver} subsolver\n */\n\n\nfunction SplitSolver(subsolver) {\n  Solver.call(this);\n  this.iterations = 10;\n  this.tolerance = 1e-7;\n  this.subsolver = subsolver;\n  this.nodes = [];\n  this.nodePool = []; // Create needed nodes, reuse if possible\n\n  while (this.nodePool.length < 128) {\n    this.nodePool.push(this.createNode());\n  }\n}\n\nSplitSolver.prototype = new Solver(); // Returns the number of subsystems\n\nvar SplitSolver_solve_nodes = []; // All allocated node objects\n\nvar SplitSolver_solve_nodePool = []; // All allocated node objects\n\nvar SplitSolver_solve_eqs = []; // Temp array\n\nvar SplitSolver_solve_bds = []; // Temp array\n\nvar SplitSolver_solve_dummyWorld = {\n  bodies: []\n}; // Temp object\n\nvar STATIC = Body.STATIC;\n\nfunction getUnvisitedNode(nodes) {\n  var Nnodes = nodes.length;\n\n  for (var i = 0; i !== Nnodes; i++) {\n    var node = nodes[i];\n\n    if (!node.visited && !(node.body.type & STATIC)) {\n      return node;\n    }\n  }\n\n  return false;\n}\n\nvar queue = [];\n\nfunction bfs(root, visitFunc, bds, eqs) {\n  queue.push(root);\n  root.visited = true;\n  visitFunc(root, bds, eqs);\n\n  while (queue.length) {\n    var node = queue.pop(); // Loop over unvisited child nodes\n\n    var child;\n\n    while (child = getUnvisitedNode(node.children)) {\n      child.visited = true;\n      visitFunc(child, bds, eqs);\n      queue.push(child);\n    }\n  }\n}\n\nfunction visitFunc(node, bds, eqs) {\n  bds.push(node.body);\n  var Neqs = node.eqs.length;\n\n  for (var i = 0; i !== Neqs; i++) {\n    var eq = node.eqs[i];\n\n    if (eqs.indexOf(eq) === -1) {\n      eqs.push(eq);\n    }\n  }\n}\n\nSplitSolver.prototype.createNode = function () {\n  return {\n    body: null,\n    children: [],\n    eqs: [],\n    visited: false\n  };\n};\n/**\n * Solve the subsystems\n * @method solve\n * @param  {Number} dt\n * @param  {World} world\n */\n\n\nSplitSolver.prototype.solve = function (dt, world) {\n  var nodes = SplitSolver_solve_nodes,\n      nodePool = this.nodePool,\n      bodies = world.bodies,\n      equations = this.equations,\n      Neq = equations.length,\n      Nbodies = bodies.length,\n      subsolver = this.subsolver; // Create needed nodes, reuse if possible\n\n  while (nodePool.length < Nbodies) {\n    nodePool.push(this.createNode());\n  }\n\n  nodes.length = Nbodies;\n\n  for (var i = 0; i < Nbodies; i++) {\n    nodes[i] = nodePool[i];\n  } // Reset node values\n\n\n  for (var i = 0; i !== Nbodies; i++) {\n    var node = nodes[i];\n    node.body = bodies[i];\n    node.children.length = 0;\n    node.eqs.length = 0;\n    node.visited = false;\n  }\n\n  for (var k = 0; k !== Neq; k++) {\n    var eq = equations[k],\n        i = bodies.indexOf(eq.bi),\n        j = bodies.indexOf(eq.bj),\n        ni = nodes[i],\n        nj = nodes[j];\n    ni.children.push(nj);\n    ni.eqs.push(eq);\n    nj.children.push(ni);\n    nj.eqs.push(eq);\n  }\n\n  var child,\n      n = 0,\n      eqs = SplitSolver_solve_eqs;\n  subsolver.tolerance = this.tolerance;\n  subsolver.iterations = this.iterations;\n  var dummyWorld = SplitSolver_solve_dummyWorld;\n\n  while (child = getUnvisitedNode(nodes)) {\n    eqs.length = 0;\n    dummyWorld.bodies.length = 0;\n    bfs(child, visitFunc, dummyWorld.bodies, eqs);\n    var Neqs = eqs.length;\n    eqs = eqs.sort(sortById);\n\n    for (var i = 0; i !== Neqs; i++) {\n      subsolver.addEquation(eqs[i]);\n    }\n\n    var iter = subsolver.solve(dt, dummyWorld);\n    subsolver.removeAllEquations();\n    n++;\n  }\n\n  return n;\n};\n\nfunction sortById(a, b) {\n  return b.id - a.id;\n}\n\n//# sourceURL=webpack:///./node_modules/cannon/src/solver/SplitSolver.js?");

/***/ }),

/***/ "./node_modules/cannon/src/utils/EventTarget.js":
/*!******************************************************!*\
  !*** ./node_modules/cannon/src/utils/EventTarget.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Base class for objects that dispatches events.\n * @class EventTarget\n * @constructor\n */\nvar EventTarget = function () {};\n\nmodule.exports = EventTarget;\nEventTarget.prototype = {\n  constructor: EventTarget,\n\n  /**\n   * Add an event listener\n   * @method addEventListener\n   * @param  {String} type\n   * @param  {Function} listener\n   * @return {EventTarget} The self object, for chainability.\n   */\n  addEventListener: function (type, listener) {\n    if (this._listeners === undefined) {\n      this._listeners = {};\n    }\n\n    var listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n\n    return this;\n  },\n\n  /**\n   * Check if an event listener is added\n   * @method hasEventListener\n   * @param  {String} type\n   * @param  {Function} listener\n   * @return {Boolean}\n   */\n  hasEventListener: function (type, listener) {\n    if (this._listeners === undefined) {\n      return false;\n    }\n\n    var listeners = this._listeners;\n\n    if (listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1) {\n      return true;\n    }\n\n    return false;\n  },\n\n  /**\n   * Check if any event listener of the given type is added\n   * @method hasAnyEventListener\n   * @param  {String} type\n   * @return {Boolean}\n   */\n  hasAnyEventListener: function (type) {\n    if (this._listeners === undefined) {\n      return false;\n    }\n\n    var listeners = this._listeners;\n    return listeners[type] !== undefined;\n  },\n\n  /**\n   * Remove an event listener\n   * @method removeEventListener\n   * @param  {String} type\n   * @param  {Function} listener\n   * @return {EventTarget} The self object, for chainability.\n   */\n  removeEventListener: function (type, listener) {\n    if (this._listeners === undefined) {\n      return this;\n    }\n\n    var listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      return this;\n    }\n\n    var index = listeners[type].indexOf(listener);\n\n    if (index !== -1) {\n      listeners[type].splice(index, 1);\n    }\n\n    return this;\n  },\n\n  /**\n   * Emit an event.\n   * @method dispatchEvent\n   * @param  {Object} event\n   * @param  {String} event.type\n   * @return {EventTarget} The self object, for chainability.\n   */\n  dispatchEvent: function (event) {\n    if (this._listeners === undefined) {\n      return this;\n    }\n\n    var listeners = this._listeners;\n    var listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      event.target = this;\n\n      for (var i = 0, l = listenerArray.length; i < l; i++) {\n        listenerArray[i].call(this, event);\n      }\n    }\n\n    return this;\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/utils/EventTarget.js?");

/***/ }),

/***/ "./node_modules/cannon/src/utils/Octree.js":
/*!*************************************************!*\
  !*** ./node_modules/cannon/src/utils/Octree.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var AABB = __webpack_require__(/*! ../collision/AABB */ \"./node_modules/cannon/src/collision/AABB.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nmodule.exports = Octree;\n/**\n * @class OctreeNode\n * @param {object} [options]\n * @param {Octree} [options.root]\n * @param {AABB} [options.aabb]\n */\n\nfunction OctreeNode(options) {\n  options = options || {};\n  /**\n   * The root node\n   * @property {OctreeNode} root\n   */\n\n  this.root = options.root || null;\n  /**\n   * Boundary of this node\n   * @property {AABB} aabb\n   */\n\n  this.aabb = options.aabb ? options.aabb.clone() : new AABB();\n  /**\n   * Contained data at the current node level.\n   * @property {Array} data\n   */\n\n  this.data = [];\n  /**\n   * Children to this node\n   * @property {Array} children\n   */\n\n  this.children = [];\n}\n/**\n * @class Octree\n * @param {AABB} aabb The total AABB of the tree\n * @param {object} [options]\n * @param {number} [options.maxDepth=8]\n * @extends OctreeNode\n */\n\n\nfunction Octree(aabb, options) {\n  options = options || {};\n  options.root = null;\n  options.aabb = aabb;\n  OctreeNode.call(this, options);\n  /**\n   * Maximum subdivision depth\n   * @property {number} maxDepth\n   */\n\n  this.maxDepth = typeof options.maxDepth !== 'undefined' ? options.maxDepth : 8;\n}\n\nOctree.prototype = new OctreeNode();\n\nOctreeNode.prototype.reset = function (aabb, options) {\n  this.children.length = this.data.length = 0;\n};\n/**\n * Insert data into this node\n * @method insert\n * @param  {AABB} aabb\n * @param  {object} elementData\n * @return {boolean} True if successful, otherwise false\n */\n\n\nOctreeNode.prototype.insert = function (aabb, elementData, level) {\n  var nodeData = this.data;\n  level = level || 0; // Ignore objects that do not belong in this node\n\n  if (!this.aabb.contains(aabb)) {\n    return false; // object cannot be added\n  }\n\n  var children = this.children;\n\n  if (level < (this.maxDepth || this.root.maxDepth)) {\n    // Subdivide if there are no children yet\n    var subdivided = false;\n\n    if (!children.length) {\n      this.subdivide();\n      subdivided = true;\n    } // add to whichever node will accept it\n\n\n    for (var i = 0; i !== 8; i++) {\n      if (children[i].insert(aabb, elementData, level + 1)) {\n        return true;\n      }\n    }\n\n    if (subdivided) {\n      // No children accepted! Might as well just remove em since they contain none\n      children.length = 0;\n    }\n  } // Too deep, or children didnt want it. add it in current node\n\n\n  nodeData.push(elementData);\n  return true;\n};\n\nvar halfDiagonal = new Vec3();\n/**\n * Create 8 equally sized children nodes and put them in the .children array.\n * @method subdivide\n */\n\nOctreeNode.prototype.subdivide = function () {\n  var aabb = this.aabb;\n  var l = aabb.lowerBound;\n  var u = aabb.upperBound;\n  var children = this.children;\n  children.push(new OctreeNode({\n    aabb: new AABB({\n      lowerBound: new Vec3(0, 0, 0)\n    })\n  }), new OctreeNode({\n    aabb: new AABB({\n      lowerBound: new Vec3(1, 0, 0)\n    })\n  }), new OctreeNode({\n    aabb: new AABB({\n      lowerBound: new Vec3(1, 1, 0)\n    })\n  }), new OctreeNode({\n    aabb: new AABB({\n      lowerBound: new Vec3(1, 1, 1)\n    })\n  }), new OctreeNode({\n    aabb: new AABB({\n      lowerBound: new Vec3(0, 1, 1)\n    })\n  }), new OctreeNode({\n    aabb: new AABB({\n      lowerBound: new Vec3(0, 0, 1)\n    })\n  }), new OctreeNode({\n    aabb: new AABB({\n      lowerBound: new Vec3(1, 0, 1)\n    })\n  }), new OctreeNode({\n    aabb: new AABB({\n      lowerBound: new Vec3(0, 1, 0)\n    })\n  }));\n  u.vsub(l, halfDiagonal);\n  halfDiagonal.scale(0.5, halfDiagonal);\n  var root = this.root || this;\n\n  for (var i = 0; i !== 8; i++) {\n    var child = children[i]; // Set current node as root\n\n    child.root = root; // Compute bounds\n\n    var lowerBound = child.aabb.lowerBound;\n    lowerBound.x *= halfDiagonal.x;\n    lowerBound.y *= halfDiagonal.y;\n    lowerBound.z *= halfDiagonal.z;\n    lowerBound.vadd(l, lowerBound); // Upper bound is always lower bound + halfDiagonal\n\n    lowerBound.vadd(halfDiagonal, child.aabb.upperBound);\n  }\n};\n/**\n * Get all data, potentially within an AABB\n * @method aabbQuery\n * @param  {AABB} aabb\n * @param  {array} result\n * @return {array} The \"result\" object\n */\n\n\nOctreeNode.prototype.aabbQuery = function (aabb, result) {\n  var nodeData = this.data; // abort if the range does not intersect this node\n  // if (!this.aabb.overlaps(aabb)){\n  //     return result;\n  // }\n  // Add objects at this level\n  // Array.prototype.push.apply(result, nodeData);\n  // Add child data\n  // @todo unwrap recursion into a queue / loop, that's faster in JS\n\n  var children = this.children; // for (var i = 0, N = this.children.length; i !== N; i++) {\n  //     children[i].aabbQuery(aabb, result);\n  // }\n\n  var queue = [this];\n\n  while (queue.length) {\n    var node = queue.pop();\n\n    if (node.aabb.overlaps(aabb)) {\n      Array.prototype.push.apply(result, node.data);\n    }\n\n    Array.prototype.push.apply(queue, node.children);\n  }\n\n  return result;\n};\n\nvar tmpAABB = new AABB();\n/**\n * Get all data, potentially intersected by a ray.\n * @method rayQuery\n * @param  {Ray} ray\n * @param  {Transform} treeTransform\n * @param  {array} result\n * @return {array} The \"result\" object\n */\n\nOctreeNode.prototype.rayQuery = function (ray, treeTransform, result) {\n  // Use aabb query for now.\n  // @todo implement real ray query which needs less lookups\n  ray.getAABB(tmpAABB);\n  tmpAABB.toLocalFrame(treeTransform, tmpAABB);\n  this.aabbQuery(tmpAABB, result);\n  return result;\n};\n/**\n * @method removeEmptyNodes\n */\n\n\nOctreeNode.prototype.removeEmptyNodes = function () {\n  var queue = [this];\n\n  while (queue.length) {\n    var node = queue.pop();\n\n    for (var i = node.children.length - 1; i >= 0; i--) {\n      if (!node.children[i].data.length) {\n        node.children.splice(i, 1);\n      }\n    }\n\n    Array.prototype.push.apply(queue, node.children);\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/utils/Octree.js?");

/***/ }),

/***/ "./node_modules/cannon/src/utils/Pool.js":
/*!***********************************************!*\
  !*** ./node_modules/cannon/src/utils/Pool.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = Pool;\n/**\n * For pooling objects that can be reused.\n * @class Pool\n * @constructor\n */\n\nfunction Pool() {\n  /**\n   * The pooled objects\n   * @property {Array} objects\n   */\n  this.objects = [];\n  /**\n   * Constructor of the objects\n   * @property {mixed} type\n   */\n\n  this.type = Object;\n}\n/**\n * Release an object after use\n * @method release\n * @param {Object} obj\n */\n\n\nPool.prototype.release = function () {\n  var Nargs = arguments.length;\n\n  for (var i = 0; i !== Nargs; i++) {\n    this.objects.push(arguments[i]);\n  }\n\n  return this;\n};\n/**\n * Get an object\n * @method get\n * @return {mixed}\n */\n\n\nPool.prototype.get = function () {\n  if (this.objects.length === 0) {\n    return this.constructObject();\n  } else {\n    return this.objects.pop();\n  }\n};\n/**\n * Construct an object. Should be implmented in each subclass.\n * @method constructObject\n * @return {mixed}\n */\n\n\nPool.prototype.constructObject = function () {\n  throw new Error(\"constructObject() not implemented in this Pool subclass yet!\");\n};\n/**\n * @method resize\n * @param {number} size\n * @return {Pool} Self, for chaining\n */\n\n\nPool.prototype.resize = function (size) {\n  var objects = this.objects;\n\n  while (objects.length > size) {\n    objects.pop();\n  }\n\n  while (objects.length < size) {\n    objects.push(this.constructObject());\n  }\n\n  return this;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/utils/Pool.js?");

/***/ }),

/***/ "./node_modules/cannon/src/utils/TupleDictionary.js":
/*!**********************************************************!*\
  !*** ./node_modules/cannon/src/utils/TupleDictionary.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = TupleDictionary;\n/**\n * @class TupleDictionary\n * @constructor\n */\n\nfunction TupleDictionary() {\n  /**\n   * The data storage\n   * @property data\n   * @type {Object}\n   */\n  this.data = {\n    keys: []\n  };\n}\n/**\n * @method get\n * @param  {Number} i\n * @param  {Number} j\n * @return {Number}\n */\n\n\nTupleDictionary.prototype.get = function (i, j) {\n  if (i > j) {\n    // swap\n    var temp = j;\n    j = i;\n    i = temp;\n  }\n\n  return this.data[i + '-' + j];\n};\n/**\n * @method set\n * @param  {Number} i\n * @param  {Number} j\n * @param {Number} value\n */\n\n\nTupleDictionary.prototype.set = function (i, j, value) {\n  if (i > j) {\n    var temp = j;\n    j = i;\n    i = temp;\n  }\n\n  var key = i + '-' + j; // Check if key already exists\n\n  if (!this.get(i, j)) {\n    this.data.keys.push(key);\n  }\n\n  this.data[key] = value;\n};\n/**\n * @method reset\n */\n\n\nTupleDictionary.prototype.reset = function () {\n  var data = this.data,\n      keys = data.keys;\n\n  while (keys.length > 0) {\n    var key = keys.pop();\n    delete data[key];\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/utils/TupleDictionary.js?");

/***/ }),

/***/ "./node_modules/cannon/src/utils/Utils.js":
/*!************************************************!*\
  !*** ./node_modules/cannon/src/utils/Utils.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function Utils() {}\n\nmodule.exports = Utils;\n/**\n * Extend an options object with default values.\n * @static\n * @method defaults\n * @param  {object} options The options object. May be falsy: in this case, a new object is created and returned.\n * @param  {object} defaults An object containing default values.\n * @return {object} The modified options object.\n */\n\nUtils.defaults = function (options, defaults) {\n  options = options || {};\n\n  for (var key in defaults) {\n    if (!(key in options)) {\n      options[key] = defaults[key];\n    }\n  }\n\n  return options;\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/utils/Utils.js?");

/***/ }),

/***/ "./node_modules/cannon/src/utils/Vec3Pool.js":
/*!***************************************************!*\
  !*** ./node_modules/cannon/src/utils/Vec3Pool.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Vec3Pool;\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Pool = __webpack_require__(/*! ./Pool */ \"./node_modules/cannon/src/utils/Pool.js\");\n/**\n * @class Vec3Pool\n * @constructor\n * @extends Pool\n */\n\n\nfunction Vec3Pool() {\n  Pool.call(this);\n  this.type = Vec3;\n}\n\nVec3Pool.prototype = new Pool();\n/**\n * Construct a vector\n * @method constructObject\n * @return {Vec3}\n */\n\nVec3Pool.prototype.constructObject = function () {\n  return new Vec3();\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/utils/Vec3Pool.js?");

/***/ }),

/***/ "./node_modules/cannon/src/world/Narrowphase.js":
/*!******************************************************!*\
  !*** ./node_modules/cannon/src/world/Narrowphase.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = Narrowphase;\n\nvar AABB = __webpack_require__(/*! ../collision/AABB */ \"./node_modules/cannon/src/collision/AABB.js\");\n\nvar Body = __webpack_require__(/*! ../objects/Body */ \"./node_modules/cannon/src/objects/Body.js\");\n\nvar Shape = __webpack_require__(/*! ../shapes/Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar Ray = __webpack_require__(/*! ../collision/Ray */ \"./node_modules/cannon/src/collision/Ray.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Transform = __webpack_require__(/*! ../math/Transform */ \"./node_modules/cannon/src/math/Transform.js\");\n\nvar ConvexPolyhedron = __webpack_require__(/*! ../shapes/ConvexPolyhedron */ \"./node_modules/cannon/src/shapes/ConvexPolyhedron.js\");\n\nvar Quaternion = __webpack_require__(/*! ../math/Quaternion */ \"./node_modules/cannon/src/math/Quaternion.js\");\n\nvar Solver = __webpack_require__(/*! ../solver/Solver */ \"./node_modules/cannon/src/solver/Solver.js\");\n\nvar Vec3Pool = __webpack_require__(/*! ../utils/Vec3Pool */ \"./node_modules/cannon/src/utils/Vec3Pool.js\");\n\nvar ContactEquation = __webpack_require__(/*! ../equations/ContactEquation */ \"./node_modules/cannon/src/equations/ContactEquation.js\");\n\nvar FrictionEquation = __webpack_require__(/*! ../equations/FrictionEquation */ \"./node_modules/cannon/src/equations/FrictionEquation.js\");\n/**\n * Helper class for the World. Generates ContactEquations.\n * @class Narrowphase\n * @constructor\n * @todo Sphere-ConvexPolyhedron contacts\n * @todo Contact reduction\n * @todo  should move methods to prototype\n */\n\n\nfunction Narrowphase(world) {\n  /**\n   * Internal storage of pooled contact points.\n   * @property {Array} contactPointPool\n   */\n  this.contactPointPool = [];\n  this.frictionEquationPool = [];\n  this.result = [];\n  this.frictionResult = [];\n  /**\n   * Pooled vectors.\n   * @property {Vec3Pool} v3pool\n   */\n\n  this.v3pool = new Vec3Pool();\n  this.world = world;\n  this.currentContactMaterial = null;\n  /**\n   * @property {Boolean} enableFrictionReduction\n   */\n\n  this.enableFrictionReduction = false;\n}\n/**\n * Make a contact object, by using the internal pool or creating a new one.\n * @method createContactEquation\n * @param {Body} bi\n * @param {Body} bj\n * @param {Shape} si\n * @param {Shape} sj\n * @param {Shape} overrideShapeA\n * @param {Shape} overrideShapeB\n * @return {ContactEquation}\n */\n\n\nNarrowphase.prototype.createContactEquation = function (bi, bj, si, sj, overrideShapeA, overrideShapeB) {\n  var c;\n\n  if (this.contactPointPool.length) {\n    c = this.contactPointPool.pop();\n    c.bi = bi;\n    c.bj = bj;\n  } else {\n    c = new ContactEquation(bi, bj);\n  }\n\n  c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\n  var cm = this.currentContactMaterial;\n  c.restitution = cm.restitution;\n  c.setSpookParams(cm.contactEquationStiffness, cm.contactEquationRelaxation, this.world.dt);\n  var matA = si.material || bi.material;\n  var matB = sj.material || bj.material;\n\n  if (matA && matB && matA.restitution >= 0 && matB.restitution >= 0) {\n    c.restitution = matA.restitution * matB.restitution;\n  }\n\n  c.si = overrideShapeA || si;\n  c.sj = overrideShapeB || sj;\n  return c;\n};\n\nNarrowphase.prototype.createFrictionEquationsFromContact = function (contactEquation, outArray) {\n  var bodyA = contactEquation.bi;\n  var bodyB = contactEquation.bj;\n  var shapeA = contactEquation.si;\n  var shapeB = contactEquation.sj;\n  var world = this.world;\n  var cm = this.currentContactMaterial; // If friction or restitution were specified in the material, use them\n\n  var friction = cm.friction;\n  var matA = shapeA.material || bodyA.material;\n  var matB = shapeB.material || bodyB.material;\n\n  if (matA && matB && matA.friction >= 0 && matB.friction >= 0) {\n    friction = matA.friction * matB.friction;\n  }\n\n  if (friction > 0) {\n    // Create 2 tangent equations\n    var mug = friction * world.gravity.length();\n    var reducedMass = bodyA.invMass + bodyB.invMass;\n\n    if (reducedMass > 0) {\n      reducedMass = 1 / reducedMass;\n    }\n\n    var pool = this.frictionEquationPool;\n    var c1 = pool.length ? pool.pop() : new FrictionEquation(bodyA, bodyB, mug * reducedMass);\n    var c2 = pool.length ? pool.pop() : new FrictionEquation(bodyA, bodyB, mug * reducedMass);\n    c1.bi = c2.bi = bodyA;\n    c1.bj = c2.bj = bodyB;\n    c1.minForce = c2.minForce = -mug * reducedMass;\n    c1.maxForce = c2.maxForce = mug * reducedMass; // Copy over the relative vectors\n\n    c1.ri.copy(contactEquation.ri);\n    c1.rj.copy(contactEquation.rj);\n    c2.ri.copy(contactEquation.ri);\n    c2.rj.copy(contactEquation.rj); // Construct tangents\n\n    contactEquation.ni.tangents(c1.t, c2.t); // Set spook params\n\n    c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\n    c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, world.dt);\n    c1.enabled = c2.enabled = contactEquation.enabled;\n    outArray.push(c1, c2);\n    return true;\n  }\n\n  return false;\n};\n\nvar averageNormal = new Vec3();\nvar averageContactPointA = new Vec3();\nvar averageContactPointB = new Vec3(); // Take the average N latest contact point on the plane.\n\nNarrowphase.prototype.createFrictionFromAverage = function (numContacts) {\n  // The last contactEquation\n  var c = this.result[this.result.length - 1]; // Create the result: two \"average\" friction equations\n\n  if (!this.createFrictionEquationsFromContact(c, this.frictionResult) || numContacts === 1) {\n    return;\n  }\n\n  var f1 = this.frictionResult[this.frictionResult.length - 2];\n  var f2 = this.frictionResult[this.frictionResult.length - 1];\n  averageNormal.setZero();\n  averageContactPointA.setZero();\n  averageContactPointB.setZero();\n  var bodyA = c.bi;\n  var bodyB = c.bj;\n\n  for (var i = 0; i !== numContacts; i++) {\n    c = this.result[this.result.length - 1 - i];\n\n    if (c.bodyA !== bodyA) {\n      averageNormal.vadd(c.ni, averageNormal);\n      averageContactPointA.vadd(c.ri, averageContactPointA);\n      averageContactPointB.vadd(c.rj, averageContactPointB);\n    } else {\n      averageNormal.vsub(c.ni, averageNormal);\n      averageContactPointA.vadd(c.rj, averageContactPointA);\n      averageContactPointB.vadd(c.ri, averageContactPointB);\n    }\n  }\n\n  var invNumContacts = 1 / numContacts;\n  averageContactPointA.scale(invNumContacts, f1.ri);\n  averageContactPointB.scale(invNumContacts, f1.rj);\n  f2.ri.copy(f1.ri); // Should be the same\n\n  f2.rj.copy(f1.rj);\n  averageNormal.normalize();\n  averageNormal.tangents(f1.t, f2.t); // return eq;\n};\n\nvar tmpVec1 = new Vec3();\nvar tmpVec2 = new Vec3();\nvar tmpQuat1 = new Quaternion();\nvar tmpQuat2 = new Quaternion();\n/**\n * Generate all contacts between a list of body pairs\n * @method getContacts\n * @param {array} p1 Array of body indices\n * @param {array} p2 Array of body indices\n * @param {World} world\n * @param {array} result Array to store generated contacts\n * @param {array} oldcontacts Optional. Array of reusable contact objects\n */\n\nNarrowphase.prototype.getContacts = function (p1, p2, world, result, oldcontacts, frictionResult, frictionPool) {\n  // Save old contact objects\n  this.contactPointPool = oldcontacts;\n  this.frictionEquationPool = frictionPool;\n  this.result = result;\n  this.frictionResult = frictionResult;\n  var qi = tmpQuat1;\n  var qj = tmpQuat2;\n  var xi = tmpVec1;\n  var xj = tmpVec2;\n\n  for (var k = 0, N = p1.length; k !== N; k++) {\n    // Get current collision bodies\n    var bi = p1[k],\n        bj = p2[k]; // Get contact material\n\n    var bodyContactMaterial = null;\n\n    if (bi.material && bj.material) {\n      bodyContactMaterial = world.getContactMaterial(bi.material, bj.material) || null;\n    }\n\n    var justTest = bi.type & Body.KINEMATIC && bj.type & Body.STATIC || bi.type & Body.STATIC && bj.type & Body.KINEMATIC || bi.type & Body.KINEMATIC && bj.type & Body.KINEMATIC;\n\n    for (var i = 0; i < bi.shapes.length; i++) {\n      bi.quaternion.mult(bi.shapeOrientations[i], qi);\n      bi.quaternion.vmult(bi.shapeOffsets[i], xi);\n      xi.vadd(bi.position, xi);\n      var si = bi.shapes[i];\n\n      for (var j = 0; j < bj.shapes.length; j++) {\n        // Compute world transform of shapes\n        bj.quaternion.mult(bj.shapeOrientations[j], qj);\n        bj.quaternion.vmult(bj.shapeOffsets[j], xj);\n        xj.vadd(bj.position, xj);\n        var sj = bj.shapes[j];\n\n        if (xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius) {\n          continue;\n        } // Get collision material\n\n\n        var shapeContactMaterial = null;\n\n        if (si.material && sj.material) {\n          shapeContactMaterial = world.getContactMaterial(si.material, sj.material) || null;\n        }\n\n        this.currentContactMaterial = shapeContactMaterial || bodyContactMaterial || world.defaultContactMaterial; // Get contacts\n\n        var resolver = this[si.type | sj.type];\n\n        if (resolver) {\n          var retval = false;\n\n          if (si.type < sj.type) {\n            retval = resolver.call(this, si, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n          } else {\n            retval = resolver.call(this, sj, si, xj, xi, qj, qi, bj, bi, si, sj, justTest);\n          }\n\n          if (retval && justTest) {\n            // Register overlap\n            world.shapeOverlapKeeper.set(si.id, sj.id);\n            world.bodyOverlapKeeper.set(bi.id, bj.id);\n          }\n        }\n      }\n    }\n  }\n};\n\nvar numWarnings = 0;\nvar maxWarnings = 10;\n\nfunction warn(msg) {\n  if (numWarnings > maxWarnings) {\n    return;\n  }\n\n  numWarnings++;\n  console.warn(msg);\n}\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.BOX] = Narrowphase.prototype.boxBox = function (si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n  si.convexPolyhedronRepresentation.material = si.material;\n  sj.convexPolyhedronRepresentation.material = sj.material;\n  si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n  sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\n  return this.convexConvex(si.convexPolyhedronRepresentation, sj.convexPolyhedronRepresentation, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n};\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.CONVEXPOLYHEDRON] = Narrowphase.prototype.boxConvex = function (si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n  si.convexPolyhedronRepresentation.material = si.material;\n  si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n  return this.convexConvex(si.convexPolyhedronRepresentation, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n};\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.PARTICLE] = Narrowphase.prototype.boxParticle = function (si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n  si.convexPolyhedronRepresentation.material = si.material;\n  si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n  return this.convexParticle(si.convexPolyhedronRepresentation, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n};\n/**\n * @method sphereSphere\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\n\n\nNarrowphase.prototype[Shape.types.SPHERE] = Narrowphase.prototype.sphereSphere = function (si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n  if (justTest) {\n    return xi.distanceSquared(xj) < Math.pow(si.radius + sj.radius, 2);\n  } // We will have only one contact in this case\n\n\n  var r = this.createContactEquation(bi, bj, si, sj, rsi, rsj); // Contact normal\n\n  xj.vsub(xi, r.ni);\n  r.ni.normalize(); // Contact point locations\n\n  r.ri.copy(r.ni);\n  r.rj.copy(r.ni);\n  r.ri.mult(si.radius, r.ri);\n  r.rj.mult(-sj.radius, r.rj);\n  r.ri.vadd(xi, r.ri);\n  r.ri.vsub(bi.position, r.ri);\n  r.rj.vadd(xj, r.rj);\n  r.rj.vsub(bj.position, r.rj);\n  this.result.push(r);\n  this.createFrictionEquationsFromContact(r, this.frictionResult);\n};\n/**\n * @method planeTrimesh\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\n\n\nvar planeTrimesh_normal = new Vec3();\nvar planeTrimesh_relpos = new Vec3();\nvar planeTrimesh_projected = new Vec3();\n\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.TRIMESH] = Narrowphase.prototype.planeTrimesh = function (planeShape, trimeshShape, planePos, trimeshPos, planeQuat, trimeshQuat, planeBody, trimeshBody, rsi, rsj, justTest) {\n  // Make contacts!\n  var v = new Vec3();\n  var normal = planeTrimesh_normal;\n  normal.set(0, 0, 1);\n  planeQuat.vmult(normal, normal); // Turn normal according to plane\n\n  for (var i = 0; i < trimeshShape.vertices.length / 3; i++) {\n    // Get world vertex from trimesh\n    trimeshShape.getVertex(i, v); // Safe up\n\n    var v2 = new Vec3();\n    v2.copy(v);\n    Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v); // Check plane side\n\n    var relpos = planeTrimesh_relpos;\n    v.vsub(planePos, relpos);\n    var dot = normal.dot(relpos);\n\n    if (dot <= 0.0) {\n      if (justTest) {\n        return true;\n      }\n\n      var r = this.createContactEquation(planeBody, trimeshBody, planeShape, trimeshShape, rsi, rsj);\n      r.ni.copy(normal); // Contact normal is the plane normal\n      // Get vertex position projected on plane\n\n      var projected = planeTrimesh_projected;\n      normal.scale(relpos.dot(normal), projected);\n      v.vsub(projected, projected); // ri is the projected world position minus plane position\n\n      r.ri.copy(projected);\n      r.ri.vsub(planeBody.position, r.ri);\n      r.rj.copy(v);\n      r.rj.vsub(trimeshBody.position, r.rj); // Store result\n\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n  }\n};\n/**\n * @method sphereTrimesh\n * @param  {Shape}      sphereShape\n * @param  {Shape}      trimeshShape\n * @param  {Vec3}       spherePos\n * @param  {Vec3}       trimeshPos\n * @param  {Quaternion} sphereQuat\n * @param  {Quaternion} trimeshQuat\n * @param  {Body}       sphereBody\n * @param  {Body}       trimeshBody\n */\n\n\nvar sphereTrimesh_normal = new Vec3();\nvar sphereTrimesh_relpos = new Vec3();\nvar sphereTrimesh_projected = new Vec3();\nvar sphereTrimesh_v = new Vec3();\nvar sphereTrimesh_v2 = new Vec3();\nvar sphereTrimesh_edgeVertexA = new Vec3();\nvar sphereTrimesh_edgeVertexB = new Vec3();\nvar sphereTrimesh_edgeVector = new Vec3();\nvar sphereTrimesh_edgeVectorUnit = new Vec3();\nvar sphereTrimesh_localSpherePos = new Vec3();\nvar sphereTrimesh_tmp = new Vec3();\nvar sphereTrimesh_va = new Vec3();\nvar sphereTrimesh_vb = new Vec3();\nvar sphereTrimesh_vc = new Vec3();\nvar sphereTrimesh_localSphereAABB = new AABB();\nvar sphereTrimesh_triangles = [];\n\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.TRIMESH] = Narrowphase.prototype.sphereTrimesh = function (sphereShape, trimeshShape, spherePos, trimeshPos, sphereQuat, trimeshQuat, sphereBody, trimeshBody, rsi, rsj, justTest) {\n  var edgeVertexA = sphereTrimesh_edgeVertexA;\n  var edgeVertexB = sphereTrimesh_edgeVertexB;\n  var edgeVector = sphereTrimesh_edgeVector;\n  var edgeVectorUnit = sphereTrimesh_edgeVectorUnit;\n  var localSpherePos = sphereTrimesh_localSpherePos;\n  var tmp = sphereTrimesh_tmp;\n  var localSphereAABB = sphereTrimesh_localSphereAABB;\n  var v2 = sphereTrimesh_v2;\n  var relpos = sphereTrimesh_relpos;\n  var triangles = sphereTrimesh_triangles; // Convert sphere position to local in the trimesh\n\n  Transform.pointToLocalFrame(trimeshPos, trimeshQuat, spherePos, localSpherePos); // Get the aabb of the sphere locally in the trimesh\n\n  var sphereRadius = sphereShape.radius;\n  localSphereAABB.lowerBound.set(localSpherePos.x - sphereRadius, localSpherePos.y - sphereRadius, localSpherePos.z - sphereRadius);\n  localSphereAABB.upperBound.set(localSpherePos.x + sphereRadius, localSpherePos.y + sphereRadius, localSpherePos.z + sphereRadius);\n  trimeshShape.getTrianglesInAABB(localSphereAABB, triangles); //for (var i = 0; i < trimeshShape.indices.length / 3; i++) triangles.push(i); // All\n  // Vertices\n\n  var v = sphereTrimesh_v;\n  var radiusSquared = sphereShape.radius * sphereShape.radius;\n\n  for (var i = 0; i < triangles.length; i++) {\n    for (var j = 0; j < 3; j++) {\n      trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], v); // Check vertex overlap in sphere\n\n      v.vsub(localSpherePos, relpos);\n\n      if (relpos.norm2() <= radiusSquared) {\n        // Safe up\n        v2.copy(v);\n        Transform.pointToWorldFrame(trimeshPos, trimeshQuat, v2, v);\n        v.vsub(spherePos, relpos);\n\n        if (justTest) {\n          return true;\n        }\n\n        var r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape, rsi, rsj);\n        r.ni.copy(relpos);\n        r.ni.normalize(); // ri is the vector from sphere center to the sphere surface\n\n        r.ri.copy(r.ni);\n        r.ri.scale(sphereShape.radius, r.ri);\n        r.ri.vadd(spherePos, r.ri);\n        r.ri.vsub(sphereBody.position, r.ri);\n        r.rj.copy(v);\n        r.rj.vsub(trimeshBody.position, r.rj); // Store result\n\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n      }\n    }\n  } // Check all edges\n\n\n  for (var i = 0; i < triangles.length; i++) {\n    for (var j = 0; j < 3; j++) {\n      trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + j], edgeVertexA);\n      trimeshShape.getVertex(trimeshShape.indices[triangles[i] * 3 + (j + 1) % 3], edgeVertexB);\n      edgeVertexB.vsub(edgeVertexA, edgeVector); // Project sphere position to the edge\n\n      localSpherePos.vsub(edgeVertexB, tmp);\n      var positionAlongEdgeB = tmp.dot(edgeVector);\n      localSpherePos.vsub(edgeVertexA, tmp);\n      var positionAlongEdgeA = tmp.dot(edgeVector);\n\n      if (positionAlongEdgeA > 0 && positionAlongEdgeB < 0) {\n        // Now check the orthogonal distance from edge to sphere center\n        localSpherePos.vsub(edgeVertexA, tmp);\n        edgeVectorUnit.copy(edgeVector);\n        edgeVectorUnit.normalize();\n        positionAlongEdgeA = tmp.dot(edgeVectorUnit);\n        edgeVectorUnit.scale(positionAlongEdgeA, tmp);\n        tmp.vadd(edgeVertexA, tmp); // tmp is now the sphere center position projected to the edge, defined locally in the trimesh frame\n\n        var dist = tmp.distanceTo(localSpherePos);\n\n        if (dist < sphereShape.radius) {\n          if (justTest) {\n            return true;\n          }\n\n          var r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape, rsi, rsj);\n          tmp.vsub(localSpherePos, r.ni);\n          r.ni.normalize();\n          r.ni.scale(sphereShape.radius, r.ri);\n          Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\n          tmp.vsub(trimeshBody.position, r.rj);\n          Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\n          Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\n          this.result.push(r);\n          this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n      }\n    }\n  } // Triangle faces\n\n\n  var va = sphereTrimesh_va;\n  var vb = sphereTrimesh_vb;\n  var vc = sphereTrimesh_vc;\n  var normal = sphereTrimesh_normal;\n\n  for (var i = 0, N = triangles.length; i !== N; i++) {\n    trimeshShape.getTriangleVertices(triangles[i], va, vb, vc);\n    trimeshShape.getNormal(triangles[i], normal);\n    localSpherePos.vsub(va, tmp);\n    var dist = tmp.dot(normal);\n    normal.scale(dist, tmp);\n    localSpherePos.vsub(tmp, tmp); // tmp is now the sphere position projected to the triangle plane\n\n    dist = tmp.distanceTo(localSpherePos);\n\n    if (Ray.pointInTriangle(tmp, va, vb, vc) && dist < sphereShape.radius) {\n      if (justTest) {\n        return true;\n      }\n\n      var r = this.createContactEquation(sphereBody, trimeshBody, sphereShape, trimeshShape, rsi, rsj);\n      tmp.vsub(localSpherePos, r.ni);\n      r.ni.normalize();\n      r.ni.scale(sphereShape.radius, r.ri);\n      Transform.pointToWorldFrame(trimeshPos, trimeshQuat, tmp, tmp);\n      tmp.vsub(trimeshBody.position, r.rj);\n      Transform.vectorToWorldFrame(trimeshQuat, r.ni, r.ni);\n      Transform.vectorToWorldFrame(trimeshQuat, r.ri, r.ri);\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n    }\n  }\n\n  triangles.length = 0;\n};\n\nvar point_on_plane_to_sphere = new Vec3();\nvar plane_to_sphere_ortho = new Vec3();\n/**\n * @method spherePlane\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\n\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.PLANE] = Narrowphase.prototype.spherePlane = function (si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n  // We will have one contact in this case\n  var r = this.createContactEquation(bi, bj, si, sj, rsi, rsj); // Contact normal\n\n  r.ni.set(0, 0, 1);\n  qj.vmult(r.ni, r.ni);\n  r.ni.negate(r.ni); // body i is the sphere, flip normal\n\n  r.ni.normalize(); // Needed?\n  // Vector from sphere center to contact point\n\n  r.ni.mult(si.radius, r.ri); // Project down sphere on plane\n\n  xi.vsub(xj, point_on_plane_to_sphere);\n  r.ni.mult(r.ni.dot(point_on_plane_to_sphere), plane_to_sphere_ortho);\n  point_on_plane_to_sphere.vsub(plane_to_sphere_ortho, r.rj); // The sphere position projected to plane\n\n  if (-point_on_plane_to_sphere.dot(r.ni) <= si.radius) {\n    if (justTest) {\n      return true;\n    } // Make it relative to the body\n\n\n    var ri = r.ri;\n    var rj = r.rj;\n    ri.vadd(xi, ri);\n    ri.vsub(bi.position, ri);\n    rj.vadd(xj, rj);\n    rj.vsub(bj.position, rj);\n    this.result.push(r);\n    this.createFrictionEquationsFromContact(r, this.frictionResult);\n  }\n}; // See http://bulletphysics.com/Bullet/BulletFull/SphereTriangleDetector_8cpp_source.html\n\n\nvar pointInPolygon_edge = new Vec3();\nvar pointInPolygon_edge_x_normal = new Vec3();\nvar pointInPolygon_vtp = new Vec3();\n\nfunction pointInPolygon(verts, normal, p) {\n  var positiveResult = null;\n  var N = verts.length;\n\n  for (var i = 0; i !== N; i++) {\n    var v = verts[i]; // Get edge to the next vertex\n\n    var edge = pointInPolygon_edge;\n    verts[(i + 1) % N].vsub(v, edge); // Get cross product between polygon normal and the edge\n\n    var edge_x_normal = pointInPolygon_edge_x_normal; //var edge_x_normal = new Vec3();\n\n    edge.cross(normal, edge_x_normal); // Get vector between point and current vertex\n\n    var vertex_to_p = pointInPolygon_vtp;\n    p.vsub(v, vertex_to_p); // This dot product determines which side of the edge the point is\n\n    var r = edge_x_normal.dot(vertex_to_p); // If all such dot products have same sign, we are inside the polygon.\n\n    if (positiveResult === null || r > 0 && positiveResult === true || r <= 0 && positiveResult === false) {\n      if (positiveResult === null) {\n        positiveResult = r > 0;\n      }\n\n      continue;\n    } else {\n      return false; // Encountered some other sign. Exit.\n    }\n  } // If we got here, all dot products were of the same sign.\n\n\n  return true;\n}\n\nvar box_to_sphere = new Vec3();\nvar sphereBox_ns = new Vec3();\nvar sphereBox_ns1 = new Vec3();\nvar sphereBox_ns2 = new Vec3();\nvar sphereBox_sides = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\nvar sphereBox_sphere_to_corner = new Vec3();\nvar sphereBox_side_ns = new Vec3();\nvar sphereBox_side_ns1 = new Vec3();\nvar sphereBox_side_ns2 = new Vec3();\n/**\n * @method sphereBox\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\n\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.BOX] = Narrowphase.prototype.sphereBox = function (si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n  var v3pool = this.v3pool; // we refer to the box as body j\n\n  var sides = sphereBox_sides;\n  xi.vsub(xj, box_to_sphere);\n  sj.getSideNormals(sides, qj);\n  var R = si.radius;\n  var penetrating_sides = []; // Check side (plane) intersections\n\n  var found = false; // Store the resulting side penetration info\n\n  var side_ns = sphereBox_side_ns;\n  var side_ns1 = sphereBox_side_ns1;\n  var side_ns2 = sphereBox_side_ns2;\n  var side_h = null;\n  var side_penetrations = 0;\n  var side_dot1 = 0;\n  var side_dot2 = 0;\n  var side_distance = null;\n\n  for (var idx = 0, nsides = sides.length; idx !== nsides && found === false; idx++) {\n    // Get the plane side normal (ns)\n    var ns = sphereBox_ns;\n    ns.copy(sides[idx]);\n    var h = ns.norm();\n    ns.normalize(); // The normal/distance dot product tells which side of the plane we are\n\n    var dot = box_to_sphere.dot(ns);\n\n    if (dot < h + R && dot > 0) {\n      // Intersects plane. Now check the other two dimensions\n      var ns1 = sphereBox_ns1;\n      var ns2 = sphereBox_ns2;\n      ns1.copy(sides[(idx + 1) % 3]);\n      ns2.copy(sides[(idx + 2) % 3]);\n      var h1 = ns1.norm();\n      var h2 = ns2.norm();\n      ns1.normalize();\n      ns2.normalize();\n      var dot1 = box_to_sphere.dot(ns1);\n      var dot2 = box_to_sphere.dot(ns2);\n\n      if (dot1 < h1 && dot1 > -h1 && dot2 < h2 && dot2 > -h2) {\n        var dist = Math.abs(dot - h - R);\n\n        if (side_distance === null || dist < side_distance) {\n          side_distance = dist;\n          side_dot1 = dot1;\n          side_dot2 = dot2;\n          side_h = h;\n          side_ns.copy(ns);\n          side_ns1.copy(ns1);\n          side_ns2.copy(ns2);\n          side_penetrations++;\n\n          if (justTest) {\n            return true;\n          }\n        }\n      }\n    }\n  }\n\n  if (side_penetrations) {\n    found = true;\n    var r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n    side_ns.mult(-R, r.ri); // Sphere r\n\n    r.ni.copy(side_ns);\n    r.ni.negate(r.ni); // Normal should be out of sphere\n\n    side_ns.mult(side_h, side_ns);\n    side_ns1.mult(side_dot1, side_ns1);\n    side_ns.vadd(side_ns1, side_ns);\n    side_ns2.mult(side_dot2, side_ns2);\n    side_ns.vadd(side_ns2, r.rj); // Make relative to bodies\n\n    r.ri.vadd(xi, r.ri);\n    r.ri.vsub(bi.position, r.ri);\n    r.rj.vadd(xj, r.rj);\n    r.rj.vsub(bj.position, r.rj);\n    this.result.push(r);\n    this.createFrictionEquationsFromContact(r, this.frictionResult);\n  } // Check corners\n\n\n  var rj = v3pool.get();\n  var sphere_to_corner = sphereBox_sphere_to_corner;\n\n  for (var j = 0; j !== 2 && !found; j++) {\n    for (var k = 0; k !== 2 && !found; k++) {\n      for (var l = 0; l !== 2 && !found; l++) {\n        rj.set(0, 0, 0);\n\n        if (j) {\n          rj.vadd(sides[0], rj);\n        } else {\n          rj.vsub(sides[0], rj);\n        }\n\n        if (k) {\n          rj.vadd(sides[1], rj);\n        } else {\n          rj.vsub(sides[1], rj);\n        }\n\n        if (l) {\n          rj.vadd(sides[2], rj);\n        } else {\n          rj.vsub(sides[2], rj);\n        } // World position of corner\n\n\n        xj.vadd(rj, sphere_to_corner);\n        sphere_to_corner.vsub(xi, sphere_to_corner);\n\n        if (sphere_to_corner.norm2() < R * R) {\n          if (justTest) {\n            return true;\n          }\n\n          found = true;\n          var r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n          r.ri.copy(sphere_to_corner);\n          r.ri.normalize();\n          r.ni.copy(r.ri);\n          r.ri.mult(R, r.ri);\n          r.rj.copy(rj); // Make relative to bodies\n\n          r.ri.vadd(xi, r.ri);\n          r.ri.vsub(bi.position, r.ri);\n          r.rj.vadd(xj, r.rj);\n          r.rj.vsub(bj.position, r.rj);\n          this.result.push(r);\n          this.createFrictionEquationsFromContact(r, this.frictionResult);\n        }\n      }\n    }\n  }\n\n  v3pool.release(rj);\n  rj = null; // Check edges\n\n  var edgeTangent = v3pool.get();\n  var edgeCenter = v3pool.get();\n  var r = v3pool.get(); // r = edge center to sphere center\n\n  var orthogonal = v3pool.get();\n  var dist = v3pool.get();\n  var Nsides = sides.length;\n\n  for (var j = 0; j !== Nsides && !found; j++) {\n    for (var k = 0; k !== Nsides && !found; k++) {\n      if (j % 3 !== k % 3) {\n        // Get edge tangent\n        sides[k].cross(sides[j], edgeTangent);\n        edgeTangent.normalize();\n        sides[j].vadd(sides[k], edgeCenter);\n        r.copy(xi);\n        r.vsub(edgeCenter, r);\n        r.vsub(xj, r);\n        var orthonorm = r.dot(edgeTangent); // distance from edge center to sphere center in the tangent direction\n\n        edgeTangent.mult(orthonorm, orthogonal); // Vector from edge center to sphere center in the tangent direction\n        // Find the third side orthogonal to this one\n\n        var l = 0;\n\n        while (l === j % 3 || l === k % 3) {\n          l++;\n        } // vec from edge center to sphere projected to the plane orthogonal to the edge tangent\n\n\n        dist.copy(xi);\n        dist.vsub(orthogonal, dist);\n        dist.vsub(edgeCenter, dist);\n        dist.vsub(xj, dist); // Distances in tangent direction and distance in the plane orthogonal to it\n\n        var tdist = Math.abs(orthonorm);\n        var ndist = dist.norm();\n\n        if (tdist < sides[l].norm() && ndist < R) {\n          if (justTest) {\n            return true;\n          }\n\n          found = true;\n          var res = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n          edgeCenter.vadd(orthogonal, res.rj); // box rj\n\n          res.rj.copy(res.rj);\n          dist.negate(res.ni);\n          res.ni.normalize();\n          res.ri.copy(res.rj);\n          res.ri.vadd(xj, res.ri);\n          res.ri.vsub(xi, res.ri);\n          res.ri.normalize();\n          res.ri.mult(R, res.ri); // Make relative to bodies\n\n          res.ri.vadd(xi, res.ri);\n          res.ri.vsub(bi.position, res.ri);\n          res.rj.vadd(xj, res.rj);\n          res.rj.vsub(bj.position, res.rj);\n          this.result.push(res);\n          this.createFrictionEquationsFromContact(res, this.frictionResult);\n        }\n      }\n    }\n  }\n\n  v3pool.release(edgeTangent, edgeCenter, r, orthogonal, dist);\n};\n\nvar convex_to_sphere = new Vec3();\nvar sphereConvex_edge = new Vec3();\nvar sphereConvex_edgeUnit = new Vec3();\nvar sphereConvex_sphereToCorner = new Vec3();\nvar sphereConvex_worldCorner = new Vec3();\nvar sphereConvex_worldNormal = new Vec3();\nvar sphereConvex_worldPoint = new Vec3();\nvar sphereConvex_worldSpherePointClosestToPlane = new Vec3();\nvar sphereConvex_penetrationVec = new Vec3();\nvar sphereConvex_sphereToWorldPoint = new Vec3();\n/**\n * @method sphereConvex\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\n\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.CONVEXPOLYHEDRON] = Narrowphase.prototype.sphereConvex = function (si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n  var v3pool = this.v3pool;\n  xi.vsub(xj, convex_to_sphere);\n  var normals = sj.faceNormals;\n  var faces = sj.faces;\n  var verts = sj.vertices;\n  var R = si.radius;\n  var penetrating_sides = []; // if(convex_to_sphere.norm2() > si.boundingSphereRadius + sj.boundingSphereRadius){\n  //     return;\n  // }\n  // Check corners\n\n  for (var i = 0; i !== verts.length; i++) {\n    var v = verts[i]; // World position of corner\n\n    var worldCorner = sphereConvex_worldCorner;\n    qj.vmult(v, worldCorner);\n    xj.vadd(worldCorner, worldCorner);\n    var sphere_to_corner = sphereConvex_sphereToCorner;\n    worldCorner.vsub(xi, sphere_to_corner);\n\n    if (sphere_to_corner.norm2() < R * R) {\n      if (justTest) {\n        return true;\n      }\n\n      found = true;\n      var r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n      r.ri.copy(sphere_to_corner);\n      r.ri.normalize();\n      r.ni.copy(r.ri);\n      r.ri.mult(R, r.ri);\n      worldCorner.vsub(xj, r.rj); // Should be relative to the body.\n\n      r.ri.vadd(xi, r.ri);\n      r.ri.vsub(bi.position, r.ri); // Should be relative to the body.\n\n      r.rj.vadd(xj, r.rj);\n      r.rj.vsub(bj.position, r.rj);\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n      return;\n    }\n  } // Check side (plane) intersections\n\n\n  var found = false;\n\n  for (var i = 0, nfaces = faces.length; i !== nfaces && found === false; i++) {\n    var normal = normals[i];\n    var face = faces[i]; // Get world-transformed normal of the face\n\n    var worldNormal = sphereConvex_worldNormal;\n    qj.vmult(normal, worldNormal); // Get a world vertex from the face\n\n    var worldPoint = sphereConvex_worldPoint;\n    qj.vmult(verts[face[0]], worldPoint);\n    worldPoint.vadd(xj, worldPoint); // Get a point on the sphere, closest to the face normal\n\n    var worldSpherePointClosestToPlane = sphereConvex_worldSpherePointClosestToPlane;\n    worldNormal.mult(-R, worldSpherePointClosestToPlane);\n    xi.vadd(worldSpherePointClosestToPlane, worldSpherePointClosestToPlane); // Vector from a face point to the closest point on the sphere\n\n    var penetrationVec = sphereConvex_penetrationVec;\n    worldSpherePointClosestToPlane.vsub(worldPoint, penetrationVec); // The penetration. Negative value means overlap.\n\n    var penetration = penetrationVec.dot(worldNormal);\n    var worldPointToSphere = sphereConvex_sphereToWorldPoint;\n    xi.vsub(worldPoint, worldPointToSphere);\n\n    if (penetration < 0 && worldPointToSphere.dot(worldNormal) > 0) {\n      // Intersects plane. Now check if the sphere is inside the face polygon\n      var faceVerts = []; // Face vertices, in world coords\n\n      for (var j = 0, Nverts = face.length; j !== Nverts; j++) {\n        var worldVertex = v3pool.get();\n        qj.vmult(verts[face[j]], worldVertex);\n        xj.vadd(worldVertex, worldVertex);\n        faceVerts.push(worldVertex);\n      }\n\n      if (pointInPolygon(faceVerts, worldNormal, xi)) {\n        // Is the sphere center in the face polygon?\n        if (justTest) {\n          return true;\n        }\n\n        found = true;\n        var r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n        worldNormal.mult(-R, r.ri); // Contact offset, from sphere center to contact\n\n        worldNormal.negate(r.ni); // Normal pointing out of sphere\n\n        var penetrationVec2 = v3pool.get();\n        worldNormal.mult(-penetration, penetrationVec2);\n        var penetrationSpherePoint = v3pool.get();\n        worldNormal.mult(-R, penetrationSpherePoint); //xi.vsub(xj).vadd(penetrationSpherePoint).vadd(penetrationVec2 , r.rj);\n\n        xi.vsub(xj, r.rj);\n        r.rj.vadd(penetrationSpherePoint, r.rj);\n        r.rj.vadd(penetrationVec2, r.rj); // Should be relative to the body.\n\n        r.rj.vadd(xj, r.rj);\n        r.rj.vsub(bj.position, r.rj); // Should be relative to the body.\n\n        r.ri.vadd(xi, r.ri);\n        r.ri.vsub(bi.position, r.ri);\n        v3pool.release(penetrationVec2);\n        v3pool.release(penetrationSpherePoint);\n        this.result.push(r);\n        this.createFrictionEquationsFromContact(r, this.frictionResult); // Release world vertices\n\n        for (var j = 0, Nfaceverts = faceVerts.length; j !== Nfaceverts; j++) {\n          v3pool.release(faceVerts[j]);\n        }\n\n        return; // We only expect *one* face contact\n      } else {\n        // Edge?\n        for (var j = 0; j !== face.length; j++) {\n          // Get two world transformed vertices\n          var v1 = v3pool.get();\n          var v2 = v3pool.get();\n          qj.vmult(verts[face[(j + 1) % face.length]], v1);\n          qj.vmult(verts[face[(j + 2) % face.length]], v2);\n          xj.vadd(v1, v1);\n          xj.vadd(v2, v2); // Construct edge vector\n\n          var edge = sphereConvex_edge;\n          v2.vsub(v1, edge); // Construct the same vector, but normalized\n\n          var edgeUnit = sphereConvex_edgeUnit;\n          edge.unit(edgeUnit); // p is xi projected onto the edge\n\n          var p = v3pool.get();\n          var v1_to_xi = v3pool.get();\n          xi.vsub(v1, v1_to_xi);\n          var dot = v1_to_xi.dot(edgeUnit);\n          edgeUnit.mult(dot, p);\n          p.vadd(v1, p); // Compute a vector from p to the center of the sphere\n\n          var xi_to_p = v3pool.get();\n          p.vsub(xi, xi_to_p); // Collision if the edge-sphere distance is less than the radius\n          // AND if p is in between v1 and v2\n\n          if (dot > 0 && dot * dot < edge.norm2() && xi_to_p.norm2() < R * R) {\n            // Collision if the edge-sphere distance is less than the radius\n            // Edge contact!\n            if (justTest) {\n              return true;\n            }\n\n            var r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n            p.vsub(xj, r.rj);\n            p.vsub(xi, r.ni);\n            r.ni.normalize();\n            r.ni.mult(R, r.ri); // Should be relative to the body.\n\n            r.rj.vadd(xj, r.rj);\n            r.rj.vsub(bj.position, r.rj); // Should be relative to the body.\n\n            r.ri.vadd(xi, r.ri);\n            r.ri.vsub(bi.position, r.ri);\n            this.result.push(r);\n            this.createFrictionEquationsFromContact(r, this.frictionResult); // Release world vertices\n\n            for (var j = 0, Nfaceverts = faceVerts.length; j !== Nfaceverts; j++) {\n              v3pool.release(faceVerts[j]);\n            }\n\n            v3pool.release(v1);\n            v3pool.release(v2);\n            v3pool.release(p);\n            v3pool.release(xi_to_p);\n            v3pool.release(v1_to_xi);\n            return;\n          }\n\n          v3pool.release(v1);\n          v3pool.release(v2);\n          v3pool.release(p);\n          v3pool.release(xi_to_p);\n          v3pool.release(v1_to_xi);\n        }\n      } // Release world vertices\n\n\n      for (var j = 0, Nfaceverts = faceVerts.length; j !== Nfaceverts; j++) {\n        v3pool.release(faceVerts[j]);\n      }\n    }\n  }\n};\n\nvar planeBox_normal = new Vec3();\nvar plane_to_corner = new Vec3();\n/**\n * @method planeBox\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\n\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.BOX] = Narrowphase.prototype.planeBox = function (si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n  sj.convexPolyhedronRepresentation.material = sj.material;\n  sj.convexPolyhedronRepresentation.collisionResponse = sj.collisionResponse;\n  sj.convexPolyhedronRepresentation.id = sj.id;\n  return this.planeConvex(si, sj.convexPolyhedronRepresentation, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n};\n\nvar planeConvex_v = new Vec3();\nvar planeConvex_normal = new Vec3();\nvar planeConvex_relpos = new Vec3();\nvar planeConvex_projected = new Vec3();\n/**\n * @method planeConvex\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\n\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.CONVEXPOLYHEDRON] = Narrowphase.prototype.planeConvex = function (planeShape, convexShape, planePosition, convexPosition, planeQuat, convexQuat, planeBody, convexBody, si, sj, justTest) {\n  // Simply return the points behind the plane.\n  var worldVertex = planeConvex_v,\n      worldNormal = planeConvex_normal;\n  worldNormal.set(0, 0, 1);\n  planeQuat.vmult(worldNormal, worldNormal); // Turn normal according to plane orientation\n\n  var numContacts = 0;\n  var relpos = planeConvex_relpos;\n\n  for (var i = 0; i !== convexShape.vertices.length; i++) {\n    // Get world convex vertex\n    worldVertex.copy(convexShape.vertices[i]);\n    convexQuat.vmult(worldVertex, worldVertex);\n    convexPosition.vadd(worldVertex, worldVertex);\n    worldVertex.vsub(planePosition, relpos);\n    var dot = worldNormal.dot(relpos);\n\n    if (dot <= 0.0) {\n      if (justTest) {\n        return true;\n      }\n\n      var r = this.createContactEquation(planeBody, convexBody, planeShape, convexShape, si, sj); // Get vertex position projected on plane\n\n      var projected = planeConvex_projected;\n      worldNormal.mult(worldNormal.dot(relpos), projected);\n      worldVertex.vsub(projected, projected);\n      projected.vsub(planePosition, r.ri); // From plane to vertex projected on plane\n\n      r.ni.copy(worldNormal); // Contact normal is the plane normal out from plane\n      // rj is now just the vector from the convex center to the vertex\n\n      worldVertex.vsub(convexPosition, r.rj); // Make it relative to the body\n\n      r.ri.vadd(planePosition, r.ri);\n      r.ri.vsub(planeBody.position, r.ri);\n      r.rj.vadd(convexPosition, r.rj);\n      r.rj.vsub(convexBody.position, r.rj);\n      this.result.push(r);\n      numContacts++;\n\n      if (!this.enableFrictionReduction) {\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n      }\n    }\n  }\n\n  if (this.enableFrictionReduction && numContacts) {\n    this.createFrictionFromAverage(numContacts);\n  }\n};\n\nvar convexConvex_sepAxis = new Vec3();\nvar convexConvex_q = new Vec3();\n/**\n * @method convexConvex\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\n\nNarrowphase.prototype[Shape.types.CONVEXPOLYHEDRON] = Narrowphase.prototype.convexConvex = function (si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest, faceListA, faceListB) {\n  var sepAxis = convexConvex_sepAxis;\n\n  if (xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius) {\n    return;\n  }\n\n  if (si.findSeparatingAxis(sj, xi, qi, xj, qj, sepAxis, faceListA, faceListB)) {\n    var res = [];\n    var q = convexConvex_q;\n    si.clipAgainstHull(xi, qi, sj, xj, qj, sepAxis, -100, 100, res);\n    var numContacts = 0;\n\n    for (var j = 0; j !== res.length; j++) {\n      if (justTest) {\n        return true;\n      }\n\n      var r = this.createContactEquation(bi, bj, si, sj, rsi, rsj),\n          ri = r.ri,\n          rj = r.rj;\n      sepAxis.negate(r.ni);\n      res[j].normal.negate(q);\n      q.mult(res[j].depth, q);\n      res[j].point.vadd(q, ri);\n      rj.copy(res[j].point); // Contact points are in world coordinates. Transform back to relative\n\n      ri.vsub(xi, ri);\n      rj.vsub(xj, rj); // Make relative to bodies\n\n      ri.vadd(xi, ri);\n      ri.vsub(bi.position, ri);\n      rj.vadd(xj, rj);\n      rj.vsub(bj.position, rj);\n      this.result.push(r);\n      numContacts++;\n\n      if (!this.enableFrictionReduction) {\n        this.createFrictionEquationsFromContact(r, this.frictionResult);\n      }\n    }\n\n    if (this.enableFrictionReduction && numContacts) {\n      this.createFrictionFromAverage(numContacts);\n    }\n  }\n};\n/**\n * @method convexTrimesh\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\n// Narrowphase.prototype[Shape.types.CONVEXPOLYHEDRON | Shape.types.TRIMESH] =\n// Narrowphase.prototype.convexTrimesh = function(si,sj,xi,xj,qi,qj,bi,bj,rsi,rsj,faceListA,faceListB){\n//     var sepAxis = convexConvex_sepAxis;\n//     if(xi.distanceTo(xj) > si.boundingSphereRadius + sj.boundingSphereRadius){\n//         return;\n//     }\n//     // Construct a temp hull for each triangle\n//     var hullB = new ConvexPolyhedron();\n//     hullB.faces = [[0,1,2]];\n//     var va = new Vec3();\n//     var vb = new Vec3();\n//     var vc = new Vec3();\n//     hullB.vertices = [\n//         va,\n//         vb,\n//         vc\n//     ];\n//     for (var i = 0; i < sj.indices.length / 3; i++) {\n//         var triangleNormal = new Vec3();\n//         sj.getNormal(i, triangleNormal);\n//         hullB.faceNormals = [triangleNormal];\n//         sj.getTriangleVertices(i, va, vb, vc);\n//         var d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\n//         if(!d){\n//             triangleNormal.scale(-1, triangleNormal);\n//             d = si.testSepAxis(triangleNormal, hullB, xi, qi, xj, qj);\n//             if(!d){\n//                 continue;\n//             }\n//         }\n//         var res = [];\n//         var q = convexConvex_q;\n//         si.clipAgainstHull(xi,qi,hullB,xj,qj,triangleNormal,-100,100,res);\n//         for(var j = 0; j !== res.length; j++){\n//             var r = this.createContactEquation(bi,bj,si,sj,rsi,rsj),\n//                 ri = r.ri,\n//                 rj = r.rj;\n//             r.ni.copy(triangleNormal);\n//             r.ni.negate(r.ni);\n//             res[j].normal.negate(q);\n//             q.mult(res[j].depth, q);\n//             res[j].point.vadd(q, ri);\n//             rj.copy(res[j].point);\n//             // Contact points are in world coordinates. Transform back to relative\n//             ri.vsub(xi,ri);\n//             rj.vsub(xj,rj);\n//             // Make relative to bodies\n//             ri.vadd(xi, ri);\n//             ri.vsub(bi.position, ri);\n//             rj.vadd(xj, rj);\n//             rj.vsub(bj.position, rj);\n//             result.push(r);\n//         }\n//     }\n// };\n\n\nvar particlePlane_normal = new Vec3();\nvar particlePlane_relpos = new Vec3();\nvar particlePlane_projected = new Vec3();\n/**\n * @method particlePlane\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\n\nNarrowphase.prototype[Shape.types.PLANE | Shape.types.PARTICLE] = Narrowphase.prototype.planeParticle = function (sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest) {\n  var normal = particlePlane_normal;\n  normal.set(0, 0, 1);\n  bj.quaternion.vmult(normal, normal); // Turn normal according to plane orientation\n\n  var relpos = particlePlane_relpos;\n  xi.vsub(bj.position, relpos);\n  var dot = normal.dot(relpos);\n\n  if (dot <= 0.0) {\n    if (justTest) {\n      return true;\n    }\n\n    var r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n    r.ni.copy(normal); // Contact normal is the plane normal\n\n    r.ni.negate(r.ni);\n    r.ri.set(0, 0, 0); // Center of particle\n    // Get particle position projected on plane\n\n    var projected = particlePlane_projected;\n    normal.mult(normal.dot(xi), projected);\n    xi.vsub(projected, projected); //projected.vadd(bj.position,projected);\n    // rj is now the projected world position minus plane position\n\n    r.rj.copy(projected);\n    this.result.push(r);\n    this.createFrictionEquationsFromContact(r, this.frictionResult);\n  }\n};\n\nvar particleSphere_normal = new Vec3();\n/**\n * @method particleSphere\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\n\nNarrowphase.prototype[Shape.types.PARTICLE | Shape.types.SPHERE] = Narrowphase.prototype.sphereParticle = function (sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest) {\n  // The normal is the unit vector from sphere center to particle center\n  var normal = particleSphere_normal;\n  normal.set(0, 0, 1);\n  xi.vsub(xj, normal);\n  var lengthSquared = normal.norm2();\n\n  if (lengthSquared <= sj.radius * sj.radius) {\n    if (justTest) {\n      return true;\n    }\n\n    var r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n    normal.normalize();\n    r.rj.copy(normal);\n    r.rj.mult(sj.radius, r.rj);\n    r.ni.copy(normal); // Contact normal\n\n    r.ni.negate(r.ni);\n    r.ri.set(0, 0, 0); // Center of particle\n\n    this.result.push(r);\n    this.createFrictionEquationsFromContact(r, this.frictionResult);\n  }\n}; // WIP\n\n\nvar cqj = new Quaternion();\nvar convexParticle_local = new Vec3();\nvar convexParticle_normal = new Vec3();\nvar convexParticle_penetratedFaceNormal = new Vec3();\nvar convexParticle_vertexToParticle = new Vec3();\nvar convexParticle_worldPenetrationVec = new Vec3();\n/**\n * @method convexParticle\n * @param  {Array}      result\n * @param  {Shape}      si\n * @param  {Shape}      sj\n * @param  {Vec3}       xi\n * @param  {Vec3}       xj\n * @param  {Quaternion} qi\n * @param  {Quaternion} qj\n * @param  {Body}       bi\n * @param  {Body}       bj\n */\n\nNarrowphase.prototype[Shape.types.PARTICLE | Shape.types.CONVEXPOLYHEDRON] = Narrowphase.prototype.convexParticle = function (sj, si, xj, xi, qj, qi, bj, bi, rsi, rsj, justTest) {\n  var penetratedFaceIndex = -1;\n  var penetratedFaceNormal = convexParticle_penetratedFaceNormal;\n  var worldPenetrationVec = convexParticle_worldPenetrationVec;\n  var minPenetration = null;\n  var numDetectedFaces = 0; // Convert particle position xi to local coords in the convex\n\n  var local = convexParticle_local;\n  local.copy(xi);\n  local.vsub(xj, local); // Convert position to relative the convex origin\n\n  qj.conjugate(cqj);\n  cqj.vmult(local, local);\n\n  if (sj.pointIsInside(local)) {\n    if (sj.worldVerticesNeedsUpdate) {\n      sj.computeWorldVertices(xj, qj);\n    }\n\n    if (sj.worldFaceNormalsNeedsUpdate) {\n      sj.computeWorldFaceNormals(qj);\n    } // For each world polygon in the polyhedra\n\n\n    for (var i = 0, nfaces = sj.faces.length; i !== nfaces; i++) {\n      // Construct world face vertices\n      var verts = [sj.worldVertices[sj.faces[i][0]]];\n      var normal = sj.worldFaceNormals[i]; // Check how much the particle penetrates the polygon plane.\n\n      xi.vsub(verts[0], convexParticle_vertexToParticle);\n      var penetration = -normal.dot(convexParticle_vertexToParticle);\n\n      if (minPenetration === null || Math.abs(penetration) < Math.abs(minPenetration)) {\n        if (justTest) {\n          return true;\n        }\n\n        minPenetration = penetration;\n        penetratedFaceIndex = i;\n        penetratedFaceNormal.copy(normal);\n        numDetectedFaces++;\n      }\n    }\n\n    if (penetratedFaceIndex !== -1) {\n      // Setup contact\n      var r = this.createContactEquation(bi, bj, si, sj, rsi, rsj);\n      penetratedFaceNormal.mult(minPenetration, worldPenetrationVec); // rj is the particle position projected to the face\n\n      worldPenetrationVec.vadd(xi, worldPenetrationVec);\n      worldPenetrationVec.vsub(xj, worldPenetrationVec);\n      r.rj.copy(worldPenetrationVec); //var projectedToFace = xi.vsub(xj).vadd(worldPenetrationVec);\n      //projectedToFace.copy(r.rj);\n      //qj.vmult(r.rj,r.rj);\n\n      penetratedFaceNormal.negate(r.ni); // Contact normal\n\n      r.ri.set(0, 0, 0); // Center of particle\n\n      var ri = r.ri,\n          rj = r.rj; // Make relative to bodies\n\n      ri.vadd(xi, ri);\n      ri.vsub(bi.position, ri);\n      rj.vadd(xj, rj);\n      rj.vsub(bj.position, rj);\n      this.result.push(r);\n      this.createFrictionEquationsFromContact(r, this.frictionResult);\n    } else {\n      console.warn(\"Point found inside convex, but did not find penetrating face!\");\n    }\n  }\n};\n\nNarrowphase.prototype[Shape.types.BOX | Shape.types.HEIGHTFIELD] = Narrowphase.prototype.boxHeightfield = function (si, sj, xi, xj, qi, qj, bi, bj, rsi, rsj, justTest) {\n  si.convexPolyhedronRepresentation.material = si.material;\n  si.convexPolyhedronRepresentation.collisionResponse = si.collisionResponse;\n  return this.convexHeightfield(si.convexPolyhedronRepresentation, sj, xi, xj, qi, qj, bi, bj, si, sj, justTest);\n};\n\nvar convexHeightfield_tmp1 = new Vec3();\nvar convexHeightfield_tmp2 = new Vec3();\nvar convexHeightfield_faceList = [0];\n/**\n * @method convexHeightfield\n */\n\nNarrowphase.prototype[Shape.types.CONVEXPOLYHEDRON | Shape.types.HEIGHTFIELD] = Narrowphase.prototype.convexHeightfield = function (convexShape, hfShape, convexPos, hfPos, convexQuat, hfQuat, convexBody, hfBody, rsi, rsj, justTest) {\n  var data = hfShape.data,\n      w = hfShape.elementSize,\n      radius = convexShape.boundingSphereRadius,\n      worldPillarOffset = convexHeightfield_tmp2,\n      faceList = convexHeightfield_faceList; // Get sphere position to heightfield local!\n\n  var localConvexPos = convexHeightfield_tmp1;\n  Transform.pointToLocalFrame(hfPos, hfQuat, convexPos, localConvexPos); // Get the index of the data points to test against\n\n  var iMinX = Math.floor((localConvexPos.x - radius) / w) - 1,\n      iMaxX = Math.ceil((localConvexPos.x + radius) / w) + 1,\n      iMinY = Math.floor((localConvexPos.y - radius) / w) - 1,\n      iMaxY = Math.ceil((localConvexPos.y + radius) / w) + 1; // Bail out if we are out of the terrain\n\n  if (iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMinY > data[0].length) {\n    return;\n  } // Clamp index to edges\n\n\n  if (iMinX < 0) {\n    iMinX = 0;\n  }\n\n  if (iMaxX < 0) {\n    iMaxX = 0;\n  }\n\n  if (iMinY < 0) {\n    iMinY = 0;\n  }\n\n  if (iMaxY < 0) {\n    iMaxY = 0;\n  }\n\n  if (iMinX >= data.length) {\n    iMinX = data.length - 1;\n  }\n\n  if (iMaxX >= data.length) {\n    iMaxX = data.length - 1;\n  }\n\n  if (iMaxY >= data[0].length) {\n    iMaxY = data[0].length - 1;\n  }\n\n  if (iMinY >= data[0].length) {\n    iMinY = data[0].length - 1;\n  }\n\n  var minMax = [];\n  hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n  var min = minMax[0];\n  var max = minMax[1]; // Bail out if we're cant touch the bounding height box\n\n  if (localConvexPos.z - radius > max || localConvexPos.z + radius < min) {\n    return;\n  }\n\n  for (var i = iMinX; i < iMaxX; i++) {\n    for (var j = iMinY; j < iMaxY; j++) {\n      var intersecting = false; // Lower triangle\n\n      hfShape.getConvexTrianglePillar(i, j, false);\n      Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n      if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\n        intersecting = this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, justTest, faceList, null);\n      }\n\n      if (justTest && intersecting) {\n        return true;\n      } // Upper triangle\n\n\n      hfShape.getConvexTrianglePillar(i, j, true);\n      Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n      if (convexPos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + convexShape.boundingSphereRadius) {\n        intersecting = this.convexConvex(convexShape, hfShape.pillarConvex, convexPos, worldPillarOffset, convexQuat, hfQuat, convexBody, hfBody, null, null, justTest, faceList, null);\n      }\n\n      if (justTest && intersecting) {\n        return true;\n      }\n    }\n  }\n};\n\nvar sphereHeightfield_tmp1 = new Vec3();\nvar sphereHeightfield_tmp2 = new Vec3();\n/**\n * @method sphereHeightfield\n */\n\nNarrowphase.prototype[Shape.types.SPHERE | Shape.types.HEIGHTFIELD] = Narrowphase.prototype.sphereHeightfield = function (sphereShape, hfShape, spherePos, hfPos, sphereQuat, hfQuat, sphereBody, hfBody, rsi, rsj, justTest) {\n  var data = hfShape.data,\n      radius = sphereShape.radius,\n      w = hfShape.elementSize,\n      worldPillarOffset = sphereHeightfield_tmp2; // Get sphere position to heightfield local!\n\n  var localSpherePos = sphereHeightfield_tmp1;\n  Transform.pointToLocalFrame(hfPos, hfQuat, spherePos, localSpherePos); // Get the index of the data points to test against\n\n  var iMinX = Math.floor((localSpherePos.x - radius) / w) - 1,\n      iMaxX = Math.ceil((localSpherePos.x + radius) / w) + 1,\n      iMinY = Math.floor((localSpherePos.y - radius) / w) - 1,\n      iMaxY = Math.ceil((localSpherePos.y + radius) / w) + 1; // Bail out if we are out of the terrain\n\n  if (iMaxX < 0 || iMaxY < 0 || iMinX > data.length || iMaxY > data[0].length) {\n    return;\n  } // Clamp index to edges\n\n\n  if (iMinX < 0) {\n    iMinX = 0;\n  }\n\n  if (iMaxX < 0) {\n    iMaxX = 0;\n  }\n\n  if (iMinY < 0) {\n    iMinY = 0;\n  }\n\n  if (iMaxY < 0) {\n    iMaxY = 0;\n  }\n\n  if (iMinX >= data.length) {\n    iMinX = data.length - 1;\n  }\n\n  if (iMaxX >= data.length) {\n    iMaxX = data.length - 1;\n  }\n\n  if (iMaxY >= data[0].length) {\n    iMaxY = data[0].length - 1;\n  }\n\n  if (iMinY >= data[0].length) {\n    iMinY = data[0].length - 1;\n  }\n\n  var minMax = [];\n  hfShape.getRectMinMax(iMinX, iMinY, iMaxX, iMaxY, minMax);\n  var min = minMax[0];\n  var max = minMax[1]; // Bail out if we're cant touch the bounding height box\n\n  if (localSpherePos.z - radius > max || localSpherePos.z + radius < min) {\n    return;\n  }\n\n  var result = this.result;\n\n  for (var i = iMinX; i < iMaxX; i++) {\n    for (var j = iMinY; j < iMaxY; j++) {\n      var numContactsBefore = result.length;\n      var intersecting = false; // Lower triangle\n\n      hfShape.getConvexTrianglePillar(i, j, false);\n      Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n      if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\n        intersecting = this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody, sphereShape, hfShape, justTest);\n      }\n\n      if (justTest && intersecting) {\n        return true;\n      } // Upper triangle\n\n\n      hfShape.getConvexTrianglePillar(i, j, true);\n      Transform.pointToWorldFrame(hfPos, hfQuat, hfShape.pillarOffset, worldPillarOffset);\n\n      if (spherePos.distanceTo(worldPillarOffset) < hfShape.pillarConvex.boundingSphereRadius + sphereShape.boundingSphereRadius) {\n        intersecting = this.sphereConvex(sphereShape, hfShape.pillarConvex, spherePos, worldPillarOffset, sphereQuat, hfQuat, sphereBody, hfBody, sphereShape, hfShape, justTest);\n      }\n\n      if (justTest && intersecting) {\n        return true;\n      }\n\n      var numContacts = result.length - numContactsBefore;\n\n      if (numContacts > 2) {\n        return;\n      }\n      /*\n      // Skip all but 1\n      for (var k = 0; k < numContacts - 1; k++) {\n          result.pop();\n      }\n      */\n\n    }\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/world/Narrowphase.js?");

/***/ }),

/***/ "./node_modules/cannon/src/world/World.js":
/*!************************************************!*\
  !*** ./node_modules/cannon/src/world/World.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* global performance */\nmodule.exports = World;\n\nvar Shape = __webpack_require__(/*! ../shapes/Shape */ \"./node_modules/cannon/src/shapes/Shape.js\");\n\nvar Vec3 = __webpack_require__(/*! ../math/Vec3 */ \"./node_modules/cannon/src/math/Vec3.js\");\n\nvar Quaternion = __webpack_require__(/*! ../math/Quaternion */ \"./node_modules/cannon/src/math/Quaternion.js\");\n\nvar GSSolver = __webpack_require__(/*! ../solver/GSSolver */ \"./node_modules/cannon/src/solver/GSSolver.js\");\n\nvar ContactEquation = __webpack_require__(/*! ../equations/ContactEquation */ \"./node_modules/cannon/src/equations/ContactEquation.js\");\n\nvar FrictionEquation = __webpack_require__(/*! ../equations/FrictionEquation */ \"./node_modules/cannon/src/equations/FrictionEquation.js\");\n\nvar Narrowphase = __webpack_require__(/*! ./Narrowphase */ \"./node_modules/cannon/src/world/Narrowphase.js\");\n\nvar EventTarget = __webpack_require__(/*! ../utils/EventTarget */ \"./node_modules/cannon/src/utils/EventTarget.js\");\n\nvar ArrayCollisionMatrix = __webpack_require__(/*! ../collision/ArrayCollisionMatrix */ \"./node_modules/cannon/src/collision/ArrayCollisionMatrix.js\");\n\nvar OverlapKeeper = __webpack_require__(/*! ../collision/OverlapKeeper */ \"./node_modules/cannon/src/collision/OverlapKeeper.js\");\n\nvar Material = __webpack_require__(/*! ../material/Material */ \"./node_modules/cannon/src/material/Material.js\");\n\nvar ContactMaterial = __webpack_require__(/*! ../material/ContactMaterial */ \"./node_modules/cannon/src/material/ContactMaterial.js\");\n\nvar Body = __webpack_require__(/*! ../objects/Body */ \"./node_modules/cannon/src/objects/Body.js\");\n\nvar TupleDictionary = __webpack_require__(/*! ../utils/TupleDictionary */ \"./node_modules/cannon/src/utils/TupleDictionary.js\");\n\nvar RaycastResult = __webpack_require__(/*! ../collision/RaycastResult */ \"./node_modules/cannon/src/collision/RaycastResult.js\");\n\nvar AABB = __webpack_require__(/*! ../collision/AABB */ \"./node_modules/cannon/src/collision/AABB.js\");\n\nvar Ray = __webpack_require__(/*! ../collision/Ray */ \"./node_modules/cannon/src/collision/Ray.js\");\n\nvar NaiveBroadphase = __webpack_require__(/*! ../collision/NaiveBroadphase */ \"./node_modules/cannon/src/collision/NaiveBroadphase.js\");\n/**\n * The physics world\n * @class World\n * @constructor\n * @extends EventTarget\n * @param {object} [options]\n * @param {Vec3} [options.gravity]\n * @param {boolean} [options.allowSleep]\n * @param {Broadphase} [options.broadphase]\n * @param {Solver} [options.solver]\n * @param {boolean} [options.quatNormalizeFast]\n * @param {number} [options.quatNormalizeSkip]\n */\n\n\nfunction World(options) {\n  options = options || {};\n  EventTarget.apply(this);\n  /**\n   * Currently / last used timestep. Is set to -1 if not available. This value is updated before each internal step, which means that it is \"fresh\" inside event callbacks.\n   * @property {Number} dt\n   */\n\n  this.dt = -1;\n  /**\n   * Makes bodies go to sleep when they've been inactive\n   * @property allowSleep\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.allowSleep = !!options.allowSleep;\n  /**\n   * All the current contacts (instances of ContactEquation) in the world.\n   * @property contacts\n   * @type {Array}\n   */\n\n  this.contacts = [];\n  this.frictionEquations = [];\n  /**\n   * How often to normalize quaternions. Set to 0 for every step, 1 for every second etc.. A larger value increases performance. If bodies tend to explode, set to a smaller value (zero to be sure nothing can go wrong).\n   * @property quatNormalizeSkip\n   * @type {Number}\n   * @default 0\n   */\n\n  this.quatNormalizeSkip = options.quatNormalizeSkip !== undefined ? options.quatNormalizeSkip : 0;\n  /**\n   * Set to true to use fast quaternion normalization. It is often enough accurate to use. If bodies tend to explode, set to false.\n   * @property quatNormalizeFast\n   * @type {Boolean}\n   * @see Quaternion.normalizeFast\n   * @see Quaternion.normalize\n   * @default false\n   */\n\n  this.quatNormalizeFast = options.quatNormalizeFast !== undefined ? options.quatNormalizeFast : false;\n  /**\n   * The wall-clock time since simulation start\n   * @property time\n   * @type {Number}\n   */\n\n  this.time = 0.0;\n  /**\n   * Number of timesteps taken since start\n   * @property stepnumber\n   * @type {Number}\n   */\n\n  this.stepnumber = 0; /// Default and last timestep sizes\n\n  this.default_dt = 1 / 60;\n  this.nextId = 0;\n  /**\n   * @property gravity\n   * @type {Vec3}\n   */\n\n  this.gravity = new Vec3();\n\n  if (options.gravity) {\n    this.gravity.copy(options.gravity);\n  }\n  /**\n   * The broadphase algorithm to use. Default is NaiveBroadphase\n   * @property broadphase\n   * @type {Broadphase}\n   */\n\n\n  this.broadphase = options.broadphase !== undefined ? options.broadphase : new NaiveBroadphase();\n  /**\n   * @property bodies\n   * @type {Array}\n   */\n\n  this.bodies = [];\n  /**\n   * The solver algorithm to use. Default is GSSolver\n   * @property solver\n   * @type {Solver}\n   */\n\n  this.solver = options.solver !== undefined ? options.solver : new GSSolver();\n  /**\n   * @property constraints\n   * @type {Array}\n   */\n\n  this.constraints = [];\n  /**\n   * @property narrowphase\n   * @type {Narrowphase}\n   */\n\n  this.narrowphase = new Narrowphase(this);\n  /**\n   * @property {ArrayCollisionMatrix} collisionMatrix\n  * @type {ArrayCollisionMatrix}\n  */\n\n  this.collisionMatrix = new ArrayCollisionMatrix();\n  /**\n   * CollisionMatrix from the previous step.\n   * @property {ArrayCollisionMatrix} collisionMatrixPrevious\n  * @type {ArrayCollisionMatrix}\n  */\n\n  this.collisionMatrixPrevious = new ArrayCollisionMatrix();\n  this.bodyOverlapKeeper = new OverlapKeeper();\n  this.shapeOverlapKeeper = new OverlapKeeper();\n  /**\n   * All added materials\n   * @property materials\n   * @type {Array}\n   */\n\n  this.materials = [];\n  /**\n   * @property contactmaterials\n   * @type {Array}\n   */\n\n  this.contactmaterials = [];\n  /**\n   * Used to look up a ContactMaterial given two instances of Material.\n   * @property {TupleDictionary} contactMaterialTable\n   */\n\n  this.contactMaterialTable = new TupleDictionary();\n  this.defaultMaterial = new Material(\"default\");\n  /**\n   * This contact material is used if no suitable contactmaterial is found for a contact.\n   * @property defaultContactMaterial\n   * @type {ContactMaterial}\n   */\n\n  this.defaultContactMaterial = new ContactMaterial(this.defaultMaterial, this.defaultMaterial, {\n    friction: 0.3,\n    restitution: 0.0\n  });\n  /**\n   * @property doProfiling\n   * @type {Boolean}\n   */\n\n  this.doProfiling = false;\n  /**\n   * @property profile\n   * @type {Object}\n   */\n\n  this.profile = {\n    solve: 0,\n    makeContactConstraints: 0,\n    broadphase: 0,\n    integrate: 0,\n    narrowphase: 0\n  };\n  /**\n   * Time accumulator for interpolation. See http://gafferongames.com/game-physics/fix-your-timestep/\n   * @property {Number} accumulator\n   */\n\n  this.accumulator = 0;\n  /**\n   * @property subsystems\n   * @type {Array}\n   */\n\n  this.subsystems = [];\n  /**\n   * Dispatched after a body has been added to the world.\n   * @event addBody\n   * @param {Body} body The body that has been added to the world.\n   */\n\n  this.addBodyEvent = {\n    type: \"addBody\",\n    body: null\n  };\n  /**\n   * Dispatched after a body has been removed from the world.\n   * @event removeBody\n   * @param {Body} body The body that has been removed from the world.\n   */\n\n  this.removeBodyEvent = {\n    type: \"removeBody\",\n    body: null\n  };\n  this.idToBodyMap = {};\n  this.broadphase.setWorld(this);\n}\n\nWorld.prototype = new EventTarget(); // Temp stuff\n\nvar tmpAABB1 = new AABB();\nvar tmpArray1 = [];\nvar tmpRay = new Ray();\n/**\n * Get the contact material between materials m1 and m2\n * @method getContactMaterial\n * @param {Material} m1\n * @param {Material} m2\n * @return {ContactMaterial} The contact material if it was found.\n */\n\nWorld.prototype.getContactMaterial = function (m1, m2) {\n  return this.contactMaterialTable.get(m1.id, m2.id); //this.contactmaterials[this.mats2cmat[i+j*this.materials.length]];\n};\n/**\n * Get number of objects in the world.\n * @method numObjects\n * @return {Number}\n * @deprecated\n */\n\n\nWorld.prototype.numObjects = function () {\n  return this.bodies.length;\n};\n/**\n * Store old collision state info\n * @method collisionMatrixTick\n */\n\n\nWorld.prototype.collisionMatrixTick = function () {\n  var temp = this.collisionMatrixPrevious;\n  this.collisionMatrixPrevious = this.collisionMatrix;\n  this.collisionMatrix = temp;\n  this.collisionMatrix.reset();\n  this.bodyOverlapKeeper.tick();\n  this.shapeOverlapKeeper.tick();\n};\n/**\n * Add a rigid body to the simulation.\n * @method add\n * @param {Body} body\n * @todo If the simulation has not yet started, why recrete and copy arrays for each body? Accumulate in dynamic arrays in this case.\n * @todo Adding an array of bodies should be possible. This would save some loops too\n * @deprecated Use .addBody instead\n */\n\n\nWorld.prototype.add = World.prototype.addBody = function (body) {\n  if (this.bodies.indexOf(body) !== -1) {\n    return;\n  }\n\n  body.index = this.bodies.length;\n  this.bodies.push(body);\n  body.world = this;\n  body.initPosition.copy(body.position);\n  body.initVelocity.copy(body.velocity);\n  body.timeLastSleepy = this.time;\n\n  if (body instanceof Body) {\n    body.initAngularVelocity.copy(body.angularVelocity);\n    body.initQuaternion.copy(body.quaternion);\n  }\n\n  this.collisionMatrix.setNumObjects(this.bodies.length);\n  this.addBodyEvent.body = body;\n  this.idToBodyMap[body.id] = body;\n  this.dispatchEvent(this.addBodyEvent);\n};\n/**\n * Add a constraint to the simulation.\n * @method addConstraint\n * @param {Constraint} c\n */\n\n\nWorld.prototype.addConstraint = function (c) {\n  this.constraints.push(c);\n};\n/**\n * Removes a constraint\n * @method removeConstraint\n * @param {Constraint} c\n */\n\n\nWorld.prototype.removeConstraint = function (c) {\n  var idx = this.constraints.indexOf(c);\n\n  if (idx !== -1) {\n    this.constraints.splice(idx, 1);\n  }\n};\n/**\n * Raycast test\n * @method rayTest\n * @param {Vec3} from\n * @param {Vec3} to\n * @param {RaycastResult} result\n * @deprecated Use .raycastAll, .raycastClosest or .raycastAny instead.\n */\n\n\nWorld.prototype.rayTest = function (from, to, result) {\n  if (result instanceof RaycastResult) {\n    // Do raycastclosest\n    this.raycastClosest(from, to, {\n      skipBackfaces: true\n    }, result);\n  } else {\n    // Do raycastAll\n    this.raycastAll(from, to, {\n      skipBackfaces: true\n    }, result);\n  }\n};\n/**\n * Ray cast against all bodies. The provided callback will be executed for each hit with a RaycastResult as single argument.\n * @method raycastAll\n * @param  {Vec3} from\n * @param  {Vec3} to\n * @param  {Object} options\n * @param  {number} [options.collisionFilterMask=-1]\n * @param  {number} [options.collisionFilterGroup=-1]\n * @param  {boolean} [options.skipBackfaces=false]\n * @param  {boolean} [options.checkCollisionResponse=true]\n * @param  {Function} callback\n * @return {boolean} True if any body was hit.\n */\n\n\nWorld.prototype.raycastAll = function (from, to, options, callback) {\n  options.mode = Ray.ALL;\n  options.from = from;\n  options.to = to;\n  options.callback = callback;\n  return tmpRay.intersectWorld(this, options);\n};\n/**\n * Ray cast, and stop at the first result. Note that the order is random - but the method is fast.\n * @method raycastAny\n * @param  {Vec3} from\n * @param  {Vec3} to\n * @param  {Object} options\n * @param  {number} [options.collisionFilterMask=-1]\n * @param  {number} [options.collisionFilterGroup=-1]\n * @param  {boolean} [options.skipBackfaces=false]\n * @param  {boolean} [options.checkCollisionResponse=true]\n * @param  {RaycastResult} result\n * @return {boolean} True if any body was hit.\n */\n\n\nWorld.prototype.raycastAny = function (from, to, options, result) {\n  options.mode = Ray.ANY;\n  options.from = from;\n  options.to = to;\n  options.result = result;\n  return tmpRay.intersectWorld(this, options);\n};\n/**\n * Ray cast, and return information of the closest hit.\n * @method raycastClosest\n * @param  {Vec3} from\n * @param  {Vec3} to\n * @param  {Object} options\n * @param  {number} [options.collisionFilterMask=-1]\n * @param  {number} [options.collisionFilterGroup=-1]\n * @param  {boolean} [options.skipBackfaces=false]\n * @param  {boolean} [options.checkCollisionResponse=true]\n * @param  {RaycastResult} result\n * @return {boolean} True if any body was hit.\n */\n\n\nWorld.prototype.raycastClosest = function (from, to, options, result) {\n  options.mode = Ray.CLOSEST;\n  options.from = from;\n  options.to = to;\n  options.result = result;\n  return tmpRay.intersectWorld(this, options);\n};\n/**\n * Remove a rigid body from the simulation.\n * @method remove\n * @param {Body} body\n * @deprecated Use .removeBody instead\n */\n\n\nWorld.prototype.remove = function (body) {\n  body.world = null;\n  var n = this.bodies.length - 1,\n      bodies = this.bodies,\n      idx = bodies.indexOf(body);\n\n  if (idx !== -1) {\n    bodies.splice(idx, 1); // Todo: should use a garbage free method\n    // Recompute index\n\n    for (var i = 0; i !== bodies.length; i++) {\n      bodies[i].index = i;\n    }\n\n    this.collisionMatrix.setNumObjects(n);\n    this.removeBodyEvent.body = body;\n    delete this.idToBodyMap[body.id];\n    this.dispatchEvent(this.removeBodyEvent);\n  }\n};\n/**\n * Remove a rigid body from the simulation.\n * @method removeBody\n * @param {Body} body\n */\n\n\nWorld.prototype.removeBody = World.prototype.remove;\n\nWorld.prototype.getBodyById = function (id) {\n  return this.idToBodyMap[id];\n}; // TODO Make a faster map\n\n\nWorld.prototype.getShapeById = function (id) {\n  var bodies = this.bodies;\n\n  for (var i = 0, bl = bodies.length; i < bl; i++) {\n    var shapes = bodies[i].shapes;\n\n    for (var j = 0, sl = shapes.length; j < sl; j++) {\n      var shape = shapes[j];\n\n      if (shape.id === id) {\n        return shape;\n      }\n    }\n  }\n};\n/**\n * Adds a material to the World.\n * @method addMaterial\n * @param {Material} m\n * @todo Necessary?\n */\n\n\nWorld.prototype.addMaterial = function (m) {\n  this.materials.push(m);\n};\n/**\n * Adds a contact material to the World\n * @method addContactMaterial\n * @param {ContactMaterial} cmat\n */\n\n\nWorld.prototype.addContactMaterial = function (cmat) {\n  // Add contact material\n  this.contactmaterials.push(cmat); // Add current contact material to the material table\n\n  this.contactMaterialTable.set(cmat.materials[0].id, cmat.materials[1].id, cmat);\n}; // performance.now()\n\n\nif (typeof performance === 'undefined') {\n  performance = {};\n}\n\nif (!performance.now) {\n  var nowOffset = Date.now();\n\n  if (performance.timing && performance.timing.navigationStart) {\n    nowOffset = performance.timing.navigationStart;\n  }\n\n  performance.now = function () {\n    return Date.now() - nowOffset;\n  };\n}\n\nvar step_tmp1 = new Vec3();\n/**\n * Step the physics world forward in time.\n *\n * There are two modes. The simple mode is fixed timestepping without interpolation. In this case you only use the first argument. The second case uses interpolation. In that you also provide the time since the function was last used, as well as the maximum fixed timesteps to take.\n *\n * @method step\n * @param {Number} dt                       The fixed time step size to use.\n * @param {Number} [timeSinceLastCalled]    The time elapsed since the function was last called.\n * @param {Number} [maxSubSteps=10]         Maximum number of fixed steps to take per function call.\n *\n * @example\n *     // fixed timestepping without interpolation\n *     world.step(1/60);\n *\n * @see http://bulletphysics.org/mediawiki-1.5.8/index.php/Stepping_The_World\n */\n\nWorld.prototype.step = function (dt, timeSinceLastCalled, maxSubSteps) {\n  maxSubSteps = maxSubSteps || 10;\n  timeSinceLastCalled = timeSinceLastCalled || 0;\n\n  if (timeSinceLastCalled === 0) {\n    // Fixed, simple stepping\n    this.internalStep(dt); // Increment time\n\n    this.time += dt;\n  } else {\n    this.accumulator += timeSinceLastCalled;\n    var substeps = 0;\n\n    while (this.accumulator >= dt && substeps < maxSubSteps) {\n      // Do fixed steps to catch up\n      this.internalStep(dt);\n      this.accumulator -= dt;\n      substeps++;\n    }\n\n    var t = this.accumulator % dt / dt;\n\n    for (var j = 0; j !== this.bodies.length; j++) {\n      var b = this.bodies[j];\n      b.previousPosition.lerp(b.position, t, b.interpolatedPosition);\n      b.previousQuaternion.slerp(b.quaternion, t, b.interpolatedQuaternion);\n      b.previousQuaternion.normalize();\n    }\n\n    this.time += timeSinceLastCalled;\n  }\n};\n\nvar\n/**\n * Dispatched after the world has stepped forward in time.\n * @event postStep\n */\nWorld_step_postStepEvent = {\n  type: \"postStep\"\n},\n    // Reusable event objects to save memory\n\n/**\n * Dispatched before the world steps forward in time.\n * @event preStep\n */\nWorld_step_preStepEvent = {\n  type: \"preStep\"\n},\n    World_step_collideEvent = {\n  type: Body.COLLIDE_EVENT_NAME,\n  body: null,\n  contact: null\n},\n    World_step_oldContacts = [],\n    // Pools for unused objects\nWorld_step_frictionEquationPool = [],\n    World_step_p1 = [],\n    // Reusable arrays for collision pairs\nWorld_step_p2 = [],\n    World_step_gvec = new Vec3(),\n    // Temporary vectors and quats\nWorld_step_vi = new Vec3(),\n    World_step_vj = new Vec3(),\n    World_step_wi = new Vec3(),\n    World_step_wj = new Vec3(),\n    World_step_t1 = new Vec3(),\n    World_step_t2 = new Vec3(),\n    World_step_rixn = new Vec3(),\n    World_step_rjxn = new Vec3(),\n    World_step_step_q = new Quaternion(),\n    World_step_step_w = new Quaternion(),\n    World_step_step_wq = new Quaternion(),\n    invI_tau_dt = new Vec3();\n\nWorld.prototype.internalStep = function (dt) {\n  this.dt = dt;\n  var world = this,\n      that = this,\n      contacts = this.contacts,\n      p1 = World_step_p1,\n      p2 = World_step_p2,\n      N = this.numObjects(),\n      bodies = this.bodies,\n      solver = this.solver,\n      gravity = this.gravity,\n      doProfiling = this.doProfiling,\n      profile = this.profile,\n      DYNAMIC = Body.DYNAMIC,\n      profilingStart,\n      constraints = this.constraints,\n      frictionEquationPool = World_step_frictionEquationPool,\n      gnorm = gravity.norm(),\n      gx = gravity.x,\n      gy = gravity.y,\n      gz = gravity.z,\n      i = 0;\n\n  if (doProfiling) {\n    profilingStart = performance.now();\n  } // Add gravity to all objects\n\n\n  for (i = 0; i !== N; i++) {\n    var bi = bodies[i];\n\n    if (bi.type === DYNAMIC) {\n      // Only for dynamic bodies\n      var f = bi.force,\n          m = bi.mass;\n      f.x += m * gx;\n      f.y += m * gy;\n      f.z += m * gz;\n    }\n  } // Update subsystems\n\n\n  for (var i = 0, Nsubsystems = this.subsystems.length; i !== Nsubsystems; i++) {\n    this.subsystems[i].update();\n  } // Collision detection\n\n\n  if (doProfiling) {\n    profilingStart = performance.now();\n  }\n\n  p1.length = 0; // Clean up pair arrays from last step\n\n  p2.length = 0;\n  this.broadphase.collisionPairs(this, p1, p2);\n\n  if (doProfiling) {\n    profile.broadphase = performance.now() - profilingStart;\n  } // Remove constrained pairs with collideConnected == false\n\n\n  var Nconstraints = constraints.length;\n\n  for (i = 0; i !== Nconstraints; i++) {\n    var c = constraints[i];\n\n    if (!c.collideConnected) {\n      for (var j = p1.length - 1; j >= 0; j -= 1) {\n        if (c.bodyA === p1[j] && c.bodyB === p2[j] || c.bodyB === p1[j] && c.bodyA === p2[j]) {\n          p1.splice(j, 1);\n          p2.splice(j, 1);\n        }\n      }\n    }\n  }\n\n  this.collisionMatrixTick(); // Generate contacts\n\n  if (doProfiling) {\n    profilingStart = performance.now();\n  }\n\n  var oldcontacts = World_step_oldContacts;\n  var NoldContacts = contacts.length;\n\n  for (i = 0; i !== NoldContacts; i++) {\n    oldcontacts.push(contacts[i]);\n  }\n\n  contacts.length = 0; // Transfer FrictionEquation from current list to the pool for reuse\n\n  var NoldFrictionEquations = this.frictionEquations.length;\n\n  for (i = 0; i !== NoldFrictionEquations; i++) {\n    frictionEquationPool.push(this.frictionEquations[i]);\n  }\n\n  this.frictionEquations.length = 0;\n  this.narrowphase.getContacts(p1, p2, this, contacts, oldcontacts, // To be reused\n  this.frictionEquations, frictionEquationPool);\n\n  if (doProfiling) {\n    profile.narrowphase = performance.now() - profilingStart;\n  } // Loop over all collisions\n\n\n  if (doProfiling) {\n    profilingStart = performance.now();\n  } // Add all friction eqs\n\n\n  for (var i = 0; i < this.frictionEquations.length; i++) {\n    solver.addEquation(this.frictionEquations[i]);\n  }\n\n  var ncontacts = contacts.length;\n\n  for (var k = 0; k !== ncontacts; k++) {\n    // Current contact\n    var c = contacts[k]; // Get current collision indeces\n\n    var bi = c.bi,\n        bj = c.bj,\n        si = c.si,\n        sj = c.sj; // Get collision properties\n\n    var cm;\n\n    if (bi.material && bj.material) {\n      cm = this.getContactMaterial(bi.material, bj.material) || this.defaultContactMaterial;\n    } else {\n      cm = this.defaultContactMaterial;\n    } // c.enabled = bi.collisionResponse && bj.collisionResponse && si.collisionResponse && sj.collisionResponse;\n\n\n    var mu = cm.friction; // c.restitution = cm.restitution;\n    // If friction or restitution were specified in the material, use them\n\n    if (bi.material && bj.material) {\n      if (bi.material.friction >= 0 && bj.material.friction >= 0) {\n        mu = bi.material.friction * bj.material.friction;\n      }\n\n      if (bi.material.restitution >= 0 && bj.material.restitution >= 0) {\n        c.restitution = bi.material.restitution * bj.material.restitution;\n      }\n    } // c.setSpookParams(\n    //           cm.contactEquationStiffness,\n    //           cm.contactEquationRelaxation,\n    //           dt\n    //       );\n\n\n    solver.addEquation(c); // // Add friction constraint equation\n    // if(mu > 0){\n    // \t// Create 2 tangent equations\n    // \tvar mug = mu * gnorm;\n    // \tvar reducedMass = (bi.invMass + bj.invMass);\n    // \tif(reducedMass > 0){\n    // \t\treducedMass = 1/reducedMass;\n    // \t}\n    // \tvar pool = frictionEquationPool;\n    // \tvar c1 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\n    // \tvar c2 = pool.length ? pool.pop() : new FrictionEquation(bi,bj,mug*reducedMass);\n    // \tthis.frictionEquations.push(c1, c2);\n    // \tc1.bi = c2.bi = bi;\n    // \tc1.bj = c2.bj = bj;\n    // \tc1.minForce = c2.minForce = -mug*reducedMass;\n    // \tc1.maxForce = c2.maxForce = mug*reducedMass;\n    // \t// Copy over the relative vectors\n    // \tc1.ri.copy(c.ri);\n    // \tc1.rj.copy(c.rj);\n    // \tc2.ri.copy(c.ri);\n    // \tc2.rj.copy(c.rj);\n    // \t// Construct tangents\n    // \tc.ni.tangents(c1.t, c2.t);\n    //           // Set spook params\n    //           c1.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\n    //           c2.setSpookParams(cm.frictionEquationStiffness, cm.frictionEquationRelaxation, dt);\n    //           c1.enabled = c2.enabled = c.enabled;\n    // \t// Add equations to solver\n    // \tsolver.addEquation(c1);\n    // \tsolver.addEquation(c2);\n    // }\n\n    if (bi.allowSleep && bi.type === Body.DYNAMIC && bi.sleepState === Body.SLEEPING && bj.sleepState === Body.AWAKE && bj.type !== Body.STATIC) {\n      var speedSquaredB = bj.velocity.norm2() + bj.angularVelocity.norm2();\n      var speedLimitSquaredB = Math.pow(bj.sleepSpeedLimit, 2);\n\n      if (speedSquaredB >= speedLimitSquaredB * 2) {\n        bi._wakeUpAfterNarrowphase = true;\n      }\n    }\n\n    if (bj.allowSleep && bj.type === Body.DYNAMIC && bj.sleepState === Body.SLEEPING && bi.sleepState === Body.AWAKE && bi.type !== Body.STATIC) {\n      var speedSquaredA = bi.velocity.norm2() + bi.angularVelocity.norm2();\n      var speedLimitSquaredA = Math.pow(bi.sleepSpeedLimit, 2);\n\n      if (speedSquaredA >= speedLimitSquaredA * 2) {\n        bj._wakeUpAfterNarrowphase = true;\n      }\n    } // Now we know that i and j are in contact. Set collision matrix state\n\n\n    this.collisionMatrix.set(bi, bj, true);\n\n    if (!this.collisionMatrixPrevious.get(bi, bj)) {\n      // First contact!\n      // We reuse the collideEvent object, otherwise we will end up creating new objects for each new contact, even if there's no event listener attached.\n      World_step_collideEvent.body = bj;\n      World_step_collideEvent.contact = c;\n      bi.dispatchEvent(World_step_collideEvent);\n      World_step_collideEvent.body = bi;\n      bj.dispatchEvent(World_step_collideEvent);\n    }\n\n    this.bodyOverlapKeeper.set(bi.id, bj.id);\n    this.shapeOverlapKeeper.set(si.id, sj.id);\n  }\n\n  this.emitContactEvents();\n\n  if (doProfiling) {\n    profile.makeContactConstraints = performance.now() - profilingStart;\n    profilingStart = performance.now();\n  } // Wake up bodies\n\n\n  for (i = 0; i !== N; i++) {\n    var bi = bodies[i];\n\n    if (bi._wakeUpAfterNarrowphase) {\n      bi.wakeUp();\n      bi._wakeUpAfterNarrowphase = false;\n    }\n  } // Add user-added constraints\n\n\n  var Nconstraints = constraints.length;\n\n  for (i = 0; i !== Nconstraints; i++) {\n    var c = constraints[i];\n    c.update();\n\n    for (var j = 0, Neq = c.equations.length; j !== Neq; j++) {\n      var eq = c.equations[j];\n      solver.addEquation(eq);\n    }\n  } // Solve the constrained system\n\n\n  solver.solve(dt, this);\n\n  if (doProfiling) {\n    profile.solve = performance.now() - profilingStart;\n  } // Remove all contacts from solver\n\n\n  solver.removeAllEquations(); // Apply damping, see http://code.google.com/p/bullet/issues/detail?id=74 for details\n\n  var pow = Math.pow;\n\n  for (i = 0; i !== N; i++) {\n    var bi = bodies[i];\n\n    if (bi.type & DYNAMIC) {\n      // Only for dynamic bodies\n      var ld = pow(1.0 - bi.linearDamping, dt);\n      var v = bi.velocity;\n      v.mult(ld, v);\n      var av = bi.angularVelocity;\n\n      if (av) {\n        var ad = pow(1.0 - bi.angularDamping, dt);\n        av.mult(ad, av);\n      }\n    }\n  }\n\n  this.dispatchEvent(World_step_preStepEvent); // Invoke pre-step callbacks\n\n  for (i = 0; i !== N; i++) {\n    var bi = bodies[i];\n\n    if (bi.preStep) {\n      bi.preStep.call(bi);\n    }\n  } // Leap frog\n  // vnew = v + h*f/m\n  // xnew = x + h*vnew\n\n\n  if (doProfiling) {\n    profilingStart = performance.now();\n  }\n\n  var stepnumber = this.stepnumber;\n  var quatNormalize = stepnumber % (this.quatNormalizeSkip + 1) === 0;\n  var quatNormalizeFast = this.quatNormalizeFast;\n\n  for (i = 0; i !== N; i++) {\n    bodies[i].integrate(dt, quatNormalize, quatNormalizeFast);\n  }\n\n  this.clearForces();\n  this.broadphase.dirty = true;\n\n  if (doProfiling) {\n    profile.integrate = performance.now() - profilingStart;\n  } // Update world time\n\n\n  this.time += dt;\n  this.stepnumber += 1;\n  this.dispatchEvent(World_step_postStepEvent); // Invoke post-step callbacks\n\n  for (i = 0; i !== N; i++) {\n    var bi = bodies[i];\n    var postStep = bi.postStep;\n\n    if (postStep) {\n      postStep.call(bi);\n    }\n  } // Sleeping update\n\n\n  if (this.allowSleep) {\n    for (i = 0; i !== N; i++) {\n      bodies[i].sleepTick(this.time);\n    }\n  }\n};\n\nWorld.prototype.emitContactEvents = function () {\n  var additions = [];\n  var removals = [];\n  var beginContactEvent = {\n    type: 'beginContact',\n    bodyA: null,\n    bodyB: null\n  };\n  var endContactEvent = {\n    type: 'endContact',\n    bodyA: null,\n    bodyB: null\n  };\n  var beginShapeContactEvent = {\n    type: 'beginShapeContact',\n    bodyA: null,\n    bodyB: null,\n    shapeA: null,\n    shapeB: null\n  };\n  var endShapeContactEvent = {\n    type: 'endShapeContact',\n    bodyA: null,\n    bodyB: null,\n    shapeA: null,\n    shapeB: null\n  };\n  return function () {\n    var hasBeginContact = this.hasAnyEventListener('beginContact');\n    var hasEndContact = this.hasAnyEventListener('endContact');\n\n    if (hasBeginContact || hasEndContact) {\n      this.bodyOverlapKeeper.getDiff(additions, removals);\n    }\n\n    if (hasBeginContact) {\n      for (var i = 0, l = additions.length; i < l; i += 2) {\n        beginContactEvent.bodyA = this.getBodyById(additions[i]);\n        beginContactEvent.bodyB = this.getBodyById(additions[i + 1]);\n        this.dispatchEvent(beginContactEvent);\n      }\n\n      beginContactEvent.bodyA = beginContactEvent.bodyB = null;\n    }\n\n    if (hasEndContact) {\n      for (var i = 0, l = removals.length; i < l; i += 2) {\n        endContactEvent.bodyA = this.getBodyById(removals[i]);\n        endContactEvent.bodyB = this.getBodyById(removals[i + 1]);\n        this.dispatchEvent(endContactEvent);\n      }\n\n      endContactEvent.bodyA = endContactEvent.bodyB = null;\n    }\n\n    additions.length = removals.length = 0;\n    var hasBeginShapeContact = this.hasAnyEventListener('beginShapeContact');\n    var hasEndShapeContact = this.hasAnyEventListener('endShapeContact');\n\n    if (hasBeginShapeContact || hasEndShapeContact) {\n      this.shapeOverlapKeeper.getDiff(additions, removals);\n    }\n\n    if (hasBeginShapeContact) {\n      for (var i = 0, l = additions.length; i < l; i += 2) {\n        var shapeA = this.getShapeById(additions[i]);\n        var shapeB = this.getShapeById(additions[i + 1]);\n        beginShapeContactEvent.shapeA = shapeA;\n        beginShapeContactEvent.shapeB = shapeB;\n        beginShapeContactEvent.bodyA = shapeA.body;\n        beginShapeContactEvent.bodyB = shapeB.body;\n        this.dispatchEvent(beginShapeContactEvent);\n      }\n\n      beginShapeContactEvent.bodyA = beginShapeContactEvent.bodyB = beginShapeContactEvent.shapeA = beginShapeContactEvent.shapeB = null;\n    }\n\n    if (hasEndShapeContact) {\n      for (var i = 0, l = removals.length; i < l; i += 2) {\n        var shapeA = this.getShapeById(removals[i]);\n        var shapeB = this.getShapeById(removals[i + 1]);\n        endShapeContactEvent.shapeA = shapeA;\n        endShapeContactEvent.shapeB = shapeB;\n        endShapeContactEvent.bodyA = shapeA.body;\n        endShapeContactEvent.bodyB = shapeB.body;\n        this.dispatchEvent(endShapeContactEvent);\n      }\n\n      endShapeContactEvent.bodyA = endShapeContactEvent.bodyB = endShapeContactEvent.shapeA = endShapeContactEvent.shapeB = null;\n    }\n  };\n}();\n/**\n * Sets all body forces in the world to zero.\n * @method clearForces\n */\n\n\nWorld.prototype.clearForces = function () {\n  var bodies = this.bodies;\n  var N = bodies.length;\n\n  for (var i = 0; i !== N; i++) {\n    var b = bodies[i],\n        force = b.force,\n        tau = b.torque;\n    b.force.set(0, 0, 0);\n    b.torque.set(0, 0, 0);\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/cannon/src/world/World.js?");

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v3.3.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2018-01-20T17:24Z\n */\n(function (global, factory) {\n  \"use strict\";\n\n  if ( true && typeof module.exports === \"object\") {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get jQuery.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    // e.g. var jQuery = require(\"jquery\")(window);\n    // See ticket #14549 for more info.\n    module.exports = global.document ? factory(global, true) : function (w) {\n      if (!w.document) {\n        throw new Error(\"jQuery requires a window with a document\");\n      }\n\n      return factory(w);\n    };\n  } else {\n    factory(global);\n  } // Pass this if window is not defined yet\n\n})(typeof window !== \"undefined\" ? window : this, function (window, noGlobal) {\n  // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n  // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n  // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n  // enough that all such attempts are guarded in a try block.\n  \"use strict\";\n\n  var arr = [];\n  var document = window.document;\n  var getProto = Object.getPrototypeOf;\n  var slice = arr.slice;\n  var concat = arr.concat;\n  var push = arr.push;\n  var indexOf = arr.indexOf;\n  var class2type = {};\n  var toString = class2type.toString;\n  var hasOwn = class2type.hasOwnProperty;\n  var fnToString = hasOwn.toString;\n  var ObjectFunctionString = fnToString.call(Object);\n  var support = {};\n\n  var isFunction = function isFunction(obj) {\n    // Support: Chrome <=57, Firefox <=52\n    // In some browsers, typeof returns \"function\" for HTML <object> elements\n    // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n    // We don't want to classify *any* DOM node as a function.\n    return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n  var isWindow = function isWindow(obj) {\n    return obj != null && obj === obj.window;\n  };\n\n  var preservedScriptAttributes = {\n    type: true,\n    src: true,\n    noModule: true\n  };\n\n  function DOMEval(code, doc, node) {\n    doc = doc || document;\n    var i,\n        script = doc.createElement(\"script\");\n    script.text = code;\n\n    if (node) {\n      for (i in preservedScriptAttributes) {\n        if (node[i]) {\n          script[i] = node[i];\n        }\n      }\n    }\n\n    doc.head.appendChild(script).parentNode.removeChild(script);\n  }\n\n  function toType(obj) {\n    if (obj == null) {\n      return obj + \"\";\n    } // Support: Android <=2.3 only (functionish RegExp)\n\n\n    return typeof obj === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj)] || \"object\" : typeof obj;\n  }\n  /* global Symbol */\n  // Defining this global in .eslintrc.json would create a danger of using the global\n  // unguarded in another place, it seems safer to define global only for this module\n\n\n  var version = \"3.3.1\",\n      // Define a local copy of jQuery\n  jQuery = function (selector, context) {\n    // The jQuery object is actually just the init constructor 'enhanced'\n    // Need init if jQuery is called (just allow error to be thrown if not included)\n    return new jQuery.fn.init(selector, context);\n  },\n      // Support: Android <=4.0 only\n  // Make sure we trim BOM and NBSP\n  rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n  jQuery.fn = jQuery.prototype = {\n    // The current version of jQuery being used\n    jquery: version,\n    constructor: jQuery,\n    // The default length of a jQuery object is 0\n    length: 0,\n    toArray: function () {\n      return slice.call(this);\n    },\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function (num) {\n      // Return all the elements in a clean array\n      if (num == null) {\n        return slice.call(this);\n      } // Return just the one element from the set\n\n\n      return num < 0 ? this[num + this.length] : this[num];\n    },\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set)\n    pushStack: function (elems) {\n      // Build a new jQuery matched element set\n      var ret = jQuery.merge(this.constructor(), elems); // Add the old object onto the stack (as a reference)\n\n      ret.prevObject = this; // Return the newly-formed element set\n\n      return ret;\n    },\n    // Execute a callback for every element in the matched set.\n    each: function (callback) {\n      return jQuery.each(this, callback);\n    },\n    map: function (callback) {\n      return this.pushStack(jQuery.map(this, function (elem, i) {\n        return callback.call(elem, i, elem);\n      }));\n    },\n    slice: function () {\n      return this.pushStack(slice.apply(this, arguments));\n    },\n    first: function () {\n      return this.eq(0);\n    },\n    last: function () {\n      return this.eq(-1);\n    },\n    eq: function (i) {\n      var len = this.length,\n          j = +i + (i < 0 ? len : 0);\n      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n    },\n    end: function () {\n      return this.prevObject || this.constructor();\n    },\n    // For internal use only.\n    // Behaves like an Array's method, not like a jQuery method.\n    push: push,\n    sort: arr.sort,\n    splice: arr.splice\n  };\n\n  jQuery.extend = jQuery.fn.extend = function () {\n    var options,\n        name,\n        src,\n        copy,\n        copyIsArray,\n        clone,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false; // Handle a deep copy situation\n\n    if (typeof target === \"boolean\") {\n      deep = target; // Skip the boolean and the target\n\n      target = arguments[i] || {};\n      i++;\n    } // Handle case when target is a string or something (possible in deep copy)\n\n\n    if (typeof target !== \"object\" && !isFunction(target)) {\n      target = {};\n    } // Extend jQuery itself if only one argument is passed\n\n\n    if (i === length) {\n      target = this;\n      i--;\n    }\n\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if ((options = arguments[i]) != null) {\n        // Extend the base object\n        for (name in options) {\n          src = target[name];\n          copy = options[name]; // Prevent never-ending loop\n\n          if (target === copy) {\n            continue;\n          } // Recurse if we're merging plain objects or arrays\n\n\n          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n            if (copyIsArray) {\n              copyIsArray = false;\n              clone = src && Array.isArray(src) ? src : [];\n            } else {\n              clone = src && jQuery.isPlainObject(src) ? src : {};\n            } // Never move original objects, clone them\n\n\n            target[name] = jQuery.extend(deep, clone, copy); // Don't bring in undefined values\n          } else if (copy !== undefined) {\n            target[name] = copy;\n          }\n        }\n      }\n    } // Return the modified object\n\n\n    return target;\n  };\n\n  jQuery.extend({\n    // Unique for each copy of jQuery on the page\n    expando: \"jQuery\" + (version + Math.random()).replace(/\\D/g, \"\"),\n    // Assume jQuery is ready without the ready module\n    isReady: true,\n    error: function (msg) {\n      throw new Error(msg);\n    },\n    noop: function () {},\n    isPlainObject: function (obj) {\n      var proto, Ctor; // Detect obvious negatives\n      // Use toString instead of jQuery.type to catch host objects\n\n      if (!obj || toString.call(obj) !== \"[object Object]\") {\n        return false;\n      }\n\n      proto = getProto(obj); // Objects with no prototype (e.g., `Object.create( null )`) are plain\n\n      if (!proto) {\n        return true;\n      } // Objects with prototype are plain iff they were constructed by a global Object function\n\n\n      Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n      return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\n    },\n    isEmptyObject: function (obj) {\n      /* eslint-disable no-unused-vars */\n      // See https://github.com/eslint/eslint/issues/6125\n      var name;\n\n      for (name in obj) {\n        return false;\n      }\n\n      return true;\n    },\n    // Evaluates a script in a global context\n    globalEval: function (code) {\n      DOMEval(code);\n    },\n    each: function (obj, callback) {\n      var length,\n          i = 0;\n\n      if (isArrayLike(obj)) {\n        length = obj.length;\n\n        for (; i < length; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      }\n\n      return obj;\n    },\n    // Support: Android <=4.0 only\n    trim: function (text) {\n      return text == null ? \"\" : (text + \"\").replace(rtrim, \"\");\n    },\n    // results is for internal usage only\n    makeArray: function (arr, results) {\n      var ret = results || [];\n\n      if (arr != null) {\n        if (isArrayLike(Object(arr))) {\n          jQuery.merge(ret, typeof arr === \"string\" ? [arr] : arr);\n        } else {\n          push.call(ret, arr);\n        }\n      }\n\n      return ret;\n    },\n    inArray: function (elem, arr, i) {\n      return arr == null ? -1 : indexOf.call(arr, elem, i);\n    },\n    // Support: Android <=4.0 only, PhantomJS 1 only\n    // push.apply(_, arraylike) throws on ancient WebKit\n    merge: function (first, second) {\n      var len = +second.length,\n          j = 0,\n          i = first.length;\n\n      for (; j < len; j++) {\n        first[i++] = second[j];\n      }\n\n      first.length = i;\n      return first;\n    },\n    grep: function (elems, callback, invert) {\n      var callbackInverse,\n          matches = [],\n          i = 0,\n          length = elems.length,\n          callbackExpect = !invert; // Go through the array, only saving the items\n      // that pass the validator function\n\n      for (; i < length; i++) {\n        callbackInverse = !callback(elems[i], i);\n\n        if (callbackInverse !== callbackExpect) {\n          matches.push(elems[i]);\n        }\n      }\n\n      return matches;\n    },\n    // arg is for internal usage only\n    map: function (elems, callback, arg) {\n      var length,\n          value,\n          i = 0,\n          ret = []; // Go through the array, translating each of the items to their new values\n\n      if (isArrayLike(elems)) {\n        length = elems.length;\n\n        for (; i < length; i++) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        } // Go through every key on the object,\n\n      } else {\n        for (i in elems) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n      } // Flatten any nested arrays\n\n\n      return concat.apply([], ret);\n    },\n    // A global GUID counter for objects\n    guid: 1,\n    // jQuery.support is not used in Core but other projects attach their\n    // properties to it so it needs to exist.\n    support: support\n  });\n\n  if (typeof Symbol === \"function\") {\n    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n  } // Populate the class2type map\n\n\n  jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"), function (i, name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n  });\n\n  function isArrayLike(obj) {\n    // Support: real iOS 8.2 only (not reproducible in simulator)\n    // `in` check used to prevent JIT error (gh-2145)\n    // hasOwn isn't used here due to false negatives\n    // regarding Nodelist length in IE\n    var length = !!obj && \"length\" in obj && obj.length,\n        type = toType(obj);\n\n    if (isFunction(obj) || isWindow(obj)) {\n      return false;\n    }\n\n    return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && length - 1 in obj;\n  }\n\n  var Sizzle =\n  /*!\n   * Sizzle CSS Selector Engine v2.3.3\n   * https://sizzlejs.com/\n   *\n   * Copyright jQuery Foundation and other contributors\n   * Released under the MIT license\n   * http://jquery.org/license\n   *\n   * Date: 2016-08-08\n   */\n  function (window) {\n    var i,\n        support,\n        Expr,\n        getText,\n        isXML,\n        tokenize,\n        compile,\n        select,\n        outermostContext,\n        sortInput,\n        hasDuplicate,\n        // Local document vars\n    setDocument,\n        document,\n        docElem,\n        documentIsHTML,\n        rbuggyQSA,\n        rbuggyMatches,\n        matches,\n        contains,\n        // Instance-specific data\n    expando = \"sizzle\" + 1 * new Date(),\n        preferredDoc = window.document,\n        dirruns = 0,\n        done = 0,\n        classCache = createCache(),\n        tokenCache = createCache(),\n        compilerCache = createCache(),\n        sortOrder = function (a, b) {\n      if (a === b) {\n        hasDuplicate = true;\n      }\n\n      return 0;\n    },\n        // Instance methods\n    hasOwn = {}.hasOwnProperty,\n        arr = [],\n        pop = arr.pop,\n        push_native = arr.push,\n        push = arr.push,\n        slice = arr.slice,\n        // Use a stripped-down indexOf as it's faster than native\n    // https://jsperf.com/thor-indexof-vs-for/5\n    indexOf = function (list, elem) {\n      var i = 0,\n          len = list.length;\n\n      for (; i < len; i++) {\n        if (list[i] === elem) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n        booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n        // Regular expressions\n    // http://www.w3.org/TR/css3-selectors/#whitespace\n    whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n        // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n    identifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n        // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n    attributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace + // Operator (capture 2)\n    \"*([*^$|!~]?=)\" + whitespace + // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n    \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace + \"*\\\\]\",\n        pseudos = \":(\" + identifier + \")(?:\\\\((\" + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n    // 1. quoted (capture 3; capture 4 or capture 5)\n    \"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" + // 2. simple (capture 6)\n    \"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" + // 3. anything else (capture 2)\n    \".*\" + \")\\\\)|)\",\n        // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n    rwhitespace = new RegExp(whitespace + \"+\", \"g\"),\n        rtrim = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\"),\n        rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"),\n        rcombinators = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"),\n        rattributeQuotes = new RegExp(\"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\"),\n        rpseudo = new RegExp(pseudos),\n        ridentifier = new RegExp(\"^\" + identifier + \"$\"),\n        matchExpr = {\n      \"ID\": new RegExp(\"^#(\" + identifier + \")\"),\n      \"CLASS\": new RegExp(\"^\\\\.(\" + identifier + \")\"),\n      \"TAG\": new RegExp(\"^(\" + identifier + \"|[*])\"),\n      \"ATTR\": new RegExp(\"^\" + attributes),\n      \"PSEUDO\": new RegExp(\"^\" + pseudos),\n      \"CHILD\": new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\"),\n      \"bool\": new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n      // For use in libraries implementing .is()\n      // We use this for POS matching in `select`\n      \"needsContext\": new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n    },\n        rinputs = /^(?:input|select|textarea|button)$/i,\n        rheader = /^h\\d$/i,\n        rnative = /^[^{]+\\{\\s*\\[native \\w/,\n        // Easily-parseable/retrievable ID or TAG or CLASS selectors\n    rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n        rsibling = /[+~]/,\n        // CSS escapes\n    // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n    runescape = new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\"),\n        funescape = function (_, escaped, escapedWhitespace) {\n      var high = \"0x\" + escaped - 0x10000; // NaN means non-codepoint\n      // Support: Firefox<24\n      // Workaround erroneous numeric interpretation of +\"0x\"\n\n      return high !== high || escapedWhitespace ? escaped : high < 0 ? // BMP codepoint\n      String.fromCharCode(high + 0x10000) : // Supplemental Plane codepoint (surrogate pair)\n      String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n    },\n        // CSS string/identifier serialization\n    // https://drafts.csswg.org/cssom/#common-serializing-idioms\n    rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n        fcssescape = function (ch, asCodePoint) {\n      if (asCodePoint) {\n        // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n        if (ch === \"\\0\") {\n          return \"\\uFFFD\";\n        } // Control characters and (dependent upon position) numbers get escaped as code points\n\n\n        return ch.slice(0, -1) + \"\\\\\" + ch.charCodeAt(ch.length - 1).toString(16) + \" \";\n      } // Other potentially-special ASCII characters get backslash-escaped\n\n\n      return \"\\\\\" + ch;\n    },\n        // Used for iframes\n    // See setDocument()\n    // Removing the function wrapper causes a \"Permission Denied\"\n    // error in IE\n    unloadHandler = function () {\n      setDocument();\n    },\n        disabledAncestor = addCombinator(function (elem) {\n      return elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n    }, {\n      dir: \"parentNode\",\n      next: \"legend\"\n    }); // Optimize for push.apply( _, NodeList )\n\n\n    try {\n      push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes); // Support: Android<4.0\n      // Detect silently failing push.apply\n\n      arr[preferredDoc.childNodes.length].nodeType;\n    } catch (e) {\n      push = {\n        apply: arr.length ? // Leverage slice if possible\n        function (target, els) {\n          push_native.apply(target, slice.call(els));\n        } : // Support: IE<9\n        // Otherwise append directly\n        function (target, els) {\n          var j = target.length,\n              i = 0; // Can't trust NodeList.length\n\n          while (target[j++] = els[i++]) {}\n\n          target.length = j - 1;\n        }\n      };\n    }\n\n    function Sizzle(selector, context, results, seed) {\n      var m,\n          i,\n          elem,\n          nid,\n          match,\n          groups,\n          newSelector,\n          newContext = context && context.ownerDocument,\n          // nodeType defaults to 9, since context defaults to document\n      nodeType = context ? context.nodeType : 9;\n      results = results || []; // Return early from calls with invalid selector or context\n\n      if (typeof selector !== \"string\" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n        return results;\n      } // Try to shortcut find operations (as opposed to filters) in HTML documents\n\n\n      if (!seed) {\n        if ((context ? context.ownerDocument || context : preferredDoc) !== document) {\n          setDocument(context);\n        }\n\n        context = context || document;\n\n        if (documentIsHTML) {\n          // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n          // (excepting DocumentFragment context, where the methods don't exist)\n          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n            // ID selector\n            if (m = match[1]) {\n              // Document context\n              if (nodeType === 9) {\n                if (elem = context.getElementById(m)) {\n                  // Support: IE, Opera, Webkit\n                  // TODO: identify versions\n                  // getElementById can match elements by name instead of ID\n                  if (elem.id === m) {\n                    results.push(elem);\n                    return results;\n                  }\n                } else {\n                  return results;\n                } // Element context\n\n              } else {\n                // Support: IE, Opera, Webkit\n                // TODO: identify versions\n                // getElementById can match elements by name instead of ID\n                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                  results.push(elem);\n                  return results;\n                }\n              } // Type selector\n\n            } else if (match[2]) {\n              push.apply(results, context.getElementsByTagName(selector));\n              return results; // Class selector\n            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n              push.apply(results, context.getElementsByClassName(m));\n              return results;\n            }\n          } // Take advantage of querySelectorAll\n\n\n          if (support.qsa && !compilerCache[selector + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n            if (nodeType !== 1) {\n              newContext = context;\n              newSelector = selector; // qSA looks outside Element context, which is not what we want\n              // Thanks to Andrew Dupont for this workaround technique\n              // Support: IE <=8\n              // Exclude object elements\n            } else if (context.nodeName.toLowerCase() !== \"object\") {\n              // Capture the context ID, setting it first if necessary\n              if (nid = context.getAttribute(\"id\")) {\n                nid = nid.replace(rcssescape, fcssescape);\n              } else {\n                context.setAttribute(\"id\", nid = expando);\n              } // Prefix every selector in the list\n\n\n              groups = tokenize(selector);\n              i = groups.length;\n\n              while (i--) {\n                groups[i] = \"#\" + nid + \" \" + toSelector(groups[i]);\n              }\n\n              newSelector = groups.join(\",\"); // Expand context for sibling selectors\n\n              newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n            }\n\n            if (newSelector) {\n              try {\n                push.apply(results, newContext.querySelectorAll(newSelector));\n                return results;\n              } catch (qsaError) {} finally {\n                if (nid === expando) {\n                  context.removeAttribute(\"id\");\n                }\n              }\n            }\n          }\n        }\n      } // All others\n\n\n      return select(selector.replace(rtrim, \"$1\"), context, results, seed);\n    }\n    /**\n     * Create key-value caches of limited size\n     * @returns {function(string, object)} Returns the Object data after storing it on itself with\n     *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n     *\tdeleting the oldest entry\n     */\n\n\n    function createCache() {\n      var keys = [];\n\n      function cache(key, value) {\n        // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n        if (keys.push(key + \" \") > Expr.cacheLength) {\n          // Only keep the most recent entries\n          delete cache[keys.shift()];\n        }\n\n        return cache[key + \" \"] = value;\n      }\n\n      return cache;\n    }\n    /**\n     * Mark a function for special use by Sizzle\n     * @param {Function} fn The function to mark\n     */\n\n\n    function markFunction(fn) {\n      fn[expando] = true;\n      return fn;\n    }\n    /**\n     * Support testing using an element\n     * @param {Function} fn Passed the created element and returns a boolean result\n     */\n\n\n    function assert(fn) {\n      var el = document.createElement(\"fieldset\");\n\n      try {\n        return !!fn(el);\n      } catch (e) {\n        return false;\n      } finally {\n        // Remove from its parent by default\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        } // release memory in IE\n\n\n        el = null;\n      }\n    }\n    /**\n     * Adds the same handler for all of the specified attrs\n     * @param {String} attrs Pipe-separated list of attributes\n     * @param {Function} handler The method that will be applied\n     */\n\n\n    function addHandle(attrs, handler) {\n      var arr = attrs.split(\"|\"),\n          i = arr.length;\n\n      while (i--) {\n        Expr.attrHandle[arr[i]] = handler;\n      }\n    }\n    /**\n     * Checks document order of two siblings\n     * @param {Element} a\n     * @param {Element} b\n     * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n     */\n\n\n    function siblingCheck(a, b) {\n      var cur = b && a,\n          diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex; // Use IE sourceIndex if available on both nodes\n\n      if (diff) {\n        return diff;\n      } // Check if b follows a\n\n\n      if (cur) {\n        while (cur = cur.nextSibling) {\n          if (cur === b) {\n            return -1;\n          }\n        }\n      }\n\n      return a ? 1 : -1;\n    }\n    /**\n     * Returns a function to use in pseudos for input types\n     * @param {String} type\n     */\n\n\n    function createInputPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return name === \"input\" && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for buttons\n     * @param {String} type\n     */\n\n\n    function createButtonPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return (name === \"input\" || name === \"button\") && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for :enabled/:disabled\n     * @param {Boolean} disabled true for :disabled; false for :enabled\n     */\n\n\n    function createDisabledPseudo(disabled) {\n      // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n      return function (elem) {\n        // Only certain elements can match :enabled or :disabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n        if (\"form\" in elem) {\n          // Check for inherited disabledness on relevant non-disabled elements:\n          // * listed form-associated elements in a disabled fieldset\n          //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n          // * option elements in a disabled optgroup\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n          // All such elements have a \"form\" property.\n          if (elem.parentNode && elem.disabled === false) {\n            // Option elements defer to a parent optgroup if present\n            if (\"label\" in elem) {\n              if (\"label\" in elem.parentNode) {\n                return elem.parentNode.disabled === disabled;\n              } else {\n                return elem.disabled === disabled;\n              }\n            } // Support: IE 6 - 11\n            // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\n\n            return elem.isDisabled === disabled || // Where there is no isDisabled, check manually\n\n            /* jshint -W018 */\n            elem.isDisabled !== !disabled && disabledAncestor(elem) === disabled;\n          }\n\n          return elem.disabled === disabled; // Try to winnow out elements that can't be disabled before trusting the disabled property.\n          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n          // even exist on them, let alone have a boolean value.\n        } else if (\"label\" in elem) {\n          return elem.disabled === disabled;\n        } // Remaining elements are neither :enabled nor :disabled\n\n\n        return false;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for positionals\n     * @param {Function} fn\n     */\n\n\n    function createPositionalPseudo(fn) {\n      return markFunction(function (argument) {\n        argument = +argument;\n        return markFunction(function (seed, matches) {\n          var j,\n              matchIndexes = fn([], seed.length, argument),\n              i = matchIndexes.length; // Match elements found at the specified indexes\n\n          while (i--) {\n            if (seed[j = matchIndexes[i]]) {\n              seed[j] = !(matches[j] = seed[j]);\n            }\n          }\n        });\n      });\n    }\n    /**\n     * Checks a node for validity as a Sizzle context\n     * @param {Element|Object=} context\n     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n     */\n\n\n    function testContext(context) {\n      return context && typeof context.getElementsByTagName !== \"undefined\" && context;\n    } // Expose support vars for convenience\n\n\n    support = Sizzle.support = {};\n    /**\n     * Detects XML nodes\n     * @param {Element|Object} elem An element or a document\n     * @returns {Boolean} True iff elem is a non-HTML XML node\n     */\n\n    isXML = Sizzle.isXML = function (elem) {\n      // documentElement is verified for cases where it doesn't yet exist\n      // (such as loading iframes in IE - #4833)\n      var documentElement = elem && (elem.ownerDocument || elem).documentElement;\n      return documentElement ? documentElement.nodeName !== \"HTML\" : false;\n    };\n    /**\n     * Sets document-related variables once based on the current document\n     * @param {Element|Object} [doc] An element or document object to use to set the document\n     * @returns {Object} Returns the current document\n     */\n\n\n    setDocument = Sizzle.setDocument = function (node) {\n      var hasCompare,\n          subWindow,\n          doc = node ? node.ownerDocument || node : preferredDoc; // Return early if doc is invalid or already selected\n\n      if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {\n        return document;\n      } // Update global variables\n\n\n      document = doc;\n      docElem = document.documentElement;\n      documentIsHTML = !isXML(document); // Support: IE 9-11, Edge\n      // Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\n      if (preferredDoc !== document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n        // Support: IE 11, Edge\n        if (subWindow.addEventListener) {\n          subWindow.addEventListener(\"unload\", unloadHandler, false); // Support: IE 9 - 10 only\n        } else if (subWindow.attachEvent) {\n          subWindow.attachEvent(\"onunload\", unloadHandler);\n        }\n      }\n      /* Attributes\n      ---------------------------------------------------------------------- */\n      // Support: IE<8\n      // Verify that getAttribute really returns attributes and not properties\n      // (excepting IE8 booleans)\n\n\n      support.attributes = assert(function (el) {\n        el.className = \"i\";\n        return !el.getAttribute(\"className\");\n      });\n      /* getElement(s)By*\n      ---------------------------------------------------------------------- */\n      // Check if getElementsByTagName(\"*\") returns only elements\n\n      support.getElementsByTagName = assert(function (el) {\n        el.appendChild(document.createComment(\"\"));\n        return !el.getElementsByTagName(\"*\").length;\n      }); // Support: IE<9\n\n      support.getElementsByClassName = rnative.test(document.getElementsByClassName); // Support: IE<10\n      // Check if getElementById returns elements by name\n      // The broken getElementById methods don't pick up programmatically-set names,\n      // so use a roundabout getElementsByName test\n\n      support.getById = assert(function (el) {\n        docElem.appendChild(el).id = expando;\n        return !document.getElementsByName || !document.getElementsByName(expando).length;\n      }); // ID filter and find\n\n      if (support.getById) {\n        Expr.filter[\"ID\"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            return elem.getAttribute(\"id\") === attrId;\n          };\n        };\n\n        Expr.find[\"ID\"] = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var elem = context.getElementById(id);\n            return elem ? [elem] : [];\n          }\n        };\n      } else {\n        Expr.filter[\"ID\"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            var node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n            return node && node.value === attrId;\n          };\n        }; // Support: IE 6 - 7 only\n        // getElementById is not reliable as a find shortcut\n\n\n        Expr.find[\"ID\"] = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var node,\n                i,\n                elems,\n                elem = context.getElementById(id);\n\n            if (elem) {\n              // Verify the id attribute\n              node = elem.getAttributeNode(\"id\");\n\n              if (node && node.value === id) {\n                return [elem];\n              } // Fall back on getElementsByName\n\n\n              elems = context.getElementsByName(id);\n              i = 0;\n\n              while (elem = elems[i++]) {\n                node = elem.getAttributeNode(\"id\");\n\n                if (node && node.value === id) {\n                  return [elem];\n                }\n              }\n            }\n\n            return [];\n          }\n        };\n      } // Tag\n\n\n      Expr.find[\"TAG\"] = support.getElementsByTagName ? function (tag, context) {\n        if (typeof context.getElementsByTagName !== \"undefined\") {\n          return context.getElementsByTagName(tag); // DocumentFragment nodes don't have gEBTN\n        } else if (support.qsa) {\n          return context.querySelectorAll(tag);\n        }\n      } : function (tag, context) {\n        var elem,\n            tmp = [],\n            i = 0,\n            // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n        results = context.getElementsByTagName(tag); // Filter out possible comments\n\n        if (tag === \"*\") {\n          while (elem = results[i++]) {\n            if (elem.nodeType === 1) {\n              tmp.push(elem);\n            }\n          }\n\n          return tmp;\n        }\n\n        return results;\n      }; // Class\n\n      Expr.find[\"CLASS\"] = support.getElementsByClassName && function (className, context) {\n        if (typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML) {\n          return context.getElementsByClassName(className);\n        }\n      };\n      /* QSA/matchesSelector\n      ---------------------------------------------------------------------- */\n      // QSA and matchesSelector support\n      // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\n\n      rbuggyMatches = []; // qSa(:focus) reports false when true (Chrome 21)\n      // We allow this because of a bug in IE8/9 that throws an error\n      // whenever `document.activeElement` is accessed on an iframe\n      // So, we allow :focus to pass through QSA all the time to avoid the IE error\n      // See https://bugs.jquery.com/ticket/13378\n\n      rbuggyQSA = [];\n\n      if (support.qsa = rnative.test(document.querySelectorAll)) {\n        // Build QSA regex\n        // Regex strategy adopted from Diego Perini\n        assert(function (el) {\n          // Select is set to empty string on purpose\n          // This is to test IE's treatment of not explicitly\n          // setting a boolean content attribute,\n          // since its presence should be enough\n          // https://bugs.jquery.com/ticket/12359\n          docElem.appendChild(el).innerHTML = \"<a id='\" + expando + \"'></a>\" + \"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" + \"<option selected=''></option></select>\"; // Support: IE8, Opera 11-12.16\n          // Nothing should be selected when empty strings follow ^= or $= or *=\n          // The test attribute must be unknown in Opera but \"safe\" for WinRT\n          // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\n          if (el.querySelectorAll(\"[msallowcapture^='']\").length) {\n            rbuggyQSA.push(\"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\");\n          } // Support: IE8\n          // Boolean attributes and \"value\" are not treated correctly\n\n\n          if (!el.querySelectorAll(\"[selected]\").length) {\n            rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");\n          } // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\n\n          if (!el.querySelectorAll(\"[id~=\" + expando + \"-]\").length) {\n            rbuggyQSA.push(\"~=\");\n          } // Webkit/Opera - :checked should return selected option elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          // IE8 throws error here and will not see later tests\n\n\n          if (!el.querySelectorAll(\":checked\").length) {\n            rbuggyQSA.push(\":checked\");\n          } // Support: Safari 8+, iOS 8+\n          // https://bugs.webkit.org/show_bug.cgi?id=136851\n          // In-page `selector#id sibling-combinator selector` fails\n\n\n          if (!el.querySelectorAll(\"a#\" + expando + \"+*\").length) {\n            rbuggyQSA.push(\".#.+[+~]\");\n          }\n        });\n        assert(function (el) {\n          el.innerHTML = \"<a href='' disabled='disabled'></a>\" + \"<select disabled='disabled'><option/></select>\"; // Support: Windows 8 Native Apps\n          // The type and name attributes are restricted during .innerHTML assignment\n\n          var input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"hidden\");\n          el.appendChild(input).setAttribute(\"name\", \"D\"); // Support: IE8\n          // Enforce case-sensitivity of name attribute\n\n          if (el.querySelectorAll(\"[name=d]\").length) {\n            rbuggyQSA.push(\"name\" + whitespace + \"*[*^$|!~]?=\");\n          } // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n          // IE8 throws error here and will not see later tests\n\n\n          if (el.querySelectorAll(\":enabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          } // Support: IE9-11+\n          // IE's :disabled selector does not pick up the children of disabled fieldsets\n\n\n          docElem.appendChild(el).disabled = true;\n\n          if (el.querySelectorAll(\":disabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          } // Opera 10-11 does not throw on post-comma invalid pseudos\n\n\n          el.querySelectorAll(\"*,:x\");\n          rbuggyQSA.push(\",.*:\");\n        });\n      }\n\n      if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n        assert(function (el) {\n          // Check to see if it's possible to do matchesSelector\n          // on a disconnected node (IE 9)\n          support.disconnectedMatch = matches.call(el, \"*\"); // This should fail with an exception\n          // Gecko does not error, returns false instead\n\n          matches.call(el, \"[s!='']:x\");\n          rbuggyMatches.push(\"!=\", pseudos);\n        });\n      }\n\n      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\"|\"));\n      /* Contains\n      ---------------------------------------------------------------------- */\n\n      hasCompare = rnative.test(docElem.compareDocumentPosition); // Element contains another\n      // Purposefully self-exclusive\n      // As in, an element does not contain itself\n\n      contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {\n        var adown = a.nodeType === 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n      } : function (a, b) {\n        if (b) {\n          while (b = b.parentNode) {\n            if (b === a) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      };\n      /* Sorting\n      ---------------------------------------------------------------------- */\n      // Document order sorting\n\n      sortOrder = hasCompare ? function (a, b) {\n        // Flag for duplicate removal\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        } // Sort on method existence if only one input has compareDocumentPosition\n\n\n        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\n        if (compare) {\n          return compare;\n        } // Calculate position if both inputs belong to the same document\n\n\n        compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected\n        1; // Disconnected nodes\n\n        if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n          // Choose the first element that is related to our preferred document\n          if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {\n            return -1;\n          }\n\n          if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {\n            return 1;\n          } // Maintain original order\n\n\n          return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;\n        }\n\n        return compare & 4 ? -1 : 1;\n      } : function (a, b) {\n        // Exit early if the nodes are identical\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        }\n\n        var cur,\n            i = 0,\n            aup = a.parentNode,\n            bup = b.parentNode,\n            ap = [a],\n            bp = [b]; // Parentless nodes are either documents or disconnected\n\n        if (!aup || !bup) {\n          return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0; // If the nodes are siblings, we can do a quick check\n        } else if (aup === bup) {\n          return siblingCheck(a, b);\n        } // Otherwise we need full lists of their ancestors for comparison\n\n\n        cur = a;\n\n        while (cur = cur.parentNode) {\n          ap.unshift(cur);\n        }\n\n        cur = b;\n\n        while (cur = cur.parentNode) {\n          bp.unshift(cur);\n        } // Walk down the tree looking for a discrepancy\n\n\n        while (ap[i] === bp[i]) {\n          i++;\n        }\n\n        return i ? // Do a sibling check if the nodes have a common ancestor\n        siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first\n        ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;\n      };\n      return document;\n    };\n\n    Sizzle.matches = function (expr, elements) {\n      return Sizzle(expr, null, null, elements);\n    };\n\n    Sizzle.matchesSelector = function (elem, expr) {\n      // Set document vars if needed\n      if ((elem.ownerDocument || elem) !== document) {\n        setDocument(elem);\n      } // Make sure that attribute selectors are quoted\n\n\n      expr = expr.replace(rattributeQuotes, \"='$1']\");\n\n      if (support.matchesSelector && documentIsHTML && !compilerCache[expr + \" \"] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n        try {\n          var ret = matches.call(elem, expr); // IE 9's matchesSelector returns false on disconnected nodes\n\n          if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document\n          // fragment in IE 9\n          elem.document && elem.document.nodeType !== 11) {\n            return ret;\n          }\n        } catch (e) {}\n      }\n\n      return Sizzle(expr, document, null, [elem]).length > 0;\n    };\n\n    Sizzle.contains = function (context, elem) {\n      // Set document vars if needed\n      if ((context.ownerDocument || context) !== document) {\n        setDocument(context);\n      }\n\n      return contains(context, elem);\n    };\n\n    Sizzle.attr = function (elem, name) {\n      // Set document vars if needed\n      if ((elem.ownerDocument || elem) !== document) {\n        setDocument(elem);\n      }\n\n      var fn = Expr.attrHandle[name.toLowerCase()],\n          // Don't get fooled by Object.prototype properties (jQuery #13807)\n      val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n      return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n    };\n\n    Sizzle.escape = function (sel) {\n      return (sel + \"\").replace(rcssescape, fcssescape);\n    };\n\n    Sizzle.error = function (msg) {\n      throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n    };\n    /**\n     * Document sorting and removing duplicates\n     * @param {ArrayLike} results\n     */\n\n\n    Sizzle.uniqueSort = function (results) {\n      var elem,\n          duplicates = [],\n          j = 0,\n          i = 0; // Unless we *know* we can detect duplicates, assume their presence\n\n      hasDuplicate = !support.detectDuplicates;\n      sortInput = !support.sortStable && results.slice(0);\n      results.sort(sortOrder);\n\n      if (hasDuplicate) {\n        while (elem = results[i++]) {\n          if (elem === results[i]) {\n            j = duplicates.push(i);\n          }\n        }\n\n        while (j--) {\n          results.splice(duplicates[j], 1);\n        }\n      } // Clear input after sorting to release objects\n      // See https://github.com/jquery/sizzle/pull/225\n\n\n      sortInput = null;\n      return results;\n    };\n    /**\n     * Utility function for retrieving the text value of an array of DOM nodes\n     * @param {Array|Element} elem\n     */\n\n\n    getText = Sizzle.getText = function (elem) {\n      var node,\n          ret = \"\",\n          i = 0,\n          nodeType = elem.nodeType;\n\n      if (!nodeType) {\n        // If no nodeType, this is expected to be an array\n        while (node = elem[i++]) {\n          // Do not traverse comment nodes\n          ret += getText(node);\n        }\n      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n        // Use textContent for elements\n        // innerText usage removed for consistency of new lines (jQuery #11153)\n        if (typeof elem.textContent === \"string\") {\n          return elem.textContent;\n        } else {\n          // Traverse its children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            ret += getText(elem);\n          }\n        }\n      } else if (nodeType === 3 || nodeType === 4) {\n        return elem.nodeValue;\n      } // Do not include comment or processing instruction nodes\n\n\n      return ret;\n    };\n\n    Expr = Sizzle.selectors = {\n      // Can be adjusted by the user\n      cacheLength: 50,\n      createPseudo: markFunction,\n      match: matchExpr,\n      attrHandle: {},\n      find: {},\n      relative: {\n        \">\": {\n          dir: \"parentNode\",\n          first: true\n        },\n        \" \": {\n          dir: \"parentNode\"\n        },\n        \"+\": {\n          dir: \"previousSibling\",\n          first: true\n        },\n        \"~\": {\n          dir: \"previousSibling\"\n        }\n      },\n      preFilter: {\n        \"ATTR\": function (match) {\n          match[1] = match[1].replace(runescape, funescape); // Move the given value to match[3] whether quoted or unquoted\n\n          match[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape, funescape);\n\n          if (match[2] === \"~=\") {\n            match[3] = \" \" + match[3] + \" \";\n          }\n\n          return match.slice(0, 4);\n        },\n        \"CHILD\": function (match) {\n          /* matches from matchExpr[\"CHILD\"]\n          \t1 type (only|nth|...)\n          \t2 what (child|of-type)\n          \t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n          \t4 xn-component of xn+y argument ([+-]?\\d*n|)\n          \t5 sign of xn-component\n          \t6 x of xn-component\n          \t7 sign of y-component\n          \t8 y of y-component\n          */\n          match[1] = match[1].toLowerCase();\n\n          if (match[1].slice(0, 3) === \"nth\") {\n            // nth-* requires argument\n            if (!match[3]) {\n              Sizzle.error(match[0]);\n            } // numeric x and y parameters for Expr.filter.CHILD\n            // remember that false/true cast respectively to 0/1\n\n\n            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n            match[5] = +(match[7] + match[8] || match[3] === \"odd\"); // other types prohibit arguments\n          } else if (match[3]) {\n            Sizzle.error(match[0]);\n          }\n\n          return match;\n        },\n        \"PSEUDO\": function (match) {\n          var excess,\n              unquoted = !match[6] && match[2];\n\n          if (matchExpr[\"CHILD\"].test(match[0])) {\n            return null;\n          } // Accept quoted arguments as-is\n\n\n          if (match[3]) {\n            match[2] = match[4] || match[5] || \"\"; // Strip excess characters from unquoted arguments\n          } else if (unquoted && rpseudo.test(unquoted) && ( // Get excess from tokenize (recursively)\n          excess = tokenize(unquoted, true)) && ( // advance to the next closing parenthesis\n          excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n            // excess is a negative index\n            match[0] = match[0].slice(0, excess);\n            match[2] = unquoted.slice(0, excess);\n          } // Return only captures needed by the pseudo filter method (type and argument)\n\n\n          return match.slice(0, 3);\n        }\n      },\n      filter: {\n        \"TAG\": function (nodeNameSelector) {\n          var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n          return nodeNameSelector === \"*\" ? function () {\n            return true;\n          } : function (elem) {\n            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n          };\n        },\n        \"CLASS\": function (className) {\n          var pattern = classCache[className + \" \"];\n          return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function (elem) {\n            return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\");\n          });\n        },\n        \"ATTR\": function (name, operator, check) {\n          return function (elem) {\n            var result = Sizzle.attr(elem, name);\n\n            if (result == null) {\n              return operator === \"!=\";\n            }\n\n            if (!operator) {\n              return true;\n            }\n\n            result += \"\";\n            return operator === \"=\" ? result === check : operator === \"!=\" ? result !== check : operator === \"^=\" ? check && result.indexOf(check) === 0 : operator === \"*=\" ? check && result.indexOf(check) > -1 : operator === \"$=\" ? check && result.slice(-check.length) === check : operator === \"~=\" ? (\" \" + result.replace(rwhitespace, \" \") + \" \").indexOf(check) > -1 : operator === \"|=\" ? result === check || result.slice(0, check.length + 1) === check + \"-\" : false;\n          };\n        },\n        \"CHILD\": function (type, what, argument, first, last) {\n          var simple = type.slice(0, 3) !== \"nth\",\n              forward = type.slice(-4) !== \"last\",\n              ofType = what === \"of-type\";\n          return first === 1 && last === 0 ? // Shortcut for :nth-*(n)\n          function (elem) {\n            return !!elem.parentNode;\n          } : function (elem, context, xml) {\n            var cache,\n                uniqueCache,\n                outerCache,\n                node,\n                nodeIndex,\n                start,\n                dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n                parent = elem.parentNode,\n                name = ofType && elem.nodeName.toLowerCase(),\n                useCache = !xml && !ofType,\n                diff = false;\n\n            if (parent) {\n              // :(first|last|only)-(child|of-type)\n              if (simple) {\n                while (dir) {\n                  node = elem;\n\n                  while (node = node[dir]) {\n                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                      return false;\n                    }\n                  } // Reverse direction for :only-* (if we haven't yet done so)\n\n\n                  start = dir = type === \"only\" && !start && \"nextSibling\";\n                }\n\n                return true;\n              }\n\n              start = [forward ? parent.firstChild : parent.lastChild]; // non-xml :nth-child(...) stores cache data on `parent`\n\n              if (forward && useCache) {\n                // Seek `elem` from a previously-cached index\n                // ...in a gzip-friendly way\n                node = parent;\n                outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                // Defend against cloned attroperties (jQuery gh-1709)\n\n                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                cache = uniqueCache[type] || [];\n                nodeIndex = cache[0] === dirruns && cache[1];\n                diff = nodeIndex && cache[2];\n                node = nodeIndex && parent.childNodes[nodeIndex];\n\n                while (node = ++nodeIndex && node && node[dir] || ( // Fallback to seeking `elem` from the start\n                diff = nodeIndex = 0) || start.pop()) {\n                  // When found, cache indexes on `parent` and break\n                  if (node.nodeType === 1 && ++diff && node === elem) {\n                    uniqueCache[type] = [dirruns, nodeIndex, diff];\n                    break;\n                  }\n                }\n              } else {\n                // Use previously-cached element index if available\n                if (useCache) {\n                  // ...in a gzip-friendly way\n                  node = elem;\n                  outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                  // Defend against cloned attroperties (jQuery gh-1709)\n\n                  uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                  cache = uniqueCache[type] || [];\n                  nodeIndex = cache[0] === dirruns && cache[1];\n                  diff = nodeIndex;\n                } // xml :nth-child(...)\n                // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\n\n                if (diff === false) {\n                  // Use the same loop as above to seek `elem` from the start\n                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                      // Cache the index of each encountered element\n                      if (useCache) {\n                        outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                        // Defend against cloned attroperties (jQuery gh-1709)\n\n                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                        uniqueCache[type] = [dirruns, diff];\n                      }\n\n                      if (node === elem) {\n                        break;\n                      }\n                    }\n                  }\n                }\n              } // Incorporate the offset, then check against cycle size\n\n\n              diff -= last;\n              return diff === first || diff % first === 0 && diff / first >= 0;\n            }\n          };\n        },\n        \"PSEUDO\": function (pseudo, argument) {\n          // pseudo-class names are case-insensitive\n          // http://www.w3.org/TR/selectors/#pseudo-classes\n          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n          // Remember that setFilters inherits from pseudos\n          var args,\n              fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error(\"unsupported pseudo: \" + pseudo); // The user may use createPseudo to indicate that\n          // arguments are needed to create the filter function\n          // just as Sizzle does\n\n          if (fn[expando]) {\n            return fn(argument);\n          } // But maintain support for old signatures\n\n\n          if (fn.length > 1) {\n            args = [pseudo, pseudo, \"\", argument];\n            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n              var idx,\n                  matched = fn(seed, argument),\n                  i = matched.length;\n\n              while (i--) {\n                idx = indexOf(seed, matched[i]);\n                seed[idx] = !(matches[idx] = matched[i]);\n              }\n            }) : function (elem) {\n              return fn(elem, 0, args);\n            };\n          }\n\n          return fn;\n        }\n      },\n      pseudos: {\n        // Potentially complex pseudos\n        \"not\": markFunction(function (selector) {\n          // Trim the selector passed to compile\n          // to avoid treating leading and trailing\n          // spaces as combinators\n          var input = [],\n              results = [],\n              matcher = compile(selector.replace(rtrim, \"$1\"));\n          return matcher[expando] ? markFunction(function (seed, matches, context, xml) {\n            var elem,\n                unmatched = matcher(seed, null, xml, []),\n                i = seed.length; // Match elements unmatched by `matcher`\n\n            while (i--) {\n              if (elem = unmatched[i]) {\n                seed[i] = !(matches[i] = elem);\n              }\n            }\n          }) : function (elem, context, xml) {\n            input[0] = elem;\n            matcher(input, null, xml, results); // Don't keep the element (issue #299)\n\n            input[0] = null;\n            return !results.pop();\n          };\n        }),\n        \"has\": markFunction(function (selector) {\n          return function (elem) {\n            return Sizzle(selector, elem).length > 0;\n          };\n        }),\n        \"contains\": markFunction(function (text) {\n          text = text.replace(runescape, funescape);\n          return function (elem) {\n            return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;\n          };\n        }),\n        // \"Whether an element is represented by a :lang() selector\n        // is based solely on the element's language value\n        // being equal to the identifier C,\n        // or beginning with the identifier C immediately followed by \"-\".\n        // The matching of C against the element's language value is performed case-insensitively.\n        // The identifier C does not have to be a valid language name.\"\n        // http://www.w3.org/TR/selectors/#lang-pseudo\n        \"lang\": markFunction(function (lang) {\n          // lang value must be a valid identifier\n          if (!ridentifier.test(lang || \"\")) {\n            Sizzle.error(\"unsupported lang: \" + lang);\n          }\n\n          lang = lang.replace(runescape, funescape).toLowerCase();\n          return function (elem) {\n            var elemLang;\n\n            do {\n              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) {\n                elemLang = elemLang.toLowerCase();\n                return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n              }\n            } while ((elem = elem.parentNode) && elem.nodeType === 1);\n\n            return false;\n          };\n        }),\n        // Miscellaneous\n        \"target\": function (elem) {\n          var hash = window.location && window.location.hash;\n          return hash && hash.slice(1) === elem.id;\n        },\n        \"root\": function (elem) {\n          return elem === docElem;\n        },\n        \"focus\": function (elem) {\n          return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n        },\n        // Boolean properties\n        \"enabled\": createDisabledPseudo(false),\n        \"disabled\": createDisabledPseudo(true),\n        \"checked\": function (elem) {\n          // In CSS3, :checked should return both checked and selected elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          var nodeName = elem.nodeName.toLowerCase();\n          return nodeName === \"input\" && !!elem.checked || nodeName === \"option\" && !!elem.selected;\n        },\n        \"selected\": function (elem) {\n          // Accessing this property makes selected-by-default\n          // options in Safari work properly\n          if (elem.parentNode) {\n            elem.parentNode.selectedIndex;\n          }\n\n          return elem.selected === true;\n        },\n        // Contents\n        \"empty\": function (elem) {\n          // http://www.w3.org/TR/selectors/#empty-pseudo\n          // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n          //   but not by others (comment: 8; processing instruction: 7; etc.)\n          // nodeType < 6 works because attributes (2) do not appear as children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            if (elem.nodeType < 6) {\n              return false;\n            }\n          }\n\n          return true;\n        },\n        \"parent\": function (elem) {\n          return !Expr.pseudos[\"empty\"](elem);\n        },\n        // Element/input types\n        \"header\": function (elem) {\n          return rheader.test(elem.nodeName);\n        },\n        \"input\": function (elem) {\n          return rinputs.test(elem.nodeName);\n        },\n        \"button\": function (elem) {\n          var name = elem.nodeName.toLowerCase();\n          return name === \"input\" && elem.type === \"button\" || name === \"button\";\n        },\n        \"text\": function (elem) {\n          var attr;\n          return elem.nodeName.toLowerCase() === \"input\" && elem.type === \"text\" && ( // Support: IE<8\n          // New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n          (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");\n        },\n        // Position-in-collection\n        \"first\": createPositionalPseudo(function () {\n          return [0];\n        }),\n        \"last\": createPositionalPseudo(function (matchIndexes, length) {\n          return [length - 1];\n        }),\n        \"eq\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          return [argument < 0 ? argument + length : argument];\n        }),\n        \"even\": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 0;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"odd\": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 1;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"lt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument;\n\n          for (; --i >= 0;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"gt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument;\n\n          for (; ++i < length;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        })\n      }\n    };\n    Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"]; // Add button/input type pseudos\n\n    for (i in {\n      radio: true,\n      checkbox: true,\n      file: true,\n      password: true,\n      image: true\n    }) {\n      Expr.pseudos[i] = createInputPseudo(i);\n    }\n\n    for (i in {\n      submit: true,\n      reset: true\n    }) {\n      Expr.pseudos[i] = createButtonPseudo(i);\n    } // Easy API for creating new setFilters\n\n\n    function setFilters() {}\n\n    setFilters.prototype = Expr.filters = Expr.pseudos;\n    Expr.setFilters = new setFilters();\n\n    tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n      var matched,\n          match,\n          tokens,\n          type,\n          soFar,\n          groups,\n          preFilters,\n          cached = tokenCache[selector + \" \"];\n\n      if (cached) {\n        return parseOnly ? 0 : cached.slice(0);\n      }\n\n      soFar = selector;\n      groups = [];\n      preFilters = Expr.preFilter;\n\n      while (soFar) {\n        // Comma and first run\n        if (!matched || (match = rcomma.exec(soFar))) {\n          if (match) {\n            // Don't consume trailing commas as valid\n            soFar = soFar.slice(match[0].length) || soFar;\n          }\n\n          groups.push(tokens = []);\n        }\n\n        matched = false; // Combinators\n\n        if (match = rcombinators.exec(soFar)) {\n          matched = match.shift();\n          tokens.push({\n            value: matched,\n            // Cast descendant combinators to space\n            type: match[0].replace(rtrim, \" \")\n          });\n          soFar = soFar.slice(matched.length);\n        } // Filters\n\n\n        for (type in Expr.filter) {\n          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n            matched = match.shift();\n            tokens.push({\n              value: matched,\n              type: type,\n              matches: match\n            });\n            soFar = soFar.slice(matched.length);\n          }\n        }\n\n        if (!matched) {\n          break;\n        }\n      } // Return the length of the invalid excess\n      // if we're just parsing\n      // Otherwise, throw an error or return tokens\n\n\n      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens\n      tokenCache(selector, groups).slice(0);\n    };\n\n    function toSelector(tokens) {\n      var i = 0,\n          len = tokens.length,\n          selector = \"\";\n\n      for (; i < len; i++) {\n        selector += tokens[i].value;\n      }\n\n      return selector;\n    }\n\n    function addCombinator(matcher, combinator, base) {\n      var dir = combinator.dir,\n          skip = combinator.next,\n          key = skip || dir,\n          checkNonElements = base && key === \"parentNode\",\n          doneName = done++;\n      return combinator.first ? // Check against closest ancestor/preceding element\n      function (elem, context, xml) {\n        while (elem = elem[dir]) {\n          if (elem.nodeType === 1 || checkNonElements) {\n            return matcher(elem, context, xml);\n          }\n        }\n\n        return false;\n      } : // Check against all ancestor/preceding elements\n      function (elem, context, xml) {\n        var oldCache,\n            uniqueCache,\n            outerCache,\n            newCache = [dirruns, doneName]; // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\n        if (xml) {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              if (matcher(elem, context, xml)) {\n                return true;\n              }\n            }\n          }\n        } else {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              outerCache = elem[expando] || (elem[expando] = {}); // Support: IE <9 only\n              // Defend against cloned attroperties (jQuery gh-1709)\n\n              uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});\n\n              if (skip && skip === elem.nodeName.toLowerCase()) {\n                elem = elem[dir] || elem;\n              } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                // Assign to newCache so results back-propagate to previous elements\n                return newCache[2] = oldCache[2];\n              } else {\n                // Reuse newcache so results back-propagate to previous elements\n                uniqueCache[key] = newCache; // A match means we're done; a fail means we have to keep checking\n\n                if (newCache[2] = matcher(elem, context, xml)) {\n                  return true;\n                }\n              }\n            }\n          }\n        }\n\n        return false;\n      };\n    }\n\n    function elementMatcher(matchers) {\n      return matchers.length > 1 ? function (elem, context, xml) {\n        var i = matchers.length;\n\n        while (i--) {\n          if (!matchers[i](elem, context, xml)) {\n            return false;\n          }\n        }\n\n        return true;\n      } : matchers[0];\n    }\n\n    function multipleContexts(selector, contexts, results) {\n      var i = 0,\n          len = contexts.length;\n\n      for (; i < len; i++) {\n        Sizzle(selector, contexts[i], results);\n      }\n\n      return results;\n    }\n\n    function condense(unmatched, map, filter, context, xml) {\n      var elem,\n          newUnmatched = [],\n          i = 0,\n          len = unmatched.length,\n          mapped = map != null;\n\n      for (; i < len; i++) {\n        if (elem = unmatched[i]) {\n          if (!filter || filter(elem, context, xml)) {\n            newUnmatched.push(elem);\n\n            if (mapped) {\n              map.push(i);\n            }\n          }\n        }\n      }\n\n      return newUnmatched;\n    }\n\n    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n      if (postFilter && !postFilter[expando]) {\n        postFilter = setMatcher(postFilter);\n      }\n\n      if (postFinder && !postFinder[expando]) {\n        postFinder = setMatcher(postFinder, postSelector);\n      }\n\n      return markFunction(function (seed, results, context, xml) {\n        var temp,\n            i,\n            elem,\n            preMap = [],\n            postMap = [],\n            preexisting = results.length,\n            // Get initial elements from seed or context\n        elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []),\n            // Prefilter to get matcher input, preserving a map for seed-results synchronization\n        matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,\n            matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n        postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary\n        [] : // ...otherwise use results directly\n        results : matcherIn; // Find primary matches\n\n        if (matcher) {\n          matcher(matcherIn, matcherOut, context, xml);\n        } // Apply postFilter\n\n\n        if (postFilter) {\n          temp = condense(matcherOut, postMap);\n          postFilter(temp, [], context, xml); // Un-match failing elements by moving them back to matcherIn\n\n          i = temp.length;\n\n          while (i--) {\n            if (elem = temp[i]) {\n              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n            }\n          }\n        }\n\n        if (seed) {\n          if (postFinder || preFilter) {\n            if (postFinder) {\n              // Get the final matcherOut by condensing this intermediate into postFinder contexts\n              temp = [];\n              i = matcherOut.length;\n\n              while (i--) {\n                if (elem = matcherOut[i]) {\n                  // Restore matcherIn since elem is not yet a final match\n                  temp.push(matcherIn[i] = elem);\n                }\n              }\n\n              postFinder(null, matcherOut = [], temp, xml);\n            } // Move matched elements from seed to results to keep them synchronized\n\n\n            i = matcherOut.length;\n\n            while (i--) {\n              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n                seed[temp] = !(results[temp] = elem);\n              }\n            }\n          } // Add elements to results, through postFinder if defined\n\n        } else {\n          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n\n          if (postFinder) {\n            postFinder(null, results, matcherOut, xml);\n          } else {\n            push.apply(results, matcherOut);\n          }\n        }\n      });\n    }\n\n    function matcherFromTokens(tokens) {\n      var checkContext,\n          matcher,\n          j,\n          len = tokens.length,\n          leadingRelative = Expr.relative[tokens[0].type],\n          implicitRelative = leadingRelative || Expr.relative[\" \"],\n          i = leadingRelative ? 1 : 0,\n          // The foundational matcher ensures that elements are reachable from top-level context(s)\n      matchContext = addCombinator(function (elem) {\n        return elem === checkContext;\n      }, implicitRelative, true),\n          matchAnyContext = addCombinator(function (elem) {\n        return indexOf(checkContext, elem) > -1;\n      }, implicitRelative, true),\n          matchers = [function (elem, context, xml) {\n        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml)); // Avoid hanging onto element (issue #299)\n\n        checkContext = null;\n        return ret;\n      }];\n\n      for (; i < len; i++) {\n        if (matcher = Expr.relative[tokens[i].type]) {\n          matchers = [addCombinator(elementMatcher(matchers), matcher)];\n        } else {\n          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches); // Return special upon seeing a positional matcher\n\n          if (matcher[expando]) {\n            // Find the next relative operator (if any) for proper handling\n            j = ++i;\n\n            for (; j < len; j++) {\n              if (Expr.relative[tokens[j].type]) {\n                break;\n              }\n            }\n\n            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector( // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n            tokens.slice(0, i - 1).concat({\n              value: tokens[i - 2].type === \" \" ? \"*\" : \"\"\n            })).replace(rtrim, \"$1\"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n          }\n\n          matchers.push(matcher);\n        }\n      }\n\n      return elementMatcher(matchers);\n    }\n\n    function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n      var bySet = setMatchers.length > 0,\n          byElement = elementMatchers.length > 0,\n          superMatcher = function (seed, context, xml, results, outermost) {\n        var elem,\n            j,\n            matcher,\n            matchedCount = 0,\n            i = \"0\",\n            unmatched = seed && [],\n            setMatched = [],\n            contextBackup = outermostContext,\n            // We must always have either seed elements or outermost context\n        elems = seed || byElement && Expr.find[\"TAG\"](\"*\", outermost),\n            // Use integer dirruns iff this is the outermost matcher\n        dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,\n            len = elems.length;\n\n        if (outermost) {\n          outermostContext = context === document || context || outermost;\n        } // Add elements passing elementMatchers directly to results\n        // Support: IE<9, Safari\n        // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\n\n        for (; i !== len && (elem = elems[i]) != null; i++) {\n          if (byElement && elem) {\n            j = 0;\n\n            if (!context && elem.ownerDocument !== document) {\n              setDocument(elem);\n              xml = !documentIsHTML;\n            }\n\n            while (matcher = elementMatchers[j++]) {\n              if (matcher(elem, context || document, xml)) {\n                results.push(elem);\n                break;\n              }\n            }\n\n            if (outermost) {\n              dirruns = dirrunsUnique;\n            }\n          } // Track unmatched elements for set filters\n\n\n          if (bySet) {\n            // They will have gone through all possible matchers\n            if (elem = !matcher && elem) {\n              matchedCount--;\n            } // Lengthen the array for every element, matched or not\n\n\n            if (seed) {\n              unmatched.push(elem);\n            }\n          }\n        } // `i` is now the count of elements visited above, and adding it to `matchedCount`\n        // makes the latter nonnegative.\n\n\n        matchedCount += i; // Apply set filters to unmatched elements\n        // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n        // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n        // no element matchers and no seed.\n        // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n        // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n        // numerically zero.\n\n        if (bySet && i !== matchedCount) {\n          j = 0;\n\n          while (matcher = setMatchers[j++]) {\n            matcher(unmatched, setMatched, context, xml);\n          }\n\n          if (seed) {\n            // Reintegrate element matches to eliminate the need for sorting\n            if (matchedCount > 0) {\n              while (i--) {\n                if (!(unmatched[i] || setMatched[i])) {\n                  setMatched[i] = pop.call(results);\n                }\n              }\n            } // Discard index placeholder values to get only actual matches\n\n\n            setMatched = condense(setMatched);\n          } // Add matches to results\n\n\n          push.apply(results, setMatched); // Seedless set matches succeeding multiple successful matchers stipulate sorting\n\n          if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n            Sizzle.uniqueSort(results);\n          }\n        } // Override manipulation of globals by nested matchers\n\n\n        if (outermost) {\n          dirruns = dirrunsUnique;\n          outermostContext = contextBackup;\n        }\n\n        return unmatched;\n      };\n\n      return bySet ? markFunction(superMatcher) : superMatcher;\n    }\n\n    compile = Sizzle.compile = function (selector, match\n    /* Internal Use Only */\n    ) {\n      var i,\n          setMatchers = [],\n          elementMatchers = [],\n          cached = compilerCache[selector + \" \"];\n\n      if (!cached) {\n        // Generate a function of recursive functions that can be used to check each element\n        if (!match) {\n          match = tokenize(selector);\n        }\n\n        i = match.length;\n\n        while (i--) {\n          cached = matcherFromTokens(match[i]);\n\n          if (cached[expando]) {\n            setMatchers.push(cached);\n          } else {\n            elementMatchers.push(cached);\n          }\n        } // Cache the compiled function\n\n\n        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers)); // Save selector and tokenization\n\n        cached.selector = selector;\n      }\n\n      return cached;\n    };\n    /**\n     * A low-level selection function that works with Sizzle's compiled\n     *  selector functions\n     * @param {String|Function} selector A selector or a pre-compiled\n     *  selector function built with Sizzle.compile\n     * @param {Element} context\n     * @param {Array} [results]\n     * @param {Array} [seed] A set of elements to match against\n     */\n\n\n    select = Sizzle.select = function (selector, context, results, seed) {\n      var i,\n          tokens,\n          token,\n          type,\n          find,\n          compiled = typeof selector === \"function\" && selector,\n          match = !seed && tokenize(selector = compiled.selector || selector);\n      results = results || []; // Try to minimize operations if there is only one selector in the list and no seed\n      // (the latter of which guarantees us context)\n\n      if (match.length === 1) {\n        // Reduce context if the leading compound selector is an ID\n        tokens = match[0] = match[0].slice(0);\n\n        if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n          context = (Expr.find[\"ID\"](token.matches[0].replace(runescape, funescape), context) || [])[0];\n\n          if (!context) {\n            return results; // Precompiled matchers will still verify ancestry, so step up a level\n          } else if (compiled) {\n            context = context.parentNode;\n          }\n\n          selector = selector.slice(tokens.shift().value.length);\n        } // Fetch a seed set for right-to-left matching\n\n\n        i = matchExpr[\"needsContext\"].test(selector) ? 0 : tokens.length;\n\n        while (i--) {\n          token = tokens[i]; // Abort if we hit a combinator\n\n          if (Expr.relative[type = token.type]) {\n            break;\n          }\n\n          if (find = Expr.find[type]) {\n            // Search, expanding context for leading sibling combinators\n            if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n              // If seed is empty or no tokens remain, we can return early\n              tokens.splice(i, 1);\n              selector = seed.length && toSelector(tokens);\n\n              if (!selector) {\n                push.apply(results, seed);\n                return results;\n              }\n\n              break;\n            }\n          }\n        }\n      } // Compile and execute a filtering function if one is not provided\n      // Provide `match` to avoid retokenization if we modified the selector above\n\n\n      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n      return results;\n    }; // One-time assignments\n    // Sort stability\n\n\n    support.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando; // Support: Chrome 14-35+\n    // Always assume duplicates if they aren't passed to the comparison function\n\n    support.detectDuplicates = !!hasDuplicate; // Initialize against the default document\n\n    setDocument(); // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n    // Detached nodes confoundingly follow *each other*\n\n    support.sortDetached = assert(function (el) {\n      // Should return 1, but returns 4 (following)\n      return el.compareDocumentPosition(document.createElement(\"fieldset\")) & 1;\n    }); // Support: IE<8\n    // Prevent attribute/property \"interpolation\"\n    // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n\n    if (!assert(function (el) {\n      el.innerHTML = \"<a href='#'></a>\";\n      return el.firstChild.getAttribute(\"href\") === \"#\";\n    })) {\n      addHandle(\"type|href|height|width\", function (elem, name, isXML) {\n        if (!isXML) {\n          return elem.getAttribute(name, name.toLowerCase() === \"type\" ? 1 : 2);\n        }\n      });\n    } // Support: IE<9\n    // Use defaultValue in place of getAttribute(\"value\")\n\n\n    if (!support.attributes || !assert(function (el) {\n      el.innerHTML = \"<input/>\";\n      el.firstChild.setAttribute(\"value\", \"\");\n      return el.firstChild.getAttribute(\"value\") === \"\";\n    })) {\n      addHandle(\"value\", function (elem, name, isXML) {\n        if (!isXML && elem.nodeName.toLowerCase() === \"input\") {\n          return elem.defaultValue;\n        }\n      });\n    } // Support: IE<9\n    // Use getAttributeNode to fetch booleans when getAttribute lies\n\n\n    if (!assert(function (el) {\n      return el.getAttribute(\"disabled\") == null;\n    })) {\n      addHandle(booleans, function (elem, name, isXML) {\n        var val;\n\n        if (!isXML) {\n          return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n        }\n      });\n    }\n\n    return Sizzle;\n  }(window);\n\n  jQuery.find = Sizzle;\n  jQuery.expr = Sizzle.selectors; // Deprecated\n\n  jQuery.expr[\":\"] = jQuery.expr.pseudos;\n  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n  jQuery.text = Sizzle.getText;\n  jQuery.isXMLDoc = Sizzle.isXML;\n  jQuery.contains = Sizzle.contains;\n  jQuery.escapeSelector = Sizzle.escape;\n\n  var dir = function (elem, dir, until) {\n    var matched = [],\n        truncate = until !== undefined;\n\n    while ((elem = elem[dir]) && elem.nodeType !== 9) {\n      if (elem.nodeType === 1) {\n        if (truncate && jQuery(elem).is(until)) {\n          break;\n        }\n\n        matched.push(elem);\n      }\n    }\n\n    return matched;\n  };\n\n  var siblings = function (n, elem) {\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== elem) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  };\n\n  var rneedsContext = jQuery.expr.match.needsContext;\n\n  function nodeName(elem, name) {\n    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n  }\n\n  ;\n  var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i; // Implement the identical functionality for filter and not\n\n  function winnow(elements, qualifier, not) {\n    if (isFunction(qualifier)) {\n      return jQuery.grep(elements, function (elem, i) {\n        return !!qualifier.call(elem, i, elem) !== not;\n      });\n    } // Single element\n\n\n    if (qualifier.nodeType) {\n      return jQuery.grep(elements, function (elem) {\n        return elem === qualifier !== not;\n      });\n    } // Arraylike of elements (jQuery, arguments, Array)\n\n\n    if (typeof qualifier !== \"string\") {\n      return jQuery.grep(elements, function (elem) {\n        return indexOf.call(qualifier, elem) > -1 !== not;\n      });\n    } // Filtered directly for both simple and complex selectors\n\n\n    return jQuery.filter(qualifier, elements, not);\n  }\n\n  jQuery.filter = function (expr, elems, not) {\n    var elem = elems[0];\n\n    if (not) {\n      expr = \":not(\" + expr + \")\";\n    }\n\n    if (elems.length === 1 && elem.nodeType === 1) {\n      return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n    }\n\n    return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n      return elem.nodeType === 1;\n    }));\n  };\n\n  jQuery.fn.extend({\n    find: function (selector) {\n      var i,\n          ret,\n          len = this.length,\n          self = this;\n\n      if (typeof selector !== \"string\") {\n        return this.pushStack(jQuery(selector).filter(function () {\n          for (i = 0; i < len; i++) {\n            if (jQuery.contains(self[i], this)) {\n              return true;\n            }\n          }\n        }));\n      }\n\n      ret = this.pushStack([]);\n\n      for (i = 0; i < len; i++) {\n        jQuery.find(selector, self[i], ret);\n      }\n\n      return len > 1 ? jQuery.uniqueSort(ret) : ret;\n    },\n    filter: function (selector) {\n      return this.pushStack(winnow(this, selector || [], false));\n    },\n    not: function (selector) {\n      return this.pushStack(winnow(this, selector || [], true));\n    },\n    is: function (selector) {\n      return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n      // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n      typeof selector === \"string\" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n    }\n  }); // Initialize a jQuery object\n  // A central reference to the root jQuery(document)\n\n  var rootjQuery,\n      // A simple way to check for HTML strings\n  // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n  // Strict HTML recognition (#11290: must start with <)\n  // Shortcut simple #id case for speed\n  rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n      init = jQuery.fn.init = function (selector, context, root) {\n    var match, elem; // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\n    if (!selector) {\n      return this;\n    } // Method init() accepts an alternate rootjQuery\n    // so migrate can support jQuery.sub (gh-2101)\n\n\n    root = root || rootjQuery; // Handle HTML strings\n\n    if (typeof selector === \"string\") {\n      if (selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3) {\n        // Assume that strings that start and end with <> are HTML and skip the regex check\n        match = [null, selector, null];\n      } else {\n        match = rquickExpr.exec(selector);\n      } // Match html or make sure no context is specified for #id\n\n\n      if (match && (match[1] || !context)) {\n        // HANDLE: $(html) -> $(array)\n        if (match[1]) {\n          context = context instanceof jQuery ? context[0] : context; // Option to run scripts is true for back-compat\n          // Intentionally let the error be thrown if parseHTML is not present\n\n          jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true)); // HANDLE: $(html, props)\n\n          if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n            for (match in context) {\n              // Properties of context are called as methods if possible\n              if (isFunction(this[match])) {\n                this[match](context[match]); // ...and otherwise set as attributes\n              } else {\n                this.attr(match, context[match]);\n              }\n            }\n          }\n\n          return this; // HANDLE: $(#id)\n        } else {\n          elem = document.getElementById(match[2]);\n\n          if (elem) {\n            // Inject the element directly into the jQuery object\n            this[0] = elem;\n            this.length = 1;\n          }\n\n          return this;\n        } // HANDLE: $(expr, $(...))\n\n      } else if (!context || context.jquery) {\n        return (context || root).find(selector); // HANDLE: $(expr, context)\n        // (which is just equivalent to: $(context).find(expr)\n      } else {\n        return this.constructor(context).find(selector);\n      } // HANDLE: $(DOMElement)\n\n    } else if (selector.nodeType) {\n      this[0] = selector;\n      this.length = 1;\n      return this; // HANDLE: $(function)\n      // Shortcut for document ready\n    } else if (isFunction(selector)) {\n      return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present\n      selector(jQuery);\n    }\n\n    return jQuery.makeArray(selector, this);\n  }; // Give the init function the jQuery prototype for later instantiation\n\n\n  init.prototype = jQuery.fn; // Initialize central reference\n\n  rootjQuery = jQuery(document);\n  var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n      // Methods guaranteed to produce a unique set when starting from a unique set\n  guaranteedUnique = {\n    children: true,\n    contents: true,\n    next: true,\n    prev: true\n  };\n  jQuery.fn.extend({\n    has: function (target) {\n      var targets = jQuery(target, this),\n          l = targets.length;\n      return this.filter(function () {\n        var i = 0;\n\n        for (; i < l; i++) {\n          if (jQuery.contains(this, targets[i])) {\n            return true;\n          }\n        }\n      });\n    },\n    closest: function (selectors, context) {\n      var cur,\n          i = 0,\n          l = this.length,\n          matched = [],\n          targets = typeof selectors !== \"string\" && jQuery(selectors); // Positional selectors never match, since there's no _selection_ context\n\n      if (!rneedsContext.test(selectors)) {\n        for (; i < l; i++) {\n          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n            // Always skip document fragments\n            if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle\n            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n              matched.push(cur);\n              break;\n            }\n          }\n        }\n      }\n\n      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n    },\n    // Determine the position of an element within the set\n    index: function (elem) {\n      // No argument, return index in parent\n      if (!elem) {\n        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n      } // Index in selector\n\n\n      if (typeof elem === \"string\") {\n        return indexOf.call(jQuery(elem), this[0]);\n      } // Locate the position of the desired element\n\n\n      return indexOf.call(this, // If it receives a jQuery object, the first element is used\n      elem.jquery ? elem[0] : elem);\n    },\n    add: function (selector, context) {\n      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n    },\n    addBack: function (selector) {\n      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n    }\n  });\n\n  function sibling(cur, dir) {\n    while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n\n    return cur;\n  }\n\n  jQuery.each({\n    parent: function (elem) {\n      var parent = elem.parentNode;\n      return parent && parent.nodeType !== 11 ? parent : null;\n    },\n    parents: function (elem) {\n      return dir(elem, \"parentNode\");\n    },\n    parentsUntil: function (elem, i, until) {\n      return dir(elem, \"parentNode\", until);\n    },\n    next: function (elem) {\n      return sibling(elem, \"nextSibling\");\n    },\n    prev: function (elem) {\n      return sibling(elem, \"previousSibling\");\n    },\n    nextAll: function (elem) {\n      return dir(elem, \"nextSibling\");\n    },\n    prevAll: function (elem) {\n      return dir(elem, \"previousSibling\");\n    },\n    nextUntil: function (elem, i, until) {\n      return dir(elem, \"nextSibling\", until);\n    },\n    prevUntil: function (elem, i, until) {\n      return dir(elem, \"previousSibling\", until);\n    },\n    siblings: function (elem) {\n      return siblings((elem.parentNode || {}).firstChild, elem);\n    },\n    children: function (elem) {\n      return siblings(elem.firstChild);\n    },\n    contents: function (elem) {\n      if (nodeName(elem, \"iframe\")) {\n        return elem.contentDocument;\n      } // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n      // Treat the template element as a regular one in browsers that\n      // don't support it.\n\n\n      if (nodeName(elem, \"template\")) {\n        elem = elem.content || elem;\n      }\n\n      return jQuery.merge([], elem.childNodes);\n    }\n  }, function (name, fn) {\n    jQuery.fn[name] = function (until, selector) {\n      var matched = jQuery.map(this, fn, until);\n\n      if (name.slice(-5) !== \"Until\") {\n        selector = until;\n      }\n\n      if (selector && typeof selector === \"string\") {\n        matched = jQuery.filter(selector, matched);\n      }\n\n      if (this.length > 1) {\n        // Remove duplicates\n        if (!guaranteedUnique[name]) {\n          jQuery.uniqueSort(matched);\n        } // Reverse order for parents* and prev-derivatives\n\n\n        if (rparentsprev.test(name)) {\n          matched.reverse();\n        }\n      }\n\n      return this.pushStack(matched);\n    };\n  });\n  var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g; // Convert String-formatted options into Object-formatted ones\n\n  function createOptions(options) {\n    var object = {};\n    jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n      object[flag] = true;\n    });\n    return object;\n  }\n  /*\n   * Create a callback list using the following parameters:\n   *\n   *\toptions: an optional list of space-separated options that will change how\n   *\t\t\tthe callback list behaves or a more traditional option object\n   *\n   * By default a callback list will act like an event callback list and can be\n   * \"fired\" multiple times.\n   *\n   * Possible options:\n   *\n   *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n   *\n   *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n   *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n   *\t\t\t\t\tvalues (like a Deferred)\n   *\n   *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n   *\n   *\tstopOnFalse:\tinterrupt callings when a callback returns false\n   *\n   */\n\n\n  jQuery.Callbacks = function (options) {\n    // Convert options from String-formatted to Object-formatted if needed\n    // (we check in cache first)\n    options = typeof options === \"string\" ? createOptions(options) : jQuery.extend({}, options);\n\n    var // Flag to know if list is currently firing\n    firing,\n        // Last fire value for non-forgettable lists\n    memory,\n        // Flag to know if list was already fired\n    fired,\n        // Flag to prevent firing\n    locked,\n        // Actual callback list\n    list = [],\n        // Queue of execution data for repeatable lists\n    queue = [],\n        // Index of currently firing callback (modified by add/remove as needed)\n    firingIndex = -1,\n        // Fire callbacks\n    fire = function () {\n      // Enforce single-firing\n      locked = locked || options.once; // Execute callbacks for all pending executions,\n      // respecting firingIndex overrides and runtime changes\n\n      fired = firing = true;\n\n      for (; queue.length; firingIndex = -1) {\n        memory = queue.shift();\n\n        while (++firingIndex < list.length) {\n          // Run callback and check for early termination\n          if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n            // Jump to end and forget the data so .add doesn't re-fire\n            firingIndex = list.length;\n            memory = false;\n          }\n        }\n      } // Forget the data if we're done with it\n\n\n      if (!options.memory) {\n        memory = false;\n      }\n\n      firing = false; // Clean up if we're done firing for good\n\n      if (locked) {\n        // Keep an empty list if we have data for future add calls\n        if (memory) {\n          list = []; // Otherwise, this object is spent\n        } else {\n          list = \"\";\n        }\n      }\n    },\n        // Actual Callbacks object\n    self = {\n      // Add a callback or a collection of callbacks to the list\n      add: function () {\n        if (list) {\n          // If we have memory from a past run, we should fire after adding\n          if (memory && !firing) {\n            firingIndex = list.length - 1;\n            queue.push(memory);\n          }\n\n          (function add(args) {\n            jQuery.each(args, function (_, arg) {\n              if (isFunction(arg)) {\n                if (!options.unique || !self.has(arg)) {\n                  list.push(arg);\n                }\n              } else if (arg && arg.length && toType(arg) !== \"string\") {\n                // Inspect recursively\n                add(arg);\n              }\n            });\n          })(arguments);\n\n          if (memory && !firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Remove a callback from the list\n      remove: function () {\n        jQuery.each(arguments, function (_, arg) {\n          var index;\n\n          while ((index = jQuery.inArray(arg, list, index)) > -1) {\n            list.splice(index, 1); // Handle firing indexes\n\n            if (index <= firingIndex) {\n              firingIndex--;\n            }\n          }\n        });\n        return this;\n      },\n      // Check if a given callback is in the list.\n      // If no argument is given, return whether or not list has callbacks attached.\n      has: function (fn) {\n        return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n      },\n      // Remove all callbacks from the list\n      empty: function () {\n        if (list) {\n          list = [];\n        }\n\n        return this;\n      },\n      // Disable .fire and .add\n      // Abort any current/pending executions\n      // Clear all callbacks and values\n      disable: function () {\n        locked = queue = [];\n        list = memory = \"\";\n        return this;\n      },\n      disabled: function () {\n        return !list;\n      },\n      // Disable .fire\n      // Also disable .add unless we have memory (since it would have no effect)\n      // Abort any pending executions\n      lock: function () {\n        locked = queue = [];\n\n        if (!memory && !firing) {\n          list = memory = \"\";\n        }\n\n        return this;\n      },\n      locked: function () {\n        return !!locked;\n      },\n      // Call all callbacks with the given context and arguments\n      fireWith: function (context, args) {\n        if (!locked) {\n          args = args || [];\n          args = [context, args.slice ? args.slice() : args];\n          queue.push(args);\n\n          if (!firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Call all the callbacks with the given arguments\n      fire: function () {\n        self.fireWith(this, arguments);\n        return this;\n      },\n      // To know if the callbacks have already been called at least once\n      fired: function () {\n        return !!fired;\n      }\n    };\n\n    return self;\n  };\n\n  function Identity(v) {\n    return v;\n  }\n\n  function Thrower(ex) {\n    throw ex;\n  }\n\n  function adoptValue(value, resolve, reject, noValue) {\n    var method;\n\n    try {\n      // Check for promise aspect first to privilege synchronous behavior\n      if (value && isFunction(method = value.promise)) {\n        method.call(value).done(resolve).fail(reject); // Other thenables\n      } else if (value && isFunction(method = value.then)) {\n        method.call(value, resolve, reject); // Other non-thenables\n      } else {\n        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n        // * false: [ value ].slice( 0 ) => resolve( value )\n        // * true: [ value ].slice( 1 ) => resolve()\n        resolve.apply(undefined, [value].slice(noValue));\n      } // For Promises/A+, convert exceptions into rejections\n      // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n      // Deferred#then to conditionally suppress rejection.\n\n    } catch (value) {\n      // Support: Android 4.0 only\n      // Strict mode functions invoked without .call/.apply get global-object context\n      reject.apply(undefined, [value]);\n    }\n  }\n\n  jQuery.extend({\n    Deferred: function (func) {\n      var tuples = [// action, add listener, callbacks,\n      // ... .then handlers, argument index, [final state]\n      [\"notify\", \"progress\", jQuery.Callbacks(\"memory\"), jQuery.Callbacks(\"memory\"), 2], [\"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 0, \"resolved\"], [\"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 1, \"rejected\"]],\n          state = \"pending\",\n          promise = {\n        state: function () {\n          return state;\n        },\n        always: function () {\n          deferred.done(arguments).fail(arguments);\n          return this;\n        },\n        \"catch\": function (fn) {\n          return promise.then(null, fn);\n        },\n        // Keep pipe for back-compat\n        pipe: function ()\n        /* fnDone, fnFail, fnProgress */\n        {\n          var fns = arguments;\n          return jQuery.Deferred(function (newDefer) {\n            jQuery.each(tuples, function (i, tuple) {\n              // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n              var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]]; // deferred.progress(function() { bind to newDefer or newDefer.notify })\n              // deferred.done(function() { bind to newDefer or newDefer.resolve })\n              // deferred.fail(function() { bind to newDefer or newDefer.reject })\n\n              deferred[tuple[1]](function () {\n                var returned = fn && fn.apply(this, arguments);\n\n                if (returned && isFunction(returned.promise)) {\n                  returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                } else {\n                  newDefer[tuple[0] + \"With\"](this, fn ? [returned] : arguments);\n                }\n              });\n            });\n            fns = null;\n          }).promise();\n        },\n        then: function (onFulfilled, onRejected, onProgress) {\n          var maxDepth = 0;\n\n          function resolve(depth, deferred, handler, special) {\n            return function () {\n              var that = this,\n                  args = arguments,\n                  mightThrow = function () {\n                var returned, then; // Support: Promises/A+ section 2.3.3.3.3\n                // https://promisesaplus.com/#point-59\n                // Ignore double-resolution attempts\n\n                if (depth < maxDepth) {\n                  return;\n                }\n\n                returned = handler.apply(that, args); // Support: Promises/A+ section 2.3.1\n                // https://promisesaplus.com/#point-48\n\n                if (returned === deferred.promise()) {\n                  throw new TypeError(\"Thenable self-resolution\");\n                } // Support: Promises/A+ sections 2.3.3.1, 3.5\n                // https://promisesaplus.com/#point-54\n                // https://promisesaplus.com/#point-75\n                // Retrieve `then` only once\n\n\n                then = returned && ( // Support: Promises/A+ section 2.3.4\n                // https://promisesaplus.com/#point-64\n                // Only check objects and functions for thenability\n                typeof returned === \"object\" || typeof returned === \"function\") && returned.then; // Handle a returned thenable\n\n                if (isFunction(then)) {\n                  // Special processors (notify) just wait for resolution\n                  if (special) {\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special)); // Normal processors (resolve) also hook into progress\n                  } else {\n                    // ...and disregard older resolution values\n                    maxDepth++;\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n                  } // Handle all other returned values\n\n                } else {\n                  // Only substitute handlers pass on context\n                  // and multiple values (non-spec behavior)\n                  if (handler !== Identity) {\n                    that = undefined;\n                    args = [returned];\n                  } // Process the value(s)\n                  // Default process is resolve\n\n\n                  (special || deferred.resolveWith)(that, args);\n                }\n              },\n                  // Only normal processors (resolve) catch and reject exceptions\n              process = special ? mightThrow : function () {\n                try {\n                  mightThrow();\n                } catch (e) {\n                  if (jQuery.Deferred.exceptionHook) {\n                    jQuery.Deferred.exceptionHook(e, process.stackTrace);\n                  } // Support: Promises/A+ section 2.3.3.3.4.1\n                  // https://promisesaplus.com/#point-61\n                  // Ignore post-resolution exceptions\n\n\n                  if (depth + 1 >= maxDepth) {\n                    // Only substitute handlers pass on context\n                    // and multiple values (non-spec behavior)\n                    if (handler !== Thrower) {\n                      that = undefined;\n                      args = [e];\n                    }\n\n                    deferred.rejectWith(that, args);\n                  }\n                }\n              }; // Support: Promises/A+ section 2.3.3.3.1\n              // https://promisesaplus.com/#point-57\n              // Re-resolve promises immediately to dodge false rejection from\n              // subsequent errors\n\n\n              if (depth) {\n                process();\n              } else {\n                // Call an optional hook to record the stack, in case of exception\n                // since it's otherwise lost when execution goes async\n                if (jQuery.Deferred.getStackHook) {\n                  process.stackTrace = jQuery.Deferred.getStackHook();\n                }\n\n                window.setTimeout(process);\n              }\n            };\n          }\n\n          return jQuery.Deferred(function (newDefer) {\n            // progress_handlers.add( ... )\n            tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith)); // fulfilled_handlers.add( ... )\n\n            tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity)); // rejected_handlers.add( ... )\n\n            tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));\n          }).promise();\n        },\n        // Get a promise for this deferred\n        // If obj is provided, the promise aspect is added to the object\n        promise: function (obj) {\n          return obj != null ? jQuery.extend(obj, promise) : promise;\n        }\n      },\n          deferred = {}; // Add list-specific methods\n\n      jQuery.each(tuples, function (i, tuple) {\n        var list = tuple[2],\n            stateString = tuple[5]; // promise.progress = list.add\n        // promise.done = list.add\n        // promise.fail = list.add\n\n        promise[tuple[1]] = list.add; // Handle state\n\n        if (stateString) {\n          list.add(function () {\n            // state = \"resolved\" (i.e., fulfilled)\n            // state = \"rejected\"\n            state = stateString;\n          }, // rejected_callbacks.disable\n          // fulfilled_callbacks.disable\n          tuples[3 - i][2].disable, // rejected_handlers.disable\n          // fulfilled_handlers.disable\n          tuples[3 - i][3].disable, // progress_callbacks.lock\n          tuples[0][2].lock, // progress_handlers.lock\n          tuples[0][3].lock);\n        } // progress_handlers.fire\n        // fulfilled_handlers.fire\n        // rejected_handlers.fire\n\n\n        list.add(tuple[3].fire); // deferred.notify = function() { deferred.notifyWith(...) }\n        // deferred.resolve = function() { deferred.resolveWith(...) }\n        // deferred.reject = function() { deferred.rejectWith(...) }\n\n        deferred[tuple[0]] = function () {\n          deferred[tuple[0] + \"With\"](this === deferred ? undefined : this, arguments);\n          return this;\n        }; // deferred.notifyWith = list.fireWith\n        // deferred.resolveWith = list.fireWith\n        // deferred.rejectWith = list.fireWith\n\n\n        deferred[tuple[0] + \"With\"] = list.fireWith;\n      }); // Make the deferred a promise\n\n      promise.promise(deferred); // Call given func if any\n\n      if (func) {\n        func.call(deferred, deferred);\n      } // All done!\n\n\n      return deferred;\n    },\n    // Deferred helper\n    when: function (singleValue) {\n      var // count of uncompleted subordinates\n      remaining = arguments.length,\n          // count of unprocessed arguments\n      i = remaining,\n          // subordinate fulfillment data\n      resolveContexts = Array(i),\n          resolveValues = slice.call(arguments),\n          // the master Deferred\n      master = jQuery.Deferred(),\n          // subordinate callback factory\n      updateFunc = function (i) {\n        return function (value) {\n          resolveContexts[i] = this;\n          resolveValues[i] = arguments.length > 1 ? slice.call(arguments) : value;\n\n          if (! --remaining) {\n            master.resolveWith(resolveContexts, resolveValues);\n          }\n        };\n      }; // Single- and empty arguments are adopted like Promise.resolve\n\n\n      if (remaining <= 1) {\n        adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining); // Use .then() to unwrap secondary thenables (cf. gh-3000)\n\n        if (master.state() === \"pending\" || isFunction(resolveValues[i] && resolveValues[i].then)) {\n          return master.then();\n        }\n      } // Multiple arguments are aggregated like Promise.all array elements\n\n\n      while (i--) {\n        adoptValue(resolveValues[i], updateFunc(i), master.reject);\n      }\n\n      return master.promise();\n    }\n  }); // These usually indicate a programmer mistake during development,\n  // warn about them ASAP rather than swallowing them by default.\n\n  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\n  jQuery.Deferred.exceptionHook = function (error, stack) {\n    // Support: IE 8 - 9 only\n    // Console exists when dev tools are open, which can happen at any time\n    if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n      window.console.warn(\"jQuery.Deferred exception: \" + error.message, error.stack, stack);\n    }\n  };\n\n  jQuery.readyException = function (error) {\n    window.setTimeout(function () {\n      throw error;\n    });\n  }; // The deferred used on DOM ready\n\n\n  var readyList = jQuery.Deferred();\n\n  jQuery.fn.ready = function (fn) {\n    readyList.then(fn) // Wrap jQuery.readyException in a function so that the lookup\n    // happens at the time of error handling instead of callback\n    // registration.\n    .catch(function (error) {\n      jQuery.readyException(error);\n    });\n    return this;\n  };\n\n  jQuery.extend({\n    // Is the DOM ready to be used? Set to true once it occurs.\n    isReady: false,\n    // A counter to track how many items to wait for before\n    // the ready event fires. See #6781\n    readyWait: 1,\n    // Handle when the DOM is ready\n    ready: function (wait) {\n      // Abort if there are pending holds or we're already ready\n      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n        return;\n      } // Remember that the DOM is ready\n\n\n      jQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be\n\n      if (wait !== true && --jQuery.readyWait > 0) {\n        return;\n      } // If there are functions bound, to execute\n\n\n      readyList.resolveWith(document, [jQuery]);\n    }\n  });\n  jQuery.ready.then = readyList.then; // The ready event handler and self cleanup method\n\n  function completed() {\n    document.removeEventListener(\"DOMContentLoaded\", completed);\n    window.removeEventListener(\"load\", completed);\n    jQuery.ready();\n  } // Catch cases where $(document).ready() is called\n  // after the browser event has already occurred.\n  // Support: IE <=9 - 10 only\n  // Older IE sometimes signals \"interactive\" too soon\n\n\n  if (document.readyState === \"complete\" || document.readyState !== \"loading\" && !document.documentElement.doScroll) {\n    // Handle it asynchronously to allow scripts the opportunity to delay ready\n    window.setTimeout(jQuery.ready);\n  } else {\n    // Use the handy event callback\n    document.addEventListener(\"DOMContentLoaded\", completed); // A fallback to window.onload, that will always work\n\n    window.addEventListener(\"load\", completed);\n  } // Multifunctional method to get and set values of a collection\n  // The value/s can optionally be executed if it's a function\n\n\n  var access = function (elems, fn, key, value, chainable, emptyGet, raw) {\n    var i = 0,\n        len = elems.length,\n        bulk = key == null; // Sets many values\n\n    if (toType(key) === \"object\") {\n      chainable = true;\n\n      for (i in key) {\n        access(elems, fn, i, key[i], true, emptyGet, raw);\n      } // Sets one value\n\n    } else if (value !== undefined) {\n      chainable = true;\n\n      if (!isFunction(value)) {\n        raw = true;\n      }\n\n      if (bulk) {\n        // Bulk operations run against the entire set\n        if (raw) {\n          fn.call(elems, value);\n          fn = null; // ...except when executing function values\n        } else {\n          bulk = fn;\n\n          fn = function (elem, key, value) {\n            return bulk.call(jQuery(elem), value);\n          };\n        }\n      }\n\n      if (fn) {\n        for (; i < len; i++) {\n          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n        }\n      }\n    }\n\n    if (chainable) {\n      return elems;\n    } // Gets\n\n\n    if (bulk) {\n      return fn.call(elems);\n    }\n\n    return len ? fn(elems[0], key) : emptyGet;\n  }; // Matches dashed string for camelizing\n\n\n  var rmsPrefix = /^-ms-/,\n      rdashAlpha = /-([a-z])/g; // Used by camelCase as callback to replace()\n\n  function fcamelCase(all, letter) {\n    return letter.toUpperCase();\n  } // Convert dashed to camelCase; used by the css and data modules\n  // Support: IE <=9 - 11, Edge 12 - 15\n  // Microsoft forgot to hump their vendor prefix (#9572)\n\n\n  function camelCase(string) {\n    return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n  }\n\n  var acceptData = function (owner) {\n    // Accepts only:\n    //  - Node\n    //    - Node.ELEMENT_NODE\n    //    - Node.DOCUMENT_NODE\n    //  - Object\n    //    - Any\n    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n  };\n\n  function Data() {\n    this.expando = jQuery.expando + Data.uid++;\n  }\n\n  Data.uid = 1;\n  Data.prototype = {\n    cache: function (owner) {\n      // Check if the owner object already has a cache\n      var value = owner[this.expando]; // If not, create one\n\n      if (!value) {\n        value = {}; // We can accept data for non-element nodes in modern browsers,\n        // but we should not, see #8335.\n        // Always return an empty object.\n\n        if (acceptData(owner)) {\n          // If it is a node unlikely to be stringify-ed or looped over\n          // use plain assignment\n          if (owner.nodeType) {\n            owner[this.expando] = value; // Otherwise secure it in a non-enumerable property\n            // configurable must be true to allow the property to be\n            // deleted when data is removed\n          } else {\n            Object.defineProperty(owner, this.expando, {\n              value: value,\n              configurable: true\n            });\n          }\n        }\n      }\n\n      return value;\n    },\n    set: function (owner, data, value) {\n      var prop,\n          cache = this.cache(owner); // Handle: [ owner, key, value ] args\n      // Always use camelCase key (gh-2257)\n\n      if (typeof data === \"string\") {\n        cache[camelCase(data)] = value; // Handle: [ owner, { properties } ] args\n      } else {\n        // Copy the properties one-by-one to the cache object\n        for (prop in data) {\n          cache[camelCase(prop)] = data[prop];\n        }\n      }\n\n      return cache;\n    },\n    get: function (owner, key) {\n      return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)\n      owner[this.expando] && owner[this.expando][camelCase(key)];\n    },\n    access: function (owner, key, value) {\n      // In cases where either:\n      //\n      //   1. No key was specified\n      //   2. A string key was specified, but no value provided\n      //\n      // Take the \"read\" path and allow the get method to determine\n      // which value to return, respectively either:\n      //\n      //   1. The entire cache object\n      //   2. The data stored at the key\n      //\n      if (key === undefined || key && typeof key === \"string\" && value === undefined) {\n        return this.get(owner, key);\n      } // When the key is not a string, or both a key and value\n      // are specified, set or extend (existing objects) with either:\n      //\n      //   1. An object of properties\n      //   2. A key and value\n      //\n\n\n      this.set(owner, key, value); // Since the \"set\" path can have two possible entry points\n      // return the expected data based on which path was taken[*]\n\n      return value !== undefined ? value : key;\n    },\n    remove: function (owner, key) {\n      var i,\n          cache = owner[this.expando];\n\n      if (cache === undefined) {\n        return;\n      }\n\n      if (key !== undefined) {\n        // Support array or space separated string of keys\n        if (Array.isArray(key)) {\n          // If key is an array of keys...\n          // We always set camelCase keys, so remove that.\n          key = key.map(camelCase);\n        } else {\n          key = camelCase(key); // If a key with the spaces exists, use it.\n          // Otherwise, create an array by matching non-whitespace\n\n          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n        }\n\n        i = key.length;\n\n        while (i--) {\n          delete cache[key[i]];\n        }\n      } // Remove the expando if there's no more data\n\n\n      if (key === undefined || jQuery.isEmptyObject(cache)) {\n        // Support: Chrome <=35 - 45\n        // Webkit & Blink performance suffers when deleting properties\n        // from DOM nodes, so set to undefined instead\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n        if (owner.nodeType) {\n          owner[this.expando] = undefined;\n        } else {\n          delete owner[this.expando];\n        }\n      }\n    },\n    hasData: function (owner) {\n      var cache = owner[this.expando];\n      return cache !== undefined && !jQuery.isEmptyObject(cache);\n    }\n  };\n  var dataPriv = new Data();\n  var dataUser = new Data(); //\tImplementation Summary\n  //\n  //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n  //\t2. Improve the module's maintainability by reducing the storage\n  //\t\tpaths to a single mechanism.\n  //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n  //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n  //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n  //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n  var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n      rmultiDash = /[A-Z]/g;\n\n  function getData(data) {\n    if (data === \"true\") {\n      return true;\n    }\n\n    if (data === \"false\") {\n      return false;\n    }\n\n    if (data === \"null\") {\n      return null;\n    } // Only convert to a number if it doesn't change the string\n\n\n    if (data === +data + \"\") {\n      return +data;\n    }\n\n    if (rbrace.test(data)) {\n      return JSON.parse(data);\n    }\n\n    return data;\n  }\n\n  function dataAttr(elem, key, data) {\n    var name; // If nothing was found internally, try to fetch any\n    // data from the HTML5 data-* attribute\n\n    if (data === undefined && elem.nodeType === 1) {\n      name = \"data-\" + key.replace(rmultiDash, \"-$&\").toLowerCase();\n      data = elem.getAttribute(name);\n\n      if (typeof data === \"string\") {\n        try {\n          data = getData(data);\n        } catch (e) {} // Make sure we set the data so it isn't changed later\n\n\n        dataUser.set(elem, key, data);\n      } else {\n        data = undefined;\n      }\n    }\n\n    return data;\n  }\n\n  jQuery.extend({\n    hasData: function (elem) {\n      return dataUser.hasData(elem) || dataPriv.hasData(elem);\n    },\n    data: function (elem, name, data) {\n      return dataUser.access(elem, name, data);\n    },\n    removeData: function (elem, name) {\n      dataUser.remove(elem, name);\n    },\n    // TODO: Now that all calls to _data and _removeData have been replaced\n    // with direct calls to dataPriv methods, these can be deprecated.\n    _data: function (elem, name, data) {\n      return dataPriv.access(elem, name, data);\n    },\n    _removeData: function (elem, name) {\n      dataPriv.remove(elem, name);\n    }\n  });\n  jQuery.fn.extend({\n    data: function (key, value) {\n      var i,\n          name,\n          data,\n          elem = this[0],\n          attrs = elem && elem.attributes; // Gets all values\n\n      if (key === undefined) {\n        if (this.length) {\n          data = dataUser.get(elem);\n\n          if (elem.nodeType === 1 && !dataPriv.get(elem, \"hasDataAttrs\")) {\n            i = attrs.length;\n\n            while (i--) {\n              // Support: IE 11 only\n              // The attrs elements can be null (#14894)\n              if (attrs[i]) {\n                name = attrs[i].name;\n\n                if (name.indexOf(\"data-\") === 0) {\n                  name = camelCase(name.slice(5));\n                  dataAttr(elem, name, data[name]);\n                }\n              }\n            }\n\n            dataPriv.set(elem, \"hasDataAttrs\", true);\n          }\n        }\n\n        return data;\n      } // Sets multiple values\n\n\n      if (typeof key === \"object\") {\n        return this.each(function () {\n          dataUser.set(this, key);\n        });\n      }\n\n      return access(this, function (value) {\n        var data; // The calling jQuery object (element matches) is not empty\n        // (and therefore has an element appears at this[ 0 ]) and the\n        // `value` parameter was not undefined. An empty jQuery object\n        // will result in `undefined` for elem = this[ 0 ] which will\n        // throw an exception if an attempt to read a data cache is made.\n\n        if (elem && value === undefined) {\n          // Attempt to get data from the cache\n          // The key will always be camelCased in Data\n          data = dataUser.get(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // Attempt to \"discover\" the data in\n          // HTML5 custom data-* attrs\n\n\n          data = dataAttr(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // We tried really hard, but the data doesn't exist.\n\n\n          return;\n        } // Set the data...\n\n\n        this.each(function () {\n          // We always store the camelCased key\n          dataUser.set(this, key, value);\n        });\n      }, null, value, arguments.length > 1, null, true);\n    },\n    removeData: function (key) {\n      return this.each(function () {\n        dataUser.remove(this, key);\n      });\n    }\n  });\n  jQuery.extend({\n    queue: function (elem, type, data) {\n      var queue;\n\n      if (elem) {\n        type = (type || \"fx\") + \"queue\";\n        queue = dataPriv.get(elem, type); // Speed up dequeue by getting out quickly if this is just a lookup\n\n        if (data) {\n          if (!queue || Array.isArray(data)) {\n            queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n          } else {\n            queue.push(data);\n          }\n        }\n\n        return queue || [];\n      }\n    },\n    dequeue: function (elem, type) {\n      type = type || \"fx\";\n\n      var queue = jQuery.queue(elem, type),\n          startLength = queue.length,\n          fn = queue.shift(),\n          hooks = jQuery._queueHooks(elem, type),\n          next = function () {\n        jQuery.dequeue(elem, type);\n      }; // If the fx queue is dequeued, always remove the progress sentinel\n\n\n      if (fn === \"inprogress\") {\n        fn = queue.shift();\n        startLength--;\n      }\n\n      if (fn) {\n        // Add a progress sentinel to prevent the fx queue from being\n        // automatically dequeued\n        if (type === \"fx\") {\n          queue.unshift(\"inprogress\");\n        } // Clear up the last queue stop function\n\n\n        delete hooks.stop;\n        fn.call(elem, next, hooks);\n      }\n\n      if (!startLength && hooks) {\n        hooks.empty.fire();\n      }\n    },\n    // Not public - generate a queueHooks object, or return the current one\n    _queueHooks: function (elem, type) {\n      var key = type + \"queueHooks\";\n      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n        empty: jQuery.Callbacks(\"once memory\").add(function () {\n          dataPriv.remove(elem, [type + \"queue\", key]);\n        })\n      });\n    }\n  });\n  jQuery.fn.extend({\n    queue: function (type, data) {\n      var setter = 2;\n\n      if (typeof type !== \"string\") {\n        data = type;\n        type = \"fx\";\n        setter--;\n      }\n\n      if (arguments.length < setter) {\n        return jQuery.queue(this[0], type);\n      }\n\n      return data === undefined ? this : this.each(function () {\n        var queue = jQuery.queue(this, type, data); // Ensure a hooks for this queue\n\n        jQuery._queueHooks(this, type);\n\n        if (type === \"fx\" && queue[0] !== \"inprogress\") {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    dequeue: function (type) {\n      return this.each(function () {\n        jQuery.dequeue(this, type);\n      });\n    },\n    clearQueue: function (type) {\n      return this.queue(type || \"fx\", []);\n    },\n    // Get a promise resolved when queues of a certain type\n    // are emptied (fx is the type by default)\n    promise: function (type, obj) {\n      var tmp,\n          count = 1,\n          defer = jQuery.Deferred(),\n          elements = this,\n          i = this.length,\n          resolve = function () {\n        if (! --count) {\n          defer.resolveWith(elements, [elements]);\n        }\n      };\n\n      if (typeof type !== \"string\") {\n        obj = type;\n        type = undefined;\n      }\n\n      type = type || \"fx\";\n\n      while (i--) {\n        tmp = dataPriv.get(elements[i], type + \"queueHooks\");\n\n        if (tmp && tmp.empty) {\n          count++;\n          tmp.empty.add(resolve);\n        }\n      }\n\n      resolve();\n      return defer.promise(obj);\n    }\n  });\n  var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n  var rcssNum = new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\");\n  var cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n\n  var isHiddenWithinTree = function (elem, el) {\n    // isHiddenWithinTree might be called from jQuery#filter function;\n    // in that case, element will be second argument\n    elem = el || elem; // Inline style trumps all\n\n    return elem.style.display === \"none\" || elem.style.display === \"\" && // Otherwise, check computed style\n    // Support: Firefox <=43 - 45\n    // Disconnected elements can have computed display: none, so first confirm that elem is\n    // in the document.\n    jQuery.contains(elem.ownerDocument, elem) && jQuery.css(elem, \"display\") === \"none\";\n  };\n\n  var swap = function (elem, options, callback, args) {\n    var ret,\n        name,\n        old = {}; // Remember the old values, and insert the new ones\n\n    for (name in options) {\n      old[name] = elem.style[name];\n      elem.style[name] = options[name];\n    }\n\n    ret = callback.apply(elem, args || []); // Revert the old values\n\n    for (name in options) {\n      elem.style[name] = old[name];\n    }\n\n    return ret;\n  };\n\n  function adjustCSS(elem, prop, valueParts, tween) {\n    var adjusted,\n        scale,\n        maxIterations = 20,\n        currentValue = tween ? function () {\n      return tween.cur();\n    } : function () {\n      return jQuery.css(elem, prop, \"\");\n    },\n        initial = currentValue(),\n        unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"),\n        // Starting value computation is required for potential unit mismatches\n    initialInUnit = (jQuery.cssNumber[prop] || unit !== \"px\" && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n\n    if (initialInUnit && initialInUnit[3] !== unit) {\n      // Support: Firefox <=54\n      // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n      initial = initial / 2; // Trust units reported by jQuery.css\n\n      unit = unit || initialInUnit[3]; // Iteratively approximate from a nonzero starting point\n\n      initialInUnit = +initial || 1;\n\n      while (maxIterations--) {\n        // Evaluate and update our best guess (doubling guesses that zero out).\n        // Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n        jQuery.style(elem, prop, initialInUnit + unit);\n\n        if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {\n          maxIterations = 0;\n        }\n\n        initialInUnit = initialInUnit / scale;\n      }\n\n      initialInUnit = initialInUnit * 2;\n      jQuery.style(elem, prop, initialInUnit + unit); // Make sure we update the tween properties later on\n\n      valueParts = valueParts || [];\n    }\n\n    if (valueParts) {\n      initialInUnit = +initialInUnit || +initial || 0; // Apply relative offset (+=/-=) if specified\n\n      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n\n      if (tween) {\n        tween.unit = unit;\n        tween.start = initialInUnit;\n        tween.end = adjusted;\n      }\n    }\n\n    return adjusted;\n  }\n\n  var defaultDisplayMap = {};\n\n  function getDefaultDisplay(elem) {\n    var temp,\n        doc = elem.ownerDocument,\n        nodeName = elem.nodeName,\n        display = defaultDisplayMap[nodeName];\n\n    if (display) {\n      return display;\n    }\n\n    temp = doc.body.appendChild(doc.createElement(nodeName));\n    display = jQuery.css(temp, \"display\");\n    temp.parentNode.removeChild(temp);\n\n    if (display === \"none\") {\n      display = \"block\";\n    }\n\n    defaultDisplayMap[nodeName] = display;\n    return display;\n  }\n\n  function showHide(elements, show) {\n    var display,\n        elem,\n        values = [],\n        index = 0,\n        length = elements.length; // Determine new display value for elements that need to change\n\n    for (; index < length; index++) {\n      elem = elements[index];\n\n      if (!elem.style) {\n        continue;\n      }\n\n      display = elem.style.display;\n\n      if (show) {\n        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n        // check is required in this first loop unless we have a nonempty display value (either\n        // inline or about-to-be-restored)\n        if (display === \"none\") {\n          values[index] = dataPriv.get(elem, \"display\") || null;\n\n          if (!values[index]) {\n            elem.style.display = \"\";\n          }\n        }\n\n        if (elem.style.display === \"\" && isHiddenWithinTree(elem)) {\n          values[index] = getDefaultDisplay(elem);\n        }\n      } else {\n        if (display !== \"none\") {\n          values[index] = \"none\"; // Remember what we're overwriting\n\n          dataPriv.set(elem, \"display\", display);\n        }\n      }\n    } // Set the display of the elements in a second loop to avoid constant reflow\n\n\n    for (index = 0; index < length; index++) {\n      if (values[index] != null) {\n        elements[index].style.display = values[index];\n      }\n    }\n\n    return elements;\n  }\n\n  jQuery.fn.extend({\n    show: function () {\n      return showHide(this, true);\n    },\n    hide: function () {\n      return showHide(this);\n    },\n    toggle: function (state) {\n      if (typeof state === \"boolean\") {\n        return state ? this.show() : this.hide();\n      }\n\n      return this.each(function () {\n        if (isHiddenWithinTree(this)) {\n          jQuery(this).show();\n        } else {\n          jQuery(this).hide();\n        }\n      });\n    }\n  });\n  var rcheckableType = /^(?:checkbox|radio)$/i;\n  var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i;\n  var rscriptType = /^$|^module$|\\/(?:java|ecma)script/i; // We have to close these tags to support XHTML (#13200)\n\n  var wrapMap = {\n    // Support: IE <=9 only\n    option: [1, \"<select multiple='multiple'>\", \"</select>\"],\n    // XHTML parsers do not magically insert elements in the\n    // same way that tag soup parsers do. So we cannot shorten\n    // this by omitting <tbody> or other required elements.\n    thead: [1, \"<table>\", \"</table>\"],\n    col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n    tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n    td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n    _default: [0, \"\", \"\"]\n  }; // Support: IE <=9 only\n\n  wrapMap.optgroup = wrapMap.option;\n  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n  wrapMap.th = wrapMap.td;\n\n  function getAll(context, tag) {\n    // Support: IE <=9 - 11 only\n    // Use typeof to avoid zero-argument method invocation on host objects (#15151)\n    var ret;\n\n    if (typeof context.getElementsByTagName !== \"undefined\") {\n      ret = context.getElementsByTagName(tag || \"*\");\n    } else if (typeof context.querySelectorAll !== \"undefined\") {\n      ret = context.querySelectorAll(tag || \"*\");\n    } else {\n      ret = [];\n    }\n\n    if (tag === undefined || tag && nodeName(context, tag)) {\n      return jQuery.merge([context], ret);\n    }\n\n    return ret;\n  } // Mark scripts as having already been evaluated\n\n\n  function setGlobalEval(elems, refElements) {\n    var i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      dataPriv.set(elems[i], \"globalEval\", !refElements || dataPriv.get(refElements[i], \"globalEval\"));\n    }\n  }\n\n  var rhtml = /<|&#?\\w+;/;\n\n  function buildFragment(elems, context, scripts, selection, ignored) {\n    var elem,\n        tmp,\n        tag,\n        wrap,\n        contains,\n        j,\n        fragment = context.createDocumentFragment(),\n        nodes = [],\n        i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      elem = elems[i];\n\n      if (elem || elem === 0) {\n        // Add nodes directly\n        if (toType(elem) === \"object\") {\n          // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n          jQuery.merge(nodes, elem.nodeType ? [elem] : elem); // Convert non-html into a text node\n        } else if (!rhtml.test(elem)) {\n          nodes.push(context.createTextNode(elem)); // Convert html into DOM nodes\n        } else {\n          tmp = tmp || fragment.appendChild(context.createElement(\"div\")); // Deserialize a standard representation\n\n          tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase();\n          wrap = wrapMap[tag] || wrapMap._default;\n          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2]; // Descend through wrappers to the right content\n\n          j = wrap[0];\n\n          while (j--) {\n            tmp = tmp.lastChild;\n          } // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n\n\n          jQuery.merge(nodes, tmp.childNodes); // Remember the top-level container\n\n          tmp = fragment.firstChild; // Ensure the created nodes are orphaned (#12392)\n\n          tmp.textContent = \"\";\n        }\n      }\n    } // Remove wrapper from fragment\n\n\n    fragment.textContent = \"\";\n    i = 0;\n\n    while (elem = nodes[i++]) {\n      // Skip elements already in the context collection (trac-4087)\n      if (selection && jQuery.inArray(elem, selection) > -1) {\n        if (ignored) {\n          ignored.push(elem);\n        }\n\n        continue;\n      }\n\n      contains = jQuery.contains(elem.ownerDocument, elem); // Append to fragment\n\n      tmp = getAll(fragment.appendChild(elem), \"script\"); // Preserve script evaluation history\n\n      if (contains) {\n        setGlobalEval(tmp);\n      } // Capture executables\n\n\n      if (scripts) {\n        j = 0;\n\n        while (elem = tmp[j++]) {\n          if (rscriptType.test(elem.type || \"\")) {\n            scripts.push(elem);\n          }\n        }\n      }\n    }\n\n    return fragment;\n  }\n\n  (function () {\n    var fragment = document.createDocumentFragment(),\n        div = fragment.appendChild(document.createElement(\"div\")),\n        input = document.createElement(\"input\"); // Support: Android 4.0 - 4.3 only\n    // Check state lost if the name is set (#11217)\n    // Support: Windows Web Apps (WWA)\n    // `name` and `type` must use .setAttribute for WWA (#14901)\n\n    input.setAttribute(\"type\", \"radio\");\n    input.setAttribute(\"checked\", \"checked\");\n    input.setAttribute(\"name\", \"t\");\n    div.appendChild(input); // Support: Android <=4.1 only\n    // Older WebKit doesn't clone checked state correctly in fragments\n\n    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked; // Support: IE <=11 only\n    // Make sure textarea (and checkbox) defaultValue is properly cloned\n\n    div.innerHTML = \"<textarea>x</textarea>\";\n    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\n  })();\n\n  var documentElement = document.documentElement;\n  var rkeyEvent = /^key/,\n      rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n      rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Support: IE <=9 only\n  // See #13393 for more info\n\n\n  function safeActiveElement() {\n    try {\n      return document.activeElement;\n    } catch (err) {}\n  }\n\n  function on(elem, types, selector, data, fn, one) {\n    var origFn, type; // Types can be a map of types/handlers\n\n    if (typeof types === \"object\") {\n      // ( types-Object, selector, data )\n      if (typeof selector !== \"string\") {\n        // ( types-Object, data )\n        data = data || selector;\n        selector = undefined;\n      }\n\n      for (type in types) {\n        on(elem, type, selector, data, types[type], one);\n      }\n\n      return elem;\n    }\n\n    if (data == null && fn == null) {\n      // ( types, fn )\n      fn = selector;\n      data = selector = undefined;\n    } else if (fn == null) {\n      if (typeof selector === \"string\") {\n        // ( types, selector, fn )\n        fn = data;\n        data = undefined;\n      } else {\n        // ( types, data, fn )\n        fn = data;\n        data = selector;\n        selector = undefined;\n      }\n    }\n\n    if (fn === false) {\n      fn = returnFalse;\n    } else if (!fn) {\n      return elem;\n    }\n\n    if (one === 1) {\n      origFn = fn;\n\n      fn = function (event) {\n        // Can use an empty set, since event contains the info\n        jQuery().off(event);\n        return origFn.apply(this, arguments);\n      }; // Use same guid so caller can remove using origFn\n\n\n      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n    }\n\n    return elem.each(function () {\n      jQuery.event.add(this, types, fn, data, selector);\n    });\n  }\n  /*\n   * Helper functions for managing events -- not part of the public interface.\n   * Props to Dean Edwards' addEvent library for many of the ideas.\n   */\n\n\n  jQuery.event = {\n    global: {},\n    add: function (elem, types, handler, data, selector) {\n      var handleObjIn,\n          eventHandle,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.get(elem); // Don't attach events to noData or text/comment nodes (but allow plain objects)\n\n      if (!elemData) {\n        return;\n      } // Caller can pass in an object of custom data in lieu of the handler\n\n\n      if (handler.handler) {\n        handleObjIn = handler;\n        handler = handleObjIn.handler;\n        selector = handleObjIn.selector;\n      } // Ensure that invalid selectors throw exceptions at attach time\n      // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\n\n      if (selector) {\n        jQuery.find.matchesSelector(documentElement, selector);\n      } // Make sure that the handler has a unique ID, used to find/remove it later\n\n\n      if (!handler.guid) {\n        handler.guid = jQuery.guid++;\n      } // Init the element's event structure and main handler, if this is the first\n\n\n      if (!(events = elemData.events)) {\n        events = elemData.events = {};\n      }\n\n      if (!(eventHandle = elemData.handle)) {\n        eventHandle = elemData.handle = function (e) {\n          // Discard the second event of a jQuery.event.trigger() and\n          // when an event is called after a page has unloaded\n          return typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n        };\n      } // Handle multiple events separated by a space\n\n\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort(); // There *must* be a type, no attaching namespace-only handlers\n\n        if (!type) {\n          continue;\n        } // If event changes its type, use the special event handlers for the changed type\n\n\n        special = jQuery.event.special[type] || {}; // If selector defined, determine special event api type, otherwise given type\n\n        type = (selector ? special.delegateType : special.bindType) || type; // Update special based on newly reset type\n\n        special = jQuery.event.special[type] || {}; // handleObj is passed to all event handlers\n\n        handleObj = jQuery.extend({\n          type: type,\n          origType: origType,\n          data: data,\n          handler: handler,\n          guid: handler.guid,\n          selector: selector,\n          needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n          namespace: namespaces.join(\".\")\n        }, handleObjIn); // Init the event handler queue if we're the first\n\n        if (!(handlers = events[type])) {\n          handlers = events[type] = [];\n          handlers.delegateCount = 0; // Only use addEventListener if the special events handler returns false\n\n          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n            if (elem.addEventListener) {\n              elem.addEventListener(type, eventHandle);\n            }\n          }\n        }\n\n        if (special.add) {\n          special.add.call(elem, handleObj);\n\n          if (!handleObj.handler.guid) {\n            handleObj.handler.guid = handler.guid;\n          }\n        } // Add to the element's handler list, delegates in front\n\n\n        if (selector) {\n          handlers.splice(handlers.delegateCount++, 0, handleObj);\n        } else {\n          handlers.push(handleObj);\n        } // Keep track of which events have ever been used, for event optimization\n\n\n        jQuery.event.global[type] = true;\n      }\n    },\n    // Detach an event or set of events from an element\n    remove: function (elem, types, handler, selector, mappedTypes) {\n      var j,\n          origCount,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n\n      if (!elemData || !(events = elemData.events)) {\n        return;\n      } // Once for each type.namespace in types; type may be omitted\n\n\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort(); // Unbind all events (on this namespace, if provided) for the element\n\n        if (!type) {\n          for (type in events) {\n            jQuery.event.remove(elem, type + types[t], handler, selector, true);\n          }\n\n          continue;\n        }\n\n        special = jQuery.event.special[type] || {};\n        type = (selector ? special.delegateType : special.bindType) || type;\n        handlers = events[type] || [];\n        tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\"); // Remove matching events\n\n        origCount = j = handlers.length;\n\n        while (j--) {\n          handleObj = handlers[j];\n\n          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n            handlers.splice(j, 1);\n\n            if (handleObj.selector) {\n              handlers.delegateCount--;\n            }\n\n            if (special.remove) {\n              special.remove.call(elem, handleObj);\n            }\n          }\n        } // Remove generic event handler if we removed something and no more handlers exist\n        // (avoids potential for endless recursion during removal of special event handlers)\n\n\n        if (origCount && !handlers.length) {\n          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n            jQuery.removeEvent(elem, type, elemData.handle);\n          }\n\n          delete events[type];\n        }\n      } // Remove data and the expando if it's no longer used\n\n\n      if (jQuery.isEmptyObject(events)) {\n        dataPriv.remove(elem, \"handle events\");\n      }\n    },\n    dispatch: function (nativeEvent) {\n      // Make a writable jQuery.Event from the native event object\n      var event = jQuery.event.fix(nativeEvent);\n      var i,\n          j,\n          ret,\n          matched,\n          handleObj,\n          handlerQueue,\n          args = new Array(arguments.length),\n          handlers = (dataPriv.get(this, \"events\") || {})[event.type] || [],\n          special = jQuery.event.special[event.type] || {}; // Use the fix-ed jQuery.Event rather than the (read-only) native event\n\n      args[0] = event;\n\n      for (i = 1; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n\n      event.delegateTarget = this; // Call the preDispatch hook for the mapped type, and let it bail if desired\n\n      if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n        return;\n      } // Determine handlers\n\n\n      handlerQueue = jQuery.event.handlers.call(this, event, handlers); // Run delegates first; they may want to stop propagation beneath us\n\n      i = 0;\n\n      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n        event.currentTarget = matched.elem;\n        j = 0;\n\n        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n          // Triggered event must either 1) have no namespace, or 2) have namespace(s)\n          // a subset or equal to those in the bound event (both can have no namespace).\n          if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {\n            event.handleObj = handleObj;\n            event.data = handleObj.data;\n            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n\n            if (ret !== undefined) {\n              if ((event.result = ret) === false) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n            }\n          }\n        }\n      } // Call the postDispatch hook for the mapped type\n\n\n      if (special.postDispatch) {\n        special.postDispatch.call(this, event);\n      }\n\n      return event.result;\n    },\n    handlers: function (event, handlers) {\n      var i,\n          handleObj,\n          sel,\n          matchedHandlers,\n          matchedSelectors,\n          handlerQueue = [],\n          delegateCount = handlers.delegateCount,\n          cur = event.target; // Find delegate handlers\n\n      if (delegateCount && // Support: IE <=9\n      // Black-hole SVG <use> instance trees (trac-13180)\n      cur.nodeType && // Support: Firefox <=42\n      // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n      // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n      // Support: IE 11 only\n      // ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n      !(event.type === \"click\" && event.button >= 1)) {\n        for (; cur !== this; cur = cur.parentNode || this) {\n          // Don't check non-elements (#13208)\n          // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n          if (cur.nodeType === 1 && !(event.type === \"click\" && cur.disabled === true)) {\n            matchedHandlers = [];\n            matchedSelectors = {};\n\n            for (i = 0; i < delegateCount; i++) {\n              handleObj = handlers[i]; // Don't conflict with Object.prototype properties (#13203)\n\n              sel = handleObj.selector + \" \";\n\n              if (matchedSelectors[sel] === undefined) {\n                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n              }\n\n              if (matchedSelectors[sel]) {\n                matchedHandlers.push(handleObj);\n              }\n            }\n\n            if (matchedHandlers.length) {\n              handlerQueue.push({\n                elem: cur,\n                handlers: matchedHandlers\n              });\n            }\n          }\n        }\n      } // Add the remaining (directly-bound) handlers\n\n\n      cur = this;\n\n      if (delegateCount < handlers.length) {\n        handlerQueue.push({\n          elem: cur,\n          handlers: handlers.slice(delegateCount)\n        });\n      }\n\n      return handlerQueue;\n    },\n    addProp: function (name, hook) {\n      Object.defineProperty(jQuery.Event.prototype, name, {\n        enumerable: true,\n        configurable: true,\n        get: isFunction(hook) ? function () {\n          if (this.originalEvent) {\n            return hook(this.originalEvent);\n          }\n        } : function () {\n          if (this.originalEvent) {\n            return this.originalEvent[name];\n          }\n        },\n        set: function (value) {\n          Object.defineProperty(this, name, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: value\n          });\n        }\n      });\n    },\n    fix: function (originalEvent) {\n      return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n    },\n    special: {\n      load: {\n        // Prevent triggered image.load events from bubbling to window.load\n        noBubble: true\n      },\n      focus: {\n        // Fire native event if possible so blur/focus sequence is correct\n        trigger: function () {\n          if (this !== safeActiveElement() && this.focus) {\n            this.focus();\n            return false;\n          }\n        },\n        delegateType: \"focusin\"\n      },\n      blur: {\n        trigger: function () {\n          if (this === safeActiveElement() && this.blur) {\n            this.blur();\n            return false;\n          }\n        },\n        delegateType: \"focusout\"\n      },\n      click: {\n        // For checkbox, fire native event so checked state will be right\n        trigger: function () {\n          if (this.type === \"checkbox\" && this.click && nodeName(this, \"input\")) {\n            this.click();\n            return false;\n          }\n        },\n        // For cross-browser consistency, don't fire native .click() on links\n        _default: function (event) {\n          return nodeName(event.target, \"a\");\n        }\n      },\n      beforeunload: {\n        postDispatch: function (event) {\n          // Support: Firefox 20+\n          // Firefox doesn't alert if the returnValue field is not set.\n          if (event.result !== undefined && event.originalEvent) {\n            event.originalEvent.returnValue = event.result;\n          }\n        }\n      }\n    }\n  };\n\n  jQuery.removeEvent = function (elem, type, handle) {\n    // This \"if\" is needed for plain objects\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, handle);\n    }\n  };\n\n  jQuery.Event = function (src, props) {\n    // Allow instantiation without the 'new' keyword\n    if (!(this instanceof jQuery.Event)) {\n      return new jQuery.Event(src, props);\n    } // Event object\n\n\n    if (src && src.type) {\n      this.originalEvent = src;\n      this.type = src.type; // Events bubbling up the document may have been marked as prevented\n      // by a handler lower down the tree; reflect the correct value.\n\n      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only\n      src.returnValue === false ? returnTrue : returnFalse; // Create target properties\n      // Support: Safari <=6 - 7 only\n      // Target should not be a text node (#504, #13143)\n\n      this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n      this.currentTarget = src.currentTarget;\n      this.relatedTarget = src.relatedTarget; // Event type\n    } else {\n      this.type = src;\n    } // Put explicitly provided properties onto the event object\n\n\n    if (props) {\n      jQuery.extend(this, props);\n    } // Create a timestamp if incoming event doesn't have one\n\n\n    this.timeStamp = src && src.timeStamp || Date.now(); // Mark it as fixed\n\n    this[jQuery.expando] = true;\n  }; // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n  // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n\n\n  jQuery.Event.prototype = {\n    constructor: jQuery.Event,\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse,\n    isSimulated: false,\n    preventDefault: function () {\n      var e = this.originalEvent;\n      this.isDefaultPrevented = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.preventDefault();\n      }\n    },\n    stopPropagation: function () {\n      var e = this.originalEvent;\n      this.isPropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopPropagation();\n      }\n    },\n    stopImmediatePropagation: function () {\n      var e = this.originalEvent;\n      this.isImmediatePropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopImmediatePropagation();\n      }\n\n      this.stopPropagation();\n    }\n  }; // Includes all common event props including KeyEvent and MouseEvent specific props\n\n  jQuery.each({\n    altKey: true,\n    bubbles: true,\n    cancelable: true,\n    changedTouches: true,\n    ctrlKey: true,\n    detail: true,\n    eventPhase: true,\n    metaKey: true,\n    pageX: true,\n    pageY: true,\n    shiftKey: true,\n    view: true,\n    \"char\": true,\n    charCode: true,\n    key: true,\n    keyCode: true,\n    button: true,\n    buttons: true,\n    clientX: true,\n    clientY: true,\n    offsetX: true,\n    offsetY: true,\n    pointerId: true,\n    pointerType: true,\n    screenX: true,\n    screenY: true,\n    targetTouches: true,\n    toElement: true,\n    touches: true,\n    which: function (event) {\n      var button = event.button; // Add which for key events\n\n      if (event.which == null && rkeyEvent.test(event.type)) {\n        return event.charCode != null ? event.charCode : event.keyCode;\n      } // Add which for click: 1 === left; 2 === middle; 3 === right\n\n\n      if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {\n        if (button & 1) {\n          return 1;\n        }\n\n        if (button & 2) {\n          return 3;\n        }\n\n        if (button & 4) {\n          return 2;\n        }\n\n        return 0;\n      }\n\n      return event.which;\n    }\n  }, jQuery.event.addProp); // Create mouseenter/leave events using mouseover/out and event-time checks\n  // so that event delegation works in jQuery.\n  // Do the same for pointerenter/pointerleave and pointerover/pointerout\n  //\n  // Support: Safari 7 only\n  // Safari sends mouseenter too often; see:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n  // for the description of the bug (it existed in older Chrome versions as well).\n\n  jQuery.each({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\",\n    pointerenter: \"pointerover\",\n    pointerleave: \"pointerout\"\n  }, function (orig, fix) {\n    jQuery.event.special[orig] = {\n      delegateType: fix,\n      bindType: fix,\n      handle: function (event) {\n        var ret,\n            target = this,\n            related = event.relatedTarget,\n            handleObj = event.handleObj; // For mouseenter/leave call the handler if related is outside the target.\n        // NB: No relatedTarget if the mouse left/entered the browser window\n\n        if (!related || related !== target && !jQuery.contains(target, related)) {\n          event.type = handleObj.origType;\n          ret = handleObj.handler.apply(this, arguments);\n          event.type = fix;\n        }\n\n        return ret;\n      }\n    };\n  });\n  jQuery.fn.extend({\n    on: function (types, selector, data, fn) {\n      return on(this, types, selector, data, fn);\n    },\n    one: function (types, selector, data, fn) {\n      return on(this, types, selector, data, fn, 1);\n    },\n    off: function (types, selector, fn) {\n      var handleObj, type;\n\n      if (types && types.preventDefault && types.handleObj) {\n        // ( event )  dispatched jQuery.Event\n        handleObj = types.handleObj;\n        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n        return this;\n      }\n\n      if (typeof types === \"object\") {\n        // ( types-object [, selector] )\n        for (type in types) {\n          this.off(type, selector, types[type]);\n        }\n\n        return this;\n      }\n\n      if (selector === false || typeof selector === \"function\") {\n        // ( types [, fn] )\n        fn = selector;\n        selector = undefined;\n      }\n\n      if (fn === false) {\n        fn = returnFalse;\n      }\n\n      return this.each(function () {\n        jQuery.event.remove(this, types, fn, selector);\n      });\n    }\n  });\n  var\n  /* eslint-disable max-len */\n  // See https://github.com/eslint/eslint/issues/3229\n  rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n  /* eslint-enable */\n  // Support: IE <=10 - 11, Edge 12 - 13 only\n  // In IE/Edge using regex groups here causes severe slowdowns.\n  // See https://connect.microsoft.com/IE/feedback/details/1736512/\n  rnoInnerhtml = /<script|<style|<link/i,\n      // checked=\"checked\" or checked\n  rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n      rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g; // Prefer a tbody over its parent table for containing new rows\n\n  function manipulationTarget(elem, content) {\n    if (nodeName(elem, \"table\") && nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\")) {\n      return jQuery(elem).children(\"tbody\")[0] || elem;\n    }\n\n    return elem;\n  } // Replace/restore the type attribute of script elements for safe DOM manipulation\n\n\n  function disableScript(elem) {\n    elem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n    return elem;\n  }\n\n  function restoreScript(elem) {\n    if ((elem.type || \"\").slice(0, 5) === \"true/\") {\n      elem.type = elem.type.slice(5);\n    } else {\n      elem.removeAttribute(\"type\");\n    }\n\n    return elem;\n  }\n\n  function cloneCopyEvent(src, dest) {\n    var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n    if (dest.nodeType !== 1) {\n      return;\n    } // 1. Copy private data: events, handlers, etc.\n\n\n    if (dataPriv.hasData(src)) {\n      pdataOld = dataPriv.access(src);\n      pdataCur = dataPriv.set(dest, pdataOld);\n      events = pdataOld.events;\n\n      if (events) {\n        delete pdataCur.handle;\n        pdataCur.events = {};\n\n        for (type in events) {\n          for (i = 0, l = events[type].length; i < l; i++) {\n            jQuery.event.add(dest, type, events[type][i]);\n          }\n        }\n      }\n    } // 2. Copy user data\n\n\n    if (dataUser.hasData(src)) {\n      udataOld = dataUser.access(src);\n      udataCur = jQuery.extend({}, udataOld);\n      dataUser.set(dest, udataCur);\n    }\n  } // Fix IE bugs, see support tests\n\n\n  function fixInput(src, dest) {\n    var nodeName = dest.nodeName.toLowerCase(); // Fails to persist the checked state of a cloned checkbox or radio button.\n\n    if (nodeName === \"input\" && rcheckableType.test(src.type)) {\n      dest.checked = src.checked; // Fails to return the selected option to the default selected state when cloning options\n    } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n      dest.defaultValue = src.defaultValue;\n    }\n  }\n\n  function domManip(collection, args, callback, ignored) {\n    // Flatten any nested arrays\n    args = concat.apply([], args);\n    var fragment,\n        first,\n        scripts,\n        hasScripts,\n        node,\n        doc,\n        i = 0,\n        l = collection.length,\n        iNoClone = l - 1,\n        value = args[0],\n        valueIsFunction = isFunction(value); // We can't cloneNode fragments that contain checked, in WebKit\n\n    if (valueIsFunction || l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value)) {\n      return collection.each(function (index) {\n        var self = collection.eq(index);\n\n        if (valueIsFunction) {\n          args[0] = value.call(this, index, self.html());\n        }\n\n        domManip(self, args, callback, ignored);\n      });\n    }\n\n    if (l) {\n      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n      first = fragment.firstChild;\n\n      if (fragment.childNodes.length === 1) {\n        fragment = first;\n      } // Require either new content or an interest in ignored elements to invoke the callback\n\n\n      if (first || ignored) {\n        scripts = jQuery.map(getAll(fragment, \"script\"), disableScript);\n        hasScripts = scripts.length; // Use the original fragment for the last item\n        // instead of the first because it can end up\n        // being emptied incorrectly in certain situations (#8070).\n\n        for (; i < l; i++) {\n          node = fragment;\n\n          if (i !== iNoClone) {\n            node = jQuery.clone(node, true, true); // Keep references to cloned scripts for later restoration\n\n            if (hasScripts) {\n              // Support: Android <=4.0 only, PhantomJS 1 only\n              // push.apply(_, arraylike) throws on ancient WebKit\n              jQuery.merge(scripts, getAll(node, \"script\"));\n            }\n          }\n\n          callback.call(collection[i], node, i);\n        }\n\n        if (hasScripts) {\n          doc = scripts[scripts.length - 1].ownerDocument; // Reenable scripts\n\n          jQuery.map(scripts, restoreScript); // Evaluate executable scripts on first document insertion\n\n          for (i = 0; i < hasScripts; i++) {\n            node = scripts[i];\n\n            if (rscriptType.test(node.type || \"\") && !dataPriv.access(node, \"globalEval\") && jQuery.contains(doc, node)) {\n              if (node.src && (node.type || \"\").toLowerCase() !== \"module\") {\n                // Optional AJAX dependency, but won't run scripts if not present\n                if (jQuery._evalUrl) {\n                  jQuery._evalUrl(node.src);\n                }\n              } else {\n                DOMEval(node.textContent.replace(rcleanScript, \"\"), doc, node);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return collection;\n  }\n\n  function remove(elem, selector, keepData) {\n    var node,\n        nodes = selector ? jQuery.filter(selector, elem) : elem,\n        i = 0;\n\n    for (; (node = nodes[i]) != null; i++) {\n      if (!keepData && node.nodeType === 1) {\n        jQuery.cleanData(getAll(node));\n      }\n\n      if (node.parentNode) {\n        if (keepData && jQuery.contains(node.ownerDocument, node)) {\n          setGlobalEval(getAll(node, \"script\"));\n        }\n\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    return elem;\n  }\n\n  jQuery.extend({\n    htmlPrefilter: function (html) {\n      return html.replace(rxhtmlTag, \"<$1></$2>\");\n    },\n    clone: function (elem, dataAndEvents, deepDataAndEvents) {\n      var i,\n          l,\n          srcElements,\n          destElements,\n          clone = elem.cloneNode(true),\n          inPage = jQuery.contains(elem.ownerDocument, elem); // Fix IE cloning issues\n\n      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n        // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n        destElements = getAll(clone);\n        srcElements = getAll(elem);\n\n        for (i = 0, l = srcElements.length; i < l; i++) {\n          fixInput(srcElements[i], destElements[i]);\n        }\n      } // Copy the events from the original to the clone\n\n\n      if (dataAndEvents) {\n        if (deepDataAndEvents) {\n          srcElements = srcElements || getAll(elem);\n          destElements = destElements || getAll(clone);\n\n          for (i = 0, l = srcElements.length; i < l; i++) {\n            cloneCopyEvent(srcElements[i], destElements[i]);\n          }\n        } else {\n          cloneCopyEvent(elem, clone);\n        }\n      } // Preserve script evaluation history\n\n\n      destElements = getAll(clone, \"script\");\n\n      if (destElements.length > 0) {\n        setGlobalEval(destElements, !inPage && getAll(elem, \"script\"));\n      } // Return the cloned set\n\n\n      return clone;\n    },\n    cleanData: function (elems) {\n      var data,\n          elem,\n          type,\n          special = jQuery.event.special,\n          i = 0;\n\n      for (; (elem = elems[i]) !== undefined; i++) {\n        if (acceptData(elem)) {\n          if (data = elem[dataPriv.expando]) {\n            if (data.events) {\n              for (type in data.events) {\n                if (special[type]) {\n                  jQuery.event.remove(elem, type); // This is a shortcut to avoid jQuery.event.remove's overhead\n                } else {\n                  jQuery.removeEvent(elem, type, data.handle);\n                }\n              }\n            } // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n\n\n            elem[dataPriv.expando] = undefined;\n          }\n\n          if (elem[dataUser.expando]) {\n            // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataUser.expando] = undefined;\n          }\n        }\n      }\n    }\n  });\n  jQuery.fn.extend({\n    detach: function (selector) {\n      return remove(this, selector, true);\n    },\n    remove: function (selector) {\n      return remove(this, selector);\n    },\n    text: function (value) {\n      return access(this, function (value) {\n        return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n            this.textContent = value;\n          }\n        });\n      }, null, value, arguments.length);\n    },\n    append: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.appendChild(elem);\n        }\n      });\n    },\n    prepend: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.insertBefore(elem, target.firstChild);\n        }\n      });\n    },\n    before: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this);\n        }\n      });\n    },\n    after: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this.nextSibling);\n        }\n      });\n    },\n    empty: function () {\n      var elem,\n          i = 0;\n\n      for (; (elem = this[i]) != null; i++) {\n        if (elem.nodeType === 1) {\n          // Prevent memory leaks\n          jQuery.cleanData(getAll(elem, false)); // Remove any remaining nodes\n\n          elem.textContent = \"\";\n        }\n      }\n\n      return this;\n    },\n    clone: function (dataAndEvents, deepDataAndEvents) {\n      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n      return this.map(function () {\n        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n      });\n    },\n    html: function (value) {\n      return access(this, function (value) {\n        var elem = this[0] || {},\n            i = 0,\n            l = this.length;\n\n        if (value === undefined && elem.nodeType === 1) {\n          return elem.innerHTML;\n        } // See if we can take a shortcut and just use innerHTML\n\n\n        if (typeof value === \"string\" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n          value = jQuery.htmlPrefilter(value);\n\n          try {\n            for (; i < l; i++) {\n              elem = this[i] || {}; // Remove element nodes and prevent memory leaks\n\n              if (elem.nodeType === 1) {\n                jQuery.cleanData(getAll(elem, false));\n                elem.innerHTML = value;\n              }\n            }\n\n            elem = 0; // If using innerHTML throws an exception, use the fallback method\n          } catch (e) {}\n        }\n\n        if (elem) {\n          this.empty().append(value);\n        }\n      }, null, value, arguments.length);\n    },\n    replaceWith: function () {\n      var ignored = []; // Make the changes, replacing each non-ignored context element with the new content\n\n      return domManip(this, arguments, function (elem) {\n        var parent = this.parentNode;\n\n        if (jQuery.inArray(this, ignored) < 0) {\n          jQuery.cleanData(getAll(this));\n\n          if (parent) {\n            parent.replaceChild(elem, this);\n          }\n        } // Force callback invocation\n\n      }, ignored);\n    }\n  });\n  jQuery.each({\n    appendTo: \"append\",\n    prependTo: \"prepend\",\n    insertBefore: \"before\",\n    insertAfter: \"after\",\n    replaceAll: \"replaceWith\"\n  }, function (name, original) {\n    jQuery.fn[name] = function (selector) {\n      var elems,\n          ret = [],\n          insert = jQuery(selector),\n          last = insert.length - 1,\n          i = 0;\n\n      for (; i <= last; i++) {\n        elems = i === last ? this : this.clone(true);\n        jQuery(insert[i])[original](elems); // Support: Android <=4.0 only, PhantomJS 1 only\n        // .get() because push.apply(_, arraylike) throws on ancient WebKit\n\n        push.apply(ret, elems.get());\n      }\n\n      return this.pushStack(ret);\n    };\n  });\n  var rnumnonpx = new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\");\n\n  var getStyles = function (elem) {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    var view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  };\n\n  var rboxStyle = new RegExp(cssExpand.join(\"|\"), \"i\");\n\n  (function () {\n    // Executing both pixelPosition & boxSizingReliable tests require only one layout\n    // so they're executed at the same time to save the second computation.\n    function computeStyleTests() {\n      // This is a singleton, we need to execute it only once\n      if (!div) {\n        return;\n      }\n\n      container.style.cssText = \"position:absolute;left:-11111px;width:60px;\" + \"margin-top:1px;padding:0;border:0\";\n      div.style.cssText = \"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" + \"margin:auto;border:1px;padding:1px;\" + \"width:60%;top:1%\";\n      documentElement.appendChild(container).appendChild(div);\n      var divStyle = window.getComputedStyle(div);\n      pixelPositionVal = divStyle.top !== \"1%\"; // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\n      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12; // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n      // Some styles come back with percentage values, even though they shouldn't\n\n      div.style.right = \"60%\";\n      pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36; // Support: IE 9 - 11 only\n      // Detect misreporting of content dimensions for box-sizing:border-box elements\n\n      boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36; // Support: IE 9 only\n      // Detect overflow:scroll screwiness (gh-3699)\n\n      div.style.position = \"absolute\";\n      scrollboxSizeVal = div.offsetWidth === 36 || \"absolute\";\n      documentElement.removeChild(container); // Nullify the div so it wouldn't be stored in the memory and\n      // it will also be a sign that checks already performed\n\n      div = null;\n    }\n\n    function roundPixelMeasures(measure) {\n      return Math.round(parseFloat(measure));\n    }\n\n    var pixelPositionVal,\n        boxSizingReliableVal,\n        scrollboxSizeVal,\n        pixelBoxStylesVal,\n        reliableMarginLeftVal,\n        container = document.createElement(\"div\"),\n        div = document.createElement(\"div\"); // Finish early in limited (non-browser) environments\n\n    if (!div.style) {\n      return;\n    } // Support: IE <=9 - 11 only\n    // Style of cloned element affects source element cloned (#8908)\n\n\n    div.style.backgroundClip = \"content-box\";\n    div.cloneNode(true).style.backgroundClip = \"\";\n    support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n    jQuery.extend(support, {\n      boxSizingReliable: function () {\n        computeStyleTests();\n        return boxSizingReliableVal;\n      },\n      pixelBoxStyles: function () {\n        computeStyleTests();\n        return pixelBoxStylesVal;\n      },\n      pixelPosition: function () {\n        computeStyleTests();\n        return pixelPositionVal;\n      },\n      reliableMarginLeft: function () {\n        computeStyleTests();\n        return reliableMarginLeftVal;\n      },\n      scrollboxSize: function () {\n        computeStyleTests();\n        return scrollboxSizeVal;\n      }\n    });\n  })();\n\n  function curCSS(elem, name, computed) {\n    var width,\n        minWidth,\n        maxWidth,\n        ret,\n        // Support: Firefox 51+\n    // Retrieving style before computed somehow\n    // fixes an issue with getting wrong values\n    // on detached elements\n    style = elem.style;\n    computed = computed || getStyles(elem); // getPropertyValue is needed for:\n    //   .css('filter') (IE 9 only, #12537)\n    //   .css('--customProperty) (#3144)\n\n    if (computed) {\n      ret = computed.getPropertyValue(name) || computed[name];\n\n      if (ret === \"\" && !jQuery.contains(elem.ownerDocument, elem)) {\n        ret = jQuery.style(elem, name);\n      } // A tribute to the \"awesome hack by Dean Edwards\"\n      // Android Browser returns percentage for some values,\n      // but width seems to be reliably pixels.\n      // This is against the CSSOM draft spec:\n      // https://drafts.csswg.org/cssom/#resolved-values\n\n\n      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {\n        // Remember the original values\n        width = style.width;\n        minWidth = style.minWidth;\n        maxWidth = style.maxWidth; // Put in the new values to get a computed value out\n\n        style.minWidth = style.maxWidth = style.width = ret;\n        ret = computed.width; // Revert the changed values\n\n        style.width = width;\n        style.minWidth = minWidth;\n        style.maxWidth = maxWidth;\n      }\n    }\n\n    return ret !== undefined ? // Support: IE <=9 - 11 only\n    // IE returns zIndex value as an integer.\n    ret + \"\" : ret;\n  }\n\n  function addGetHookIf(conditionFn, hookFn) {\n    // Define the hook, we'll check on the first run if it's really needed.\n    return {\n      get: function () {\n        if (conditionFn()) {\n          // Hook not needed (or it's not possible to use it due\n          // to missing dependency), remove it.\n          delete this.get;\n          return;\n        } // Hook needed; redefine it so that the support test is not executed again.\n\n\n        return (this.get = hookFn).apply(this, arguments);\n      }\n    };\n  }\n\n  var // Swappable if display is none or starts with table\n  // except \"table\", \"table-cell\", or \"table-caption\"\n  // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n  rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n      rcustomProp = /^--/,\n      cssShow = {\n    position: \"absolute\",\n    visibility: \"hidden\",\n    display: \"block\"\n  },\n      cssNormalTransform = {\n    letterSpacing: \"0\",\n    fontWeight: \"400\"\n  },\n      cssPrefixes = [\"Webkit\", \"Moz\", \"ms\"],\n      emptyStyle = document.createElement(\"div\").style; // Return a css property mapped to a potentially vendor prefixed property\n\n  function vendorPropName(name) {\n    // Shortcut for names that are not vendor prefixed\n    if (name in emptyStyle) {\n      return name;\n    } // Check for vendor prefixed names\n\n\n    var capName = name[0].toUpperCase() + name.slice(1),\n        i = cssPrefixes.length;\n\n    while (i--) {\n      name = cssPrefixes[i] + capName;\n\n      if (name in emptyStyle) {\n        return name;\n      }\n    }\n  } // Return a property mapped along what jQuery.cssProps suggests or to\n  // a vendor prefixed property.\n\n\n  function finalPropName(name) {\n    var ret = jQuery.cssProps[name];\n\n    if (!ret) {\n      ret = jQuery.cssProps[name] = vendorPropName(name) || name;\n    }\n\n    return ret;\n  }\n\n  function setPositiveNumber(elem, value, subtract) {\n    // Any relative (+/-) values have already been\n    // normalized at this point\n    var matches = rcssNum.exec(value);\n    return matches ? // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n    Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || \"px\") : value;\n  }\n\n  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {\n    var i = dimension === \"width\" ? 1 : 0,\n        extra = 0,\n        delta = 0; // Adjustment may not be necessary\n\n    if (box === (isBorderBox ? \"border\" : \"content\")) {\n      return 0;\n    }\n\n    for (; i < 4; i += 2) {\n      // Both box models exclude margin\n      if (box === \"margin\") {\n        delta += jQuery.css(elem, box + cssExpand[i], true, styles);\n      } // If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\n\n      if (!isBorderBox) {\n        // Add padding\n        delta += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles); // For \"border\" or \"margin\", add border\n\n        if (box !== \"padding\") {\n          delta += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles); // But still keep track of it otherwise\n        } else {\n          extra += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        } // If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n        // \"padding\" or \"margin\"\n\n      } else {\n        // For \"content\", subtract padding\n        if (box === \"content\") {\n          delta -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n        } // For \"content\" or \"padding\", subtract border\n\n\n        if (box !== \"margin\") {\n          delta -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        }\n      }\n    } // Account for positive content-box scroll gutter when requested by providing computedVal\n\n\n    if (!isBorderBox && computedVal >= 0) {\n      // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n      // Assuming integer scroll gutter, subtract the rest and round down\n      delta += Math.max(0, Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5));\n    }\n\n    return delta;\n  }\n\n  function getWidthOrHeight(elem, dimension, extra) {\n    // Start with computed style\n    var styles = getStyles(elem),\n        val = curCSS(elem, dimension, styles),\n        isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n        valueIsBorderBox = isBorderBox; // Support: Firefox <=54\n    // Return a confounding non-pixel value or feign ignorance, as appropriate.\n\n    if (rnumnonpx.test(val)) {\n      if (!extra) {\n        return val;\n      }\n\n      val = \"auto\";\n    } // Check for style in case a browser which returns unreliable values\n    // for getComputedStyle silently falls back to the reliable elem.style\n\n\n    valueIsBorderBox = valueIsBorderBox && (support.boxSizingReliable() || val === elem.style[dimension]); // Fall back to offsetWidth/offsetHeight when value is \"auto\"\n    // This happens for inline elements with no explicit setting (gh-3571)\n    // Support: Android <=4.1 - 4.3 only\n    // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\n    if (val === \"auto\" || !parseFloat(val) && jQuery.css(elem, \"display\", false, styles) === \"inline\") {\n      val = elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)]; // offsetWidth/offsetHeight provide border-box values\n\n      valueIsBorderBox = true;\n    } // Normalize \"\" and auto\n\n\n    val = parseFloat(val) || 0; // Adjust for the element's box model\n\n    return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? \"border\" : \"content\"), valueIsBorderBox, styles, // Provide the current computed size to request scroll gutter calculation (gh-3589)\n    val) + \"px\";\n  }\n\n  jQuery.extend({\n    // Add in style property hooks for overriding the default\n    // behavior of getting and setting a style property\n    cssHooks: {\n      opacity: {\n        get: function (elem, computed) {\n          if (computed) {\n            // We should always get a number back from opacity\n            var ret = curCSS(elem, \"opacity\");\n            return ret === \"\" ? \"1\" : ret;\n          }\n        }\n      }\n    },\n    // Don't automatically add \"px\" to these possibly-unitless properties\n    cssNumber: {\n      \"animationIterationCount\": true,\n      \"columnCount\": true,\n      \"fillOpacity\": true,\n      \"flexGrow\": true,\n      \"flexShrink\": true,\n      \"fontWeight\": true,\n      \"lineHeight\": true,\n      \"opacity\": true,\n      \"order\": true,\n      \"orphans\": true,\n      \"widows\": true,\n      \"zIndex\": true,\n      \"zoom\": true\n    },\n    // Add in properties whose names you wish to fix before\n    // setting or getting the value\n    cssProps: {},\n    // Get and set the style property on a DOM Node\n    style: function (elem, name, value, extra) {\n      // Don't set styles on text and comment nodes\n      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n        return;\n      } // Make sure that we're working with the right name\n\n\n      var ret,\n          type,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name),\n          style = elem.style; // Make sure that we're working with the right name. We don't\n      // want to query the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Gets hook for the prefixed version, then unprefixed version\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // Check if we're setting a value\n\n      if (value !== undefined) {\n        type = typeof value; // Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\n        if (type === \"string\" && (ret = rcssNum.exec(value)) && ret[1]) {\n          value = adjustCSS(elem, name, ret); // Fixes bug #9237\n\n          type = \"number\";\n        } // Make sure that null and NaN values aren't set (#7116)\n\n\n        if (value == null || value !== value) {\n          return;\n        } // If a number was passed in, add the unit (except for certain CSS properties)\n\n\n        if (type === \"number\") {\n          value += ret && ret[3] || (jQuery.cssNumber[origName] ? \"\" : \"px\");\n        } // background-* props affect original clone's values\n\n\n        if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0) {\n          style[name] = \"inherit\";\n        } // If a hook was provided, use that value, otherwise just set the specified value\n\n\n        if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n          if (isCustomProp) {\n            style.setProperty(name, value);\n          } else {\n            style[name] = value;\n          }\n        }\n      } else {\n        // If a hook was provided get the non-computed value from there\n        if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n          return ret;\n        } // Otherwise just get the value from the style object\n\n\n        return style[name];\n      }\n    },\n    css: function (elem, name, extra, styles) {\n      var val,\n          num,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name); // Make sure that we're working with the right name. We don't\n      // want to modify the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Try prefixed name followed by the unprefixed name\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // If a hook was provided get the computed value from there\n\n      if (hooks && \"get\" in hooks) {\n        val = hooks.get(elem, true, extra);\n      } // Otherwise, if a way to get the computed value exists, use that\n\n\n      if (val === undefined) {\n        val = curCSS(elem, name, styles);\n      } // Convert \"normal\" to computed value\n\n\n      if (val === \"normal\" && name in cssNormalTransform) {\n        val = cssNormalTransform[name];\n      } // Make numeric if forced or a qualifier was provided and val looks numeric\n\n\n      if (extra === \"\" || extra) {\n        num = parseFloat(val);\n        return extra === true || isFinite(num) ? num || 0 : val;\n      }\n\n      return val;\n    }\n  });\n  jQuery.each([\"height\", \"width\"], function (i, dimension) {\n    jQuery.cssHooks[dimension] = {\n      get: function (elem, computed, extra) {\n        if (computed) {\n          // Certain elements can have dimension info if we invisibly show them\n          // but it must have a current display style that would benefit\n          return rdisplayswap.test(jQuery.css(elem, \"display\")) && ( // Support: Safari 8+\n          // Table columns in Safari have non-zero offsetWidth & zero\n          // getBoundingClientRect().width unless display is changed.\n          // Support: IE <=11 only\n          // Running getBoundingClientRect on a disconnected node\n          // in IE throws an error.\n          !elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n            return getWidthOrHeight(elem, dimension, extra);\n          }) : getWidthOrHeight(elem, dimension, extra);\n        }\n      },\n      set: function (elem, value, extra) {\n        var matches,\n            styles = getStyles(elem),\n            isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n            subtract = extra && boxModelAdjustment(elem, dimension, extra, isBorderBox, styles); // Account for unreliable border-box dimensions by comparing offset* to computed and\n        // faking a content-box to get border and padding (gh-3699)\n\n        if (isBorderBox && support.scrollboxSize() === styles.position) {\n          subtract -= Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, \"border\", false, styles) - 0.5);\n        } // Convert to pixels if value adjustment is needed\n\n\n        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || \"px\") !== \"px\") {\n          elem.style[dimension] = value;\n          value = jQuery.css(elem, dimension);\n        }\n\n        return setPositiveNumber(elem, value, subtract);\n      }\n    };\n  });\n  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n    if (computed) {\n      return (parseFloat(curCSS(elem, \"marginLeft\")) || elem.getBoundingClientRect().left - swap(elem, {\n        marginLeft: 0\n      }, function () {\n        return elem.getBoundingClientRect().left;\n      })) + \"px\";\n    }\n  }); // These hooks are used by animate to expand properties\n\n  jQuery.each({\n    margin: \"\",\n    padding: \"\",\n    border: \"Width\"\n  }, function (prefix, suffix) {\n    jQuery.cssHooks[prefix + suffix] = {\n      expand: function (value) {\n        var i = 0,\n            expanded = {},\n            // Assumes a single number if not a string\n        parts = typeof value === \"string\" ? value.split(\" \") : [value];\n\n        for (; i < 4; i++) {\n          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n        }\n\n        return expanded;\n      }\n    };\n\n    if (prefix !== \"margin\") {\n      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n    }\n  });\n  jQuery.fn.extend({\n    css: function (name, value) {\n      return access(this, function (elem, name, value) {\n        var styles,\n            len,\n            map = {},\n            i = 0;\n\n        if (Array.isArray(name)) {\n          styles = getStyles(elem);\n          len = name.length;\n\n          for (; i < len; i++) {\n            map[name[i]] = jQuery.css(elem, name[i], false, styles);\n          }\n\n          return map;\n        }\n\n        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n      }, name, value, arguments.length > 1);\n    }\n  });\n\n  function Tween(elem, options, prop, end, easing) {\n    return new Tween.prototype.init(elem, options, prop, end, easing);\n  }\n\n  jQuery.Tween = Tween;\n  Tween.prototype = {\n    constructor: Tween,\n    init: function (elem, options, prop, end, easing, unit) {\n      this.elem = elem;\n      this.prop = prop;\n      this.easing = easing || jQuery.easing._default;\n      this.options = options;\n      this.start = this.now = this.cur();\n      this.end = end;\n      this.unit = unit || (jQuery.cssNumber[prop] ? \"\" : \"px\");\n    },\n    cur: function () {\n      var hooks = Tween.propHooks[this.prop];\n      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n    },\n    run: function (percent) {\n      var eased,\n          hooks = Tween.propHooks[this.prop];\n\n      if (this.options.duration) {\n        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n      } else {\n        this.pos = eased = percent;\n      }\n\n      this.now = (this.end - this.start) * eased + this.start;\n\n      if (this.options.step) {\n        this.options.step.call(this.elem, this.now, this);\n      }\n\n      if (hooks && hooks.set) {\n        hooks.set(this);\n      } else {\n        Tween.propHooks._default.set(this);\n      }\n\n      return this;\n    }\n  };\n  Tween.prototype.init.prototype = Tween.prototype;\n  Tween.propHooks = {\n    _default: {\n      get: function (tween) {\n        var result; // Use a property on the element directly when it is not a DOM element,\n        // or when there is no matching style property that exists.\n\n        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n          return tween.elem[tween.prop];\n        } // Passing an empty string as a 3rd parameter to .css will automatically\n        // attempt a parseFloat and fallback to a string if the parse fails.\n        // Simple values such as \"10px\" are parsed to Float;\n        // complex values such as \"rotate(1rad)\" are returned as-is.\n\n\n        result = jQuery.css(tween.elem, tween.prop, \"\"); // Empty strings, null, undefined and \"auto\" are converted to 0.\n\n        return !result || result === \"auto\" ? 0 : result;\n      },\n      set: function (tween) {\n        // Use step hook for back compat.\n        // Use cssHook if its there.\n        // Use .style if available and use plain properties where available.\n        if (jQuery.fx.step[tween.prop]) {\n          jQuery.fx.step[tween.prop](tween);\n        } else if (tween.elem.nodeType === 1 && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {\n          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n        } else {\n          tween.elem[tween.prop] = tween.now;\n        }\n      }\n    }\n  }; // Support: IE <=9 only\n  // Panic based approach to setting things on disconnected nodes\n\n  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n    set: function (tween) {\n      if (tween.elem.nodeType && tween.elem.parentNode) {\n        tween.elem[tween.prop] = tween.now;\n      }\n    }\n  };\n  jQuery.easing = {\n    linear: function (p) {\n      return p;\n    },\n    swing: function (p) {\n      return 0.5 - Math.cos(p * Math.PI) / 2;\n    },\n    _default: \"swing\"\n  };\n  jQuery.fx = Tween.prototype.init; // Back compat <1.8 extension point\n\n  jQuery.fx.step = {};\n  var fxNow,\n      inProgress,\n      rfxtypes = /^(?:toggle|show|hide)$/,\n      rrun = /queueHooks$/;\n\n  function schedule() {\n    if (inProgress) {\n      if (document.hidden === false && window.requestAnimationFrame) {\n        window.requestAnimationFrame(schedule);\n      } else {\n        window.setTimeout(schedule, jQuery.fx.interval);\n      }\n\n      jQuery.fx.tick();\n    }\n  } // Animations created synchronously will run synchronously\n\n\n  function createFxNow() {\n    window.setTimeout(function () {\n      fxNow = undefined;\n    });\n    return fxNow = Date.now();\n  } // Generate parameters to create a standard animation\n\n\n  function genFx(type, includeWidth) {\n    var which,\n        i = 0,\n        attrs = {\n      height: type\n    }; // If we include width, step value is 1 to do all cssExpand values,\n    // otherwise step value is 2 to skip over Left and Right\n\n    includeWidth = includeWidth ? 1 : 0;\n\n    for (; i < 4; i += 2 - includeWidth) {\n      which = cssExpand[i];\n      attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;\n    }\n\n    if (includeWidth) {\n      attrs.opacity = attrs.width = type;\n    }\n\n    return attrs;\n  }\n\n  function createTween(value, prop, animation) {\n    var tween,\n        collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners[\"*\"]),\n        index = 0,\n        length = collection.length;\n\n    for (; index < length; index++) {\n      if (tween = collection[index].call(animation, prop, value)) {\n        // We're done with this property\n        return tween;\n      }\n    }\n  }\n\n  function defaultPrefilter(elem, props, opts) {\n    var prop,\n        value,\n        toggle,\n        hooks,\n        oldfire,\n        propTween,\n        restoreDisplay,\n        display,\n        isBox = \"width\" in props || \"height\" in props,\n        anim = this,\n        orig = {},\n        style = elem.style,\n        hidden = elem.nodeType && isHiddenWithinTree(elem),\n        dataShow = dataPriv.get(elem, \"fxshow\"); // Queue-skipping animations hijack the fx hooks\n\n    if (!opts.queue) {\n      hooks = jQuery._queueHooks(elem, \"fx\");\n\n      if (hooks.unqueued == null) {\n        hooks.unqueued = 0;\n        oldfire = hooks.empty.fire;\n\n        hooks.empty.fire = function () {\n          if (!hooks.unqueued) {\n            oldfire();\n          }\n        };\n      }\n\n      hooks.unqueued++;\n      anim.always(function () {\n        // Ensure the complete handler is called before this completes\n        anim.always(function () {\n          hooks.unqueued--;\n\n          if (!jQuery.queue(elem, \"fx\").length) {\n            hooks.empty.fire();\n          }\n        });\n      });\n    } // Detect show/hide animations\n\n\n    for (prop in props) {\n      value = props[prop];\n\n      if (rfxtypes.test(value)) {\n        delete props[prop];\n        toggle = toggle || value === \"toggle\";\n\n        if (value === (hidden ? \"hide\" : \"show\")) {\n          // Pretend to be hidden if this is a \"show\" and\n          // there is still data from a stopped show/hide\n          if (value === \"show\" && dataShow && dataShow[prop] !== undefined) {\n            hidden = true; // Ignore all other no-op show/hide data\n          } else {\n            continue;\n          }\n        }\n\n        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n      }\n    } // Bail out if this is a no-op like .hide().hide()\n\n\n    propTween = !jQuery.isEmptyObject(props);\n\n    if (!propTween && jQuery.isEmptyObject(orig)) {\n      return;\n    } // Restrict \"overflow\" and \"display\" styles during box animations\n\n\n    if (isBox && elem.nodeType === 1) {\n      // Support: IE <=9 - 11, Edge 12 - 15\n      // Record all 3 overflow attributes because IE does not infer the shorthand\n      // from identically-valued overflowX and overflowY and Edge just mirrors\n      // the overflowX value there.\n      opts.overflow = [style.overflow, style.overflowX, style.overflowY]; // Identify a display type, preferring old show/hide data over the CSS cascade\n\n      restoreDisplay = dataShow && dataShow.display;\n\n      if (restoreDisplay == null) {\n        restoreDisplay = dataPriv.get(elem, \"display\");\n      }\n\n      display = jQuery.css(elem, \"display\");\n\n      if (display === \"none\") {\n        if (restoreDisplay) {\n          display = restoreDisplay;\n        } else {\n          // Get nonempty value(s) by temporarily forcing visibility\n          showHide([elem], true);\n          restoreDisplay = elem.style.display || restoreDisplay;\n          display = jQuery.css(elem, \"display\");\n          showHide([elem]);\n        }\n      } // Animate inline elements as inline-block\n\n\n      if (display === \"inline\" || display === \"inline-block\" && restoreDisplay != null) {\n        if (jQuery.css(elem, \"float\") === \"none\") {\n          // Restore the original display value at the end of pure show/hide animations\n          if (!propTween) {\n            anim.done(function () {\n              style.display = restoreDisplay;\n            });\n\n            if (restoreDisplay == null) {\n              display = style.display;\n              restoreDisplay = display === \"none\" ? \"\" : display;\n            }\n          }\n\n          style.display = \"inline-block\";\n        }\n      }\n    }\n\n    if (opts.overflow) {\n      style.overflow = \"hidden\";\n      anim.always(function () {\n        style.overflow = opts.overflow[0];\n        style.overflowX = opts.overflow[1];\n        style.overflowY = opts.overflow[2];\n      });\n    } // Implement show/hide animations\n\n\n    propTween = false;\n\n    for (prop in orig) {\n      // General show/hide setup for this element animation\n      if (!propTween) {\n        if (dataShow) {\n          if (\"hidden\" in dataShow) {\n            hidden = dataShow.hidden;\n          }\n        } else {\n          dataShow = dataPriv.access(elem, \"fxshow\", {\n            display: restoreDisplay\n          });\n        } // Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\n\n        if (toggle) {\n          dataShow.hidden = !hidden;\n        } // Show elements before animating them\n\n\n        if (hidden) {\n          showHide([elem], true);\n        }\n        /* eslint-disable no-loop-func */\n\n\n        anim.done(function () {\n          /* eslint-enable no-loop-func */\n          // The final step of a \"hide\" animation is actually hiding the element\n          if (!hidden) {\n            showHide([elem]);\n          }\n\n          dataPriv.remove(elem, \"fxshow\");\n\n          for (prop in orig) {\n            jQuery.style(elem, prop, orig[prop]);\n          }\n        });\n      } // Per-property setup\n\n\n      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n\n      if (!(prop in dataShow)) {\n        dataShow[prop] = propTween.start;\n\n        if (hidden) {\n          propTween.end = propTween.start;\n          propTween.start = 0;\n        }\n      }\n    }\n  }\n\n  function propFilter(props, specialEasing) {\n    var index, name, easing, value, hooks; // camelCase, specialEasing and expand cssHook pass\n\n    for (index in props) {\n      name = camelCase(index);\n      easing = specialEasing[name];\n      value = props[index];\n\n      if (Array.isArray(value)) {\n        easing = value[1];\n        value = props[index] = value[0];\n      }\n\n      if (index !== name) {\n        props[name] = value;\n        delete props[index];\n      }\n\n      hooks = jQuery.cssHooks[name];\n\n      if (hooks && \"expand\" in hooks) {\n        value = hooks.expand(value);\n        delete props[name]; // Not quite $.extend, this won't overwrite existing keys.\n        // Reusing 'index' because we have the correct \"name\"\n\n        for (index in value) {\n          if (!(index in props)) {\n            props[index] = value[index];\n            specialEasing[index] = easing;\n          }\n        }\n      } else {\n        specialEasing[name] = easing;\n      }\n    }\n  }\n\n  function Animation(elem, properties, options) {\n    var result,\n        stopped,\n        index = 0,\n        length = Animation.prefilters.length,\n        deferred = jQuery.Deferred().always(function () {\n      // Don't match elem in the :animated selector\n      delete tick.elem;\n    }),\n        tick = function () {\n      if (stopped) {\n        return false;\n      }\n\n      var currentTime = fxNow || createFxNow(),\n          remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n          // Support: Android 2.3 only\n      // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n      temp = remaining / animation.duration || 0,\n          percent = 1 - temp,\n          index = 0,\n          length = animation.tweens.length;\n\n      for (; index < length; index++) {\n        animation.tweens[index].run(percent);\n      }\n\n      deferred.notifyWith(elem, [animation, percent, remaining]); // If there's more to do, yield\n\n      if (percent < 1 && length) {\n        return remaining;\n      } // If this was an empty animation, synthesize a final progress notification\n\n\n      if (!length) {\n        deferred.notifyWith(elem, [animation, 1, 0]);\n      } // Resolve the animation and report its conclusion\n\n\n      deferred.resolveWith(elem, [animation]);\n      return false;\n    },\n        animation = deferred.promise({\n      elem: elem,\n      props: jQuery.extend({}, properties),\n      opts: jQuery.extend(true, {\n        specialEasing: {},\n        easing: jQuery.easing._default\n      }, options),\n      originalProperties: properties,\n      originalOptions: options,\n      startTime: fxNow || createFxNow(),\n      duration: options.duration,\n      tweens: [],\n      createTween: function (prop, end) {\n        var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n        animation.tweens.push(tween);\n        return tween;\n      },\n      stop: function (gotoEnd) {\n        var index = 0,\n            // If we are going to the end, we want to run all the tweens\n        // otherwise we skip this part\n        length = gotoEnd ? animation.tweens.length : 0;\n\n        if (stopped) {\n          return this;\n        }\n\n        stopped = true;\n\n        for (; index < length; index++) {\n          animation.tweens[index].run(1);\n        } // Resolve when we played the last frame; otherwise, reject\n\n\n        if (gotoEnd) {\n          deferred.notifyWith(elem, [animation, 1, 0]);\n          deferred.resolveWith(elem, [animation, gotoEnd]);\n        } else {\n          deferred.rejectWith(elem, [animation, gotoEnd]);\n        }\n\n        return this;\n      }\n    }),\n        props = animation.props;\n\n    propFilter(props, animation.opts.specialEasing);\n\n    for (; index < length; index++) {\n      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n\n      if (result) {\n        if (isFunction(result.stop)) {\n          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);\n        }\n\n        return result;\n      }\n    }\n\n    jQuery.map(props, createTween, animation);\n\n    if (isFunction(animation.opts.start)) {\n      animation.opts.start.call(elem, animation);\n    } // Attach callbacks from options\n\n\n    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n    jQuery.fx.timer(jQuery.extend(tick, {\n      elem: elem,\n      anim: animation,\n      queue: animation.opts.queue\n    }));\n    return animation;\n  }\n\n  jQuery.Animation = jQuery.extend(Animation, {\n    tweeners: {\n      \"*\": [function (prop, value) {\n        var tween = this.createTween(prop, value);\n        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n        return tween;\n      }]\n    },\n    tweener: function (props, callback) {\n      if (isFunction(props)) {\n        callback = props;\n        props = [\"*\"];\n      } else {\n        props = props.match(rnothtmlwhite);\n      }\n\n      var prop,\n          index = 0,\n          length = props.length;\n\n      for (; index < length; index++) {\n        prop = props[index];\n        Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n        Animation.tweeners[prop].unshift(callback);\n      }\n    },\n    prefilters: [defaultPrefilter],\n    prefilter: function (callback, prepend) {\n      if (prepend) {\n        Animation.prefilters.unshift(callback);\n      } else {\n        Animation.prefilters.push(callback);\n      }\n    }\n  });\n\n  jQuery.speed = function (speed, easing, fn) {\n    var opt = speed && typeof speed === \"object\" ? jQuery.extend({}, speed) : {\n      complete: fn || !fn && easing || isFunction(speed) && speed,\n      duration: speed,\n      easing: fn && easing || easing && !isFunction(easing) && easing\n    }; // Go to the end state if fx are off\n\n    if (jQuery.fx.off) {\n      opt.duration = 0;\n    } else {\n      if (typeof opt.duration !== \"number\") {\n        if (opt.duration in jQuery.fx.speeds) {\n          opt.duration = jQuery.fx.speeds[opt.duration];\n        } else {\n          opt.duration = jQuery.fx.speeds._default;\n        }\n      }\n    } // Normalize opt.queue - true/undefined/null -> \"fx\"\n\n\n    if (opt.queue == null || opt.queue === true) {\n      opt.queue = \"fx\";\n    } // Queueing\n\n\n    opt.old = opt.complete;\n\n    opt.complete = function () {\n      if (isFunction(opt.old)) {\n        opt.old.call(this);\n      }\n\n      if (opt.queue) {\n        jQuery.dequeue(this, opt.queue);\n      }\n    };\n\n    return opt;\n  };\n\n  jQuery.fn.extend({\n    fadeTo: function (speed, to, easing, callback) {\n      // Show any hidden elements after setting opacity to 0\n      return this.filter(isHiddenWithinTree).css(\"opacity\", 0).show() // Animate to the value specified\n      .end().animate({\n        opacity: to\n      }, speed, easing, callback);\n    },\n    animate: function (prop, speed, easing, callback) {\n      var empty = jQuery.isEmptyObject(prop),\n          optall = jQuery.speed(speed, easing, callback),\n          doAnimation = function () {\n        // Operate on a copy of prop so per-property easing won't be lost\n        var anim = Animation(this, jQuery.extend({}, prop), optall); // Empty animations, or finishing resolves immediately\n\n        if (empty || dataPriv.get(this, \"finish\")) {\n          anim.stop(true);\n        }\n      };\n\n      doAnimation.finish = doAnimation;\n      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n    },\n    stop: function (type, clearQueue, gotoEnd) {\n      var stopQueue = function (hooks) {\n        var stop = hooks.stop;\n        delete hooks.stop;\n        stop(gotoEnd);\n      };\n\n      if (typeof type !== \"string\") {\n        gotoEnd = clearQueue;\n        clearQueue = type;\n        type = undefined;\n      }\n\n      if (clearQueue && type !== false) {\n        this.queue(type || \"fx\", []);\n      }\n\n      return this.each(function () {\n        var dequeue = true,\n            index = type != null && type + \"queueHooks\",\n            timers = jQuery.timers,\n            data = dataPriv.get(this);\n\n        if (index) {\n          if (data[index] && data[index].stop) {\n            stopQueue(data[index]);\n          }\n        } else {\n          for (index in data) {\n            if (data[index] && data[index].stop && rrun.test(index)) {\n              stopQueue(data[index]);\n            }\n          }\n        }\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n            timers[index].anim.stop(gotoEnd);\n            dequeue = false;\n            timers.splice(index, 1);\n          }\n        } // Start the next in the queue if the last step wasn't forced.\n        // Timers currently will call their complete callbacks, which\n        // will dequeue but only if they were gotoEnd.\n\n\n        if (dequeue || !gotoEnd) {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    finish: function (type) {\n      if (type !== false) {\n        type = type || \"fx\";\n      }\n\n      return this.each(function () {\n        var index,\n            data = dataPriv.get(this),\n            queue = data[type + \"queue\"],\n            hooks = data[type + \"queueHooks\"],\n            timers = jQuery.timers,\n            length = queue ? queue.length : 0; // Enable finishing flag on private data\n\n        data.finish = true; // Empty the queue first\n\n        jQuery.queue(this, type, []);\n\n        if (hooks && hooks.stop) {\n          hooks.stop.call(this, true);\n        } // Look for any active animations, and finish them\n\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && timers[index].queue === type) {\n            timers[index].anim.stop(true);\n            timers.splice(index, 1);\n          }\n        } // Look for any animations in the old queue and finish them\n\n\n        for (index = 0; index < length; index++) {\n          if (queue[index] && queue[index].finish) {\n            queue[index].finish.call(this);\n          }\n        } // Turn off finishing flag\n\n\n        delete data.finish;\n      });\n    }\n  });\n  jQuery.each([\"toggle\", \"show\", \"hide\"], function (i, name) {\n    var cssFn = jQuery.fn[name];\n\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return speed == null || typeof speed === \"boolean\" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n    };\n  }); // Generate shortcuts for custom animations\n\n  jQuery.each({\n    slideDown: genFx(\"show\"),\n    slideUp: genFx(\"hide\"),\n    slideToggle: genFx(\"toggle\"),\n    fadeIn: {\n      opacity: \"show\"\n    },\n    fadeOut: {\n      opacity: \"hide\"\n    },\n    fadeToggle: {\n      opacity: \"toggle\"\n    }\n  }, function (name, props) {\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return this.animate(props, speed, easing, callback);\n    };\n  });\n  jQuery.timers = [];\n\n  jQuery.fx.tick = function () {\n    var timer,\n        i = 0,\n        timers = jQuery.timers;\n    fxNow = Date.now();\n\n    for (; i < timers.length; i++) {\n      timer = timers[i]; // Run the timer and safely remove it when done (allowing for external removal)\n\n      if (!timer() && timers[i] === timer) {\n        timers.splice(i--, 1);\n      }\n    }\n\n    if (!timers.length) {\n      jQuery.fx.stop();\n    }\n\n    fxNow = undefined;\n  };\n\n  jQuery.fx.timer = function (timer) {\n    jQuery.timers.push(timer);\n    jQuery.fx.start();\n  };\n\n  jQuery.fx.interval = 13;\n\n  jQuery.fx.start = function () {\n    if (inProgress) {\n      return;\n    }\n\n    inProgress = true;\n    schedule();\n  };\n\n  jQuery.fx.stop = function () {\n    inProgress = null;\n  };\n\n  jQuery.fx.speeds = {\n    slow: 600,\n    fast: 200,\n    // Default speed\n    _default: 400\n  }; // Based off of the plugin by Clint Helfers, with permission.\n  // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n\n  jQuery.fn.delay = function (time, type) {\n    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n    type = type || \"fx\";\n    return this.queue(type, function (next, hooks) {\n      var timeout = window.setTimeout(next, time);\n\n      hooks.stop = function () {\n        window.clearTimeout(timeout);\n      };\n    });\n  };\n\n  (function () {\n    var input = document.createElement(\"input\"),\n        select = document.createElement(\"select\"),\n        opt = select.appendChild(document.createElement(\"option\"));\n    input.type = \"checkbox\"; // Support: Android <=4.3 only\n    // Default value for a checkbox should be \"on\"\n\n    support.checkOn = input.value !== \"\"; // Support: IE <=11 only\n    // Must access selectedIndex to make default options select\n\n    support.optSelected = opt.selected; // Support: IE <=11 only\n    // An input loses its value after becoming a radio\n\n    input = document.createElement(\"input\");\n    input.value = \"t\";\n    input.type = \"radio\";\n    support.radioValue = input.value === \"t\";\n  })();\n\n  var boolHook,\n      attrHandle = jQuery.expr.attrHandle;\n  jQuery.fn.extend({\n    attr: function (name, value) {\n      return access(this, jQuery.attr, name, value, arguments.length > 1);\n    },\n    removeAttr: function (name) {\n      return this.each(function () {\n        jQuery.removeAttr(this, name);\n      });\n    }\n  });\n  jQuery.extend({\n    attr: function (elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don't get/set attributes on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      } // Fallback to prop when attributes are not supported\n\n\n      if (typeof elem.getAttribute === \"undefined\") {\n        return jQuery.prop(elem, name, value);\n      } // Attribute hooks are determined by the lowercase version\n      // Grab necessary hook if one is defined\n\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n      }\n\n      if (value !== undefined) {\n        if (value === null) {\n          jQuery.removeAttr(elem, name);\n          return;\n        }\n\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        elem.setAttribute(name, value + \"\");\n        return value;\n      }\n\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      ret = jQuery.find.attr(elem, name); // Non-existent attributes return null, we normalize to undefined\n\n      return ret == null ? undefined : ret;\n    },\n    attrHooks: {\n      type: {\n        set: function (elem, value) {\n          if (!support.radioValue && value === \"radio\" && nodeName(elem, \"input\")) {\n            var val = elem.value;\n            elem.setAttribute(\"type\", value);\n\n            if (val) {\n              elem.value = val;\n            }\n\n            return value;\n          }\n        }\n      }\n    },\n    removeAttr: function (elem, value) {\n      var name,\n          i = 0,\n          // Attribute names can contain non-HTML whitespace characters\n      // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n      attrNames = value && value.match(rnothtmlwhite);\n\n      if (attrNames && elem.nodeType === 1) {\n        while (name = attrNames[i++]) {\n          elem.removeAttribute(name);\n        }\n      }\n    }\n  }); // Hooks for boolean attributes\n\n  boolHook = {\n    set: function (elem, value, name) {\n      if (value === false) {\n        // Remove boolean attributes when set to false\n        jQuery.removeAttr(elem, name);\n      } else {\n        elem.setAttribute(name, name);\n      }\n\n      return name;\n    }\n  };\n  jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (i, name) {\n    var getter = attrHandle[name] || jQuery.find.attr;\n\n    attrHandle[name] = function (elem, name, isXML) {\n      var ret,\n          handle,\n          lowercaseName = name.toLowerCase();\n\n      if (!isXML) {\n        // Avoid an infinite loop by temporarily removing this function from the getter\n        handle = attrHandle[lowercaseName];\n        attrHandle[lowercaseName] = ret;\n        ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n        attrHandle[lowercaseName] = handle;\n      }\n\n      return ret;\n    };\n  });\n  var rfocusable = /^(?:input|select|textarea|button)$/i,\n      rclickable = /^(?:a|area)$/i;\n  jQuery.fn.extend({\n    prop: function (name, value) {\n      return access(this, jQuery.prop, name, value, arguments.length > 1);\n    },\n    removeProp: function (name) {\n      return this.each(function () {\n        delete this[jQuery.propFix[name] || name];\n      });\n    }\n  });\n  jQuery.extend({\n    prop: function (elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don't get/set properties on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      }\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        // Fix name and attach hooks\n        name = jQuery.propFix[name] || name;\n        hooks = jQuery.propHooks[name];\n      }\n\n      if (value !== undefined) {\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        return elem[name] = value;\n      }\n\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      return elem[name];\n    },\n    propHooks: {\n      tabIndex: {\n        get: function (elem) {\n          // Support: IE <=9 - 11 only\n          // elem.tabIndex doesn't always return the\n          // correct value when it hasn't been explicitly set\n          // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n          // Use proper attribute retrieval(#12072)\n          var tabindex = jQuery.find.attr(elem, \"tabindex\");\n\n          if (tabindex) {\n            return parseInt(tabindex, 10);\n          }\n\n          if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n            return 0;\n          }\n\n          return -1;\n        }\n      }\n    },\n    propFix: {\n      \"for\": \"htmlFor\",\n      \"class\": \"className\"\n    }\n  }); // Support: IE <=11 only\n  // Accessing the selectedIndex property\n  // forces the browser to respect setting selected\n  // on the option\n  // The getter ensures a default option is selected\n  // when in an optgroup\n  // eslint rule \"no-unused-expressions\" is disabled for this code\n  // since it considers such accessions noop\n\n  if (!support.optSelected) {\n    jQuery.propHooks.selected = {\n      get: function (elem) {\n        /* eslint no-unused-expressions: \"off\" */\n        var parent = elem.parentNode;\n\n        if (parent && parent.parentNode) {\n          parent.parentNode.selectedIndex;\n        }\n\n        return null;\n      },\n      set: function (elem) {\n        /* eslint no-unused-expressions: \"off\" */\n        var parent = elem.parentNode;\n\n        if (parent) {\n          parent.selectedIndex;\n\n          if (parent.parentNode) {\n            parent.parentNode.selectedIndex;\n          }\n        }\n      }\n    };\n  }\n\n  jQuery.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function () {\n    jQuery.propFix[this.toLowerCase()] = this;\n  }); // Strip and collapse whitespace according to HTML spec\n  // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\n  function stripAndCollapse(value) {\n    var tokens = value.match(rnothtmlwhite) || [];\n    return tokens.join(\" \");\n  }\n\n  function getClass(elem) {\n    return elem.getAttribute && elem.getAttribute(\"class\") || \"\";\n  }\n\n  function classesToArray(value) {\n    if (Array.isArray(value)) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      return value.match(rnothtmlwhite) || [];\n    }\n\n    return [];\n  }\n\n  jQuery.fn.extend({\n    addClass: function (value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).addClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem);\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              if (cur.indexOf(\" \" + clazz + \" \") < 0) {\n                cur += clazz + \" \";\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    removeClass: function (value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).removeClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      if (!arguments.length) {\n        return this.attr(\"class\", \"\");\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem); // This expression is here for better compressibility (see addClass)\n\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              // Remove *all* instances\n              while (cur.indexOf(\" \" + clazz + \" \") > -1) {\n                cur = cur.replace(\" \" + clazz + \" \", \" \");\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    toggleClass: function (value, stateVal) {\n      var type = typeof value,\n          isValidValue = type === \"string\" || Array.isArray(value);\n\n      if (typeof stateVal === \"boolean\" && isValidValue) {\n        return stateVal ? this.addClass(value) : this.removeClass(value);\n      }\n\n      if (isFunction(value)) {\n        return this.each(function (i) {\n          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n        });\n      }\n\n      return this.each(function () {\n        var className, i, self, classNames;\n\n        if (isValidValue) {\n          // Toggle individual class names\n          i = 0;\n          self = jQuery(this);\n          classNames = classesToArray(value);\n\n          while (className = classNames[i++]) {\n            // Check each className given, space separated list\n            if (self.hasClass(className)) {\n              self.removeClass(className);\n            } else {\n              self.addClass(className);\n            }\n          } // Toggle whole class name\n\n        } else if (value === undefined || type === \"boolean\") {\n          className = getClass(this);\n\n          if (className) {\n            // Store className if set\n            dataPriv.set(this, \"__className__\", className);\n          } // If the element has a class name or if we're passed `false`,\n          // then remove the whole classname (if there was one, the above saved it).\n          // Otherwise bring back whatever was previously saved (if anything),\n          // falling back to the empty string if nothing was stored.\n\n\n          if (this.setAttribute) {\n            this.setAttribute(\"class\", className || value === false ? \"\" : dataPriv.get(this, \"__className__\") || \"\");\n          }\n        }\n      });\n    },\n    hasClass: function (selector) {\n      var className,\n          elem,\n          i = 0;\n      className = \" \" + selector + \" \";\n\n      while (elem = this[i++]) {\n        if (elem.nodeType === 1 && (\" \" + stripAndCollapse(getClass(elem)) + \" \").indexOf(className) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  });\n  var rreturn = /\\r/g;\n  jQuery.fn.extend({\n    val: function (value) {\n      var hooks,\n          ret,\n          valueIsFunction,\n          elem = this[0];\n\n      if (!arguments.length) {\n        if (elem) {\n          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n\n          if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n            return ret;\n          }\n\n          ret = elem.value; // Handle most common string cases\n\n          if (typeof ret === \"string\") {\n            return ret.replace(rreturn, \"\");\n          } // Handle cases where value is null/undef or number\n\n\n          return ret == null ? \"\" : ret;\n        }\n\n        return;\n      }\n\n      valueIsFunction = isFunction(value);\n      return this.each(function (i) {\n        var val;\n\n        if (this.nodeType !== 1) {\n          return;\n        }\n\n        if (valueIsFunction) {\n          val = value.call(this, i, jQuery(this).val());\n        } else {\n          val = value;\n        } // Treat null/undefined as \"\"; convert numbers to string\n\n\n        if (val == null) {\n          val = \"\";\n        } else if (typeof val === \"number\") {\n          val += \"\";\n        } else if (Array.isArray(val)) {\n          val = jQuery.map(val, function (value) {\n            return value == null ? \"\" : value + \"\";\n          });\n        }\n\n        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]; // If set returns undefined, fall back to normal setting\n\n        if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n          this.value = val;\n        }\n      });\n    }\n  });\n  jQuery.extend({\n    valHooks: {\n      option: {\n        get: function (elem) {\n          var val = jQuery.find.attr(elem, \"value\");\n          return val != null ? val : // Support: IE <=10 - 11 only\n          // option.text throws exceptions (#14686, #14858)\n          // Strip and collapse whitespace\n          // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n          stripAndCollapse(jQuery.text(elem));\n        }\n      },\n      select: {\n        get: function (elem) {\n          var value,\n              option,\n              i,\n              options = elem.options,\n              index = elem.selectedIndex,\n              one = elem.type === \"select-one\",\n              values = one ? null : [],\n              max = one ? index + 1 : options.length;\n\n          if (index < 0) {\n            i = max;\n          } else {\n            i = one ? index : 0;\n          } // Loop through all the selected options\n\n\n          for (; i < max; i++) {\n            option = options[i]; // Support: IE <=9 only\n            // IE8-9 doesn't update selected after form reset (#2551)\n\n            if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup\n            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, \"optgroup\"))) {\n              // Get the specific value for the option\n              value = jQuery(option).val(); // We don't need an array for one selects\n\n              if (one) {\n                return value;\n              } // Multi-Selects return an array\n\n\n              values.push(value);\n            }\n          }\n\n          return values;\n        },\n        set: function (elem, value) {\n          var optionSet,\n              option,\n              options = elem.options,\n              values = jQuery.makeArray(value),\n              i = options.length;\n\n          while (i--) {\n            option = options[i];\n            /* eslint-disable no-cond-assign */\n\n            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n              optionSet = true;\n            }\n            /* eslint-enable no-cond-assign */\n\n          } // Force browsers to behave consistently when non-matching value is set\n\n\n          if (!optionSet) {\n            elem.selectedIndex = -1;\n          }\n\n          return values;\n        }\n      }\n    }\n  }); // Radios and checkboxes getter/setter\n\n  jQuery.each([\"radio\", \"checkbox\"], function () {\n    jQuery.valHooks[this] = {\n      set: function (elem, value) {\n        if (Array.isArray(value)) {\n          return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n        }\n      }\n    };\n\n    if (!support.checkOn) {\n      jQuery.valHooks[this].get = function (elem) {\n        return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n      };\n    }\n  }); // Return jQuery for attributes-only inclusion\n\n  support.focusin = \"onfocusin\" in window;\n\n  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n      stopPropagationCallback = function (e) {\n    e.stopPropagation();\n  };\n\n  jQuery.extend(jQuery.event, {\n    trigger: function (event, data, elem, onlyHandlers) {\n      var i,\n          cur,\n          tmp,\n          bubbleType,\n          ontype,\n          handle,\n          special,\n          lastElement,\n          eventPath = [elem || document],\n          type = hasOwn.call(event, \"type\") ? event.type : event,\n          namespaces = hasOwn.call(event, \"namespace\") ? event.namespace.split(\".\") : [];\n      cur = lastElement = tmp = elem = elem || document; // Don't do events on text and comment nodes\n\n      if (elem.nodeType === 3 || elem.nodeType === 8) {\n        return;\n      } // focus/blur morphs to focusin/out; ensure we're not firing them right now\n\n\n      if (rfocusMorph.test(type + jQuery.event.triggered)) {\n        return;\n      }\n\n      if (type.indexOf(\".\") > -1) {\n        // Namespaced trigger; create a regexp to match event type in handle()\n        namespaces = type.split(\".\");\n        type = namespaces.shift();\n        namespaces.sort();\n      }\n\n      ontype = type.indexOf(\":\") < 0 && \"on\" + type; // Caller can pass in a jQuery.Event object, Object, or just an event type string\n\n      event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === \"object\" && event); // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\n      event.isTrigger = onlyHandlers ? 2 : 3;\n      event.namespace = namespaces.join(\".\");\n      event.rnamespace = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null; // Clean up the event in case it is being reused\n\n      event.result = undefined;\n\n      if (!event.target) {\n        event.target = elem;\n      } // Clone any incoming data and prepend the event, creating the handler arg list\n\n\n      data = data == null ? [event] : jQuery.makeArray(data, [event]); // Allow special events to draw outside the lines\n\n      special = jQuery.event.special[type] || {};\n\n      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n        return;\n      } // Determine event propagation path in advance, per W3C events spec (#9951)\n      // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\n\n      if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {\n        bubbleType = special.delegateType || type;\n\n        if (!rfocusMorph.test(bubbleType + type)) {\n          cur = cur.parentNode;\n        }\n\n        for (; cur; cur = cur.parentNode) {\n          eventPath.push(cur);\n          tmp = cur;\n        } // Only add window if we got to document (e.g., not plain obj or detached DOM)\n\n\n        if (tmp === (elem.ownerDocument || document)) {\n          eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n        }\n      } // Fire handlers on the event path\n\n\n      i = 0;\n\n      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n        lastElement = cur;\n        event.type = i > 1 ? bubbleType : special.bindType || type; // jQuery handler\n\n        handle = (dataPriv.get(cur, \"events\") || {})[event.type] && dataPriv.get(cur, \"handle\");\n\n        if (handle) {\n          handle.apply(cur, data);\n        } // Native handler\n\n\n        handle = ontype && cur[ontype];\n\n        if (handle && handle.apply && acceptData(cur)) {\n          event.result = handle.apply(cur, data);\n\n          if (event.result === false) {\n            event.preventDefault();\n          }\n        }\n      }\n\n      event.type = type; // If nobody prevented the default action, do it now\n\n      if (!onlyHandlers && !event.isDefaultPrevented()) {\n        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n          // Call a native DOM method on the target with the same name as the event.\n          // Don't do default actions on window, that's where global variables be (#6170)\n          if (ontype && isFunction(elem[type]) && !isWindow(elem)) {\n            // Don't re-trigger an onFOO event when we call its FOO() method\n            tmp = elem[ontype];\n\n            if (tmp) {\n              elem[ontype] = null;\n            } // Prevent re-triggering of the same event, since we already bubbled it above\n\n\n            jQuery.event.triggered = type;\n\n            if (event.isPropagationStopped()) {\n              lastElement.addEventListener(type, stopPropagationCallback);\n            }\n\n            elem[type]();\n\n            if (event.isPropagationStopped()) {\n              lastElement.removeEventListener(type, stopPropagationCallback);\n            }\n\n            jQuery.event.triggered = undefined;\n\n            if (tmp) {\n              elem[ontype] = tmp;\n            }\n          }\n        }\n      }\n\n      return event.result;\n    },\n    // Piggyback on a donor event to simulate a different one\n    // Used only for `focus(in | out)` events\n    simulate: function (type, elem, event) {\n      var e = jQuery.extend(new jQuery.Event(), event, {\n        type: type,\n        isSimulated: true\n      });\n      jQuery.event.trigger(e, null, elem);\n    }\n  });\n  jQuery.fn.extend({\n    trigger: function (type, data) {\n      return this.each(function () {\n        jQuery.event.trigger(type, data, this);\n      });\n    },\n    triggerHandler: function (type, data) {\n      var elem = this[0];\n\n      if (elem) {\n        return jQuery.event.trigger(type, data, elem, true);\n      }\n    }\n  }); // Support: Firefox <=44\n  // Firefox doesn't have focus(in | out) events\n  // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n  //\n  // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n  // focus(in | out) events fire after focus & blur events,\n  // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n  // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n\n  if (!support.focusin) {\n    jQuery.each({\n      focus: \"focusin\",\n      blur: \"focusout\"\n    }, function (orig, fix) {\n      // Attach a single capturing handler on the document while someone wants focusin/focusout\n      var handler = function (event) {\n        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));\n      };\n\n      jQuery.event.special[fix] = {\n        setup: function () {\n          var doc = this.ownerDocument || this,\n              attaches = dataPriv.access(doc, fix);\n\n          if (!attaches) {\n            doc.addEventListener(orig, handler, true);\n          }\n\n          dataPriv.access(doc, fix, (attaches || 0) + 1);\n        },\n        teardown: function () {\n          var doc = this.ownerDocument || this,\n              attaches = dataPriv.access(doc, fix) - 1;\n\n          if (!attaches) {\n            doc.removeEventListener(orig, handler, true);\n            dataPriv.remove(doc, fix);\n          } else {\n            dataPriv.access(doc, fix, attaches);\n          }\n        }\n      };\n    });\n  }\n\n  var location = window.location;\n  var nonce = Date.now();\n  var rquery = /\\?/; // Cross-browser xml parsing\n\n  jQuery.parseXML = function (data) {\n    var xml;\n\n    if (!data || typeof data !== \"string\") {\n      return null;\n    } // Support: IE 9 - 11 only\n    // IE throws on parseFromString with invalid input.\n\n\n    try {\n      xml = new window.DOMParser().parseFromString(data, \"text/xml\");\n    } catch (e) {\n      xml = undefined;\n    }\n\n    if (!xml || xml.getElementsByTagName(\"parsererror\").length) {\n      jQuery.error(\"Invalid XML: \" + data);\n    }\n\n    return xml;\n  };\n\n  var rbracket = /\\[\\]$/,\n      rCRLF = /\\r?\\n/g,\n      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n      rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\n  function buildParams(prefix, obj, traditional, add) {\n    var name;\n\n    if (Array.isArray(obj)) {\n      // Serialize array item.\n      jQuery.each(obj, function (i, v) {\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v);\n        } else {\n          // Item is non-scalar (array or object), encode its numeric index.\n          buildParams(prefix + \"[\" + (typeof v === \"object\" && v != null ? i : \"\") + \"]\", v, traditional, add);\n        }\n      });\n    } else if (!traditional && toType(obj) === \"object\") {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n      }\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj);\n    }\n  } // Serialize an array of form elements or a set of\n  // key/values into a query string\n\n\n  jQuery.param = function (a, traditional) {\n    var prefix,\n        s = [],\n        add = function (key, valueOrFunction) {\n      // If value is a function, invoke it and use its return value\n      var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n      s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value == null ? \"\" : value);\n    }; // If an array was passed in, assume that it is an array of form elements.\n\n\n    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n      // Serialize the form elements\n      jQuery.each(a, function () {\n        add(this.name, this.value);\n      });\n    } else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in a) {\n        buildParams(prefix, a[prefix], traditional, add);\n      }\n    } // Return the resulting serialization\n\n\n    return s.join(\"&\");\n  };\n\n  jQuery.fn.extend({\n    serialize: function () {\n      return jQuery.param(this.serializeArray());\n    },\n    serializeArray: function () {\n      return this.map(function () {\n        // Can add propHook for \"elements\" to filter or add form elements\n        var elements = jQuery.prop(this, \"elements\");\n        return elements ? jQuery.makeArray(elements) : this;\n      }).filter(function () {\n        var type = this.type; // Use .is( \":disabled\" ) so that fieldset[disabled] works\n\n        return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n      }).map(function (i, elem) {\n        var val = jQuery(this).val();\n\n        if (val == null) {\n          return null;\n        }\n\n        if (Array.isArray(val)) {\n          return jQuery.map(val, function (val) {\n            return {\n              name: elem.name,\n              value: val.replace(rCRLF, \"\\r\\n\")\n            };\n          });\n        }\n\n        return {\n          name: elem.name,\n          value: val.replace(rCRLF, \"\\r\\n\")\n        };\n      }).get();\n    }\n  });\n  var r20 = /%20/g,\n      rhash = /#.*$/,\n      rantiCache = /([?&])_=[^&]*/,\n      rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n      // #7653, #8125, #8152: local protocol detection\n  rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n      rnoContent = /^(?:GET|HEAD)$/,\n      rprotocol = /^\\/\\//,\n\n  /* Prefilters\n   * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n   * 2) These are called:\n   *    - BEFORE asking for a transport\n   *    - AFTER param serialization (s.data is a string if s.processData is true)\n   * 3) key is the dataType\n   * 4) the catchall symbol \"*\" can be used\n   * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n   */\n  prefilters = {},\n\n  /* Transports bindings\n   * 1) key is the dataType\n   * 2) the catchall symbol \"*\" can be used\n   * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n   */\n  transports = {},\n      // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n  allTypes = \"*/\".concat(\"*\"),\n      // Anchor tag for parsing the document origin\n  originAnchor = document.createElement(\"a\");\n  originAnchor.href = location.href; // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n\n  function addToPrefiltersOrTransports(structure) {\n    // dataTypeExpression is optional and defaults to \"*\"\n    return function (dataTypeExpression, func) {\n      if (typeof dataTypeExpression !== \"string\") {\n        func = dataTypeExpression;\n        dataTypeExpression = \"*\";\n      }\n\n      var dataType,\n          i = 0,\n          dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n\n      if (isFunction(func)) {\n        // For each dataType in the dataTypeExpression\n        while (dataType = dataTypes[i++]) {\n          // Prepend if requested\n          if (dataType[0] === \"+\") {\n            dataType = dataType.slice(1) || \"*\";\n            (structure[dataType] = structure[dataType] || []).unshift(func); // Otherwise append\n          } else {\n            (structure[dataType] = structure[dataType] || []).push(func);\n          }\n        }\n      }\n    };\n  } // Base inspection function for prefilters and transports\n\n\n  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n    var inspected = {},\n        seekingTransport = structure === transports;\n\n    function inspect(dataType) {\n      var selected;\n      inspected[dataType] = true;\n      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n\n        if (typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n          options.dataTypes.unshift(dataTypeOrTransport);\n          inspect(dataTypeOrTransport);\n          return false;\n        } else if (seekingTransport) {\n          return !(selected = dataTypeOrTransport);\n        }\n      });\n      return selected;\n    }\n\n    return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\n  } // A special extend for ajax options\n  // that takes \"flat\" options (not to be deep extended)\n  // Fixes #9887\n\n\n  function ajaxExtend(target, src) {\n    var key,\n        deep,\n        flatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n    for (key in src) {\n      if (src[key] !== undefined) {\n        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n      }\n    }\n\n    if (deep) {\n      jQuery.extend(true, target, deep);\n    }\n\n    return target;\n  }\n  /* Handles responses to an ajax request:\n   * - finds the right dataType (mediates between content-type and expected dataType)\n   * - returns the corresponding response\n   */\n\n\n  function ajaxHandleResponses(s, jqXHR, responses) {\n    var ct,\n        type,\n        finalDataType,\n        firstDataType,\n        contents = s.contents,\n        dataTypes = s.dataTypes; // Remove auto dataType and get content-type in the process\n\n    while (dataTypes[0] === \"*\") {\n      dataTypes.shift();\n\n      if (ct === undefined) {\n        ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n      }\n    } // Check if we're dealing with a known content-type\n\n\n    if (ct) {\n      for (type in contents) {\n        if (contents[type] && contents[type].test(ct)) {\n          dataTypes.unshift(type);\n          break;\n        }\n      }\n    } // Check to see if we have a response for the expected dataType\n\n\n    if (dataTypes[0] in responses) {\n      finalDataType = dataTypes[0];\n    } else {\n      // Try convertible dataTypes\n      for (type in responses) {\n        if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n          finalDataType = type;\n          break;\n        }\n\n        if (!firstDataType) {\n          firstDataType = type;\n        }\n      } // Or just use first one\n\n\n      finalDataType = finalDataType || firstDataType;\n    } // If we found a dataType\n    // We add the dataType to the list if needed\n    // and return the corresponding response\n\n\n    if (finalDataType) {\n      if (finalDataType !== dataTypes[0]) {\n        dataTypes.unshift(finalDataType);\n      }\n\n      return responses[finalDataType];\n    }\n  }\n  /* Chain conversions given the request and the original response\n   * Also sets the responseXXX fields on the jqXHR instance\n   */\n\n\n  function ajaxConvert(s, response, jqXHR, isSuccess) {\n    var conv2,\n        current,\n        conv,\n        tmp,\n        prev,\n        converters = {},\n        // Work with a copy of dataTypes in case we need to modify it for conversion\n    dataTypes = s.dataTypes.slice(); // Create converters map with lowercased keys\n\n    if (dataTypes[1]) {\n      for (conv in s.converters) {\n        converters[conv.toLowerCase()] = s.converters[conv];\n      }\n    }\n\n    current = dataTypes.shift(); // Convert to each sequential dataType\n\n    while (current) {\n      if (s.responseFields[current]) {\n        jqXHR[s.responseFields[current]] = response;\n      } // Apply the dataFilter if provided\n\n\n      if (!prev && isSuccess && s.dataFilter) {\n        response = s.dataFilter(response, s.dataType);\n      }\n\n      prev = current;\n      current = dataTypes.shift();\n\n      if (current) {\n        // There's only work to do if current dataType is non-auto\n        if (current === \"*\") {\n          current = prev; // Convert response if prev dataType is non-auto and differs from current\n        } else if (prev !== \"*\" && prev !== current) {\n          // Seek a direct converter\n          conv = converters[prev + \" \" + current] || converters[\"* \" + current]; // If none found, seek a pair\n\n          if (!conv) {\n            for (conv2 in converters) {\n              // If conv2 outputs current\n              tmp = conv2.split(\" \");\n\n              if (tmp[1] === current) {\n                // If prev can be converted to accepted input\n                conv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];\n\n                if (conv) {\n                  // Condense equivalence converters\n                  if (conv === true) {\n                    conv = converters[conv2]; // Otherwise, insert the intermediate dataType\n                  } else if (converters[conv2] !== true) {\n                    current = tmp[0];\n                    dataTypes.unshift(tmp[1]);\n                  }\n\n                  break;\n                }\n              }\n            }\n          } // Apply converter (if not an equivalence)\n\n\n          if (conv !== true) {\n            // Unless errors are allowed to bubble, catch and return them\n            if (conv && s.throws) {\n              response = conv(response);\n            } else {\n              try {\n                response = conv(response);\n              } catch (e) {\n                return {\n                  state: \"parsererror\",\n                  error: conv ? e : \"No conversion from \" + prev + \" to \" + current\n                };\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      state: \"success\",\n      data: response\n    };\n  }\n\n  jQuery.extend({\n    // Counter for holding the number of active queries\n    active: 0,\n    // Last-Modified header cache for next request\n    lastModified: {},\n    etag: {},\n    ajaxSettings: {\n      url: location.href,\n      type: \"GET\",\n      isLocal: rlocalProtocol.test(location.protocol),\n      global: true,\n      processData: true,\n      async: true,\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n      /*\n      timeout: 0,\n      data: null,\n      dataType: null,\n      username: null,\n      password: null,\n      cache: null,\n      throws: false,\n      traditional: false,\n      headers: {},\n      */\n      accepts: {\n        \"*\": allTypes,\n        text: \"text/plain\",\n        html: \"text/html\",\n        xml: \"application/xml, text/xml\",\n        json: \"application/json, text/javascript\"\n      },\n      contents: {\n        xml: /\\bxml\\b/,\n        html: /\\bhtml/,\n        json: /\\bjson\\b/\n      },\n      responseFields: {\n        xml: \"responseXML\",\n        text: \"responseText\",\n        json: \"responseJSON\"\n      },\n      // Data converters\n      // Keys separate source (or catchall \"*\") and destination types with a single space\n      converters: {\n        // Convert anything to text\n        \"* text\": String,\n        // Text to html (true = no transformation)\n        \"text html\": true,\n        // Evaluate text as a json expression\n        \"text json\": JSON.parse,\n        // Parse text as xml\n        \"text xml\": jQuery.parseXML\n      },\n      // For options that shouldn't be deep extended:\n      // you can add your own custom options here if\n      // and when you create one that shouldn't be\n      // deep extended (see ajaxExtend)\n      flatOptions: {\n        url: true,\n        context: true\n      }\n    },\n    // Creates a full fledged settings object into target\n    // with both ajaxSettings and settings fields.\n    // If target is omitted, writes into ajaxSettings.\n    ajaxSetup: function (target, settings) {\n      return settings ? // Building a settings object\n      ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings\n      ajaxExtend(jQuery.ajaxSettings, target);\n    },\n    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n    ajaxTransport: addToPrefiltersOrTransports(transports),\n    // Main method\n    ajax: function (url, options) {\n      // If url is an object, simulate pre-1.5 signature\n      if (typeof url === \"object\") {\n        options = url;\n        url = undefined;\n      } // Force options to be an object\n\n\n      options = options || {};\n      var transport,\n          // URL without anti-cache param\n      cacheURL,\n          // Response headers\n      responseHeadersString,\n          responseHeaders,\n          // timeout handle\n      timeoutTimer,\n          // Url cleanup var\n      urlAnchor,\n          // Request state (becomes false upon send and true upon completion)\n      completed,\n          // To know if global events are to be dispatched\n      fireGlobals,\n          // Loop variable\n      i,\n          // uncached part of the url\n      uncached,\n          // Create the final options object\n      s = jQuery.ajaxSetup({}, options),\n          // Callbacks context\n      callbackContext = s.context || s,\n          // Context for global events is callbackContext if it is a DOM node or jQuery collection\n      globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n          // Deferreds\n      deferred = jQuery.Deferred(),\n          completeDeferred = jQuery.Callbacks(\"once memory\"),\n          // Status-dependent callbacks\n      statusCode = s.statusCode || {},\n          // Headers (they are sent all at once)\n      requestHeaders = {},\n          requestHeadersNames = {},\n          // Default abort message\n      strAbort = \"canceled\",\n          // Fake xhr\n      jqXHR = {\n        readyState: 0,\n        // Builds headers hashtable if needed\n        getResponseHeader: function (key) {\n          var match;\n\n          if (completed) {\n            if (!responseHeaders) {\n              responseHeaders = {};\n\n              while (match = rheaders.exec(responseHeadersString)) {\n                responseHeaders[match[1].toLowerCase()] = match[2];\n              }\n            }\n\n            match = responseHeaders[key.toLowerCase()];\n          }\n\n          return match == null ? null : match;\n        },\n        // Raw string\n        getAllResponseHeaders: function () {\n          return completed ? responseHeadersString : null;\n        },\n        // Caches the header\n        setRequestHeader: function (name, value) {\n          if (completed == null) {\n            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n            requestHeaders[name] = value;\n          }\n\n          return this;\n        },\n        // Overrides response content-type header\n        overrideMimeType: function (type) {\n          if (completed == null) {\n            s.mimeType = type;\n          }\n\n          return this;\n        },\n        // Status-dependent callbacks\n        statusCode: function (map) {\n          var code;\n\n          if (map) {\n            if (completed) {\n              // Execute the appropriate callbacks\n              jqXHR.always(map[jqXHR.status]);\n            } else {\n              // Lazy-add the new callbacks in a way that preserves old ones\n              for (code in map) {\n                statusCode[code] = [statusCode[code], map[code]];\n              }\n            }\n          }\n\n          return this;\n        },\n        // Cancel the request\n        abort: function (statusText) {\n          var finalText = statusText || strAbort;\n\n          if (transport) {\n            transport.abort(finalText);\n          }\n\n          done(0, finalText);\n          return this;\n        }\n      }; // Attach deferreds\n\n      deferred.promise(jqXHR); // Add protocol if not provided (prefilters might expect it)\n      // Handle falsy url in the settings object (#10093: consistency with old signature)\n      // We also use the url parameter if available\n\n      s.url = ((url || s.url || location.href) + \"\").replace(rprotocol, location.protocol + \"//\"); // Alias method option to type as per ticket #12004\n\n      s.type = options.method || options.type || s.method || s.type; // Extract dataTypes list\n\n      s.dataTypes = (s.dataType || \"*\").toLowerCase().match(rnothtmlwhite) || [\"\"]; // A cross-domain request is in order when the origin doesn't match the current origin.\n\n      if (s.crossDomain == null) {\n        urlAnchor = document.createElement(\"a\"); // Support: IE <=8 - 11, Edge 12 - 15\n        // IE throws exception on accessing the href property if url is malformed,\n        // e.g. http://example.com:80x/\n\n        try {\n          urlAnchor.href = s.url; // Support: IE <=8 - 11 only\n          // Anchor's host property isn't correctly set when s.url is relative\n\n          urlAnchor.href = urlAnchor.href;\n          s.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !== urlAnchor.protocol + \"//\" + urlAnchor.host;\n        } catch (e) {\n          // If there is an error parsing the URL, assume it is crossDomain,\n          // it can be rejected by the transport if it is invalid\n          s.crossDomain = true;\n        }\n      } // Convert data if not already a string\n\n\n      if (s.data && s.processData && typeof s.data !== \"string\") {\n        s.data = jQuery.param(s.data, s.traditional);\n      } // Apply prefilters\n\n\n      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR); // If request was aborted inside a prefilter, stop there\n\n      if (completed) {\n        return jqXHR;\n      } // We can fire global events as of now if asked to\n      // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\n\n      fireGlobals = jQuery.event && s.global; // Watch for a new set of requests\n\n      if (fireGlobals && jQuery.active++ === 0) {\n        jQuery.event.trigger(\"ajaxStart\");\n      } // Uppercase the type\n\n\n      s.type = s.type.toUpperCase(); // Determine if request has content\n\n      s.hasContent = !rnoContent.test(s.type); // Save the URL in case we're toying with the If-Modified-Since\n      // and/or If-None-Match header later on\n      // Remove hash to simplify url manipulation\n\n      cacheURL = s.url.replace(rhash, \"\"); // More options handling for requests with no content\n\n      if (!s.hasContent) {\n        // Remember the hash so we can put it back\n        uncached = s.url.slice(cacheURL.length); // If data is available and should be processed, append data to url\n\n        if (s.data && (s.processData || typeof s.data === \"string\")) {\n          cacheURL += (rquery.test(cacheURL) ? \"&\" : \"?\") + s.data; // #9682: remove data so that it's not used in an eventual retry\n\n          delete s.data;\n        } // Add or update anti-cache param if needed\n\n\n        if (s.cache === false) {\n          cacheURL = cacheURL.replace(rantiCache, \"$1\");\n          uncached = (rquery.test(cacheURL) ? \"&\" : \"?\") + \"_=\" + nonce++ + uncached;\n        } // Put hash and anti-cache on the URL that will be requested (gh-1732)\n\n\n        s.url = cacheURL + uncached; // Change '%20' to '+' if this is encoded form body content (gh-2658)\n      } else if (s.data && s.processData && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0) {\n        s.data = s.data.replace(r20, \"+\");\n      } // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\n\n      if (s.ifModified) {\n        if (jQuery.lastModified[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[cacheURL]);\n        }\n\n        if (jQuery.etag[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[cacheURL]);\n        }\n      } // Set the correct header, if data is being sent\n\n\n      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n        jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n      } // Set the Accepts header for the server, depending on the dataType\n\n\n      jqXHR.setRequestHeader(\"Accept\", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") : s.accepts[\"*\"]); // Check for headers option\n\n      for (i in s.headers) {\n        jqXHR.setRequestHeader(i, s.headers[i]);\n      } // Allow custom headers/mimetypes and early abort\n\n\n      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {\n        // Abort if not done already and return\n        return jqXHR.abort();\n      } // Aborting is no longer a cancellation\n\n\n      strAbort = \"abort\"; // Install callbacks on deferreds\n\n      completeDeferred.add(s.complete);\n      jqXHR.done(s.success);\n      jqXHR.fail(s.error); // Get transport\n\n      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR); // If no transport, we auto-abort\n\n      if (!transport) {\n        done(-1, \"No Transport\");\n      } else {\n        jqXHR.readyState = 1; // Send global event\n\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n        } // If request was aborted inside ajaxSend, stop there\n\n\n        if (completed) {\n          return jqXHR;\n        } // Timeout\n\n\n        if (s.async && s.timeout > 0) {\n          timeoutTimer = window.setTimeout(function () {\n            jqXHR.abort(\"timeout\");\n          }, s.timeout);\n        }\n\n        try {\n          completed = false;\n          transport.send(requestHeaders, done);\n        } catch (e) {\n          // Rethrow post-completion exceptions\n          if (completed) {\n            throw e;\n          } // Propagate others as results\n\n\n          done(-1, e);\n        }\n      } // Callback for when everything is done\n\n\n      function done(status, nativeStatusText, responses, headers) {\n        var isSuccess,\n            success,\n            error,\n            response,\n            modified,\n            statusText = nativeStatusText; // Ignore repeat invocations\n\n        if (completed) {\n          return;\n        }\n\n        completed = true; // Clear timeout if it exists\n\n        if (timeoutTimer) {\n          window.clearTimeout(timeoutTimer);\n        } // Dereference transport for early garbage collection\n        // (no matter how long the jqXHR object will be used)\n\n\n        transport = undefined; // Cache response headers\n\n        responseHeadersString = headers || \"\"; // Set readyState\n\n        jqXHR.readyState = status > 0 ? 4 : 0; // Determine if successful\n\n        isSuccess = status >= 200 && status < 300 || status === 304; // Get response data\n\n        if (responses) {\n          response = ajaxHandleResponses(s, jqXHR, responses);\n        } // Convert no matter what (that way responseXXX fields are always set)\n\n\n        response = ajaxConvert(s, response, jqXHR, isSuccess); // If successful, handle type chaining\n\n        if (isSuccess) {\n          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n          if (s.ifModified) {\n            modified = jqXHR.getResponseHeader(\"Last-Modified\");\n\n            if (modified) {\n              jQuery.lastModified[cacheURL] = modified;\n            }\n\n            modified = jqXHR.getResponseHeader(\"etag\");\n\n            if (modified) {\n              jQuery.etag[cacheURL] = modified;\n            }\n          } // if no content\n\n\n          if (status === 204 || s.type === \"HEAD\") {\n            statusText = \"nocontent\"; // if not modified\n          } else if (status === 304) {\n            statusText = \"notmodified\"; // If we have data, let's convert it\n          } else {\n            statusText = response.state;\n            success = response.data;\n            error = response.error;\n            isSuccess = !error;\n          }\n        } else {\n          // Extract error from statusText and normalize for non-aborts\n          error = statusText;\n\n          if (status || !statusText) {\n            statusText = \"error\";\n\n            if (status < 0) {\n              status = 0;\n            }\n          }\n        } // Set data for the fake xhr object\n\n\n        jqXHR.status = status;\n        jqXHR.statusText = (nativeStatusText || statusText) + \"\"; // Success/Error\n\n        if (isSuccess) {\n          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n        } else {\n          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n        } // Status-dependent callbacks\n\n\n        jqXHR.statusCode(statusCode);\n        statusCode = undefined;\n\n        if (fireGlobals) {\n          globalEventContext.trigger(isSuccess ? \"ajaxSuccess\" : \"ajaxError\", [jqXHR, s, isSuccess ? success : error]);\n        } // Complete\n\n\n        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]); // Handle the global AJAX counter\n\n          if (! --jQuery.active) {\n            jQuery.event.trigger(\"ajaxStop\");\n          }\n        }\n      }\n\n      return jqXHR;\n    },\n    getJSON: function (url, data, callback) {\n      return jQuery.get(url, data, callback, \"json\");\n    },\n    getScript: function (url, callback) {\n      return jQuery.get(url, undefined, callback, \"script\");\n    }\n  });\n  jQuery.each([\"get\", \"post\"], function (i, method) {\n    jQuery[method] = function (url, data, callback, type) {\n      // Shift arguments if data argument was omitted\n      if (isFunction(data)) {\n        type = type || callback;\n        callback = data;\n        data = undefined;\n      } // The url can be an options object (which then must have .url)\n\n\n      return jQuery.ajax(jQuery.extend({\n        url: url,\n        type: method,\n        dataType: type,\n        data: data,\n        success: callback\n      }, jQuery.isPlainObject(url) && url));\n    };\n  });\n\n  jQuery._evalUrl = function (url) {\n    return jQuery.ajax({\n      url: url,\n      // Make this explicit, since user can override this through ajaxSetup (#11264)\n      type: \"GET\",\n      dataType: \"script\",\n      cache: true,\n      async: false,\n      global: false,\n      \"throws\": true\n    });\n  };\n\n  jQuery.fn.extend({\n    wrapAll: function (html) {\n      var wrap;\n\n      if (this[0]) {\n        if (isFunction(html)) {\n          html = html.call(this[0]);\n        } // The elements to wrap the target around\n\n\n        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n\n        if (this[0].parentNode) {\n          wrap.insertBefore(this[0]);\n        }\n\n        wrap.map(function () {\n          var elem = this;\n\n          while (elem.firstElementChild) {\n            elem = elem.firstElementChild;\n          }\n\n          return elem;\n        }).append(this);\n      }\n\n      return this;\n    },\n    wrapInner: function (html) {\n      if (isFunction(html)) {\n        return this.each(function (i) {\n          jQuery(this).wrapInner(html.call(this, i));\n        });\n      }\n\n      return this.each(function () {\n        var self = jQuery(this),\n            contents = self.contents();\n\n        if (contents.length) {\n          contents.wrapAll(html);\n        } else {\n          self.append(html);\n        }\n      });\n    },\n    wrap: function (html) {\n      var htmlIsFunction = isFunction(html);\n      return this.each(function (i) {\n        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);\n      });\n    },\n    unwrap: function (selector) {\n      this.parent(selector).not(\"body\").each(function () {\n        jQuery(this).replaceWith(this.childNodes);\n      });\n      return this;\n    }\n  });\n\n  jQuery.expr.pseudos.hidden = function (elem) {\n    return !jQuery.expr.pseudos.visible(elem);\n  };\n\n  jQuery.expr.pseudos.visible = function (elem) {\n    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n  };\n\n  jQuery.ajaxSettings.xhr = function () {\n    try {\n      return new window.XMLHttpRequest();\n    } catch (e) {}\n  };\n\n  var xhrSuccessStatus = {\n    // File protocol always yields status code 0, assume 200\n    0: 200,\n    // Support: IE <=9 only\n    // #1450: sometimes IE returns 1223 when it should be 204\n    1223: 204\n  },\n      xhrSupported = jQuery.ajaxSettings.xhr();\n  support.cors = !!xhrSupported && \"withCredentials\" in xhrSupported;\n  support.ajax = xhrSupported = !!xhrSupported;\n  jQuery.ajaxTransport(function (options) {\n    var callback, errorCallback; // Cross domain only allowed if supported through XMLHttpRequest\n\n    if (support.cors || xhrSupported && !options.crossDomain) {\n      return {\n        send: function (headers, complete) {\n          var i,\n              xhr = options.xhr();\n          xhr.open(options.type, options.url, options.async, options.username, options.password); // Apply custom fields if provided\n\n          if (options.xhrFields) {\n            for (i in options.xhrFields) {\n              xhr[i] = options.xhrFields[i];\n            }\n          } // Override mime type if needed\n\n\n          if (options.mimeType && xhr.overrideMimeType) {\n            xhr.overrideMimeType(options.mimeType);\n          } // X-Requested-With header\n          // For cross-domain requests, seeing as conditions for a preflight are\n          // akin to a jigsaw puzzle, we simply never set it to be sure.\n          // (it can always be set on a per-request basis or even using ajaxSetup)\n          // For same-domain requests, won't change header if already provided.\n\n\n          if (!options.crossDomain && !headers[\"X-Requested-With\"]) {\n            headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n          } // Set headers\n\n\n          for (i in headers) {\n            xhr.setRequestHeader(i, headers[i]);\n          } // Callback\n\n\n          callback = function (type) {\n            return function () {\n              if (callback) {\n                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;\n\n                if (type === \"abort\") {\n                  xhr.abort();\n                } else if (type === \"error\") {\n                  // Support: IE <=9 only\n                  // On a manual native abort, IE9 throws\n                  // errors on any property access that is not readyState\n                  if (typeof xhr.status !== \"number\") {\n                    complete(0, \"error\");\n                  } else {\n                    complete( // File: protocol always yields status 0; see #8605, #14207\n                    xhr.status, xhr.statusText);\n                  }\n                } else {\n                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only\n                  // IE9 has no XHR2 but throws on binary (trac-11426)\n                  // For XHR2 non-text, let the caller handle it (gh-2498)\n                  (xhr.responseType || \"text\") !== \"text\" || typeof xhr.responseText !== \"string\" ? {\n                    binary: xhr.response\n                  } : {\n                    text: xhr.responseText\n                  }, xhr.getAllResponseHeaders());\n                }\n              }\n            };\n          }; // Listen to events\n\n\n          xhr.onload = callback();\n          errorCallback = xhr.onerror = xhr.ontimeout = callback(\"error\"); // Support: IE 9 only\n          // Use onreadystatechange to replace onabort\n          // to handle uncaught aborts\n\n          if (xhr.onabort !== undefined) {\n            xhr.onabort = errorCallback;\n          } else {\n            xhr.onreadystatechange = function () {\n              // Check readyState before timeout as it changes\n              if (xhr.readyState === 4) {\n                // Allow onerror to be called first,\n                // but that will not handle a native abort\n                // Also, save errorCallback to a variable\n                // as xhr.onerror cannot be accessed\n                window.setTimeout(function () {\n                  if (callback) {\n                    errorCallback();\n                  }\n                });\n              }\n            };\n          } // Create the abort callback\n\n\n          callback = callback(\"abort\");\n\n          try {\n            // Do send the request (this may raise an exception)\n            xhr.send(options.hasContent && options.data || null);\n          } catch (e) {\n            // #14683: Only rethrow if this hasn't been notified as an error yet\n            if (callback) {\n              throw e;\n            }\n          }\n        },\n        abort: function () {\n          if (callback) {\n            callback();\n          }\n        }\n      };\n    }\n  }); // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n\n  jQuery.ajaxPrefilter(function (s) {\n    if (s.crossDomain) {\n      s.contents.script = false;\n    }\n  }); // Install script dataType\n\n  jQuery.ajaxSetup({\n    accepts: {\n      script: \"text/javascript, application/javascript, \" + \"application/ecmascript, application/x-ecmascript\"\n    },\n    contents: {\n      script: /\\b(?:java|ecma)script\\b/\n    },\n    converters: {\n      \"text script\": function (text) {\n        jQuery.globalEval(text);\n        return text;\n      }\n    }\n  }); // Handle cache's special case and crossDomain\n\n  jQuery.ajaxPrefilter(\"script\", function (s) {\n    if (s.cache === undefined) {\n      s.cache = false;\n    }\n\n    if (s.crossDomain) {\n      s.type = \"GET\";\n    }\n  }); // Bind script tag hack transport\n\n  jQuery.ajaxTransport(\"script\", function (s) {\n    // This transport only deals with cross domain requests\n    if (s.crossDomain) {\n      var script, callback;\n      return {\n        send: function (_, complete) {\n          script = jQuery(\"<script>\").prop({\n            charset: s.scriptCharset,\n            src: s.url\n          }).on(\"load error\", callback = function (evt) {\n            script.remove();\n            callback = null;\n\n            if (evt) {\n              complete(evt.type === \"error\" ? 404 : 200, evt.type);\n            }\n          }); // Use native DOM manipulation to avoid our domManip AJAX trickery\n\n          document.head.appendChild(script[0]);\n        },\n        abort: function () {\n          if (callback) {\n            callback();\n          }\n        }\n      };\n    }\n  });\n  var oldCallbacks = [],\n      rjsonp = /(=)\\?(?=&|$)|\\?\\?/; // Default jsonp settings\n\n  jQuery.ajaxSetup({\n    jsonp: \"callback\",\n    jsonpCallback: function () {\n      var callback = oldCallbacks.pop() || jQuery.expando + \"_\" + nonce++;\n      this[callback] = true;\n      return callback;\n    }\n  }); // Detect, normalize options and install callbacks for jsonp requests\n\n  jQuery.ajaxPrefilter(\"json jsonp\", function (s, originalSettings, jqXHR) {\n    var callbackName,\n        overwritten,\n        responseContainer,\n        jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? \"url\" : typeof s.data === \"string\" && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0 && rjsonp.test(s.data) && \"data\"); // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\n    if (jsonProp || s.dataTypes[0] === \"jsonp\") {\n      // Get callback name, remembering preexisting value associated with it\n      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback; // Insert callback into url or form data\n\n      if (jsonProp) {\n        s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName);\n      } else if (s.jsonp !== false) {\n        s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.jsonp + \"=\" + callbackName;\n      } // Use data converter to retrieve json after script execution\n\n\n      s.converters[\"script json\"] = function () {\n        if (!responseContainer) {\n          jQuery.error(callbackName + \" was not called\");\n        }\n\n        return responseContainer[0];\n      }; // Force json dataType\n\n\n      s.dataTypes[0] = \"json\"; // Install callback\n\n      overwritten = window[callbackName];\n\n      window[callbackName] = function () {\n        responseContainer = arguments;\n      }; // Clean-up function (fires after converters)\n\n\n      jqXHR.always(function () {\n        // If previous value didn't exist - remove it\n        if (overwritten === undefined) {\n          jQuery(window).removeProp(callbackName); // Otherwise restore preexisting value\n        } else {\n          window[callbackName] = overwritten;\n        } // Save back as free\n\n\n        if (s[callbackName]) {\n          // Make sure that re-using the options doesn't screw things around\n          s.jsonpCallback = originalSettings.jsonpCallback; // Save the callback name for future use\n\n          oldCallbacks.push(callbackName);\n        } // Call if it was a function and we have a response\n\n\n        if (responseContainer && isFunction(overwritten)) {\n          overwritten(responseContainer[0]);\n        }\n\n        responseContainer = overwritten = undefined;\n      }); // Delegate to script\n\n      return \"script\";\n    }\n  }); // Support: Safari 8 only\n  // In Safari 8 documents created via document.implementation.createHTMLDocument\n  // collapse sibling forms: the second one becomes a child of the first one.\n  // Because of that, this security measure has to be disabled in Safari 8.\n  // https://bugs.webkit.org/show_bug.cgi?id=137337\n\n  support.createHTMLDocument = function () {\n    var body = document.implementation.createHTMLDocument(\"\").body;\n    body.innerHTML = \"<form></form><form></form>\";\n    return body.childNodes.length === 2;\n  }(); // Argument \"data\" should be string of html\n  // context (optional): If specified, the fragment will be created in this context,\n  // defaults to document\n  // keepScripts (optional): If true, will include scripts passed in the html string\n\n\n  jQuery.parseHTML = function (data, context, keepScripts) {\n    if (typeof data !== \"string\") {\n      return [];\n    }\n\n    if (typeof context === \"boolean\") {\n      keepScripts = context;\n      context = false;\n    }\n\n    var base, parsed, scripts;\n\n    if (!context) {\n      // Stop scripts or inline event handlers from being executed immediately\n      // by using document.implementation\n      if (support.createHTMLDocument) {\n        context = document.implementation.createHTMLDocument(\"\"); // Set the base href for the created document\n        // so any parsed elements with URLs\n        // are based on the document's URL (gh-2965)\n\n        base = context.createElement(\"base\");\n        base.href = document.location.href;\n        context.head.appendChild(base);\n      } else {\n        context = document;\n      }\n    }\n\n    parsed = rsingleTag.exec(data);\n    scripts = !keepScripts && []; // Single tag\n\n    if (parsed) {\n      return [context.createElement(parsed[1])];\n    }\n\n    parsed = buildFragment([data], context, scripts);\n\n    if (scripts && scripts.length) {\n      jQuery(scripts).remove();\n    }\n\n    return jQuery.merge([], parsed.childNodes);\n  };\n  /**\n   * Load a url into a page\n   */\n\n\n  jQuery.fn.load = function (url, params, callback) {\n    var selector,\n        type,\n        response,\n        self = this,\n        off = url.indexOf(\" \");\n\n    if (off > -1) {\n      selector = stripAndCollapse(url.slice(off));\n      url = url.slice(0, off);\n    } // If it's a function\n\n\n    if (isFunction(params)) {\n      // We assume that it's the callback\n      callback = params;\n      params = undefined; // Otherwise, build a param string\n    } else if (params && typeof params === \"object\") {\n      type = \"POST\";\n    } // If we have elements to modify, make the request\n\n\n    if (self.length > 0) {\n      jQuery.ajax({\n        url: url,\n        // If \"type\" variable is undefined, then \"GET\" method will be used.\n        // Make value of this field explicit since\n        // user can override it through ajaxSetup method\n        type: type || \"GET\",\n        dataType: \"html\",\n        data: params\n      }).done(function (responseText) {\n        // Save response for use in complete callback\n        response = arguments;\n        self.html(selector ? // If a selector was specified, locate the right elements in a dummy div\n        // Exclude scripts to avoid IE 'Permission Denied' errors\n        jQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result\n        responseText); // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n        // but they are ignored because response was set above.\n        // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n      }).always(callback && function (jqXHR, status) {\n        self.each(function () {\n          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);\n        });\n      });\n    }\n\n    return this;\n  }; // Attach a bunch of functions for handling common AJAX events\n\n\n  jQuery.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function (i, type) {\n    jQuery.fn[type] = function (fn) {\n      return this.on(type, fn);\n    };\n  });\n\n  jQuery.expr.pseudos.animated = function (elem) {\n    return jQuery.grep(jQuery.timers, function (fn) {\n      return elem === fn.elem;\n    }).length;\n  };\n\n  jQuery.offset = {\n    setOffset: function (elem, options, i) {\n      var curPosition,\n          curLeft,\n          curCSSTop,\n          curTop,\n          curOffset,\n          curCSSLeft,\n          calculatePosition,\n          position = jQuery.css(elem, \"position\"),\n          curElem = jQuery(elem),\n          props = {}; // Set position first, in-case top/left are set even on static elem\n\n      if (position === \"static\") {\n        elem.style.position = \"relative\";\n      }\n\n      curOffset = curElem.offset();\n      curCSSTop = jQuery.css(elem, \"top\");\n      curCSSLeft = jQuery.css(elem, \"left\");\n      calculatePosition = (position === \"absolute\" || position === \"fixed\") && (curCSSTop + curCSSLeft).indexOf(\"auto\") > -1; // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n\n      if (calculatePosition) {\n        curPosition = curElem.position();\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (isFunction(options)) {\n        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n        options = options.call(elem, i, jQuery.extend({}, curOffset));\n      }\n\n      if (options.top != null) {\n        props.top = options.top - curOffset.top + curTop;\n      }\n\n      if (options.left != null) {\n        props.left = options.left - curOffset.left + curLeft;\n      }\n\n      if (\"using\" in options) {\n        options.using.call(elem, props);\n      } else {\n        curElem.css(props);\n      }\n    }\n  };\n  jQuery.fn.extend({\n    // offset() relates an element's border box to the document origin\n    offset: function (options) {\n      // Preserve chaining for setter\n      if (arguments.length) {\n        return options === undefined ? this : this.each(function (i) {\n          jQuery.offset.setOffset(this, options, i);\n        });\n      }\n\n      var rect,\n          win,\n          elem = this[0];\n\n      if (!elem) {\n        return;\n      } // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n      // Support: IE <=11 only\n      // Running getBoundingClientRect on a\n      // disconnected node in IE throws an error\n\n\n      if (!elem.getClientRects().length) {\n        return {\n          top: 0,\n          left: 0\n        };\n      } // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\n\n      rect = elem.getBoundingClientRect();\n      win = elem.ownerDocument.defaultView;\n      return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n      };\n    },\n    // position() relates an element's margin box to its offset parent's padding box\n    // This corresponds to the behavior of CSS absolute positioning\n    position: function () {\n      if (!this[0]) {\n        return;\n      }\n\n      var offsetParent,\n          offset,\n          doc,\n          elem = this[0],\n          parentOffset = {\n        top: 0,\n        left: 0\n      }; // position:fixed elements are offset from the viewport, which itself always has zero offset\n\n      if (jQuery.css(elem, \"position\") === \"fixed\") {\n        // Assume position:fixed implies availability of getBoundingClientRect\n        offset = elem.getBoundingClientRect();\n      } else {\n        offset = this.offset(); // Account for the *real* offset parent, which can be the document or its root element\n        // when a statically positioned element is identified\n\n        doc = elem.ownerDocument;\n        offsetParent = elem.offsetParent || doc.documentElement;\n\n        while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.parentNode;\n        }\n\n        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {\n          // Incorporate borders into its offset, since they are outside its content origin\n          parentOffset = jQuery(offsetParent).offset();\n          parentOffset.top += jQuery.css(offsetParent, \"borderTopWidth\", true);\n          parentOffset.left += jQuery.css(offsetParent, \"borderLeftWidth\", true);\n        }\n      } // Subtract parent offsets and element margins\n\n\n      return {\n        top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true),\n        left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true)\n      };\n    },\n    // This method will return documentElement in the following cases:\n    // 1) For the element inside the iframe without offsetParent, this method will return\n    //    documentElement of the parent window\n    // 2) For the hidden or detached element\n    // 3) For body or html element, i.e. in case of the html node - it will return itself\n    //\n    // but those exceptions were never presented as a real life use-cases\n    // and might be considered as more preferable results.\n    //\n    // This logic, however, is not guaranteed and can change at any point in the future\n    offsetParent: function () {\n      return this.map(function () {\n        var offsetParent = this.offsetParent;\n\n        while (offsetParent && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.offsetParent;\n        }\n\n        return offsetParent || documentElement;\n      });\n    }\n  }); // Create scrollLeft and scrollTop methods\n\n  jQuery.each({\n    scrollLeft: \"pageXOffset\",\n    scrollTop: \"pageYOffset\"\n  }, function (method, prop) {\n    var top = \"pageYOffset\" === prop;\n\n    jQuery.fn[method] = function (val) {\n      return access(this, function (elem, method, val) {\n        // Coalesce documents and windows\n        var win;\n\n        if (isWindow(elem)) {\n          win = elem;\n        } else if (elem.nodeType === 9) {\n          win = elem.defaultView;\n        }\n\n        if (val === undefined) {\n          return win ? win[prop] : elem[method];\n        }\n\n        if (win) {\n          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n        } else {\n          elem[method] = val;\n        }\n      }, method, val, arguments.length);\n    };\n  }); // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n  // Add the top/left cssHooks using jQuery.fn.position\n  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n  // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n  // getComputedStyle returns percent when specified for top/left/bottom/right;\n  // rather than make the css module depend on the offset module, just check for it here\n\n  jQuery.each([\"top\", \"left\"], function (i, prop) {\n    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n      if (computed) {\n        computed = curCSS(elem, prop); // If curCSS returns percentage, fallback to offset\n\n        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + \"px\" : computed;\n      }\n    });\n  }); // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n\n  jQuery.each({\n    Height: \"height\",\n    Width: \"width\"\n  }, function (name, type) {\n    jQuery.each({\n      padding: \"inner\" + name,\n      content: type,\n      \"\": \"outer\" + name\n    }, function (defaultExtra, funcName) {\n      // Margin is only for outerHeight, outerWidth\n      jQuery.fn[funcName] = function (margin, value) {\n        var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"),\n            extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\");\n        return access(this, function (elem, type, value) {\n          var doc;\n\n          if (isWindow(elem)) {\n            // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n            return funcName.indexOf(\"outer\") === 0 ? elem[\"inner\" + name] : elem.document.documentElement[\"client\" + name];\n          } // Get document width or height\n\n\n          if (elem.nodeType === 9) {\n            doc = elem.documentElement; // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n            // whichever is greatest\n\n            return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]);\n          }\n\n          return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat\n          jQuery.css(elem, type, extra) : // Set width or height on the element\n          jQuery.style(elem, type, value, extra);\n        }, type, chainable ? margin : undefined, chainable);\n      };\n    });\n  });\n  jQuery.each((\"blur focus focusin focusout resize scroll click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup contextmenu\").split(\" \"), function (i, name) {\n    // Handle event binding\n    jQuery.fn[name] = function (data, fn) {\n      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n    };\n  });\n  jQuery.fn.extend({\n    hover: function (fnOver, fnOut) {\n      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n    }\n  });\n  jQuery.fn.extend({\n    bind: function (types, data, fn) {\n      return this.on(types, null, data, fn);\n    },\n    unbind: function (types, fn) {\n      return this.off(types, null, fn);\n    },\n    delegate: function (selector, types, data, fn) {\n      return this.on(types, selector, data, fn);\n    },\n    undelegate: function (selector, types, fn) {\n      // ( namespace ) or ( selector, types [, fn] )\n      return arguments.length === 1 ? this.off(selector, \"**\") : this.off(types, selector || \"**\", fn);\n    }\n  }); // Bind a function to a context, optionally partially applying any\n  // arguments.\n  // jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n  // However, it is not slated for removal any time soon\n\n  jQuery.proxy = function (fn, context) {\n    var tmp, args, proxy;\n\n    if (typeof context === \"string\") {\n      tmp = fn[context];\n      context = fn;\n      fn = tmp;\n    } // Quick check to determine if target is callable, in the spec\n    // this throws a TypeError, but we will just return undefined.\n\n\n    if (!isFunction(fn)) {\n      return undefined;\n    } // Simulated bind\n\n\n    args = slice.call(arguments, 2);\n\n    proxy = function () {\n      return fn.apply(context || this, args.concat(slice.call(arguments)));\n    }; // Set the guid of unique handler to the same of original handler, so it can be removed\n\n\n    proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n    return proxy;\n  };\n\n  jQuery.holdReady = function (hold) {\n    if (hold) {\n      jQuery.readyWait++;\n    } else {\n      jQuery.ready(true);\n    }\n  };\n\n  jQuery.isArray = Array.isArray;\n  jQuery.parseJSON = JSON.parse;\n  jQuery.nodeName = nodeName;\n  jQuery.isFunction = isFunction;\n  jQuery.isWindow = isWindow;\n  jQuery.camelCase = camelCase;\n  jQuery.type = toType;\n  jQuery.now = Date.now;\n\n  jQuery.isNumeric = function (obj) {\n    // As of jQuery 3.0, isNumeric is limited to\n    // strings and numbers (primitives or objects)\n    // that can be coerced to finite numbers (gh-2662)\n    var type = jQuery.type(obj);\n    return (type === \"number\" || type === \"string\") && // parseFloat NaNs numeric-cast false positives (\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    !isNaN(obj - parseFloat(obj));\n  }; // Register as a named AMD module, since jQuery can be concatenated with other\n  // files that may use define, but not via a proper concatenation script that\n  // understands anonymous AMD modules. A named AMD is safest and most robust\n  // way to register. Lowercase jquery is used because AMD module names are\n  // derived from file names, and jQuery is normally delivered in a lowercase\n  // file name. Do this after creating the global so that if an AMD module wants\n  // to call noConflict to hide this version of jQuery, it will work.\n  // Note that for maximum portability, libraries that are not jQuery should\n  // declare themselves as anonymous modules, and avoid setting a global if an\n  // AMD loader is present. jQuery is a special case. For more information, see\n  // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return jQuery;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n\n  var // Map over jQuery in case of overwrite\n  _jQuery = window.jQuery,\n      // Map over the $ in case of overwrite\n  _$ = window.$;\n\n  jQuery.noConflict = function (deep) {\n    if (window.$ === jQuery) {\n      window.$ = _$;\n    }\n\n    if (deep && window.jQuery === jQuery) {\n      window.jQuery = _jQuery;\n    }\n\n    return jQuery;\n  }; // Expose jQuery and $ identifiers, even in AMD\n  // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n  // and CommonJS for browser emulators (#13566)\n\n\n  if (!noGlobal) {\n    window.jQuery = window.$ = jQuery;\n  }\n\n  return jQuery;\n});\n\n//# sourceURL=webpack:///./node_modules/jquery/dist/jquery.js?");

/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/process/browser.js":
/*!************************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/process/browser.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};\n\n//# sourceURL=webpack:///./node_modules/node-libs-browser/node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n  \"use strict\";\n\n  if (global.setImmediate) {\n    return;\n  }\n\n  var nextHandle = 1; // Spec says greater than zero\n\n  var tasksByHandle = {};\n  var currentlyRunningATask = false;\n  var doc = global.document;\n  var registerImmediate;\n\n  function setImmediate(callback) {\n    // Callback can either be a function or a string\n    if (typeof callback !== \"function\") {\n      callback = new Function(\"\" + callback);\n    } // Copy function arguments\n\n\n    var args = new Array(arguments.length - 1);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 1];\n    } // Store and register the task\n\n\n    var task = {\n      callback: callback,\n      args: args\n    };\n    tasksByHandle[nextHandle] = task;\n    registerImmediate(nextHandle);\n    return nextHandle++;\n  }\n\n  function clearImmediate(handle) {\n    delete tasksByHandle[handle];\n  }\n\n  function run(task) {\n    var callback = task.callback;\n    var args = task.args;\n\n    switch (args.length) {\n      case 0:\n        callback();\n        break;\n\n      case 1:\n        callback(args[0]);\n        break;\n\n      case 2:\n        callback(args[0], args[1]);\n        break;\n\n      case 3:\n        callback(args[0], args[1], args[2]);\n        break;\n\n      default:\n        callback.apply(undefined, args);\n        break;\n    }\n  }\n\n  function runIfPresent(handle) {\n    // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // \"too much recursion\" error.\n      setTimeout(runIfPresent, 0, handle);\n    } else {\n      var task = tasksByHandle[handle];\n\n      if (task) {\n        currentlyRunningATask = true;\n\n        try {\n          run(task);\n        } finally {\n          clearImmediate(handle);\n          currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  function installNextTickImplementation() {\n    registerImmediate = function (handle) {\n      process.nextTick(function () {\n        runIfPresent(handle);\n      });\n    };\n  }\n\n  function canUsePostMessage() {\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `global.postMessage` means something completely different and can't be used for this purpose.\n    if (global.postMessage && !global.importScripts) {\n      var postMessageIsAsynchronous = true;\n      var oldOnMessage = global.onmessage;\n\n      global.onmessage = function () {\n        postMessageIsAsynchronous = false;\n      };\n\n      global.postMessage(\"\", \"*\");\n      global.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n  }\n\n  function installPostMessageImplementation() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\n    var onGlobalMessage = function (event) {\n      if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n        runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", onGlobalMessage, false);\n    } else {\n      global.attachEvent(\"onmessage\", onGlobalMessage);\n    }\n\n    registerImmediate = function (handle) {\n      global.postMessage(messagePrefix + handle, \"*\");\n    };\n  }\n\n  function installMessageChannelImplementation() {\n    var channel = new MessageChannel();\n\n    channel.port1.onmessage = function (event) {\n      var handle = event.data;\n      runIfPresent(handle);\n    };\n\n    registerImmediate = function (handle) {\n      channel.port2.postMessage(handle);\n    };\n  }\n\n  function installReadyStateChangeImplementation() {\n    var html = doc.documentElement;\n\n    registerImmediate = function (handle) {\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var script = doc.createElement(\"script\");\n\n      script.onreadystatechange = function () {\n        runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n\n      html.appendChild(script);\n    };\n  }\n\n  function installSetTimeoutImplementation() {\n    registerImmediate = function (handle) {\n      setTimeout(runIfPresent, 0, handle);\n    };\n  } // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\n\n  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n  attachTo = attachTo && attachTo.setTimeout ? attachTo : global; // Don't get fooled by e.g. browserify environments.\n\n  if ({}.toString.call(global.process) === \"[object process]\") {\n    // For Node.js before 0.9\n    installNextTickImplementation();\n  } else if (canUsePostMessage()) {\n    // For non-IE10 modern browsers\n    installPostMessageImplementation();\n  } else if (global.MessageChannel) {\n    // For web workers, where supported\n    installMessageChannelImplementation();\n  } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n    // For IE 6–8\n    installReadyStateChangeImplementation();\n  } else {\n    // For older browsers\n    installSetTimeoutImplementation();\n  }\n\n  attachTo.setImmediate = setImmediate;\n  attachTo.clearImmediate = clearImmediate;\n})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../node-libs-browser/node_modules/process/browser.js */ \"./node_modules/node-libs-browser/node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/setimmediate/setImmediate.js?");

/***/ }),

/***/ "./node_modules/three-pathfinding/src/AStar.js":
/*!*****************************************************!*\
  !*** ./node_modules/three-pathfinding/src/AStar.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const BinaryHeap = __webpack_require__(/*! ./BinaryHeap */ \"./node_modules/three-pathfinding/src/BinaryHeap.js\");\n\nconst utils = __webpack_require__(/*! ./utils.js */ \"./node_modules/three-pathfinding/src/utils.js\");\n\nclass AStar {\n  static init(graph) {\n    for (let x = 0; x < graph.length; x++) {\n      //for(var x in graph) {\n      const node = graph[x];\n      node.f = 0;\n      node.g = 0;\n      node.h = 0;\n      node.cost = 1.0;\n      node.visited = false;\n      node.closed = false;\n      node.parent = null;\n    }\n  }\n\n  static cleanUp(graph) {\n    for (let x = 0; x < graph.length; x++) {\n      const node = graph[x];\n      delete node.f;\n      delete node.g;\n      delete node.h;\n      delete node.cost;\n      delete node.visited;\n      delete node.closed;\n      delete node.parent;\n    }\n  }\n\n  static heap() {\n    return new BinaryHeap(function (node) {\n      return node.f;\n    });\n  }\n\n  static search(graph, start, end) {\n    this.init(graph); //heuristic = heuristic || astar.manhattan;\n\n    const openHeap = this.heap();\n    openHeap.push(start);\n\n    while (openHeap.size() > 0) {\n      // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n      const currentNode = openHeap.pop(); // End case -- result has been found, return the traced path.\n\n      if (currentNode === end) {\n        let curr = currentNode;\n        const ret = [];\n\n        while (curr.parent) {\n          ret.push(curr);\n          curr = curr.parent;\n        }\n\n        this.cleanUp(ret);\n        return ret.reverse();\n      } // Normal case -- move currentNode from open to closed, process each of its neighbours.\n\n\n      currentNode.closed = true; // Find all neighbours for the current node. Optionally find diagonal neighbours as well (false by default).\n\n      const neighbours = this.neighbours(graph, currentNode);\n\n      for (let i = 0, il = neighbours.length; i < il; i++) {\n        const neighbour = neighbours[i];\n\n        if (neighbour.closed) {\n          // Not a valid node to process, skip to next neighbour.\n          continue;\n        } // The g score is the shortest distance from start to current node.\n        // We need to check if the path we have arrived at this neighbour is the shortest one we have seen yet.\n\n\n        const gScore = currentNode.g + neighbour.cost;\n        const beenVisited = neighbour.visited;\n\n        if (!beenVisited || gScore < neighbour.g) {\n          // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n          neighbour.visited = true;\n          neighbour.parent = currentNode;\n          if (!neighbour.centroid || !end.centroid) throw new Error('Unexpected state');\n          neighbour.h = neighbour.h || this.heuristic(neighbour.centroid, end.centroid);\n          neighbour.g = gScore;\n          neighbour.f = neighbour.g + neighbour.h;\n\n          if (!beenVisited) {\n            // Pushing to heap will put it in proper place based on the 'f' value.\n            openHeap.push(neighbour);\n          } else {\n            // Already seen the node, but since it has been rescored we need to reorder it in the heap\n            openHeap.rescoreElement(neighbour);\n          }\n        }\n      }\n    } // No result was found - empty array signifies failure to find path.\n\n\n    return [];\n  }\n\n  static heuristic(pos1, pos2) {\n    return utils.distanceToSquared(pos1, pos2);\n  }\n\n  static neighbours(graph, node) {\n    const ret = [];\n\n    for (let e = 0; e < node.neighbours.length; e++) {\n      ret.push(graph[node.neighbours[e]]);\n    }\n\n    return ret;\n  }\n\n}\n\nmodule.exports = AStar;\n\n//# sourceURL=webpack:///./node_modules/three-pathfinding/src/AStar.js?");

/***/ }),

/***/ "./node_modules/three-pathfinding/src/BinaryHeap.js":
/*!**********************************************************!*\
  !*** ./node_modules/three-pathfinding/src/BinaryHeap.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// javascript-astar\n// http://github.com/bgrins/javascript-astar\n// Freely distributable under the MIT License.\n// Implements the astar search algorithm in javascript using a binary heap.\nclass BinaryHeap {\n  constructor(scoreFunction) {\n    this.content = [];\n    this.scoreFunction = scoreFunction;\n  }\n\n  push(element) {\n    // Add the new element to the end of the array.\n    this.content.push(element); // Allow it to sink down.\n\n    this.sinkDown(this.content.length - 1);\n  }\n\n  pop() {\n    // Store the first element so we can return it later.\n    const result = this.content[0]; // Get the element at the end of the array.\n\n    const end = this.content.pop(); // If there are any elements left, put the end element at the\n    // start, and let it bubble up.\n\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.bubbleUp(0);\n    }\n\n    return result;\n  }\n\n  remove(node) {\n    const i = this.content.indexOf(node); // When it is found, the process seen in 'pop' is repeated\n    // to fill up the hole.\n\n    const end = this.content.pop();\n\n    if (i !== this.content.length - 1) {\n      this.content[i] = end;\n\n      if (this.scoreFunction(end) < this.scoreFunction(node)) {\n        this.sinkDown(i);\n      } else {\n        this.bubbleUp(i);\n      }\n    }\n  }\n\n  size() {\n    return this.content.length;\n  }\n\n  rescoreElement(node) {\n    this.sinkDown(this.content.indexOf(node));\n  }\n\n  sinkDown(n) {\n    // Fetch the element that has to be sunk.\n    const element = this.content[n]; // When at 0, an element can not sink any further.\n\n    while (n > 0) {\n      // Compute the parent element's index, and fetch it.\n      const parentN = (n + 1 >> 1) - 1;\n      const parent = this.content[parentN];\n\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n        // Swap the elements if the parent is greater.\n        this.content[parentN] = element;\n        this.content[n] = parent; // Update 'n' to continue at the new position.\n\n        n = parentN;\n      } else {\n        // Found a parent that is less, no need to sink any further.\n        break;\n      }\n    }\n  }\n\n  bubbleUp(n) {\n    // Look up the target element and its score.\n    const length = this.content.length,\n          element = this.content[n],\n          elemScore = this.scoreFunction(element);\n\n    while (true) {\n      // Compute the indices of the child elements.\n      const child2N = n + 1 << 1,\n            child1N = child2N - 1; // This is used to store the new position of the element,\n      // if any.\n\n      let swap = null;\n      let child1Score; // If the first child exists (is inside the array)...\n\n      if (child1N < length) {\n        // Look it up and compute its score.\n        const child1 = this.content[child1N];\n        child1Score = this.scoreFunction(child1); // If the score is less than our element's, we need to swap.\n\n        if (child1Score < elemScore) {\n          swap = child1N;\n        }\n      } // Do the same checks for the other child.\n\n\n      if (child2N < length) {\n        const child2 = this.content[child2N],\n              child2Score = this.scoreFunction(child2);\n\n        if (child2Score < (swap === null ? elemScore : child1Score)) {\n          swap = child2N;\n        }\n      } // If the element needs to be moved, swap it, and continue.\n\n\n      if (swap !== null) {\n        this.content[n] = this.content[swap];\n        this.content[swap] = element;\n        n = swap;\n      } // Otherwise, we are done.\n      else {\n          break;\n        }\n    }\n  }\n\n}\n\nmodule.exports = BinaryHeap;\n\n//# sourceURL=webpack:///./node_modules/three-pathfinding/src/BinaryHeap.js?");

/***/ }),

/***/ "./node_modules/three-pathfinding/src/Builder.js":
/*!*******************************************************!*\
  !*** ./node_modules/three-pathfinding/src/Builder.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const utils = __webpack_require__(/*! ./utils */ \"./node_modules/three-pathfinding/src/utils.js\");\n\nlet polygonId = 1;\n\nclass Builder {\n  /**\n   * Constructs groups from the given navigation mesh.\n   * @param  {THREE.Geometry} geometry\n   * @return {Zone}\n   */\n  static buildZone(geometry) {\n    const navMesh = this._buildNavigationMesh(geometry);\n\n    const zone = {};\n    navMesh.vertices.forEach(v => {\n      v.x = utils.roundNumber(v.x, 2);\n      v.y = utils.roundNumber(v.y, 2);\n      v.z = utils.roundNumber(v.z, 2);\n    });\n    zone.vertices = navMesh.vertices;\n\n    const groups = this._buildPolygonGroups(navMesh);\n\n    zone.groups = [];\n\n    const findPolygonIndex = function (group, p) {\n      for (let i = 0; i < group.length; i++) {\n        if (p === group[i]) return i;\n      }\n    };\n\n    groups.forEach(group => {\n      const newGroup = [];\n      group.forEach(p => {\n        const neighbours = p.neighbours.map(n => findPolygonIndex(group, n)); // Build a portal list to each neighbour\n\n        const portals = p.neighbours.map(n => this._getSharedVerticesInOrder(p, n));\n        p.centroid.x = utils.roundNumber(p.centroid.x, 2);\n        p.centroid.y = utils.roundNumber(p.centroid.y, 2);\n        p.centroid.z = utils.roundNumber(p.centroid.z, 2);\n        newGroup.push({\n          id: findPolygonIndex(group, p),\n          neighbours: neighbours,\n          vertexIds: p.vertexIds,\n          centroid: p.centroid,\n          portals: portals\n        });\n      });\n      zone.groups.push(newGroup);\n    });\n    return zone;\n  }\n  /**\n   * Constructs a navigation mesh from the given geometry.\n   * @param {THREE.Geometry} geometry\n   * @return {Object}\n   */\n\n\n  static _buildNavigationMesh(geometry) {\n    utils.computeCentroids(geometry);\n    geometry.mergeVertices();\n    return this._buildPolygonsFromGeometry(geometry);\n  }\n\n  static _buildPolygonGroups(navigationMesh) {\n    const polygons = navigationMesh.polygons;\n    const polygonGroups = [];\n    let groupCount = 0;\n\n    const spreadGroupId = function (polygon) {\n      polygon.neighbours.forEach(neighbour => {\n        if (neighbour.group === undefined) {\n          neighbour.group = polygon.group;\n          spreadGroupId(neighbour);\n        }\n      });\n    };\n\n    polygons.forEach(polygon => {\n      if (polygon.group === undefined) {\n        polygon.group = groupCount++; // Spread it\n\n        spreadGroupId(polygon);\n      }\n\n      if (!polygonGroups[polygon.group]) polygonGroups[polygon.group] = [];\n      polygonGroups[polygon.group].push(polygon);\n    });\n    return polygonGroups;\n  }\n\n  static _buildPolygonNeighbours(polygon, navigationMesh) {\n    polygon.neighbours = []; // All other nodes that contain at least two of our vertices are our neighbours\n\n    for (let i = 0, len = navigationMesh.polygons.length; i < len; i++) {\n      if (polygon === navigationMesh.polygons[i]) continue; // Don't check polygons that are too far, since the intersection tests take a long time\n\n      if (polygon.centroid.distanceToSquared(navigationMesh.polygons[i].centroid) > 100 * 100) continue;\n      const matches = utils.array_intersect(polygon.vertexIds, navigationMesh.polygons[i].vertexIds);\n\n      if (matches.length >= 2) {\n        polygon.neighbours.push(navigationMesh.polygons[i]);\n      }\n    }\n  }\n\n  static _buildPolygonsFromGeometry(geometry) {\n    const polygons = [];\n    const vertices = geometry.vertices;\n    const faceVertexUvs = geometry.faceVertexUvs; // Convert the faces into a custom format that supports more than 3 vertices\n\n    geometry.faces.forEach(face => {\n      polygons.push({\n        id: polygonId++,\n        vertexIds: [face.a, face.b, face.c],\n        centroid: face.centroid,\n        normal: face.normal,\n        neighbours: []\n      });\n    });\n    const navigationMesh = {\n      polygons: polygons,\n      vertices: vertices,\n      faceVertexUvs: faceVertexUvs\n    }; // Build a list of adjacent polygons\n\n    polygons.forEach(polygon => {\n      this._buildPolygonNeighbours(polygon, navigationMesh);\n    });\n    return navigationMesh;\n  }\n\n  static _getSharedVerticesInOrder(a, b) {\n    const aList = a.vertexIds;\n    const bList = b.vertexIds;\n    const sharedVertices = [];\n    aList.forEach(vId => {\n      if (bList.includes(vId)) {\n        sharedVertices.push(vId);\n      }\n    });\n    if (sharedVertices.length < 2) return [];\n\n    if (sharedVertices.includes(aList[0]) && sharedVertices.includes(aList[aList.length - 1])) {\n      // Vertices on both edges are bad, so shift them once to the left\n      aList.push(aList.shift());\n    }\n\n    if (sharedVertices.includes(bList[0]) && sharedVertices.includes(bList[bList.length - 1])) {\n      // Vertices on both edges are bad, so shift them once to the left\n      bList.push(bList.shift());\n    } // Again!\n\n\n    sharedVertices.length = 0;\n    aList.forEach(vId => {\n      if (bList.includes(vId)) {\n        sharedVertices.push(vId);\n      }\n    });\n    return sharedVertices;\n  }\n\n}\n\nmodule.exports = Builder;\n\n//# sourceURL=webpack:///./node_modules/three-pathfinding/src/Builder.js?");

/***/ }),

/***/ "./node_modules/three-pathfinding/src/Channel.js":
/*!*******************************************************!*\
  !*** ./node_modules/three-pathfinding/src/Channel.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const utils = __webpack_require__(/*! ./utils */ \"./node_modules/three-pathfinding/src/utils.js\");\n\nclass Channel {\n  constructor() {\n    this.portals = [];\n  }\n\n  push(p1, p2) {\n    if (p2 === undefined) p2 = p1;\n    this.portals.push({\n      left: p1,\n      right: p2\n    });\n  }\n\n  stringPull() {\n    const portals = this.portals;\n    const pts = []; // Init scan state\n\n    let portalApex, portalLeft, portalRight;\n    let apexIndex = 0,\n        leftIndex = 0,\n        rightIndex = 0;\n    portalApex = portals[0].left;\n    portalLeft = portals[0].left;\n    portalRight = portals[0].right; // Add start point.\n\n    pts.push(portalApex);\n\n    for (let i = 1; i < portals.length; i++) {\n      const left = portals[i].left;\n      const right = portals[i].right; // Update right vertex.\n\n      if (utils.triarea2(portalApex, portalRight, right) <= 0.0) {\n        if (utils.vequal(portalApex, portalRight) || utils.triarea2(portalApex, portalLeft, right) > 0.0) {\n          // Tighten the funnel.\n          portalRight = right;\n          rightIndex = i;\n        } else {\n          // Right over left, insert left to path and restart scan from portal left point.\n          pts.push(portalLeft); // Make current left the new apex.\n\n          portalApex = portalLeft;\n          apexIndex = leftIndex; // Reset portal\n\n          portalLeft = portalApex;\n          portalRight = portalApex;\n          leftIndex = apexIndex;\n          rightIndex = apexIndex; // Restart scan\n\n          i = apexIndex;\n          continue;\n        }\n      } // Update left vertex.\n\n\n      if (utils.triarea2(portalApex, portalLeft, left) >= 0.0) {\n        if (utils.vequal(portalApex, portalLeft) || utils.triarea2(portalApex, portalRight, left) < 0.0) {\n          // Tighten the funnel.\n          portalLeft = left;\n          leftIndex = i;\n        } else {\n          // Left over right, insert right to path and restart scan from portal right point.\n          pts.push(portalRight); // Make current right the new apex.\n\n          portalApex = portalRight;\n          apexIndex = rightIndex; // Reset portal\n\n          portalLeft = portalApex;\n          portalRight = portalApex;\n          leftIndex = apexIndex;\n          rightIndex = apexIndex; // Restart scan\n\n          i = apexIndex;\n          continue;\n        }\n      }\n    }\n\n    if (pts.length === 0 || !utils.vequal(pts[pts.length - 1], portals[portals.length - 1].left)) {\n      // Append last point to path.\n      pts.push(portals[portals.length - 1].left);\n    }\n\n    this.path = pts;\n    return pts;\n  }\n\n}\n\nmodule.exports = Channel;\n\n//# sourceURL=webpack:///./node_modules/three-pathfinding/src/Channel.js?");

/***/ }),

/***/ "./node_modules/three-pathfinding/src/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/three-pathfinding/src/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* global THREE */\nconst utils = __webpack_require__(/*! ./utils */ \"./node_modules/three-pathfinding/src/utils.js\");\n\nconst AStar = __webpack_require__(/*! ./AStar */ \"./node_modules/three-pathfinding/src/AStar.js\");\n\nconst Builder = __webpack_require__(/*! ./Builder */ \"./node_modules/three-pathfinding/src/Builder.js\");\n\nconst Channel = __webpack_require__(/*! ./Channel */ \"./node_modules/three-pathfinding/src/Channel.js\");\n/**\n * Defines an instance of the pathfinding module, with one or more zones.\n */\n\n\nclass Path {\n  constructor() {\n    this.zones = {};\n  }\n  /**\n   * (Static) Builds a zone/node set from navigation mesh geometry.\n   * @param  {THREE.Geometry} geometry\n   * @return {Zone}\n   */\n\n\n  static createZone(geometry) {\n    return Builder.buildZone(geometry);\n  }\n  /**\n   * Sets data for the given zone.\n   * @param {string} zoneID\n   * @param {Zone} zone\n   */\n\n\n  setZoneData(zoneID, zone) {\n    this.zones[zoneID] = zone;\n  }\n  /**\n   * Returns closest node group ID for given position.\n   * @param  {string} zoneID\n   * @param  {THREE.Vector3} position\n   * @return {number}\n   */\n\n\n  getGroup(zoneID, position) {\n    if (!this.zones[zoneID]) return null;\n    let closestNodeGroup = null;\n    let distance = Math.pow(50, 2);\n    this.zones[zoneID].groups.forEach((group, index) => {\n      group.forEach(node => {\n        const measuredDistance = utils.distanceToSquared(node.centroid, position);\n\n        if (measuredDistance < distance) {\n          closestNodeGroup = index;\n          distance = measuredDistance;\n        }\n      });\n    });\n    return closestNodeGroup;\n  }\n  /**\n   * Returns a random node within a given range of a given position.\n   * @param  {string} zoneID\n   * @param  {number} groupID\n   * @param  {THREE.Vector3} nearPosition\n   * @param  {number} nearRange\n   * @return {Node}\n   */\n\n\n  getRandomNode(zoneID, groupID, nearPosition, nearRange) {\n    if (!this.zones[zoneID]) return new THREE.Vector3();\n    nearPosition = nearPosition || null;\n    nearRange = nearRange || 0;\n    const candidates = [];\n    const polygons = this.zones[zoneID].groups[groupID];\n    polygons.forEach(p => {\n      if (nearPosition && nearRange) {\n        if (utils.distanceToSquared(nearPosition, p.centroid) < nearRange * nearRange) {\n          candidates.push(p.centroid);\n        }\n      } else {\n        candidates.push(p.centroid);\n      }\n    });\n    return utils.sample(candidates) || new THREE.Vector3();\n  }\n  /**\n   * Returns the closest node to the target position.\n   * @param  {THREE.Vector3} position\n   * @param  {string}  zoneID\n   * @param  {number}  groupID\n   * @param  {boolean} checkPolygon\n   * @return {Node}\n   */\n\n\n  getClosestNode(position, zoneID, groupID, checkPolygon = false) {\n    const nodes = this.zones[zoneID].groups[groupID];\n    const vertices = this.zones[zoneID].vertices;\n    let closestNode = null;\n    let closestDistance = Infinity;\n    nodes.forEach(node => {\n      const distance = utils.distanceToSquared(node.centroid, position);\n\n      if (distance < closestDistance && (!checkPolygon || utils.isVectorInPolygon(position, node, vertices))) {\n        closestNode = node;\n        closestDistance = distance;\n      }\n    });\n    return closestNode;\n  }\n  /**\n   * Returns a path between given start and end points. If a complete path\n   * cannot be found, will return the nearest endpoint available.\n   *\n   * @param  {THREE.Vector3} startPosition Start position.\n   * @param  {THREE.Vector3} targetPosition Destination.\n   * @param  {string} zoneID ID of current zone.\n   * @param  {number} groupID Current group ID.\n   * @return {Array<THREE.Vector3>} Array of points defining the path.\n   */\n\n\n  findPath(startPosition, targetPosition, zoneID, groupID) {\n    const nodes = this.zones[zoneID].groups[groupID];\n    const vertices = this.zones[zoneID].vertices;\n    const closestNode = this.getClosestNode(startPosition, zoneID, groupID);\n    const farthestNode = this.getClosestNode(targetPosition, zoneID, groupID, true); // If we can't find any node, just go straight to the target\n\n    if (!closestNode || !farthestNode) {\n      return null;\n    }\n\n    const paths = AStar.search(nodes, closestNode, farthestNode);\n\n    const getPortalFromTo = function (a, b) {\n      for (var i = 0; i < a.neighbours.length; i++) {\n        if (a.neighbours[i] === b.id) {\n          return a.portals[i];\n        }\n      }\n    }; // We have the corridor, now pull the rope.\n\n\n    const channel = new Channel();\n    channel.push(startPosition);\n\n    for (let i = 0; i < paths.length; i++) {\n      const polygon = paths[i];\n      const nextPolygon = paths[i + 1];\n\n      if (nextPolygon) {\n        const portals = getPortalFromTo(polygon, nextPolygon);\n        channel.push(vertices[portals[0]], vertices[portals[1]]);\n      }\n    }\n\n    channel.push(targetPosition);\n    channel.stringPull(); // Return the path, omitting first position (which is already known).\n\n    const path = channel.path.map(c => new THREE.Vector3(c.x, c.y, c.z));\n    path.shift();\n    return path;\n  }\n\n}\n/**\n * Clamps a step along the navmesh, given start and desired endpoint. May be\n * used to constrain first-person / WASD controls.\n *\n * @param  {THREE.Vector3} start\n * @param  {THREE.Vector3} end Desired endpoint.\n * @param  {Node} node\n * @param  {string} zoneID\n * @param  {number} groupID\n * @param  {THREE.Vector3} endTarget Updated endpoint.\n * @return {Node} Updated node.\n */\n\n\nPath.prototype.clampStep = function () {\n  const point = new THREE.Vector3();\n  const plane = new THREE.Plane();\n  const triangle = new THREE.Triangle();\n  let closestNode;\n  let closestPoint = new THREE.Vector3();\n  let closestDistance;\n  return function (start, end, node, zoneID, groupID, endTarget) {\n    const vertices = this.zones[zoneID].vertices;\n    const nodes = this.zones[zoneID].groups[groupID];\n    const nodeQueue = [node];\n    const nodeDepth = {};\n    nodeDepth[node.id] = 0;\n    closestNode = undefined;\n    closestPoint.set(0, 0, 0);\n    closestDistance = Infinity; // Project the step along the current node.\n\n    plane.setFromCoplanarPoints(vertices[node.vertexIds[0]], vertices[node.vertexIds[1]], vertices[node.vertexIds[2]]);\n    plane.projectPoint(end, point);\n    end.copy(point);\n\n    for (let currentNode = nodeQueue.pop(); currentNode; currentNode = nodeQueue.pop()) {\n      triangle.set(vertices[currentNode.vertexIds[0]], vertices[currentNode.vertexIds[1]], vertices[currentNode.vertexIds[2]]);\n      triangle.closestPointToPoint(end, point);\n\n      if (point.distanceToSquared(end) < closestDistance) {\n        closestNode = currentNode;\n        closestPoint.copy(point);\n        closestDistance = point.distanceToSquared(end);\n      }\n\n      const depth = nodeDepth[currentNode];\n      if (depth > 2) continue;\n\n      for (let i = 0; i < currentNode.neighbours.length; i++) {\n        const neighbour = nodes[currentNode.neighbours[i]];\n        if (neighbour.id in nodeDepth) continue;\n        nodeQueue.push(neighbour);\n        nodeDepth[neighbour.id] = depth + 1;\n      }\n    }\n\n    endTarget.copy(closestPoint);\n    return closestNode;\n  };\n}();\n/**\n * Defines a zone of interconnected groups on a navigation mesh.\n *\n * @type {Object}\n * @property {Array<Group>} groups\n * @property {Array<THREE.Vector3} vertices\n */\n\n\nconst Zone = {}; // jshint ignore:line\n\n/**\n * Defines a group within a navigation mesh.\n *\n * @type {Object}\n */\n\nconst Group = {}; // jshint ignore:line\n\n/**\n * Defines a node (or polygon) within a group.\n *\n * @type {Object}\n * @property {number} id\n * @property {Array<number>} neighbours IDs of neighboring nodes.\n * @property {Array<number} vertexIds\n * @property {THREE.Vector3} centroid\n * @property {Array<Array<number>>} portals Array of portals, each defined by two vertex IDs.\n * @property {boolean} closed\n * @property {number} cost\n */\n\nconst Node = {}; // jshint ignore:line\n\nmodule.exports = Path;\n\n//# sourceURL=webpack:///./node_modules/three-pathfinding/src/index.js?");

/***/ }),

/***/ "./node_modules/three-pathfinding/src/utils.js":
/*!*****************************************************!*\
  !*** ./node_modules/three-pathfinding/src/utils.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("class Utils {\n  static computeCentroids(geometry) {\n    var f, fl, face;\n\n    for (f = 0, fl = geometry.faces.length; f < fl; f++) {\n      face = geometry.faces[f];\n      face.centroid = new THREE.Vector3(0, 0, 0);\n      face.centroid.add(geometry.vertices[face.a]);\n      face.centroid.add(geometry.vertices[face.b]);\n      face.centroid.add(geometry.vertices[face.c]);\n      face.centroid.divideScalar(3);\n    }\n  }\n\n  static roundNumber(number, decimals) {\n    var newnumber = Number(number + '').toFixed(parseInt(decimals));\n    return parseFloat(newnumber);\n  }\n\n  static sample(list) {\n    return list[Math.floor(Math.random() * list.length)];\n  }\n\n  static mergeVertexIds(aList, bList) {\n    var sharedVertices = [];\n    aList.forEach(vID => {\n      if (bList.indexOf(vID) >= 0) {\n        sharedVertices.push(vID);\n      }\n    });\n    if (sharedVertices.length < 2) return [];\n\n    if (sharedVertices.includes(aList[0]) && sharedVertices.includes(aList[aList.length - 1])) {\n      // Vertices on both edges are bad, so shift them once to the left\n      aList.push(aList.shift());\n    }\n\n    if (sharedVertices.includes(bList[0]) && sharedVertices.includes(bList[bList.length - 1])) {\n      // Vertices on both edges are bad, so shift them once to the left\n      bList.push(bList.shift());\n    } // Again!\n\n\n    sharedVertices = [];\n    aList.forEach(vId => {\n      if (bList.includes(vId)) {\n        sharedVertices.push(vId);\n      }\n    });\n    var clockwiseMostSharedVertex = sharedVertices[1];\n    var counterClockwiseMostSharedVertex = sharedVertices[0];\n    var cList = aList.slice();\n\n    while (cList[0] !== clockwiseMostSharedVertex) {\n      cList.push(cList.shift());\n    }\n\n    var c = 0;\n    var temp = bList.slice();\n\n    while (temp[0] !== counterClockwiseMostSharedVertex) {\n      temp.push(temp.shift());\n      if (c++ > 10) throw new Error('Unexpected state');\n    } // Shave\n\n\n    temp.shift();\n    temp.pop();\n    cList = cList.concat(temp);\n    return cList;\n  }\n\n  static setPolygonCentroid(polygon, navigationMesh) {\n    var sum = new THREE.Vector3();\n    var vertices = navigationMesh.vertices;\n    polygon.vertexIds.forEach(vId => {\n      sum.add(vertices[vId]);\n    });\n    sum.divideScalar(polygon.vertexIds.length);\n    polygon.centroid.copy(sum);\n  }\n\n  static cleanPolygon(polygon, navigationMesh) {\n    var newVertexIds = [];\n    var vertices = navigationMesh.vertices;\n\n    for (var i = 0; i < polygon.vertexIds.length; i++) {\n      var vertex = vertices[polygon.vertexIds[i]];\n      var nextVertexId, previousVertexId;\n      var nextVertex, previousVertex;\n\n      if (i === 0) {\n        nextVertexId = polygon.vertexIds[1];\n        previousVertexId = polygon.vertexIds[polygon.vertexIds.length - 1];\n      } else if (i === polygon.vertexIds.length - 1) {\n        nextVertexId = polygon.vertexIds[0];\n        previousVertexId = polygon.vertexIds[polygon.vertexIds.length - 2];\n      } else {\n        nextVertexId = polygon.vertexIds[i + 1];\n        previousVertexId = polygon.vertexIds[i - 1];\n      }\n\n      nextVertex = vertices[nextVertexId];\n      previousVertex = vertices[previousVertexId];\n      var a = nextVertex.clone().sub(vertex);\n      var b = previousVertex.clone().sub(vertex);\n      var angle = a.angleTo(b);\n\n      if (angle > Math.PI - 0.01 && angle < Math.PI + 0.01) {\n        // Remove the neighbours who had this vertex\n        var goodNeighbours = [];\n        polygon.neighbours.forEach(neighbour => {\n          if (!neighbour.vertexIds.includes(polygon.vertexIds[i])) {\n            goodNeighbours.push(neighbour);\n          }\n        });\n        polygon.neighbours = goodNeighbours; // TODO cleanup the list of vertices and rebuild vertexIds for all polygons\n      } else {\n        newVertexIds.push(polygon.vertexIds[i]);\n      }\n    }\n\n    polygon.vertexIds = newVertexIds;\n    this.setPolygonCentroid(polygon, navigationMesh);\n  }\n\n  static isConvex(polygon, navigationMesh) {\n    var vertices = navigationMesh.vertices;\n    if (polygon.vertexIds.length < 3) return false;\n    var convex = true;\n    var total = 0;\n    var results = [];\n\n    for (var i = 0; i < polygon.vertexIds.length; i++) {\n      var vertex = vertices[polygon.vertexIds[i]];\n      var nextVertex, previousVertex;\n\n      if (i === 0) {\n        nextVertex = vertices[polygon.vertexIds[1]];\n        previousVertex = vertices[polygon.vertexIds[polygon.vertexIds.length - 1]];\n      } else if (i === polygon.vertexIds.length - 1) {\n        nextVertex = vertices[polygon.vertexIds[0]];\n        previousVertex = vertices[polygon.vertexIds[polygon.vertexIds.length - 2]];\n      } else {\n        nextVertex = vertices[polygon.vertexIds[i + 1]];\n        previousVertex = vertices[polygon.vertexIds[i - 1]];\n      }\n\n      var a = nextVertex.clone().sub(vertex);\n      var b = previousVertex.clone().sub(vertex);\n      var angle = a.angleTo(b);\n      total += angle;\n      if (angle === Math.PI || angle === 0) return false;\n      var r = a.cross(b).y;\n      results.push(r);\n    } // if ( total > (polygon.vertexIds.length-2)*Math.PI ) return false;\n\n\n    results.forEach(r => {\n      if (r === 0) convex = false;\n    });\n\n    if (results[0] > 0) {\n      results.forEach(r => {\n        if (r < 0) convex = false;\n      });\n    } else {\n      results.forEach(r => {\n        if (r > 0) convex = false;\n      });\n    }\n\n    return convex;\n  }\n\n  static distanceToSquared(a, b) {\n    var dx = a.x - b.x;\n    var dy = a.y - b.y;\n    var dz = a.z - b.z;\n    return dx * dx + dy * dy + dz * dz;\n  } //+ Jonas Raoni Soares Silva\n  //@ http://jsfromhell.com/math/is-point-in-poly [rev. #0]\n\n\n  static isPointInPoly(poly, pt) {\n    for (var c = false, i = -1, l = poly.length, j = l - 1; ++i < l; j = i) (poly[i].z <= pt.z && pt.z < poly[j].z || poly[j].z <= pt.z && pt.z < poly[i].z) && pt.x < (poly[j].x - poly[i].x) * (pt.z - poly[i].z) / (poly[j].z - poly[i].z) + poly[i].x && (c = !c);\n\n    return c;\n  }\n\n  static isVectorInPolygon(vector, polygon, vertices) {\n    // reference point will be the centroid of the polygon\n    // We need to rotate the vector as well as all the points which the polygon uses\n    var lowestPoint = 100000;\n    var highestPoint = -100000;\n    var polygonVertices = [];\n    polygon.vertexIds.forEach(vId => {\n      lowestPoint = Math.min(vertices[vId].y, lowestPoint);\n      highestPoint = Math.max(vertices[vId].y, highestPoint);\n      polygonVertices.push(vertices[vId]);\n    });\n\n    if (vector.y < highestPoint + 0.5 && vector.y > lowestPoint - 0.5 && this.isPointInPoly(polygonVertices, vector)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  static triarea2(a, b, c) {\n    var ax = b.x - a.x;\n    var az = b.z - a.z;\n    var bx = c.x - a.x;\n    var bz = c.z - a.z;\n    return bx * az - ax * bz;\n  }\n\n  static vequal(a, b) {\n    return this.distanceToSquared(a, b) < 0.00001;\n  }\n\n  static array_intersect() {\n    let i,\n        shortest,\n        nShortest,\n        n,\n        len,\n        ret = [],\n        obj = {},\n        nOthers;\n    nOthers = arguments.length - 1;\n    nShortest = arguments[0].length;\n    shortest = 0;\n\n    for (i = 0; i <= nOthers; i++) {\n      n = arguments[i].length;\n\n      if (n < nShortest) {\n        shortest = i;\n        nShortest = n;\n      }\n    }\n\n    for (i = 0; i <= nOthers; i++) {\n      n = i === shortest ? 0 : i || shortest; //Read the shortest array first. Read the first array instead of the shortest\n\n      len = arguments[n].length;\n\n      for (var j = 0; j < len; j++) {\n        var elem = arguments[n][j];\n\n        if (obj[elem] === i - 1) {\n          if (i === nOthers) {\n            ret.push(elem);\n            obj[elem] = 0;\n          } else {\n            obj[elem] = i;\n          }\n        } else if (i === 0) {\n          obj[elem] = 0;\n        }\n      }\n    }\n\n    return ret;\n  }\n\n}\n\nmodule.exports = Utils;\n\n//# sourceURL=webpack:///./node_modules/three-pathfinding/src/utils.js?");

/***/ }),

/***/ "./node_modules/three-to-cannon/index.js":
/*!***********************************************!*\
  !*** ./node_modules/three-to-cannon/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var CANNON = __webpack_require__(/*! cannon */ \"./node_modules/cannon/src/Cannon.js\"),\n    quickhull = __webpack_require__(/*! ./lib/THREE.quickhull */ \"./node_modules/three-to-cannon/lib/THREE.quickhull.js\");\n\nvar PI_2 = Math.PI / 2;\nvar Type = {\n  BOX: 'Box',\n  CYLINDER: 'Cylinder',\n  SPHERE: 'Sphere',\n  HULL: 'ConvexPolyhedron',\n  MESH: 'Trimesh'\n};\n/**\n * Given a THREE.Object3D instance, creates a corresponding CANNON shape.\n * @param  {THREE.Object3D} object\n * @return {CANNON.Shape}\n */\n\nvar mesh2shape = function (object, options) {\n  options = options || {};\n  var geometry;\n\n  if (options.type === Type.BOX) {\n    return createBoundingBoxShape(object);\n  } else if (options.type === Type.CYLINDER) {\n    return createBoundingCylinderShape(object, options);\n  } else if (options.type === Type.SPHERE) {\n    return createBoundingSphereShape(object, options);\n  } else if (options.type === Type.HULL) {\n    return createConvexPolyhedron(object);\n  } else if (options.type === Type.MESH) {\n    geometry = getGeometry(object);\n    return geometry ? createTrimeshShape(geometry) : null;\n  } else if (options.type) {\n    throw new Error('[CANNON.mesh2shape] Invalid type \"%s\".', options.type);\n  }\n\n  geometry = getGeometry(object);\n  if (!geometry) return null;\n  var type = geometry.metadata ? geometry.metadata.type : geometry.type;\n\n  switch (type) {\n    case 'BoxGeometry':\n    case 'BoxBufferGeometry':\n      return createBoxShape(geometry);\n\n    case 'CylinderGeometry':\n    case 'CylinderBufferGeometry':\n      return createCylinderShape(geometry);\n\n    case 'PlaneGeometry':\n    case 'PlaneBufferGeometry':\n      return createPlaneShape(geometry);\n\n    case 'SphereGeometry':\n    case 'SphereBufferGeometry':\n      return createSphereShape(geometry);\n\n    case 'TubeGeometry':\n    case 'Geometry':\n    case 'BufferGeometry':\n      return createBoundingBoxShape(object);\n\n    default:\n      console.warn('Unrecognized geometry: \"%s\". Using bounding box as shape.', geometry.type);\n      return createBoxShape(geometry);\n  }\n};\n\nmesh2shape.Type = Type;\nmodule.exports = CANNON.mesh2shape = mesh2shape;\n/******************************************************************************\n * Shape construction\n */\n\n/**\n * @param  {THREE.Geometry} geometry\n * @return {CANNON.Shape}\n */\n\nfunction createBoxShape(geometry) {\n  var vertices = getVertices(geometry);\n  if (!vertices.length) return null;\n  geometry.computeBoundingBox();\n  var box = geometry.boundingBox;\n  return new CANNON.Box(new CANNON.Vec3((box.max.x - box.min.x) / 2, (box.max.y - box.min.y) / 2, (box.max.z - box.min.z) / 2));\n}\n/**\n * Bounding box needs to be computed with the entire mesh, not just geometry.\n * @param  {THREE.Object3D} mesh\n * @return {CANNON.Shape}\n */\n\n\nfunction createBoundingBoxShape(object) {\n  var shape,\n      localPosition,\n      box = new THREE.Box3();\n  var clone = object.clone();\n  clone.quaternion.set(0, 0, 0, 1);\n  clone.updateMatrixWorld();\n  box.setFromObject(clone);\n  if (!isFinite(box.min.lengthSq())) return null;\n  shape = new CANNON.Box(new CANNON.Vec3((box.max.x - box.min.x) / 2, (box.max.y - box.min.y) / 2, (box.max.z - box.min.z) / 2));\n  localPosition = box.translate(clone.position.negate()).getCenter(new THREE.Vector3());\n\n  if (localPosition.lengthSq()) {\n    shape.offset = localPosition;\n  }\n\n  return shape;\n}\n/**\n * Computes 3D convex hull as a CANNON.ConvexPolyhedron.\n * @param  {THREE.Object3D} mesh\n * @return {CANNON.Shape}\n */\n\n\nfunction createConvexPolyhedron(object) {\n  var i,\n      vertices,\n      faces,\n      hull,\n      eps = 1e-4,\n      geometry = getGeometry(object);\n  if (!geometry || !geometry.vertices.length) return null; // Perturb.\n\n  for (i = 0; i < geometry.vertices.length; i++) {\n    geometry.vertices[i].x += (Math.random() - 0.5) * eps;\n    geometry.vertices[i].y += (Math.random() - 0.5) * eps;\n    geometry.vertices[i].z += (Math.random() - 0.5) * eps;\n  } // Compute the 3D convex hull.\n\n\n  hull = quickhull(geometry); // Convert from THREE.Vector3 to CANNON.Vec3.\n\n  vertices = new Array(hull.vertices.length);\n\n  for (i = 0; i < hull.vertices.length; i++) {\n    vertices[i] = new CANNON.Vec3(hull.vertices[i].x, hull.vertices[i].y, hull.vertices[i].z);\n  } // Convert from THREE.Face to Array<number>.\n\n\n  faces = new Array(hull.faces.length);\n\n  for (i = 0; i < hull.faces.length; i++) {\n    faces[i] = [hull.faces[i].a, hull.faces[i].b, hull.faces[i].c];\n  }\n\n  return new CANNON.ConvexPolyhedron(vertices, faces);\n}\n/**\n * @param  {THREE.Geometry} geometry\n * @return {CANNON.Shape}\n */\n\n\nfunction createCylinderShape(geometry) {\n  var shape,\n      params = geometry.metadata ? geometry.metadata.parameters : geometry.parameters;\n  shape = new CANNON.Cylinder(params.radiusTop, params.radiusBottom, params.height, params.radialSegments); // Include metadata for serialization.\n\n  shape._type = CANNON.Shape.types.CYLINDER; // Patch schteppe/cannon.js#329.\n\n  shape.radiusTop = params.radiusTop;\n  shape.radiusBottom = params.radiusBottom;\n  shape.height = params.height;\n  shape.numSegments = params.radialSegments;\n  shape.orientation = new CANNON.Quaternion();\n  shape.orientation.setFromEuler(THREE.Math.degToRad(90), 0, 0, 'XYZ').normalize();\n  return shape;\n}\n/**\n * @param  {THREE.Object3D} object\n * @return {CANNON.Shape}\n */\n\n\nfunction createBoundingCylinderShape(object, options) {\n  var shape,\n      height,\n      radius,\n      box = new THREE.Box3(),\n      axes = ['x', 'y', 'z'],\n      majorAxis = options.cylinderAxis || 'y',\n      minorAxes = axes.splice(axes.indexOf(majorAxis), 1) && axes;\n  box.setFromObject(object);\n  if (!isFinite(box.min.lengthSq())) return null; // Compute cylinder dimensions.\n\n  height = box.max[majorAxis] - box.min[majorAxis];\n  radius = 0.5 * Math.max(box.max[minorAxes[0]] - box.min[minorAxes[0]], box.max[minorAxes[1]] - box.min[minorAxes[1]]); // Create shape.\n\n  shape = new CANNON.Cylinder(radius, radius, height, 12); // Include metadata for serialization.\n\n  shape._type = CANNON.Shape.types.CYLINDER; // Patch schteppe/cannon.js#329.\n\n  shape.radiusTop = radius;\n  shape.radiusBottom = radius;\n  shape.height = height;\n  shape.numSegments = 12;\n  shape.orientation = new CANNON.Quaternion();\n  shape.orientation.setFromEuler(majorAxis === 'y' ? PI_2 : 0, majorAxis === 'z' ? PI_2 : 0, 0, 'XYZ').normalize();\n  return shape;\n}\n/**\n * @param  {THREE.Geometry} geometry\n * @return {CANNON.Shape}\n */\n\n\nfunction createPlaneShape(geometry) {\n  geometry.computeBoundingBox();\n  var box = geometry.boundingBox;\n  return new CANNON.Box(new CANNON.Vec3((box.max.x - box.min.x) / 2 || 0.1, (box.max.y - box.min.y) / 2 || 0.1, (box.max.z - box.min.z) / 2 || 0.1));\n}\n/**\n * @param  {THREE.Geometry} geometry\n * @return {CANNON.Shape}\n */\n\n\nfunction createSphereShape(geometry) {\n  var params = geometry.metadata ? geometry.metadata.parameters : geometry.parameters;\n  return new CANNON.Sphere(params.radius);\n}\n/**\n * @param  {THREE.Object3D} object\n * @return {CANNON.Shape}\n */\n\n\nfunction createBoundingSphereShape(object, options) {\n  if (options.sphereRadius) {\n    return new CANNON.Sphere(options.sphereRadius);\n  }\n\n  var geometry = getGeometry(object);\n  if (!geometry) return null;\n  geometry.computeBoundingSphere();\n  return new CANNON.Sphere(geometry.boundingSphere.radius);\n}\n/**\n * @param  {THREE.Geometry} geometry\n * @return {CANNON.Shape}\n */\n\n\nfunction createTrimeshShape(geometry) {\n  var indices,\n      vertices = getVertices(geometry);\n  if (!vertices.length) return null;\n  indices = Object.keys(vertices).map(Number);\n  return new CANNON.Trimesh(vertices, indices);\n}\n/******************************************************************************\n * Utils\n */\n\n/**\n * Returns a single geometry for the given object. If the object is compound,\n * its geometries are automatically merged.\n * @param {THREE.Object3D} object\n * @return {THREE.Geometry}\n */\n\n\nfunction getGeometry(object) {\n  var matrix,\n      mesh,\n      meshes = getMeshes(object),\n      tmp = new THREE.Geometry(),\n      combined = new THREE.Geometry();\n  if (meshes.length === 0) return null; // Apply scale  – it can't easily be applied to a CANNON.Shape later.\n\n  if (meshes.length === 1) {\n    var position = new THREE.Vector3(),\n        quaternion = new THREE.Quaternion(),\n        scale = new THREE.Vector3();\n\n    if (meshes[0].geometry.isBufferGeometry) {\n      if (meshes[0].geometry.attributes.position && meshes[0].geometry.attributes.position.itemSize > 2) {\n        tmp.fromBufferGeometry(meshes[0].geometry);\n      }\n    } else {\n      tmp = meshes[0].geometry.clone();\n    }\n\n    tmp.metadata = meshes[0].geometry.metadata;\n    meshes[0].updateMatrixWorld();\n    meshes[0].matrixWorld.decompose(position, quaternion, scale);\n    return tmp.scale(scale.x, scale.y, scale.z);\n  } // Recursively merge geometry, preserving local transforms.\n\n\n  while (mesh = meshes.pop()) {\n    mesh.updateMatrixWorld();\n\n    if (mesh.geometry.isBufferGeometry) {\n      if (mesh.geometry.attributes.position && mesh.geometry.attributes.position.itemSize > 2) {\n        var tmpGeom = new THREE.Geometry();\n        tmpGeom.fromBufferGeometry(mesh.geometry);\n        combined.merge(tmpGeom, mesh.matrixWorld);\n        tmpGeom.dispose();\n      }\n    } else {\n      combined.merge(mesh.geometry, mesh.matrixWorld);\n    }\n  }\n\n  matrix = new THREE.Matrix4();\n  matrix.scale(object.scale);\n  combined.applyMatrix(matrix);\n  return combined;\n}\n/**\n * @param  {THREE.Geometry} geometry\n * @return {Array<number>}\n */\n\n\nfunction getVertices(geometry) {\n  if (!geometry.attributes) {\n    geometry = new THREE.BufferGeometry().fromGeometry(geometry);\n  }\n\n  return (geometry.attributes.position || {}).array || [];\n}\n/**\n * Returns a flat array of THREE.Mesh instances from the given object. If\n * nested transformations are found, they are applied to child meshes\n * as mesh.userData.matrix, so that each mesh has its position/rotation/scale\n * independently of all of its parents except the top-level object.\n * @param  {THREE.Object3D} object\n * @return {Array<THREE.Mesh>}\n */\n\n\nfunction getMeshes(object) {\n  var meshes = [];\n  object.traverse(function (o) {\n    if (o.type === 'Mesh') {\n      meshes.push(o);\n    }\n  });\n  return meshes;\n}\n\n//# sourceURL=webpack:///./node_modules/three-to-cannon/index.js?");

/***/ }),

/***/ "./node_modules/three-to-cannon/lib/THREE.quickhull.js":
/*!*************************************************************!*\
  !*** ./node_modules/three-to-cannon/lib/THREE.quickhull.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n\n  QuickHull\n  ---------\n\n  The MIT License\n\n  Copyright &copy; 2010-2014 three.js authors\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\n  THE SOFTWARE.\n\n\n    @author mark lundin / http://mark-lundin.com\n\n    This is a 3D implementation of the Quick Hull algorithm.\n    It is a fast way of computing a convex hull with average complexity\n    of O(n log(n)).\n    It uses depends on three.js and is supposed to create THREE.Geometry.\n\n    It's also very messy\n\n */\nmodule.exports = function () {\n  var faces = [],\n      faceStack = [],\n      i,\n      NUM_POINTS,\n      extremes,\n      max = 0,\n      dcur,\n      current,\n      j,\n      v0,\n      v1,\n      v2,\n      v3,\n      N,\n      D;\n  var ab, ac, ax, suba, subb, normal, diff, subaA, subaB, subC;\n\n  function reset() {\n    ab = new THREE.Vector3(), ac = new THREE.Vector3(), ax = new THREE.Vector3(), suba = new THREE.Vector3(), subb = new THREE.Vector3(), normal = new THREE.Vector3(), diff = new THREE.Vector3(), subaA = new THREE.Vector3(), subaB = new THREE.Vector3(), subC = new THREE.Vector3();\n  } //temporary vectors\n\n\n  function process(points) {\n    // Iterate through all the faces and remove\n    while (faceStack.length > 0) {\n      cull(faceStack.shift(), points);\n    }\n  }\n\n  var norm = function () {\n    var ca = new THREE.Vector3(),\n        ba = new THREE.Vector3(),\n        N = new THREE.Vector3();\n    return function (a, b, c) {\n      ca.subVectors(c, a);\n      ba.subVectors(b, a);\n      N.crossVectors(ca, ba);\n      return N.normalize();\n    };\n  }();\n\n  function getNormal(face, points) {\n    if (face.normal !== undefined) return face.normal;\n    var p0 = points[face[0]],\n        p1 = points[face[1]],\n        p2 = points[face[2]];\n    ab.subVectors(p1, p0);\n    ac.subVectors(p2, p0);\n    normal.crossVectors(ac, ab);\n    normal.normalize();\n    return face.normal = normal.clone();\n  }\n\n  function assignPoints(face, pointset, points) {\n    // ASSIGNING POINTS TO FACE\n    var p0 = points[face[0]],\n        dots = [],\n        apex,\n        norm = getNormal(face, points); // Sory all the points by there distance from the plane\n\n    pointset.sort(function (aItem, bItem) {\n      dots[aItem.x / 3] = dots[aItem.x / 3] !== undefined ? dots[aItem.x / 3] : norm.dot(suba.subVectors(aItem, p0));\n      dots[bItem.x / 3] = dots[bItem.x / 3] !== undefined ? dots[bItem.x / 3] : norm.dot(subb.subVectors(bItem, p0));\n      return dots[aItem.x / 3] - dots[bItem.x / 3];\n    }); //TODO :: Must be a faster way of finding and index in this array\n\n    var index = pointset.length;\n    if (index === 1) dots[pointset[0].x / 3] = norm.dot(suba.subVectors(pointset[0], p0));\n\n    while (index-- > 0 && dots[pointset[index].x / 3] > 0) var point;\n\n    if (index + 1 < pointset.length && dots[pointset[index + 1].x / 3] > 0) {\n      face.visiblePoints = pointset.splice(index + 1);\n    }\n  }\n\n  function cull(face, points) {\n    var i = faces.length,\n        dot,\n        visibleFace,\n        currentFace,\n        visibleFaces = [face];\n    var apex = points.indexOf(face.visiblePoints.pop()); // Iterate through all other faces...\n\n    while (i-- > 0) {\n      currentFace = faces[i];\n\n      if (currentFace !== face) {\n        // ...and check if they're pointing in the same direction\n        dot = getNormal(currentFace, points).dot(diff.subVectors(points[apex], points[currentFace[0]]));\n\n        if (dot > 0) {\n          visibleFaces.push(currentFace);\n        }\n      }\n    }\n\n    var index, neighbouringIndex, vertex; // Determine Perimeter - Creates a bounded horizon\n    // 1. Pick an edge A out of all possible edges\n    // 2. Check if A is shared by any other face. a->b === b->a\n    // 2.1 for each edge in each triangle, isShared = ( f1.a == f2.a && f1.b == f2.b ) || ( f1.a == f2.b && f1.b == f2.a )\n    // 3. If not shared, then add to convex horizon set,\n    //pick an end point (N) of the current edge A and choose a new edge NA connected to A.\n    //Restart from 1.\n    // 4. If A is shared, it is not an horizon edge, therefore flag both faces that share this edge as candidates for culling\n    // 5. If candidate geometry is a degenrate triangle (ie. the tangent space normal cannot be computed) then remove that triangle from all further processing\n\n    var j = i = visibleFaces.length;\n    var isDistinct = false,\n        hasOneVisibleFace = i === 1,\n        cull = [],\n        perimeter = [],\n        edgeIndex = 0,\n        compareFace,\n        nextIndex,\n        a,\n        b;\n    var allPoints = [];\n    var originFace = [visibleFaces[0][0], visibleFaces[0][1], visibleFaces[0][1], visibleFaces[0][2], visibleFaces[0][2], visibleFaces[0][0]];\n\n    if (visibleFaces.length === 1) {\n      currentFace = visibleFaces[0];\n      perimeter = [currentFace[0], currentFace[1], currentFace[1], currentFace[2], currentFace[2], currentFace[0]]; // remove visible face from list of faces\n\n      if (faceStack.indexOf(currentFace) > -1) {\n        faceStack.splice(faceStack.indexOf(currentFace), 1);\n      }\n\n      if (currentFace.visiblePoints) allPoints = allPoints.concat(currentFace.visiblePoints);\n      faces.splice(faces.indexOf(currentFace), 1);\n    } else {\n      while (i-- > 0) {\n        // for each visible face\n        currentFace = visibleFaces[i]; // remove visible face from list of faces\n\n        if (faceStack.indexOf(currentFace) > -1) {\n          faceStack.splice(faceStack.indexOf(currentFace), 1);\n        }\n\n        if (currentFace.visiblePoints) allPoints = allPoints.concat(currentFace.visiblePoints);\n        faces.splice(faces.indexOf(currentFace), 1);\n        var isSharedEdge;\n        cEdgeIndex = 0;\n\n        while (cEdgeIndex < 3) {\n          // Iterate through it's edges\n          isSharedEdge = false;\n          j = visibleFaces.length;\n          a = currentFace[cEdgeIndex];\n          b = currentFace[(cEdgeIndex + 1) % 3];\n\n          while (j-- > 0 && !isSharedEdge) {\n            // find another visible faces\n            compareFace = visibleFaces[j];\n            edgeIndex = 0; // isSharedEdge = compareFace == currentFace;\n\n            if (compareFace !== currentFace) {\n              while (edgeIndex < 3 && !isSharedEdge) {\n                //Check all it's indices\n                nextIndex = edgeIndex + 1;\n                isSharedEdge = compareFace[edgeIndex] === a && compareFace[nextIndex % 3] === b || compareFace[edgeIndex] === b && compareFace[nextIndex % 3] === a;\n                edgeIndex++;\n              }\n            }\n          }\n\n          if (!isSharedEdge || hasOneVisibleFace) {\n            perimeter.push(a);\n            perimeter.push(b);\n          }\n\n          cEdgeIndex++;\n        }\n      }\n    } // create new face for all pairs around edge\n\n\n    i = 0;\n    var l = perimeter.length / 2;\n    var f;\n\n    while (i < l) {\n      f = [perimeter[i * 2 + 1], apex, perimeter[i * 2]];\n      assignPoints(f, allPoints, points);\n      faces.push(f);\n      if (f.visiblePoints !== undefined) faceStack.push(f);\n      i++;\n    }\n  }\n\n  var distSqPointSegment = function () {\n    var ab = new THREE.Vector3(),\n        ac = new THREE.Vector3(),\n        bc = new THREE.Vector3();\n    return function (a, b, c) {\n      ab.subVectors(b, a);\n      ac.subVectors(c, a);\n      bc.subVectors(c, b);\n      var e = ac.dot(ab);\n      if (e < 0.0) return ac.dot(ac);\n      var f = ab.dot(ab);\n      if (e >= f) return bc.dot(bc);\n      return ac.dot(ac) - e * e / f;\n    };\n  }();\n\n  return function (geometry) {\n    reset();\n    points = geometry.vertices;\n    faces = [], faceStack = [], i = NUM_POINTS = points.length, extremes = points.slice(0, 6), max = 0;\n    /*\n     *  FIND EXTREMETIES\n     */\n\n    while (i-- > 0) {\n      if (points[i].x < extremes[0].x) extremes[0] = points[i];\n      if (points[i].x > extremes[1].x) extremes[1] = points[i];\n      if (points[i].y < extremes[2].y) extremes[2] = points[i];\n      if (points[i].y < extremes[3].y) extremes[3] = points[i];\n      if (points[i].z < extremes[4].z) extremes[4] = points[i];\n      if (points[i].z < extremes[5].z) extremes[5] = points[i];\n    }\n    /*\n     *  Find the longest line between the extremeties\n     */\n\n\n    j = i = 6;\n\n    while (i-- > 0) {\n      j = i - 1;\n\n      while (j-- > 0) {\n        if (max < (dcur = extremes[i].distanceToSquared(extremes[j]))) {\n          max = dcur;\n          v0 = extremes[i];\n          v1 = extremes[j];\n        }\n      }\n    } // 3. Find the most distant point to the line segment, this creates a plane\n\n\n    i = 6;\n    max = 0;\n\n    while (i-- > 0) {\n      dcur = distSqPointSegment(v0, v1, extremes[i]);\n\n      if (max < dcur) {\n        max = dcur;\n        v2 = extremes[i];\n      }\n    } // 4. Find the most distant point to the plane.\n\n\n    N = norm(v0, v1, v2);\n    D = N.dot(v0);\n    max = 0;\n    i = NUM_POINTS;\n\n    while (i-- > 0) {\n      dcur = Math.abs(points[i].dot(N) - D);\n\n      if (max < dcur) {\n        max = dcur;\n        v3 = points[i];\n      }\n    }\n\n    var v0Index = points.indexOf(v0),\n        v1Index = points.indexOf(v1),\n        v2Index = points.indexOf(v2),\n        v3Index = points.indexOf(v3); //  We now have a tetrahedron as the base geometry.\n    //  Now we must subdivide the\n\n    var tetrahedron = [[v2Index, v1Index, v0Index], [v1Index, v3Index, v0Index], [v2Index, v3Index, v1Index], [v0Index, v3Index, v2Index]];\n    subaA.subVectors(v1, v0).normalize();\n    subaB.subVectors(v2, v0).normalize();\n    subC.subVectors(v3, v0).normalize();\n    var sign = subC.dot(new THREE.Vector3().crossVectors(subaB, subaA)); // Reverse the winding if negative sign\n\n    if (sign < 0) {\n      tetrahedron[0].reverse();\n      tetrahedron[1].reverse();\n      tetrahedron[2].reverse();\n      tetrahedron[3].reverse();\n    } //One for each face of the pyramid\n\n\n    var pointsCloned = points.slice();\n    pointsCloned.splice(pointsCloned.indexOf(v0), 1);\n    pointsCloned.splice(pointsCloned.indexOf(v1), 1);\n    pointsCloned.splice(pointsCloned.indexOf(v2), 1);\n    pointsCloned.splice(pointsCloned.indexOf(v3), 1);\n    var i = tetrahedron.length;\n\n    while (i-- > 0) {\n      assignPoints(tetrahedron[i], pointsCloned, points);\n\n      if (tetrahedron[i].visiblePoints !== undefined) {\n        faceStack.push(tetrahedron[i]);\n      }\n\n      faces.push(tetrahedron[i]);\n    }\n\n    process(points); //  Assign to our geometry object\n\n    var ll = faces.length;\n\n    while (ll-- > 0) {\n      geometry.faces[ll] = new THREE.Face3(faces[ll][2], faces[ll][1], faces[ll][0], faces[ll].normal);\n    }\n\n    geometry.normalsNeedUpdate = true;\n    return geometry;\n  };\n}();\n\n//# sourceURL=webpack:///./node_modules/three-to-cannon/lib/THREE.quickhull.js?");

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\nvar apply = Function.prototype.apply; // DOM APIs, for completeness\n\nexports.setTimeout = function () {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\n\nexports.setInterval = function () {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\n\nexports.clearTimeout = exports.clearInterval = function (timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\n\nTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\nTimeout.prototype.close = function () {\n  this._clearFn.call(scope, this._id);\n}; // Does not start the time, just sets up the members needed.\n\n\nexports.enroll = function (item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  var msecs = item._idleTimeout;\n\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout) item._onTimeout();\n    }, msecs);\n  }\n}; // setimmediate attaches itself to the global object\n\n\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\"); // On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\n\n\nexports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || this && this.setImmediate;\nexports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || this && this.clearImmediate;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/timers-browserify/main.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./node_modules/webworkify/index.js":
/*!******************************************!*\
  !*** ./node_modules/webworkify/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var bundleFn = arguments[3];\nvar sources = arguments[4];\nvar cache = arguments[5];\nvar stringify = JSON.stringify;\n\nmodule.exports = function (fn, options) {\n  var wkey;\n  var cacheKeys = Object.keys(cache);\n\n  for (var i = 0, l = cacheKeys.length; i < l; i++) {\n    var key = cacheKeys[i];\n    var exp = cache[key].exports; // Using babel as a transpiler to use esmodule, the export will always\n    // be an object with the default export as a property of it. To ensure\n    // the existing api and babel esmodule exports are both supported we\n    // check for both\n\n    if (exp === fn || exp && exp.default === fn) {\n      wkey = key;\n      break;\n    }\n  }\n\n  if (!wkey) {\n    wkey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n    var wcache = {};\n\n    for (var i = 0, l = cacheKeys.length; i < l; i++) {\n      var key = cacheKeys[i];\n      wcache[key] = key;\n    }\n\n    sources[wkey] = ['function(require,module,exports){' + fn + '(self); }', wcache];\n  }\n\n  var skey = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);\n  var scache = {};\n  scache[wkey] = wkey;\n  sources[skey] = ['function(require,module,exports){' + // try to call default if defined to also support babel esmodule exports\n  'var f = require(' + stringify(wkey) + ');' + '(f.default ? f.default : f)(self);' + '}', scache];\n  var workerSources = {};\n  resolveSources(skey);\n\n  function resolveSources(key) {\n    workerSources[key] = true;\n\n    for (var depPath in sources[key][1]) {\n      var depKey = sources[key][1][depPath];\n\n      if (!workerSources[depKey]) {\n        resolveSources(depKey);\n      }\n    }\n  }\n\n  var src = '(' + bundleFn + ')({' + Object.keys(workerSources).map(function (key) {\n    return stringify(key) + ':[' + sources[key][0] + ',' + stringify(sources[key][1]) + ']';\n  }).join(',') + '},{},[' + stringify(skey) + '])';\n  var URL = window.URL || window.webkitURL || window.mozURL || window.msURL;\n  var blob = new Blob([src], {\n    type: 'text/javascript'\n  });\n\n  if (options && options.bare) {\n    return blob;\n  }\n\n  var workerUrl = URL.createObjectURL(blob);\n  var worker = new Worker(workerUrl);\n  worker.objectURL = workerUrl;\n  return worker;\n};\n\n//# sourceURL=webpack:///./node_modules/webworkify/index.js?");

/***/ }),

/***/ "./websim.js":
/*!*******************!*\
  !*** ./websim.js ***!
  \*******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var aframe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aframe */ \"./node_modules/aframe/dist/aframe-master.js\");\n/* harmony import */ var aframe__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(aframe__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var aframe_extras__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aframe-extras */ \"./node_modules/aframe-extras/index.js\");\n/* harmony import */ var aframe_extras__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(aframe_extras__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var aframe_physics_system__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! aframe-physics-system */ \"./node_modules/aframe-physics-system/index.js\");\n/* harmony import */ var aframe_physics_system__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(aframe_physics_system__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _js_interfacesRobot_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js/interfacesRobot.js */ \"./js/interfacesRobot.js\");\n/* harmony import */ var _js_spectatorComponent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./js/spectatorComponent.js */ \"./js/spectatorComponent.js\");\n/* harmony import */ var _js_intersectionHandlerComponent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./js/intersectionHandlerComponent.js */ \"./js/intersectionHandlerComponent.js\");\n/* harmony import */ var _js_followBodyComponent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./js/followBodyComponent.js */ \"./js/followBodyComponent.js\");\n/* harmony import */ var _js_websim_world_controller_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./js/websim-world-controller.js */ \"./js/websim-world-controller.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_8__);\n\n\n\n\n\n\n\n\n // export for others scripts to use\n\nwindow.$ = jquery__WEBPACK_IMPORTED_MODULE_8___default.a; //Websim variables\n\nvar myRobot;\nvar play = false;\nvar reservedVariables = ['myRobot,', 'mainInterval,', 'myRobot;', 'mainInterval;'];\nvar mainInterval;\nvar argument, getCodeFunction; // Register 3 AFRAME components\n\nAFRAME.registerComponent('spectator', _js_spectatorComponent_js__WEBPACK_IMPORTED_MODULE_4__[\"spectObject\"]);\nAFRAME.registerComponent(\"intersection-handler\", _js_intersectionHandlerComponent_js__WEBPACK_IMPORTED_MODULE_5__[\"intersectionHandlerObj\"]);\nAFRAME.registerComponent(\"follow-body\", _js_followBodyComponent_js__WEBPACK_IMPORTED_MODULE_6__[\"followBodyObj\"]); // Declare an event listener for body-loaded and then creates robot object.\n\ndocument.addEventListener('body-loaded', bodyLoaded => {\n  // No se lanza porque no puedo usar el sistema de fisicas\n  if (bodyLoaded.target.id == \"a-pibot\") {\n    console.log(\"------Robot body loaded, creating myRobot instance------\");\n    myRobot = new _js_interfacesRobot_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]('a-pibot');\n  }\n}); //Declares a listener, listen to code generated for the editor\n\ndocument.addEventListener('code-to-run', event => {\n  var codeContent = event.detail['code'];\n  var jsonOutput = Object(_js_websim_world_controller_js__WEBPACK_IMPORTED_MODULE_7__[\"startStopCode\"])(play, myRobot, reservedVariables, mainInterval, codeContent);\n  play = jsonOutput[\"play\"];\n  mainInterval = jsonOutput[\"mainInterval\"];\n}); // Declare a listener to listen reset signal from UI\n\ndocument.addEventListener('reset', event => {\n  var codeContent = `\n  myRobot.move(0, 0);\n  myRobot.resetRobot();\n  `; // This loop is necesary to first stop the current code execution, execute reset code and then stop it again to receive\n  // the new code from user\n\n  for (var i = 0; i < 3; i++) {\n    var jsonOutput = null;\n\n    if (i == 1) {\n      jsonOutput = Object(_js_websim_world_controller_js__WEBPACK_IMPORTED_MODULE_7__[\"startStopCode\"])(play, myRobot, reservedVariables, mainInterval, codeContent);\n    } else {\n      jsonOutput = Object(_js_websim_world_controller_js__WEBPACK_IMPORTED_MODULE_7__[\"startStopCode\"])(play, myRobot, reservedVariables, mainInterval, \"\");\n    }\n\n    play = jsonOutput[\"play\"];\n    mainInterval = jsonOutput[\"mainInterval\"];\n  }\n}); // Auxiliar function to implement a throttle of code.\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n//# sourceURL=webpack:///./websim.js?");

/***/ })

/******/ });